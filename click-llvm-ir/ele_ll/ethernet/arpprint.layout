
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8ec838 prev 0x55ee8c8e3fd8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c8ec930 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55ee8c8ec9c0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55ee8c8eca38 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55ee8c8ecaf8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55ee8c8ecbc0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55ee8c8ecd38 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55ee8c8ecc70 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55ee8c8ecde0 <col:24>
| `-OptimizeNoneAttr 0x55ee8c8ece38 <col:34>
|-CXXMethodDecl 0x55ee8c8ece80 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55ee8c8ed138 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55ee8c8ecf30 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55ee8c8ecfa8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55ee8c8ed028 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55ee8c8ed1f0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55ee8c8ed228 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55ee8c8ed290 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55ee8c8ed318 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55ee8c8ed638 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55ee8c8ed3d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55ee8c8ed448 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55ee8c8ed4c0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55ee8c8ed540 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55ee8c8ed750 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55ee8c8f50c8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55ee8c8f50c8
| `-ParmVarDecl 0x55ee8c8f51d8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55ee8c8f5278 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55ee8c8f5278
| `-ParmVarDecl 0x55ee8c8f5388 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55ee8cadbb30 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c69e300 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c69e418 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55ee8c69e4a8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55ee8c69e578 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55ee8c69e660 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c69e878 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55ee8c69e720 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c69ea28 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55ee8c69e930 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55ee8c69eb70 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55ee8c69eae0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55ee8c69ecb8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55ee8c69ec28 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c69ee00 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55ee8c69ed70 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c69eec8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55ee8c69f010 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55ee8c69ef80 <col:28> col:31 'int'
|-CXXMethodDecl 0x55ee8c69f0d8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55ee8c69f220 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55ee8c69f190 <col:28> col:31 'int'
|-CXXMethodDecl 0x55ee8c69f398 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55ee8c69f2d8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c69f4e0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55ee8c69f450 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c69f5a8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55ee8c69f768 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c69f658 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ee8c69f6d0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c69f9b8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c69f828 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8c69f8a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c69fa68 <col:86> "" ""
|-CXXMethodDecl 0x55ee8c69fcd8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c69fb48 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55ee8c69fbc0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c69fe88 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55ee8c69fd98 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55ee8c6a0038 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55ee8c69ff40 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55ee8c6a0308 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c6a00f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55ee8c6a0168 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ee8c6a01e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c6a05e8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c6a03d0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55ee8c6a0448 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8c6a04c0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c6a06a0 <col:115> "" ""
|-AccessSpecDecl 0x55ee8c6a0710 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55ee8c6a0748 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c6a1c60 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55ee8c6a1c60
| `-ParmVarDecl 0x55ee8c6a1d68 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55ee8c6a1e08 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55ee8c6a1e08
| `-ParmVarDecl 0x55ee8c6a1f18 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55ee8c6d7548 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ee8c8c9340 <col:7>
|-CXXConstructorDecl 0x55ee8c6d7620 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55ee8c6d7620
| `-ParmVarDecl 0x55ee8c6d7738 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55ee8c6d77a8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55ee8c6d77a8
| `-ParmVarDecl 0x55ee8c6d78b8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55ee8c8cbd40 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca09fa0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55ee8ca0a178 prev 0x55ee8ca09fa0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ee8ca0a208 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ee8ca0a230 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca0be00 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55ee8ca0bdb0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55ee8ca0a6e0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55ee8ca0a5e0 'type'
|     `-TemplateSpecializationType 0x55ee8ca0a570 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55ee8ca0a450 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55ee8ca0a430 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55ee8ca0a410 <col:24> 'unsigned long' 8
|       `-RecordType 0x55ee8ca0a550 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55ee8ca0a470 'char_array'
|-TypedefDecl 0x55ee8ca0beb8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55ee8ca0be80 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55ee8ca0be60 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55ee8ca0be00 'type'
|     `-ElaboratedType 0x55ee8ca0bdb0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55ee8ca0a6e0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55ee8ca0a5e0 'type'
|         `-TemplateSpecializationType 0x55ee8ca0a570 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55ee8ca0a450 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55ee8ca0a430 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55ee8ca0a410 <col:24> 'unsigned long' 8
|           `-RecordType 0x55ee8ca0a550 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55ee8ca0a470 'char_array'
|-CXXMethodDecl 0x55ee8ca0c038 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55ee8ca0bf48 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55ee8ca0c128 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ee8ca0c208 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ee8ca0c208
|-CXXMethodDecl 0x55ee8ca0c4d8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55ee8ca0c3e0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55ee8ca0c718 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55ee8ca0c590 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca0c608 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ee8ca0c8e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55ee8ca0c7d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca0c850 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ee8ca0ca48 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55ee8ca0cb18 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55ee8ca0cd68 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55ee8ca0cbd8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55ee8ca0cc50 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ee8ca0cfc8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55ee8ca0ce38 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55ee8ca0ceb0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ee8ca0d188 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55ee8ca0d098 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ee8ca0d348 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55ee8ca0d250 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ee8ca0d400 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca0d4b0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca0d6e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55ee8ca0d560 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca0d5d8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55ee8ca0d988 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55ee8ca0d890 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55ee8ca0da50 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55ee8ca0daa0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ee8ca0daf0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca72728 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55ee8ca80c38 prev 0x55ee8ca72728 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8ca81c50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55ee8ca81c00 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55ee8ca81be0 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55ee8ca81a90 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca09b70 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8ca096c0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55ee8ca095d8 'sized_array_memory'
|-FieldDecl 0x55ee8ca81d50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55ee8ca81da0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8ca81dd8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55ee8ca80cd0 'Element *' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-PointerType 0x55ee8c8d5d80 'Element *'
|     `-RecordType 0x55ee8c8d5b00 'Element'
|       `-CXXRecord 0x55ee8c8df850 'Element'
|-TypedefDecl 0x55ee8ca81e68 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55ee8ca81e30 'Element *&'
|   `-SubstTemplateTypeParmType 0x55ee8ca80cd0 'Element *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c8d5d80 'Element *'
|       `-RecordType 0x55ee8c8d5b00 'Element'
|         `-CXXRecord 0x55ee8c8df850 'Element'
|-TypedefDecl 0x55ee8ca81f28 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55ee8ca81ef0 'Element *const &'
|   `-QualType 0x55ee8ca80cd1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55ee8ca80cd0 'Element *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c8d5d80 'Element *'
|         `-RecordType 0x55ee8c8d5b00 'Element'
|           `-CXXRecord 0x55ee8c8df850 'Element'
|-TypedefDecl 0x55ee8ca81fb8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55ee8ca81f80 'Element **'
|   `-SubstTemplateTypeParmType 0x55ee8ca80cd0 'Element *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c8d5d80 'Element *'
|       `-RecordType 0x55ee8c8d5b00 'Element'
|         `-CXXRecord 0x55ee8c8df850 'Element'
|-TypedefDecl 0x55ee8ca82078 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55ee8ca82040 'Element *const *'
|   `-QualType 0x55ee8ca80cd1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55ee8ca80cd0 'Element *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c8d5d80 'Element *'
|         `-RecordType 0x55ee8c8d5b00 'Element'
|           `-CXXRecord 0x55ee8c8df850 'Element'
|-TypedefDecl 0x55ee8ca82c50 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55ee8ca82c00 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55ee8ca82be0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55ee8ca82b70 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca82930 'Element *' sugar
|       |-TemplateTypeParmType 0x55ee8c64e930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c64e8e0 'T'
|       `-PointerType 0x55ee8c8d5d80 'Element *'
|         `-RecordType 0x55ee8c8d5b00 'Element'
|           `-CXXRecord 0x55ee8c8df850 'Element'
|-TypedefDecl 0x55ee8ca82cb8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55ee8ca81ef0 'Element *const &'
|   `-QualType 0x55ee8ca80cd1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55ee8ca80cd0 'Element *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c8d5d80 'Element *'
|         `-RecordType 0x55ee8c8d5b00 'Element'
|           `-CXXRecord 0x55ee8c8df850 'Element'
|-TypedefDecl 0x55ee8ca82d10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca82d78 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55ee8ca81f80 'Element **'
|   `-SubstTemplateTypeParmType 0x55ee8ca80cd0 'Element *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c8d5d80 'Element *'
|       `-RecordType 0x55ee8c8d5b00 'Element'
|         `-CXXRecord 0x55ee8c8df850 'Element'
|-TypedefDecl 0x55ee8ca82de0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55ee8ca82040 'Element *const *'
|   `-QualType 0x55ee8ca80cd1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55ee8ca80cd0 'Element *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c8d5d80 'Element *'
|         `-RecordType 0x55ee8c8d5b00 'Element'
|           `-CXXRecord 0x55ee8c8df850 'Element'
|-EnumDecl 0x55ee8ca82e38 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8ca82f30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8ca82f10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8ca82fb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8ca83248 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca83070 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca83110 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55ee8ca834d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55ee8ca833c0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55ee8ca83798 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55ee8ca83680 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55ee8ca83ab0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55ee8ca83990 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55ee8ca83dc0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55ee8ca83ca0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55ee8ca840b0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca83ef8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca83f70 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55ee8ca84208 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55ee8ca842e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca84340 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca84388 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55ee8ca84438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca84490 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca84558 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca84608 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca84660 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca846a8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca84758 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca847b0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca847f8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca848a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca84900 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca84948 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca849f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca84a50 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca84a78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca84b28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca84bd8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca84d98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca84c88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca84d00 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55ee8ca84ee8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca84e58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca85098 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55ee8ca84fa0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca85150 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca851a8 <col:30>
|-CXXMethodDecl 0x55ee8ca852c8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8ca851d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca85380 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca853d8 <col:30>
|-CXXMethodDecl 0x55ee8ca85490 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca85400 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca855d8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca85548 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca85708 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55ee8ca85838 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55ee8ca85908 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55ee8ca859d8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55ee8ca85b18 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca85a88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca85c60 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca85bd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca85da8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8ca85d18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca85e60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca85f60 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8ca85ed0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca86018 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca860d8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55ee8ca861d8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55ee8ca86358 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca86298 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55ee8ca86b18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8ca86410 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55ee8ca86a78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55ee8ca86978 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55ee8ca86bf8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca86d48 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca86cb8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55ee8ca86e00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8ca8b208 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca8b080 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55ee8ca8b0f8 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55ee8ca8b3c8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55ee8ca8b2d8 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55ee8ca8b618 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55ee8ca8b490 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55ee8ca8b508 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55ee8ca8b6d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca8b938 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55ee8ca8b840 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55ee8ca8ba08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8ca8ba08

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c6b36f0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55ee8c6b3808 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55ee8c6b38a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55ee8c6b3908 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55ee8c6b3968 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55ee8c6b3a18 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c6b3d20 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c6b3e38 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55ee8c6b3ee0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55ee8c6b3f48 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55ee8c6b3fd8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55ee8c6ba070 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ee8c6ba4a8 <col:12>
|-CXXConstructorDecl 0x55ee8c6ba178 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c6ba288 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55ee8c6b3ee0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55ee8c6bca30 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55ee8c6bca00 <col:12> 'const char *const' lvalue .data 0x55ee8c6b3ee0
| |     `-DeclRefExpr 0x55ee8c6bc9e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6ba288 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55ee8c6b3f48 'length' 'int'
| | `-ImplicitCastExpr 0x55ee8c6bcac0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55ee8c6bca90 <col:12> 'const int' lvalue .length 0x55ee8c6b3f48
| |     `-DeclRefExpr 0x55ee8c6bca70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6ba288 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55ee8c6b3fd8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55ee8c6bcb50 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55ee8c6bcb20 <col:12> 'String::memo_t *const' lvalue .memo 0x55ee8c6b3fd8
| |     `-DeclRefExpr 0x55ee8c6bcb00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6ba288 '' 'const String::rep_t &'
| `-CompoundStmt 0x55ee8c6bcba8 <col:12>
|-CXXConstructorDecl 0x55ee8c6ba328 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ee8c6ba328
| `-ParmVarDecl 0x55ee8c6ba438 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55ee8c6bf990 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55ee8c6cb3a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c6cb4b8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55ee8c6cb9d0 <col:12>
|   |-BinaryOperator 0x55ee8c6cb7e8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55ee8c6cb7a0 <col:12> 'const char *' lvalue ->data 0x55ee8c6b3ee0
|   | | `-CXXThisExpr 0x55ee8c6cb790 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55ee8c6cb7d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55ee8c6cb760 <col:12> 'const char *const' lvalue .data 0x55ee8c6b3ee0
|   |     `-DeclRefExpr 0x55ee8c6cb740 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6cb4b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55ee8c6cb8b0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55ee8c6cb868 <col:12> 'int' lvalue ->length 0x55ee8c6b3f48
|   | | `-CXXThisExpr 0x55ee8c6cb858 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55ee8c6cb898 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55ee8c6cb828 <col:12> 'const int' lvalue .length 0x55ee8c6b3f48
|   |     `-DeclRefExpr 0x55ee8c6cb808 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6cb4b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55ee8c6cb978 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55ee8c6cb930 <col:12> 'String::memo_t *' lvalue ->memo 0x55ee8c6b3fd8
|   | | `-CXXThisExpr 0x55ee8c6cb920 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55ee8c6cb960 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55ee8c6cb8f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55ee8c6b3fd8
|   |     `-DeclRefExpr 0x55ee8c6cb8d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6cb4b8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55ee8c6cb9c0 <col:12>
|     `-UnaryOperator 0x55ee8c6cb9a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c6cb998 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55ee8c6cb528 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ee8c6cb528
  `-ParmVarDecl 0x55ee8c6cb638 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c6aac60 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c6aad78 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55ee8c6aae08 <col:16, col:22> col:16 public
|-TypedefDecl 0x55ee8c6aae48 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55ee8c379fd0 'const char *'
|   `-QualType 0x55ee8c379521 'const char' const
|     `-BuiltinType 0x55ee8c379520 'char'
|-TypedefDecl 0x55ee8c6aaed0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55ee8c6aaea0 'String::const_iterator' sugar
|   |-Typedef 0x55ee8c6aae48 'const_iterator'
|   `-PointerType 0x55ee8c379fd0 'const char *'
|     `-QualType 0x55ee8c379521 'const char' const
|       `-BuiltinType 0x55ee8c379520 'char'
|-TypedefDecl 0x55ee8c6ab040 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55ee8c6aafb0 'int (String::*)() const'
|   |-RecordType 0x55ee8c6aacf0 'String'
|   | `-CXXRecord 0x55ee8c6aac60 'String'
|   `-ParenType 0x55ee8c6aaf50 'int () const' sugar
|     `-FunctionProtoType 0x55ee8c67eae0 'int () const' const cdecl
|       `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c6ab0a8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55ee8c4d34c0 'int64_t' sugar
|   |-Typedef 0x55ee8c3e2390 'int64_t'
|   `-TypedefType 0x55ee8c3bb630 '__int64_t' sugar
|     |-Typedef 0x55ee8c3bb208 '__int64_t'
|     `-BuiltinType 0x55ee8c3795a0 'long'
|-TypedefDecl 0x55ee8c6ab110 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55ee8c4d33e0 'uint64_t' sugar
|   |-Typedef 0x55ee8c3e2530 'uint64_t'
|   `-TypedefType 0x55ee8c3bb6c0 '__uint64_t' sugar
|     |-Typedef 0x55ee8c3bb278 '__uint64_t'
|     `-BuiltinType 0x55ee8c379640 'unsigned long'
|-TypedefDecl 0x55ee8c6ab1a0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55ee8c6ab170 'String::intmax_t' sugar
|   |-Typedef 0x55ee8c6ab0a8 'intmax_t'
|   `-TypedefType 0x55ee8c4d34c0 'int64_t' sugar
|     |-Typedef 0x55ee8c3e2390 'int64_t'
|     `-TypedefType 0x55ee8c3bb630 '__int64_t' sugar
|       |-Typedef 0x55ee8c3bb208 '__int64_t'
|       `-BuiltinType 0x55ee8c3795a0 'long'
|-TypedefDecl 0x55ee8c6ab230 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55ee8c6ab200 'String::uintmax_t' sugar
|   |-Typedef 0x55ee8c6ab110 'uintmax_t'
|   `-TypedefType 0x55ee8c4d33e0 'uint64_t' sugar
|     |-Typedef 0x55ee8c3e2530 'uint64_t'
|     `-TypedefType 0x55ee8c3bb6c0 '__uint64_t' sugar
|       |-Typedef 0x55ee8c3bb278 '__uint64_t'
|       `-BuiltinType 0x55ee8c379640 'unsigned long'
|-CXXConstructorDecl 0x55ee8c6ab2f0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55ee8c6ab498 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55ee8c6ab3d8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55ee8c6ab648 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55ee8c6ab588 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55ee8c6ab7a0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55ee8c6ab710 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55ee8c6ab9b8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55ee8c6ab868 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55ee8c6ab8e8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55ee8c6abbd8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55ee8c6aba88 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c6abb08 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55ee8c6abdf8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55ee8c6abca8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55ee8c6abd28 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55ee8c6ac018 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55ee8c6abec8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c6abf48 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55ee8c6ac1a8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55ee8c6ac0e0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55ee8c6ac328 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55ee8c6ac268 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55ee8c6ac4b8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55ee8c6ac3f0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55ee8c6ac610 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55ee8c6ac580 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55ee8c6ac768 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55ee8c6ac6d8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55ee8c6ac8c0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55ee8c6ac830 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55ee8c6aca48 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55ee8c6ac988 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55ee8c6acbd8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55ee8c6acb10 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55ee8c6acd68 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55ee8c6acca0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55ee8c6acef8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55ee8c6ace30 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55ee8c6acff0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55ee8c6ad118 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55ee8c6ad298 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55ee8c6ad1d0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55ee8c6ad3e8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55ee8c6ad358 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55ee8c6ad4a0 <col:63> "" ""
|-CXXMethodDecl 0x55ee8c6ad5e8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55ee8c6ad528 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55ee8c6ad7f8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55ee8c6ad6a8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55ee8c6ad728 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55ee8c6ada18 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55ee8c6ad8c0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55ee8c6ad940 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55ee8c6adcf8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55ee8c6adad8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55ee8c6adb58 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55ee8c6b9b40 <col:55> 'int' 10
| `-ParmVarDecl 0x55ee8c6adbd0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8c6b9b60 <col:76> 'bool' true
|-CXXMethodDecl 0x55ee8c6adfd8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55ee8c6addc0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55ee8c6ade40 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55ee8c6b9b70 <col:56> 'int' 10
| `-ParmVarDecl 0x55ee8c6adeb8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8c6b9b90 <col:77> 'bool' true
|-CXXMethodDecl 0x55ee8c6ae0e0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55ee8c6ae1a8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55ee8c6ae270 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55ee8c6ae310 <col:20>
| `-OptimizeNoneAttr 0x55ee8c6ae368 <col:30>
|-CXXConversionDecl 0x55ee8c6ae458 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55ee8c6ae528 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8c6ae5e8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55ee8c6ae6d8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55ee8c6ae798 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55ee8c6ae918 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55ee8c6ae850 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55ee8c6aea68 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55ee8c6ae9d8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55ee8c6aeb58 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55ee8c6aec18 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55ee8c6aee68 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55ee8c6aecd0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55ee8c6aed50 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55ee8c6af0c8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55ee8c6aef30 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c6aefb0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55ee8c6af198 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c6af3a8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55ee8c6af250 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55ee8c6af2d0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55ee8c6af5c8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55ee8c6af470 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55ee8c6af4f0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55ee8c6af758 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55ee8c6af690 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55ee8c6af848 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55ee8c6af9b8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55ee8c6af8f8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55ee8c6afbc8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55ee8c6afa78 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55ee8c6afaf8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55ee8c6afde0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55ee8c6afc88 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55ee8c6afd00 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55ee8c6aff70 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55ee8c6afea0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55ee8c6b0190 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55ee8c6b0030 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55ee8c6b00b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55ee8c6b02e0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55ee8c6b0250 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55ee8c6b04b8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55ee8c6b03a0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55ee8c6b0420 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55ee8c6b0608 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55ee8c6b0578 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55ee8c6b0820 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55ee8c6b06c0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55ee8c6b0740 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55ee8c6b9ba0 <col:39> 'int' 0
|-CXXMethodDecl 0x55ee8c6b0a40 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55ee8c6b08e0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55ee8c6b0960 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55ee8c6b9bc0 <col:48> 'int' 0
|-CXXMethodDecl 0x55ee8c6b0c20 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55ee8c6b0b00 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55ee8c6b0b80 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55ee8c6b9be0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55ee8c6b0cf0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55ee8c6b0db0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55ee8c6b0e70 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55ee8c6b0f30 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55ee8c6b0ff0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55ee8c6b1198 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55ee8c6b10a0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55ee8c6b1318 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55ee8c6b1250 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55ee8c6b14f0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55ee8c6b13d8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55ee8c6b1668 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55ee8c6b15a8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55ee8c6b17b0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55ee8c6b1720 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55ee8c6b1900 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55ee8c6b1870 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55ee8c6b1ad8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55ee8c6b19c0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55ee8c6b1a40 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55ee8c6b1cb8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55ee8c6b1ba0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55ee8c6b1c20 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55ee8c6b1e08 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55ee8c6b1d78 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55ee8c6b2018 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55ee8c6b1ec8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55ee8c6b1f48 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55ee8c6b2178 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55ee8c6b20e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55ee8c6b22d0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55ee8c6b2238 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55ee8c6b2378 <col:57> "" ""
|-CXXMethodDecl 0x55ee8c6b2488 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55ee8c6b23f8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55ee8c6b25d8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55ee8c6b2548 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55ee8c6b2758 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55ee8c6b2690 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55ee8c6b2820 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55ee8c6b28e0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55ee8c6b29a0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55ee8c6b2a40 <col:49> "" ""
|-CXXMethodDecl 0x55ee8c6b2ad0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55ee8c6b2b90 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55ee8c6b2c80 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55ee8c6b2d48 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55ee8c6b2e08 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55ee8c6b2ec8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55ee8c6b2fc0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55ee8c6b3088 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55ee8c6b3150 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55ee8c6b3328 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55ee8c6b3208 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55ee8c6b3288 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55ee8c6b3550 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55ee8c6b33f0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c6b3470 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55ee8c6b3660 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55ee8c6b36c8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55ee8c6b36f0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ee8c6b3808 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55ee8c6b38a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55ee8c6b3908 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55ee8c6b3968 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55ee8c6b3a18 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55ee8c6b3a80 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55ee8c6b3cb8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55ee8c6b3d08 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c6b3c98 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55ee8c6b3ba8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55ee8c6b3b50 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55ee8c6b3b90 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55ee8c6b3b70 <col:32> 'int' 8
|-CXXRecordDecl 0x55ee8c6b3d20 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ee8c6b3e38 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55ee8c6b3ee0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55ee8c6b3f48 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55ee8c6b3fd8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55ee8c6ba070 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ee8c6ba4a8 <col:12>
| |-CXXConstructorDecl 0x55ee8c6ba178 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ee8c6ba288 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55ee8c6b3ee0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55ee8c6bca30 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55ee8c6bca00 <col:12> 'const char *const' lvalue .data 0x55ee8c6b3ee0
| | |     `-DeclRefExpr 0x55ee8c6bc9e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6ba288 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55ee8c6b3f48 'length' 'int'
| | | `-ImplicitCastExpr 0x55ee8c6bcac0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55ee8c6bca90 <col:12> 'const int' lvalue .length 0x55ee8c6b3f48
| | |     `-DeclRefExpr 0x55ee8c6bca70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6ba288 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55ee8c6b3fd8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55ee8c6bcb50 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55ee8c6bcb20 <col:12> 'String::memo_t *const' lvalue .memo 0x55ee8c6b3fd8
| | |     `-DeclRefExpr 0x55ee8c6bcb00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6ba288 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55ee8c6bcba8 <col:12>
| |-CXXConstructorDecl 0x55ee8c6ba328 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ee8c6ba328
| | `-ParmVarDecl 0x55ee8c6ba438 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55ee8c6bf990 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55ee8c6cb3a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ee8c6cb4b8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55ee8c6cb9d0 <col:12>
| |   |-BinaryOperator 0x55ee8c6cb7e8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55ee8c6cb7a0 <col:12> 'const char *' lvalue ->data 0x55ee8c6b3ee0
| |   | | `-CXXThisExpr 0x55ee8c6cb790 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55ee8c6cb7d0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55ee8c6cb760 <col:12> 'const char *const' lvalue .data 0x55ee8c6b3ee0
| |   |     `-DeclRefExpr 0x55ee8c6cb740 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6cb4b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55ee8c6cb8b0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55ee8c6cb868 <col:12> 'int' lvalue ->length 0x55ee8c6b3f48
| |   | | `-CXXThisExpr 0x55ee8c6cb858 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55ee8c6cb898 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55ee8c6cb828 <col:12> 'const int' lvalue .length 0x55ee8c6b3f48
| |   |     `-DeclRefExpr 0x55ee8c6cb808 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6cb4b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55ee8c6cb978 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55ee8c6cb930 <col:12> 'String::memo_t *' lvalue ->memo 0x55ee8c6b3fd8
| |   | | `-CXXThisExpr 0x55ee8c6cb920 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55ee8c6cb960 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55ee8c6cb8f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55ee8c6b3fd8
| |   |     `-DeclRefExpr 0x55ee8c6cb8d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55ee8c6cb4b8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55ee8c6cb9c0 <col:12>
| |     `-UnaryOperator 0x55ee8c6cb9a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55ee8c6cb998 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55ee8c6cb528 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ee8c6cb528
|   `-ParmVarDecl 0x55ee8c6cb638 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55ee8c6b4050 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55ee8c6b4298 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55ee8c6b40b8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55ee8c6b4138 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55ee8c6b41b0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55ee8c6ba030 <col:79, line:261:5>
|   |-BinaryOperator 0x55ee8c6b9ca8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55ee8c6b9c40 <col:2, col:5> 'const char *' lvalue .data 0x55ee8c6b3ee0
|   | | `-MemberExpr 0x55ee8c6b9c10 <col:2> 'String::rep_t' lvalue ->_r 0x55ee8c6b4050
|   | |   `-CXXThisExpr 0x55ee8c6b9c00 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c6b9c90 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ee8c6b9c70 <col:12> 'const char *' lvalue ParmVar 0x55ee8c6b40b8 'data' 'const char *'
|   |-BinaryOperator 0x55ee8c6b9d70 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55ee8c6b9d08 <col:2, col:5> 'int' lvalue .length 0x55ee8c6b3f48
|   | | `-MemberExpr 0x55ee8c6b9cd8 <col:2> 'String::rep_t' lvalue ->_r 0x55ee8c6b4050
|   | |   `-CXXThisExpr 0x55ee8c6b9cc8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c6b9d58 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ee8c6b9d38 <col:14> 'int' lvalue ParmVar 0x55ee8c6b4138 'length' 'int'
|   `-IfStmt 0x55ee8c6ba018 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55ee8c6b9e90 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55ee8c6b9e78 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55ee8c6b9e58 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55ee8c6b9e38 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55ee8c6b9dd0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55ee8c6b3fd8
|     |       | `-MemberExpr 0x55ee8c6b9da0 <col:7> 'String::rep_t' lvalue ->_r 0x55ee8c6b4050
|     |       |   `-CXXThisExpr 0x55ee8c6b9d90 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55ee8c6b9e20 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ee8c6b9e00 <col:17> 'String::memo_t *' lvalue ParmVar 0x55ee8c6b41b0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55ee8c6b9ff0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55ee8c6b9fd8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8c6b9ee0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55ee8c6a2cc8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55ee8c6b9f48 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55ee8c6b38a8
|         `-ImplicitCastExpr 0x55ee8c6b9f30 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55ee8c6b9f10 <col:27> 'String::memo_t *' lvalue ParmVar 0x55ee8c6b41b0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55ee8c6b4548 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55ee8c6b4368 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55ee8c6b43e8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55ee8c6b4460 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55ee8c6b4050 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55ee8c6ba4b8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ee8c6ba648 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55ee8c6ba5b0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55ee8c6ba520 <col:2> '<bound member function type>' ->assign_memo 0x55ee8c6b4298
|     | `-ImplicitCastExpr 0x55ee8c6ba5e8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55ee8c6ba510 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55ee8c6ba600 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55ee8c6ba550 <col:14> 'const char *' lvalue ParmVar 0x55ee8c6b4368 'data' 'const char *'
|     |-ImplicitCastExpr 0x55ee8c6ba618 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55ee8c6ba570 <col:20> 'int' lvalue ParmVar 0x55ee8c6b43e8 'length' 'int'
|     `-ImplicitCastExpr 0x55ee8c6ba630 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c6ba590 <col:28> 'String::memo_t *' lvalue ParmVar 0x55ee8c6b4460 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55ee8c6b46d8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55ee8c6b4618 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55ee8c6ba8a0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55ee8c6ba820 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55ee8c6ba670 <col:2> '<bound member function type>' ->assign_memo 0x55ee8c6b4298
|     | `-CXXThisExpr 0x55ee8c6ba660 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55ee8c6ba858 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55ee8c6ba6f0 <col:14, col:19> 'const char *' lvalue .data 0x55ee8c6b3ee0
|     |   `-MemberExpr 0x55ee8c6ba6c0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55ee8c6b4050
|     |     `-DeclRefExpr 0x55ee8c6ba6a0 <col:14> 'const String' lvalue ParmVar 0x55ee8c6b4618 'x' 'const String &'
|     |-ImplicitCastExpr 0x55ee8c6ba870 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55ee8c6ba770 <col:25, col:30> 'int' lvalue .length 0x55ee8c6b3f48
|     |   `-MemberExpr 0x55ee8c6ba740 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55ee8c6b4050
|     |     `-DeclRefExpr 0x55ee8c6ba720 <col:25> 'const String' lvalue ParmVar 0x55ee8c6b4618 'x' 'const String &'
|     `-ImplicitCastExpr 0x55ee8c6ba888 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c6ba7f0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55ee8c6b3fd8
|         `-MemberExpr 0x55ee8c6ba7c0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55ee8c6b4050
|           `-DeclRefExpr 0x55ee8c6ba7a0 <col:38> 'const String' lvalue ParmVar 0x55ee8c6b4618 'x' 'const String &'
|-CXXMethodDecl 0x55ee8c6b47a0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55ee8c6bb260 <col:31, line:278:5>
|   `-IfStmt 0x55ee8c6bb248 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55ee8c6ba940 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55ee8c6ba928 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55ee8c6ba8f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55ee8c6b3fd8
|     |     `-MemberExpr 0x55ee8c6ba8c8 <col:6> 'String::rep_t' lvalue ->_r 0x55ee8c6b4050
|     |       `-CXXThisExpr 0x55ee8c6ba8b8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55ee8c6bb220 <col:15, line:277:2>
|       |-ParenExpr 0x55ee8c6badf0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55ee8c6badc0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55ee8c6baa50 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55ee8c6baa38 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55ee8c6baa20 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55ee8c6ba9e0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55ee8c6b38a8
|       |   |       `-ImplicitCastExpr 0x55ee8c6ba9c8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55ee8c6ba998 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55ee8c6b3fd8
|       |   |           `-MemberExpr 0x55ee8c6ba968 <col:27> 'String::rep_t' lvalue ->_r 0x55ee8c6b4050
|       |   |             `-CXXThisExpr 0x55ee8c6ba958 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55ee8c6baab0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55ee8c6baa90 <col:54> 'int' 0
|       |   `-CallExpr 0x55ee8c6bad20 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55ee8c6bad08 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55ee8c6bac88 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55ee8c6bad60 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55ee8c6bab98 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55ee8c6bad78 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55ee8c6babc8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55ee8c6bad90 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55ee8c6bac00 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55ee8c6bada8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55ee8c6bac70 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55ee8c6bac58 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55ee8c6bac20 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55ee8c6bb140 <line:274:6, line:275:22>
|       | |-CallExpr 0x55ee8c6bb000 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55ee8c6bafe8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55ee8c6baf60 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55ee8c6a4110 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55ee8c6baf30 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55ee8c6b38a8
|       | |   `-ImplicitCastExpr 0x55ee8c6baf18 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55ee8c6baee8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55ee8c6b3fd8
|       | |       `-MemberExpr 0x55ee8c6baeb8 <col:40> 'String::rep_t' lvalue ->_r 0x55ee8c6b4050
|       | |         `-CXXThisExpr 0x55ee8c6baea8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55ee8c6bb100 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55ee8c6bb0e8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55ee8c6bb028 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55ee8c6b8f80 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55ee8c6bb128 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55ee8c6bb088 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55ee8c6b3fd8
|       |       `-MemberExpr 0x55ee8c6bb058 <col:15> 'String::rep_t' lvalue ->_r 0x55ee8c6b4050
|       |         `-CXXThisExpr 0x55ee8c6bb048 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55ee8c6bb200 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55ee8c6bb198 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55ee8c6b3fd8
|         | `-MemberExpr 0x55ee8c6bb168 <col:6> 'String::rep_t' lvalue ->_r 0x55ee8c6b4050
|         |   `-CXXThisExpr 0x55ee8c6bb158 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55ee8c6bb1e8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55ee8c6bb1c8 <col:16> 'int' 0
|-CXXMethodDecl 0x55ee8c6b4a38 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55ee8c6b4858 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55ee8c6b48d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55ee8c6b4950 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55ee8c6b4b10 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55ee8c6b4d60 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55ee8c6b4bc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55ee8c6b4c48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55ee8c6b4cc0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55ee8c6b4f48 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55ee8c6b4e30 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55ee8c6b4eb0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55ee8c6b5048 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55ee8c6bb338 <col:41, line:286:5>
|   `-ReturnStmt 0x55ee8c6bb328 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55ee8c6bb2f8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55ee8c6bb2c0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55ee8c6bb2a8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55ee8c6bb288 <col:46> 'int' 1
|-CXXMethodDecl 0x55ee8c6b52e8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55ee8c6b5100 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55ee8c6b5180 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55ee8c6b5200 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55ee8c6b8f80 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55ee8c6b53b0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55ee8c6b9050 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55ee8c6b9220 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55ee8c6b9108 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55ee8c6b9188 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55ee8c6b92e0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55ee8c6b93a8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55ee8c6b94a8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55ee8c6b9520 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55ee8c6b9598 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55ee8c6b9600 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55ee8c6b9700 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55ee8c6b9750 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c6b96e0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55ee8c6b96c0 <col:22> 'int' 14
|-CXXMethodDecl 0x55ee8c6b9968 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55ee8c6b9780 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55ee8c6b9800 <col:38> col:41 'int'
| `-ParmVarDecl 0x55ee8c6b9880 <col:43> col:46 'int'
|-FriendDecl 0x55ee8c6b9a70 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55ee8c6b9b00 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c927f30 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55ee8c928108 prev 0x55ee8c927f30 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ee8c928198 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ee8c9281c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c929b20 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55ee8c929ad0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55ee8c929ab0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55ee8c9283d8 'type'
|     `-SubstTemplateTypeParmType 0x55ee8c9283a0 'String' sugar
|       |-TemplateTypeParmType 0x55ee8c66e500 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c66e4b0 'T'
|       `-RecordType 0x55ee8c6aacf0 'String'
|         `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c929bd8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55ee8c929ba0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55ee8c929b80 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55ee8c929b20 'type'
|     `-ElaboratedType 0x55ee8c929ad0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55ee8c929ab0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55ee8c9283d8 'type'
|         `-SubstTemplateTypeParmType 0x55ee8c9283a0 'String' sugar
|           |-TemplateTypeParmType 0x55ee8c66e500 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ee8c66e4b0 'T'
|           `-RecordType 0x55ee8c6aacf0 'String'
|             `-CXXRecord 0x55ee8c6aac60 'String'
|-CXXMethodDecl 0x55ee8c929d58 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55ee8c929c68 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55ee8c929e48 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ee8c929f28 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55ee8c92a1f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55ee8c92a100 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55ee8c92a438 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55ee8c92a2b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8c92a328 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ee8c92a640 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55ee8c92a4f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8c92a570 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ee8c92a798 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55ee8c92a868 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55ee8c92aab8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55ee8c92a928 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55ee8c92a9a0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ee8c92ad18 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55ee8c92ab88 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55ee8c92ac00 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ee8c92aed8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55ee8c92ade8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ee8c92b098 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55ee8c92afa0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ee8c92b150 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8c92b200 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8c92b438 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55ee8c92b2b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8c92b328 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55ee8c92b6d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55ee8c92b5e0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55ee8c92b7a0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55ee8c92b7f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ee8c92b840 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c8e2490 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55ee8c926998 prev 0x55ee8c8e2490 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8c927ea0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55ee8c927e50 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55ee8c927e30 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55ee8c927ce0 'type'
|     `-SubstTemplateTypeParmType 0x55ee8c927b70 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55ee8c644090 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55ee8c644038 'F'
|       `-RecordType 0x55ee8c9277d0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55ee8c9276f0 'typed_array_memory'
|-FieldDecl 0x55ee8c92b890 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55ee8c92b8e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8c92b918 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55ee8c926a30 'String' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-RecordType 0x55ee8c6aacf0 'String'
|     `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c92b9a8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55ee8c92b970 'String &'
|   `-SubstTemplateTypeParmType 0x55ee8c926a30 'String' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8c6aacf0 'String'
|       `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c92ba38 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55ee8c92ba00 'const String &'
|   `-QualType 0x55ee8c926a31 'const String' const
|     `-SubstTemplateTypeParmType 0x55ee8c926a30 'String' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8c6aacf0 'String'
|         `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c92bac8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55ee8c92ba90 'String *'
|   `-SubstTemplateTypeParmType 0x55ee8c926a30 'String' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8c6aacf0 'String'
|       `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c92bb58 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55ee8c92bb20 'const String *'
|   `-QualType 0x55ee8c926a31 'const String' const
|     `-SubstTemplateTypeParmType 0x55ee8c926a30 'String' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8c6aacf0 'String'
|         `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c92c7b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55ee8c92c760 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55ee8c92c740 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55ee8c92c678 'type'
|     `-LValueReferenceType 0x55ee8c92c640 'const String &'
|       `-QualType 0x55ee8c92c3e1 'const String' const
|         `-SubstTemplateTypeParmType 0x55ee8c92c3e0 'String' sugar
|           |-TemplateTypeParmType 0x55ee8c64e200 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ee8c64e1a8 'T'
|           `-RecordType 0x55ee8c6aacf0 'String'
|             `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c92c818 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55ee8c92ba00 'const String &'
|   `-QualType 0x55ee8c926a31 'const String' const
|     `-SubstTemplateTypeParmType 0x55ee8c926a30 'String' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8c6aacf0 'String'
|         `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c92c870 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c92c8d8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55ee8c92ba90 'String *'
|   `-SubstTemplateTypeParmType 0x55ee8c926a30 'String' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8c6aacf0 'String'
|       `-CXXRecord 0x55ee8c6aac60 'String'
|-TypedefDecl 0x55ee8c92c940 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55ee8c92bb20 'const String *'
|   `-QualType 0x55ee8c926a31 'const String' const
|     `-SubstTemplateTypeParmType 0x55ee8c926a30 'String' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8c6aacf0 'String'
|         `-CXXRecord 0x55ee8c6aac60 'String'
|-EnumDecl 0x55ee8c92c998 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8c92ca90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8c92ca70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8c92cb18 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8c92cda8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8c92cbd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8c92cc70 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55ee8c92d038 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55ee8c92cf20 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55ee8c92d2f8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55ee8c92d1e0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55ee8c92d610 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55ee8c92d4f0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55ee8c92d920 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55ee8c92d800 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55ee8c92dc10 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8c92da58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8c92dad0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55ee8c92dd38 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55ee8c92dde8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c92de40 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c92de88 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55ee8c92df38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c92df90 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c92e058 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55ee8c92e108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c92e160 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c92e1a8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55ee8c92e258 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c92e2b0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c92e2f8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55ee8c92e3a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c92e400 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c92e448 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55ee8c92e4f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c92e550 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c92e578 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8c92e628 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8c92e6d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8c92e898 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8c92e788 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8c92e800 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55ee8c92e9e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8c92e958 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c92eb98 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55ee8c92eaa0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8c92ec50 <col:20>
| `-OptimizeNoneAttr 0x55ee8c92eca8 <col:30>
|-CXXMethodDecl 0x55ee8c92edc8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8c92ecd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8c92ee80 <col:20>
| `-OptimizeNoneAttr 0x55ee8c92eed8 <col:30>
|-CXXMethodDecl 0x55ee8c92ef90 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8c92ef00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c92f0d8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8c92f048 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c92f208 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55ee8c92f308 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55ee8c92f3d8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55ee8c92f4a8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55ee8c92f5e8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8c92f558 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c92f730 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8c92f6a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c92f878 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8c92f7e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8c92f930 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8c92fa30 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8c92f9a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8c92fae8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8c92fba8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55ee8c92fca8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55ee8c92fe28 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8c92fd68 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55ee8c9305e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8c92fee0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55ee8c930548 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55ee8c930448 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55ee8c9306c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8c930818 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8c930788 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55ee8c9308d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8c930b18 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8c930990 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55ee8c930a08 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55ee8c930ca8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55ee8c930be8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55ee8c930eb8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55ee8c930d70 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55ee8c930de8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55ee8c930f78 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55ee8c9311d8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55ee8c9310e0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55ee8c9312a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55ee8c790608 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c96ce00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55ee8c96cfd8 prev 0x55ee8c96ce00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ee8c96d068 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ee8c96d090 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c96ec60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55ee8c96ec10 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55ee8c96d540 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55ee8c96d440 'type'
|     `-TemplateSpecializationType 0x55ee8c96d3d0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55ee8c96d2b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55ee8c96d290 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55ee8c96d270 <col:24> 'unsigned long' 4
|       `-RecordType 0x55ee8c96d3b0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55ee8c96d2d0 'char_array'
|-TypedefDecl 0x55ee8c96ed18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55ee8c96ece0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55ee8c96ecc0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55ee8c96ec60 'type'
|     `-ElaboratedType 0x55ee8c96ec10 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55ee8c96d540 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55ee8c96d440 'type'
|         `-TemplateSpecializationType 0x55ee8c96d3d0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55ee8c96d2b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55ee8c96d290 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55ee8c96d270 <col:24> 'unsigned long' 4
|           `-RecordType 0x55ee8c96d3b0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55ee8c96d2d0 'char_array'
|-CXXMethodDecl 0x55ee8c96ee98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55ee8c96eda8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55ee8c96ef88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ee8c96f068 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ee8c96f068
|-CXXMethodDecl 0x55ee8c96f338 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55ee8c96f240 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55ee8c96f578 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55ee8c96f3f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8c96f468 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ee8c96f748 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55ee8c96f638 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8c96f6b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ee8c96f8a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55ee8c96f978 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55ee8c96fbc8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55ee8c96fa38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55ee8c96fab0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ee8c96fe28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55ee8c96fc98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55ee8c96fd10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ee8c96ffe8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55ee8c96fef8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ee8c9701a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55ee8c9700b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ee8c977640 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8c9776f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8c977928 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55ee8c9777a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8c977818 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55ee8c977bc8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55ee8c977ad0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55ee8c977c90 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55ee8c977ce0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ee8c977d30 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca8bd50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55ee8ca8bf58 prev 0x55ee8ca8bd50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8ca8cf70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55ee8ca8cf20 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55ee8ca8cf00 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55ee8ca8cdb0 'type'
|     `-SubstTemplateTypeParmType 0x55ee8c96c9d0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8c96c520 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55ee8c96c438 'sized_array_memory'
|-FieldDecl 0x55ee8ca8d070 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55ee8ca8d0c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8ca8d0f8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55ee8ca8bff0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-BuiltinType 0x55ee8c379620 'unsigned int'
|-TypedefDecl 0x55ee8ca8d188 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55ee8ca8d150 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55ee8ca8bff0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-BuiltinType 0x55ee8c379620 'unsigned int'
|-TypedefDecl 0x55ee8ca8d248 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55ee8ca8d210 'const unsigned int &'
|   `-QualType 0x55ee8ca8bff1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55ee8ca8bff0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-BuiltinType 0x55ee8c379620 'unsigned int'
|-TypedefDecl 0x55ee8ca8d2d8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55ee8ca8d2a0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55ee8ca8bff0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-BuiltinType 0x55ee8c379620 'unsigned int'
|-TypedefDecl 0x55ee8ca8d368 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55ee8ca8d330 'const unsigned int *'
|   `-QualType 0x55ee8ca8bff1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55ee8ca8bff0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-BuiltinType 0x55ee8c379620 'unsigned int'
|-TypedefDecl 0x55ee8ca8df50 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55ee8ca8df00 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55ee8ca8dee0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55ee8ca8de70 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca8dc30 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55ee8c64e930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c64e8e0 'T'
|       `-BuiltinType 0x55ee8c379620 'unsigned int'
|-TypedefDecl 0x55ee8ca8dfb8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55ee8ca8d210 'const unsigned int &'
|   `-QualType 0x55ee8ca8bff1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55ee8ca8bff0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-BuiltinType 0x55ee8c379620 'unsigned int'
|-TypedefDecl 0x55ee8ca8e010 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca8e078 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55ee8ca8d2a0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55ee8ca8bff0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-BuiltinType 0x55ee8c379620 'unsigned int'
|-TypedefDecl 0x55ee8ca8e0e0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55ee8ca8d330 'const unsigned int *'
|   `-QualType 0x55ee8ca8bff1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55ee8ca8bff0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-BuiltinType 0x55ee8c379620 'unsigned int'
|-EnumDecl 0x55ee8ca8e138 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8ca8e230 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8ca8e210 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8ca8e2b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8ca8e508 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca8e370 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca8e410 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55ee8ca8e7c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55ee8ca8e6b0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55ee8ca8ea88 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55ee8ca8e970 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55ee8ca8edd0 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55ee8ca8ecb0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55ee8ca8f0e0 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55ee8ca8efc0 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55ee8ca8f3d0 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca8f218 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca8f290 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55ee8ca8f4f8 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55ee8ca8f5d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca8f630 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca8f678 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55ee8ca8f728 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca8f780 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca8f818 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca8f8c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca8f920 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca8f968 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca8fa18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca8fa70 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca8fab8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca8fb68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca8fbc0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca8fc08 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca8fcb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca8fd10 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca8fd38 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca8fde8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca8fe98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca90058 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca8ff48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca8ffc0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55ee8ca901a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca90118 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca90358 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55ee8ca90260 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca90410 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca90468 <col:30>
|-CXXMethodDecl 0x55ee8ca90588 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8ca90490 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca90640 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca90698 <col:30>
|-CXXMethodDecl 0x55ee8ca90750 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca906c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca90898 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca90808 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca909c8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55ee8ca90af8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55ee8ca90bc8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55ee8ca90c98 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55ee8ca90dd8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca90d48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca90f20 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca90e90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca91068 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8ca90fd8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca91120 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca91220 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8ca91190 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca912d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca91398 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55ee8ca91498 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55ee8ca91618 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca91558 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55ee8ca91dd8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8ca916d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55ee8ca91d38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55ee8ca91c38 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55ee8ca91eb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca92008 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca91f78 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55ee8ca920c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8ca92308 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca92180 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55ee8ca921f8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55ee8ca924c8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55ee8ca923d8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55ee8ca92718 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55ee8ca92590 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55ee8ca92608 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55ee8ca927d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca92a38 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55ee8ca92940 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55ee8ca92b08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8ca92b08

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c96b808 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55ee8c96ba18 prev 0x55ee8c96b808 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8c96cd70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55ee8c96cd20 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55ee8c96cd00 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55ee8c96cbb0 'type'
|     `-SubstTemplateTypeParmType 0x55ee8c96c9d0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8c96c520 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55ee8c96c438 'sized_array_memory'
|-FieldDecl 0x55ee8c977d80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55ee8c977dd0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8c977e08 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55ee8c96bab0 'int' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c977e98 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55ee8c977e60 'int &'
|   `-SubstTemplateTypeParmType 0x55ee8c96bab0 'int' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c977f58 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55ee8c977f20 'const int &'
|   `-QualType 0x55ee8c96bab1 'const int' const
|     `-SubstTemplateTypeParmType 0x55ee8c96bab0 'int' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c977fe8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55ee8c977fb0 'int *'
|   `-SubstTemplateTypeParmType 0x55ee8c96bab0 'int' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c978078 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55ee8c978040 'const int *'
|   `-QualType 0x55ee8c96bab1 'const int' const
|     `-SubstTemplateTypeParmType 0x55ee8c96bab0 'int' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c978c60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55ee8c978c10 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55ee8c978bf0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55ee8c978b80 'type'
|     `-SubstTemplateTypeParmType 0x55ee8c978940 'int' sugar
|       |-TemplateTypeParmType 0x55ee8c64e930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c64e8e0 'T'
|       `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c978cc8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55ee8c977f20 'const int &'
|   `-QualType 0x55ee8c96bab1 'const int' const
|     `-SubstTemplateTypeParmType 0x55ee8c96bab0 'int' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c978d20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c978d88 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55ee8c977fb0 'int *'
|   `-SubstTemplateTypeParmType 0x55ee8c96bab0 'int' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c978df0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55ee8c978040 'const int *'
|   `-QualType 0x55ee8c96bab1 'const int' const
|     `-SubstTemplateTypeParmType 0x55ee8c96bab0 'int' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-BuiltinType 0x55ee8c379580 'int'
|-EnumDecl 0x55ee8c978e48 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8c978f40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8c978f20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8c978fc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8c979218 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8c979080 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8c979120 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55ee8c9794d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55ee8c9793c0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55ee8c979798 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55ee8c979680 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55ee8c979ae0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55ee8c9799c0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55ee8c979df0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55ee8c979cd0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55ee8c97a0e0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8c979f28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8c979fa0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55ee8c97a208 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55ee8c97a2e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c97a340 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c97a388 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55ee8c97a438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c97a490 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c97a558 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55ee8c97a608 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c97a660 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c97a6a8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55ee8c97a758 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c97a7b0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c97a7f8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55ee8c97a8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c97a900 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c97a948 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55ee8c97a9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8c97aa50 <col:30> Inherited
|-CXXMethodDecl 0x55ee8c97aa78 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8c97ab28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8c97abd8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8c97ad98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8c97ac88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8c97ad00 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55ee8c97aee8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8c97ae58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c97b098 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55ee8c97afa0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8c97b150 <col:20>
| `-OptimizeNoneAttr 0x55ee8c97b1a8 <col:30>
|-CXXMethodDecl 0x55ee8c97b2c8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8c97b1d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8c97b380 <col:20>
| `-OptimizeNoneAttr 0x55ee8c97b3d8 <col:30>
|-CXXMethodDecl 0x55ee8c97b490 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8c97b400 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c97b5d8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8c97b548 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c97b708 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55ee8c97b838 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55ee8c97b908 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55ee8c97b9d8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55ee8c97bb18 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8c97ba88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c97bc60 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8c97bbd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8c97bda8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8c97bd18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8c97be60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8c97bf60 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8c97bed0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8c97c018 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8c97c0d8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55ee8c97c1d8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55ee8c97c358 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8c97c298 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55ee8c97cb18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8c97c410 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55ee8c97ca78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55ee8c97c978 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55ee8c97cbf8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8c97cd48 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8c97ccb8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55ee8c97ce00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8c97d048 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8c97cec0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55ee8c97cf38 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55ee8c97d208 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55ee8c97d118 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55ee8c97d458 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55ee8c97d2d0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55ee8c97d348 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55ee8c97d518 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55ee8c97d778 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55ee8c97d680 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55ee8c97d848 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8c97d848

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8ca92d50 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55ee8ca92e68 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55ee8ca92f08 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55ee8ca92f68 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55ee8ca965c0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55ee8ca965c0
| `-ParmVarDecl 0x55ee8ca966d8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55ee8ca96778 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55ee8ca96778
| `-ParmVarDecl 0x55ee8ca96888 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55ee8ca96928 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55ee8ca96928
| `-ParmVarDecl 0x55ee8ca96a38 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55ee8ca96aa8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55ee8ca96aa8
| `-ParmVarDecl 0x55ee8ca96bb8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55ee8ca96c40 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55ee8ca96c40

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca981d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55ee8ca983a8 prev 0x55ee8ca981d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ee8ca98438 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ee8ca98460 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca99e20 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55ee8ca99dd0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55ee8ca99db0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55ee8ca98678 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca98640 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55ee8c66e500 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c66e4b0 'T'
|       `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|         `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca99ed8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55ee8ca99ea0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55ee8ca99e80 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55ee8ca99e20 'type'
|     `-ElaboratedType 0x55ee8ca99dd0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55ee8ca99db0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55ee8ca98678 'type'
|         `-SubstTemplateTypeParmType 0x55ee8ca98640 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55ee8c66e500 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ee8c66e4b0 'T'
|           `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|             `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-CXXMethodDecl 0x55ee8ca9a058 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55ee8ca99f68 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55ee8ca9a148 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ee8ca9a228 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ee8ca9a228
|-CXXMethodDecl 0x55ee8ca9a4f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55ee8ca9a400 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55ee8ca9a738 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55ee8ca9a5b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca9a628 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55ee8ca9a908 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55ee8ca9a7f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca9a870 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55ee8ca9aa68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55ee8ca9ab38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55ee8ca9ad88 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55ee8ca9abf8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55ee8ca9ac70 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55ee8ca9afe8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55ee8ca9ae58 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55ee8ca9aed0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55ee8ca9b1a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55ee8ca9b0b8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55ee8ca9b368 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55ee8ca9b270 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55ee8ca9b420 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca9b4d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca9b708 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55ee8ca9b580 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca9b5f8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55ee8ca9b9a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55ee8ca9b8b0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55ee8ca9ba70 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55ee8ca9bac0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ee8ca9bb10 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca96d30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55ee8ca96f38 prev 0x55ee8ca96d30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8ca98140 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55ee8ca980f0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55ee8ca980d0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55ee8ca97f80 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca97e10 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55ee8c644090 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55ee8c644038 'F'
|       `-RecordType 0x55ee8ca97a70 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55ee8ca97990 'typed_array_memory'
|-FieldDecl 0x55ee8ca9bb60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55ee8ca9bbb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8ca9bbe8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55ee8ca96fd0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|     `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca9bc78 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55ee8ca9bc40 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55ee8ca96fd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|       `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca9bd08 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55ee8ca9bcd0 'const Router::element_landmark_t &'
|   `-QualType 0x55ee8ca96fd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55ee8ca96fd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|         `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca9bd98 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55ee8ca9bd60 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55ee8ca96fd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|       `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca9be28 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55ee8ca9bdf0 'const Router::element_landmark_t *'
|   `-QualType 0x55ee8ca96fd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55ee8ca96fd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|         `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca9ca80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55ee8ca9ca30 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55ee8ca9ca10 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55ee8ca9c948 'type'
|     `-LValueReferenceType 0x55ee8ca9c910 'const Router::element_landmark_t &'
|       `-QualType 0x55ee8ca9c6b1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55ee8ca9c6b0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55ee8c64e200 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ee8c64e1a8 'T'
|           `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|             `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca9cae8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55ee8ca9bcd0 'const Router::element_landmark_t &'
|   `-QualType 0x55ee8ca96fd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55ee8ca96fd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|         `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca9cb40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca9cba8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55ee8ca9bd60 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55ee8ca96fd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|       `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-TypedefDecl 0x55ee8ca9cc10 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55ee8ca9bdf0 'const Router::element_landmark_t *'
|   `-QualType 0x55ee8ca96fd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55ee8ca96fd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca92de0 'Router::element_landmark_t'
|         `-CXXRecord 0x55ee8ca92d50 'element_landmark_t'
|-EnumDecl 0x55ee8ca9cc68 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8ca9cd60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8ca9cd40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8ca9cde8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8ca9d078 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca9cea0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca9cf40 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55ee8ca9d338 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55ee8ca9d220 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55ee8ca9d5f8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55ee8ca9d4e0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55ee8ca9d940 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55ee8ca9d820 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55ee8ca9dc50 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55ee8ca9db30 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55ee8ca9df40 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca9dd88 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca9de00 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55ee8ca9e068 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55ee8ca9e148 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca9e1a0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca9e1e8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55ee8ca9e298 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca9e2f0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca9e3b8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca9e468 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca9e4c0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca9e508 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca9fa30 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca9fa88 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca9fad0 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca9fb80 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca9fbd8 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca9fc20 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca9fcd0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca9fd28 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca9fd50 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca9fe00 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca9feb0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8caa0070 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca9ff60 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca9ffd8 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55ee8caa01c0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8caa0130 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa0368 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55ee8caa0278 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8caa0420 <col:20>
| `-OptimizeNoneAttr 0x55ee8caa0478 <col:30>
|-CXXMethodDecl 0x55ee8caa0598 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8caa04a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8caa0650 <col:20>
| `-OptimizeNoneAttr 0x55ee8caa06a8 <col:30>
|-CXXMethodDecl 0x55ee8caa0760 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8caa06d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa08a8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8caa0818 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa09d8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55ee8caa0b08 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55ee8caa0bd8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55ee8caa0ca8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55ee8caa0de8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8caa0d58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa0f30 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8caa0ea0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa1078 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8caa0fe8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8caa1130 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8caa1230 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8caa11a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8caa12e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8caa13a8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55ee8caa14a8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55ee8caa1628 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8caa1568 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55ee8caa1db8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8caa16e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55ee8caa1d18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55ee8caa1c18 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55ee8caa1e98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8caa1fe8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8caa1f58 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55ee8caa20a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8caa22e8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8caa2160 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55ee8caa21d8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55ee8caa2478 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55ee8caa23b8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55ee8caa2688 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55ee8caa2540 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55ee8caa25b8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55ee8caa2748 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8caa29a8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55ee8caa28b0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55ee8caa2a78 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8caa2a78

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c9fded0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55ee8c9fe0a8 prev 0x55ee8c9fded0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ee8c9fe138 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ee8c9fe160 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c9ffd30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55ee8c9ffce0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55ee8c9fe610 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55ee8c9fe510 'type'
|     `-TemplateSpecializationType 0x55ee8c9fe4a0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55ee8c9fe380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55ee8c9fe360 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55ee8c9fe340 <col:24> 'unsigned long' 16
|       `-RecordType 0x55ee8c9fe480 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55ee8c9fe3a0 'char_array'
|-TypedefDecl 0x55ee8c9ffde8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55ee8c9ffdb0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55ee8c9ffd90 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55ee8c9ffd30 'type'
|     `-ElaboratedType 0x55ee8c9ffce0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55ee8c9fe610 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55ee8c9fe510 'type'
|         `-TemplateSpecializationType 0x55ee8c9fe4a0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55ee8c9fe380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55ee8c9fe360 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55ee8c9fe340 <col:24> 'unsigned long' 16
|           `-RecordType 0x55ee8c9fe480 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55ee8c9fe3a0 'char_array'
|-CXXMethodDecl 0x55ee8c9fff68 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55ee8c9ffe78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55ee8ca00058 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ee8ca00138 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ee8ca00138
|-CXXMethodDecl 0x55ee8ca00408 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55ee8ca00310 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55ee8ca00648 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55ee8ca004c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca00538 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ee8ca00818 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55ee8ca00708 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca00780 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ee8ca00978 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55ee8ca00a48 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55ee8ca00c98 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55ee8ca00b08 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55ee8ca00b80 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ee8ca00ef8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55ee8ca00d68 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55ee8ca00de0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ee8ca010b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55ee8ca00fc8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ee8ca01278 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55ee8ca01180 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ee8ca01330 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca013e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca01618 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55ee8ca01490 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca01508 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55ee8ca018b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55ee8ca017c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55ee8ca01980 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55ee8ca019d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ee8ca01a20 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8caa3190 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55ee8caa3398 prev 0x55ee8caa3190 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8caa4460 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55ee8caa4410 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55ee8caa43f0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55ee8caa42a0 'type'
|     `-SubstTemplateTypeParmType 0x55ee8c9fdaa0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8c9fd5f0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55ee8c9fd508 'sized_array_memory'
|-FieldDecl 0x55ee8caa4560 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55ee8caa45b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8caa45e8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55ee8caa3430 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|     `-CXXRecord 0x55ee8ca7f240 'Connection'
|-TypedefDecl 0x55ee8caa46a8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55ee8caa4670 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55ee8caa3430 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|       `-CXXRecord 0x55ee8ca7f240 'Connection'
|-TypedefDecl 0x55ee8caa4738 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55ee8caa4700 'const Router::Connection &'
|   `-QualType 0x55ee8caa3431 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55ee8caa3430 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|         `-CXXRecord 0x55ee8ca7f240 'Connection'
|-TypedefDecl 0x55ee8caa47c8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55ee8caa4790 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55ee8caa3430 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|       `-CXXRecord 0x55ee8ca7f240 'Connection'
|-TypedefDecl 0x55ee8caa4858 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55ee8caa4820 'const Router::Connection *'
|   `-QualType 0x55ee8caa3431 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55ee8caa3430 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|         `-CXXRecord 0x55ee8ca7f240 'Connection'
|-TypedefDecl 0x55ee8caa54b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55ee8caa5460 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55ee8caa5440 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55ee8caa5378 'type'
|     `-LValueReferenceType 0x55ee8caa5340 'const Router::Connection &'
|       `-QualType 0x55ee8caa50e1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55ee8caa50e0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55ee8c64e200 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ee8c64e1a8 'T'
|           `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|             `-CXXRecord 0x55ee8ca7f240 'Connection'
|-TypedefDecl 0x55ee8caa5518 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55ee8caa4700 'const Router::Connection &'
|   `-QualType 0x55ee8caa3431 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55ee8caa3430 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|         `-CXXRecord 0x55ee8ca7f240 'Connection'
|-TypedefDecl 0x55ee8caa5570 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8caa55d8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55ee8caa4790 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55ee8caa3430 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|       `-CXXRecord 0x55ee8ca7f240 'Connection'
|-TypedefDecl 0x55ee8caa5640 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55ee8caa4820 'const Router::Connection *'
|   `-QualType 0x55ee8caa3431 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55ee8caa3430 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca7f2d0 'Router::Connection'
|         `-CXXRecord 0x55ee8ca7f240 'Connection'
|-EnumDecl 0x55ee8caa5698 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8caa5790 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8caa5770 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8caa5818 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8caa5aa8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8caa58d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8caa5970 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55ee8caa5d68 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55ee8caa5c50 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55ee8caa6028 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55ee8caa5f10 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55ee8caa6370 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55ee8caa6250 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55ee8caa6680 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55ee8caa6560 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55ee8caa6970 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8caa67b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8caa6830 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55ee8caa6ac8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55ee8caa6ba8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caa6c00 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caa6c48 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55ee8caa6cf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caa6d50 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caa6e18 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55ee8caa6ec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caa6f20 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caa6f68 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55ee8caa7018 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caa7070 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caa70b8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55ee8caa7168 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caa71c0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caa7208 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55ee8caa72b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caa7310 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caa7338 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8caa73e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8caa7498 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8caa7658 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8caa7548 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8caa75c0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55ee8caa77a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8caa7718 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa7958 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55ee8caa7860 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8caa9000 <col:20>
| `-OptimizeNoneAttr 0x55ee8caa9058 <col:30>
|-CXXMethodDecl 0x55ee8caa9178 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8caa9080 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8caa9230 <col:20>
| `-OptimizeNoneAttr 0x55ee8caa9288 <col:30>
|-CXXMethodDecl 0x55ee8caa9340 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8caa92b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa9488 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8caa93f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa95b8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55ee8caa96e8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55ee8caa97b8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55ee8caa9888 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55ee8caa99c8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8caa9938 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa9b10 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8caa9a80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8caa9c58 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8caa9bc8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8caa9d10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8caa9e10 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8caa9d80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8caa9ec8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8caa9f88 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55ee8caaa088 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55ee8caaa238 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8caaa148 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55ee8caaa9f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8caaa2f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55ee8caaa958 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55ee8caaa858 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55ee8caaaad8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8caaac28 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8caaab98 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55ee8caaace0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8caaaf28 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8caaada0 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55ee8caaae18 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55ee8caab0e8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55ee8caaaff8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55ee8caab338 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55ee8caab1b0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55ee8caab228 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55ee8caab3f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8caab658 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55ee8caab560 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55ee8caab728 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8caab728

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9af5a8 prev 0x55ee8c8601d8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c9af6a0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55ee8c9af730 <col:22, col:28> col:22 public
|-EnumDecl 0x55ee8c9af758 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55ee8c9af878 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9af858 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55ee8c9af840 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ee8c9af820 <col:14> 'int' 999
| |-EnumConstantDecl 0x55ee8c9af920 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9af900 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55ee8c9af8e8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ee8c9af8c8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55ee8c9af9b0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9af990 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55ee8c9af970 <col:17> 'int' 0
| |-EnumConstantDecl 0x55ee8c9afa40 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9afa20 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55ee8c9afa00 <col:13> 'int' 1
| |-EnumConstantDecl 0x55ee8c9afad0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9afab0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55ee8c9afa90 <col:16> 'int' 2
| |-EnumConstantDecl 0x55ee8c9afb60 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9afb40 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55ee8c9afb20 <col:13> 'int' 3
| |-EnumConstantDecl 0x55ee8c9afbf0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9afbd0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55ee8c9afbb0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55ee8c9afc80 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9afc60 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55ee8c9afc40 <col:14> 'int' 5
| |-EnumConstantDecl 0x55ee8c9afd10 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55ee8c9afcf0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55ee8c9afcd0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55ee8c9afda0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55ee8c9afd80 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55ee8c9afd60 <col:13> 'int' 7
|-VarDecl 0x55ee8c9afe10 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55ee8c9afe98 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55ee8c9aff20 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55ee8c9affa8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55ee8c9b0030 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55ee8c9b00b8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55ee8c9b0140 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55ee8c9b01c8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55ee8c9b0250 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55ee8c9b02d8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55ee8c9b0360 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55ee8c9b0460 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55ee8c9b5768 '_nerrors' 'int'
| | `-IntegerLiteral 0x55ee8c9b5ef8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55ee8c9b5f68 <col:16, line:129:5>
|-CXXDestructorDecl 0x55ee8c9b0550 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55ee8c9b5f78 <col:29, line:132:5>
|-CXXMethodDecl 0x55ee8c9b0708 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55ee8c9b0640 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c9b07d0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55ee8c9b08b8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55ee8c9b5fd0 <col:44, line:161:5>
|   `-ReturnStmt 0x55ee8c9b5fc0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c9b5fa8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c9b5f88 <col:9> 'ErrorHandler *' lvalue Var 0x55ee8c9b57c8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c9b09f8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55ee8c9b0968 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c9b0ac0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55ee8c9b6030 <col:43, line:173:5>
|   `-ReturnStmt 0x55ee8c9b6020 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c9b6008 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c9b5fe8 <col:9> 'ErrorHandler *' lvalue Var 0x55ee8c9b5840 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55ee8c9b0b78 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55ee8c9b0bf8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55ee8c9b0d08 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55ee8c9b0c78 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b0e58 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55ee8c9b0dc8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b0fb0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55ee8c9b0f18 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b1108 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55ee8c9b1070 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b1260 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55ee8c9b11c8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b1470 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ee8c9b1318 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55ee8c9b1398 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b1648 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ee8c9b1530 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55ee8c9b15b0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b1868 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ee8c9b1708 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55ee8c9b1788 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b1a48 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ee8c9b1928 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55ee8c9b19a8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b1c28 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55ee8c9b1b08 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55ee8c9b1b88 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b1db0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55ee8c9b1ce8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55ee8c9b1f80 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55ee8c9b1e68 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55ee8c9b1ee0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55ee8c9b6288 <col:57, line:234:5>
|   `-ReturnStmt 0x55ee8c9b6278 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55ee8c9b6260 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55ee8c9b6208 <col:9, col:41> 'int'
|         |-MemberExpr 0x55ee8c9b61d8 <col:9> '<bound member function type>' ->xmessage 0x55ee8c9b1db0
|         | `-CXXThisExpr 0x55ee8c9b61c8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55ee8c9b6248 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55ee8c9b6230 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55ee8c9b61a8 <col:18, col:40> 'String' (CXXTemporary 0x55ee8c9b61a8)
|               `-CallExpr 0x55ee8c9b6170 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55ee8c9b6158 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55ee8c9b60d0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55ee8c9b3f78 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55ee8c9b60f0 <col:31> 'const String' lvalue ParmVar 0x55ee8c9b1ee0 'str' 'const String &'
|                 `-DeclRefExpr 0x55ee8c9b6110 <col:36> 'const String' lvalue ParmVar 0x55ee8c9b1e68 'anno' 'const String &'
|-CXXMethodDecl 0x55ee8c9b2260 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55ee8c9b2040 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55ee8c9b20c0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55ee8c9b2138 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55ee8c9b6518 <col:68, line:243:5>
|   `-ReturnStmt 0x55ee8c9b6508 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55ee8c9b64f0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55ee8c9b6490 <col:9, col:41> 'int'
|         |-MemberExpr 0x55ee8c9b6460 <col:9> '<bound member function type>' ->xmessage 0x55ee8c9b1f80
|         | `-CXXThisExpr 0x55ee8c9b6450 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55ee8c9b6328 <col:18> 'const String' lvalue ParmVar 0x55ee8c9b2040 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55ee8c9b64d8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55ee8c9b64c0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55ee8c9b6430 <col:24, col:40> 'String' (CXXTemporary 0x55ee8c9b6430)
|               `-CXXMemberCallExpr 0x55ee8c9b63c8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55ee8c9b6358 <col:24> '<bound member function type>' ->vformat 0x55ee8c9b3440
|                 | `-CXXThisExpr 0x55ee8c9b6348 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55ee8c9b63f8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55ee8c9b6388 <col:32> 'const char *' lvalue ParmVar 0x55ee8c9b20c0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55ee8c9b6410 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55ee8c9b63a8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55ee8c9b2138 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ee8c9b2500 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55ee8c9b2328 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55ee8c9b23a0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55ee8c9b2418 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55ee8c9b6858 <col:23, line:254:5>
|   `-ReturnStmt 0x55ee8c9b6848 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55ee8c9b6830 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55ee8c9b67d0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55ee8c9b67a0 <col:9> '<bound member function type>' ->xmessage 0x55ee8c9b1f80
|         | `-CXXThisExpr 0x55ee8c9b6790 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55ee8c9b6818 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55ee8c9b6800 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55ee8c9b6750 <col:18, col:65> 'String' (CXXTemporary 0x55ee8c9b6750)
|         |     `-CallExpr 0x55ee8c9b66e8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55ee8c9b66d0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55ee8c9b65b8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55ee8c9b3f78 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55ee8c9b65d8 <col:31> 'const String' lvalue ParmVar 0x55ee8c9b23a0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55ee8c9b6730 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55ee8c9b6718 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55ee8c9b66b0 <col:37, col:64> 'String' (CXXTemporary 0x55ee8c9b66b0)
|         |             `-CallExpr 0x55ee8c9b6680 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55ee8c9b6668 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55ee8c9b65f8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55ee8c9b45c8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55ee8c9b6618 <col:56> 'const String' lvalue ParmVar 0x55ee8c9b2328 'landmark' 'const String &'
|         `-DeclRefExpr 0x55ee8c9b6770 <col:68> 'const String' lvalue ParmVar 0x55ee8c9b2418 'str' 'const String &'
|-CXXMethodDecl 0x55ee8c9b2880 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55ee8c9b25c8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55ee8c9b2640 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55ee8c9b26c0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55ee8c9b2738 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55ee8c9b6b10 <col:34, line:267:5>
|   `-ReturnStmt 0x55ee8c9b6b00 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55ee8c9b6ae8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55ee8c9b6a80 <col:9, col:51> 'int'
|         |-MemberExpr 0x55ee8c9b6a50 <col:9> '<bound member function type>' ->xmessage 0x55ee8c9b2500
|         | `-CXXThisExpr 0x55ee8c9b6a40 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55ee8c9b68f8 <col:18> 'const String' lvalue ParmVar 0x55ee8c9b25c8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55ee8c9b6918 <col:28> 'const String' lvalue ParmVar 0x55ee8c9b2640 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55ee8c9b6ad0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55ee8c9b6ab8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55ee8c9b6a20 <col:34, col:50> 'String' (CXXTemporary 0x55ee8c9b6a20)
|               `-CXXMemberCallExpr 0x55ee8c9b69b8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55ee8c9b6948 <col:34> '<bound member function type>' ->vformat 0x55ee8c9b3440
|                 | `-CXXThisExpr 0x55ee8c9b6938 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55ee8c9b69e8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55ee8c9b6978 <col:42> 'const char *' lvalue ParmVar 0x55ee8c9b26c0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55ee8c9b6a00 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55ee8c9b6998 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55ee8c9b2738 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ee8c9b2990 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55ee8c9b6b90 <col:25, line:288:5>
|   `-ReturnStmt 0x55ee8c9b6b80 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c9b6b68 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55ee8c9b6b38 <col:9> 'const int' lvalue ->_nerrors 0x55ee8c9b5768
|         `-CXXThisExpr 0x55ee8c9b6b28 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55ee8c9b2ba0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55ee8c9b2a48 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55ee8c9b2ac8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b2e88 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55ee8c9b2c68 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55ee8c9b2ce8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55ee8c9b2d60 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ee8c9b3020 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55ee8c9b2f58 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b3268 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55ee8c9b30e0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55ee8c9b3158 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55ee8c9b6df0 <col:58, line:357:5>
|   `-ReturnStmt 0x55ee8c9b6de0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55ee8c9b6dc8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55ee8c9b6d98 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c9b6d80 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55ee8c9b6d60 <col:9, col:29> 'String' (CXXTemporary 0x55ee8c9b6d60)
|             `-CallExpr 0x55ee8c9b6cf0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55ee8c9b6cd8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ee8c9b6c58 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55ee8c9b2e88 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55ee8c9b6bf8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55ee8c9b6d28 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55ee8c9b6c18 <col:21> 'const char *' lvalue ParmVar 0x55ee8c9b30e0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55ee8c9b6d40 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55ee8c9b6c38 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55ee8c9b3158 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ee8c9b3440 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55ee8c9b3330 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55ee8c9b33a8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55ee8c9b3598 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55ee8c9b3508 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c9b36e0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55ee8c9b3650 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55ee8c9b3980 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55ee8c9b3798 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55ee8c9b3818 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55ee8c9b3890 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55ee8c9b3ae0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55ee8c9b3a50 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55ee8c9b6f08 <col:37, line:441:5>
|   `-IfStmt 0x55ee8c9b6ef0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55ee8c9b6e78 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55ee8c9b6e48 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55ee8c9b6e08 <col:6> 'int' lvalue ParmVar 0x55ee8c9b3a50 'level' 'int'
|     | `-ImplicitCastExpr 0x55ee8c9b6e60 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55ee8c9b6e28 <col:15> 'ErrorHandler::Level' EnumConstant 0x55ee8c9afb60 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55ee8c9b6ed8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55ee8c9b6ea8 <col:8> 'int' lvalue ->_nerrors 0x55ee8c9b5768
|         `-CXXThisExpr 0x55ee8c9b6e98 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55ee8c9b3ba8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55ee8c9b6fa0 <col:26, line:448:5>
|   `-BinaryOperator 0x55ee8c9b6f80 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55ee8c9b6f30 <col:2> 'int' lvalue ->_nerrors 0x55ee8c9b5768
|     | `-CXXThisExpr 0x55ee8c9b6f20 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55ee8c9b6f60 <col:13> 'int' 0
|-CXXMethodDecl 0x55ee8c9b3d70 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55ee8c9b3c60 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55ee8c9b3cd8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55ee8c9b3f78 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55ee8c9b3e30 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55ee8c9b3ea8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55ee8c9b4228 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55ee8c9b4038 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55ee8c9b40b8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55ee8c9b4138 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55ee8c9b42e0 <col:59> 0 0
|-CXXMethodDecl 0x55ee8c9b4478 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55ee8c9b4358 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55ee8c9b43d8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55ee8c9b7610 <col:70, line:534:5>
|   |-DeclStmt 0x55ee8c9b7110 <line:528:2, col:20>
|   | |-VarDecl 0x55ee8c9b6fc8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55ee8c9b7030 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55ee8c9b7068 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55ee8c9b70d0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55ee8c9b71e0 <line:529:2, col:23>
|   | `-VarDecl 0x55ee8c9b7140 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55ee8c9b71c8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55ee8c9b71a8 <col:18> 'const char *' lvalue ParmVar 0x55ee8c9b4358 'begin' 'const char *'
|   |-DoStmt 0x55ee8c9b75a8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55ee8c9b74d8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55ee8c9b74c0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55ee8c9b74a0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55ee8c9b71f8 <col:6> 'const char *' lvalue Var 0x55ee8c9b7140 'x' 'const char *'
|   | |     `-CallExpr 0x55ee8c9b73f0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55ee8c9b73d8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55ee8c9b7390 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55ee8c9b5c40 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55ee8c9b7458 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55ee8c9b7440 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55ee8c9b72b0 <col:20, col:27> 'String' (CXXTemporary 0x55ee8c9b72b0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55ee8c9b7278 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55ee8c9b7470 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55ee8c9b72d0 <col:30> 'const char *' lvalue Var 0x55ee8c9b7140 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55ee8c9b7488 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55ee8c9b72f0 <col:33> 'const char *' lvalue ParmVar 0x55ee8c9b43d8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55ee8c9b7330 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55ee8c9b7310 <col:39> 'String' lvalue Var 0x55ee8c9b6fc8 'name' 'String'
|   | |       |-UnaryOperator 0x55ee8c9b7368 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55ee8c9b7348 <col:46> 'String' lvalue Var 0x55ee8c9b7068 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55ee8c9b7380 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55ee8c9b7590 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55ee8c9b7578 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55ee8c9b7558 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55ee8c9b7528 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|   |         `-ImplicitCastExpr 0x55ee8c9b7510 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55ee8c9b74f0 <col:11> 'String' lvalue Var 0x55ee8c9b6fc8 'name' 'String'
|   `-ReturnStmt 0x55ee8c9b7600 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c9b75e8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c9b75c8 <col:9> 'const char *' lvalue Var 0x55ee8c9b7140 'x' 'const char *'
|-CXXMethodDecl 0x55ee8c9b45c8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55ee8c9b4538 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55ee8c9b7c18 <col:55, line:550:5>
|   `-IfStmt 0x55ee8c9b7bf0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55ee8c9b7850 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55ee8c9b7838 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55ee8c9b7820 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55ee8c9b7800 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55ee8c9b77d0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|     | |       `-DeclRefExpr 0x55ee8c9b7670 <col:6> 'const String' lvalue ParmVar 0x55ee8c9b4538 'x' 'const String &'
|     | `-BinaryOperator 0x55ee8c9b77b0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55ee8c9b7780 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55ee8c9b7730 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55ee8c9b7718 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55ee8c9b76d0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55ee8c6c7c90 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55ee8c9b7690 <col:11> 'const String' lvalue ParmVar 0x55ee8c9b4538 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55ee8c9b76b0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55ee8c9b7798 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55ee8c9b7768 <col:19> 'char' 123
|     |-ReturnStmt 0x55ee8c9b78c0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55ee8c9b7890 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55ee8c9b7870 <col:13> 'const String' lvalue ParmVar 0x55ee8c9b4538 'x' 'const String &'
|     `-IfStmt 0x55ee8c9b7bc8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55ee8c9b7958 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ee8c9b7940 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ee8c9b7920 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ee8c9b78f0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|       |       `-DeclRefExpr 0x55ee8c9b78d0 <col:11> 'const String' lvalue ParmVar 0x55ee8c9b4538 'x' 'const String &'
|       |-ReturnStmt 0x55ee8c9b7ae0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55ee8c9b7ac8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55ee8c9b7a98 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55ee8c9b7a80 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55ee8c9b7a60 <col:13, col:29> 'String' (CXXTemporary 0x55ee8c9b7a60)
|       |         `-CallExpr 0x55ee8c9b7a10 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55ee8c9b79f8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55ee8c9b7970 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55ee8c9b3d70 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55ee8c9b7a40 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55ee8c9b7990 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55ee8c9b79b0 <col:28> 'const String' lvalue ParmVar 0x55ee8c9b4538 'x' 'const String &'
|       `-ReturnStmt 0x55ee8c9b7bb8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55ee8c9b7ba0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55ee8c9b7b70 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55ee8c9b7b58 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55ee8c9b7b38 <col:13, col:20> 'String' (CXXTemporary 0x55ee8c9b7b38)
|                 `-CXXTemporaryObjectExpr 0x55ee8c9b7b00 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55ee8c9b4790 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55ee8c9b4680 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55ee8c9b46f8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8c9b5ee8 <col:71> 'bool' false
|-CXXRecordDecl 0x55ee8c9b4840 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55ee8c9b4b38 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55ee8c9b4ad0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55ee8c9b4a70 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55ee8c9b4a30 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55ee8c6aacf0 'String'
|       | `-CXXRecord 0x55ee8c6aac60 'String'
|       |-BuiltinType 0x55ee8c379580 'int'
|       `-DecayedType 0x55ee8c861220 '__va_list_tag *' sugar
|         |-TypedefType 0x55ee8c8611f0 'va_list' sugar
|         | |-Typedef 0x55ee8c59bb80 'va_list'
|         | `-TypedefType 0x55ee8c59bb30 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55ee8c4d3778 '__gnuc_va_list'
|         |   `-TypedefType 0x55ee8c4d36e0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55ee8c3bad38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55ee8c3bace0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55ee8c37a2d0 '__va_list_tag'
|         |         `-CXXRecord 0x55ee8c37a238 '__va_list_tag'
|         `-PointerType 0x55ee8c5a1420 '__va_list_tag *'
|           `-RecordType 0x55ee8c37a2d0 '__va_list_tag'
|             `-CXXRecord 0x55ee8c37a238 '__va_list_tag'
|-EnumDecl 0x55ee8c9b4b90 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55ee8c9b4c90 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b5210 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b4c70 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55ee8c9b4c50 <col:16> 'int' 1
| |-EnumConstantDecl 0x55ee8c9b4d40 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b5228 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b4d00 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55ee8c9b4ce0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55ee8c9b4dd0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b5240 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b4db0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55ee8c9b4d90 <col:22> 'int' 4
| |-EnumConstantDecl 0x55ee8c9b4e60 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b5258 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b4e40 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55ee8c9b4e20 <col:17> 'int' 8
| |-EnumConstantDecl 0x55ee8c9b4ef0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b5270 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b4ed0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55ee8c9b4eb0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55ee8c9b4f80 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b5288 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b4f60 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55ee8c9b4f40 <col:19> 'int' 32
| |-EnumConstantDecl 0x55ee8c9b5010 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b52a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b4ff0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55ee8c9b4fd0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55ee8c9b50a0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b52b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b5080 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55ee8c9b5060 <col:14> 'int' 128
| |-EnumConstantDecl 0x55ee8c9b5130 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55ee8c9b52d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9b5110 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55ee8c9b50f0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55ee8c9b51c0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55ee8c9b52e8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c9b51a0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55ee8c9b5180 <col:12> 'int' 1024
|-CXXMethodDecl 0x55ee8c9b54f8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55ee8c9b5310 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55ee8c9b53b0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55ee8c9b5680 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55ee8c9b55b8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55ee8c9b5728 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55ee8c9b5768 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55ee8c9b57c8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55ee8c9b5840 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55ee8c9b5c40 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55ee8c9b58b8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55ee8c9b5938 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55ee8c9b59b8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55ee8c9b5a30 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55ee8c9b5aa8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55ee8c9b5b20 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55ee8c9b5d68 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55ee8c9b5d68
| `-ParmVarDecl 0x55ee8c9b5e78 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55ee8c9b7f78 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55ee8c9b7f78
  `-ParmVarDecl 0x55ee8c9b8088 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8dadb0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55ee8c8daf00 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55ee8c8daf80 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55ee8c8dbd78 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55ee8c8dbd78
| `-ParmVarDecl 0x55ee8c8dbe88 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55ee8c8dbf28 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55ee8c8dbf28
| `-ParmVarDecl 0x55ee8c8dc038 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55ee8c8dc0a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ee8c8dc0a8
|-CXXMethodDecl 0x55ee8c8dc978 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55ee8c8dc978
| `-ParmVarDecl 0x55ee8c8dca88 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55ee8c8dcaf8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55ee8c8dcaf8
| `-ParmVarDecl 0x55ee8c8dcc08 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55ee8cac4838 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55ee8cac4910 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8db0b0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55ee8c8db1d8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55ee8c8db260 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55ee8c8dc1d8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55ee8c8dc1d8
| `-ParmVarDecl 0x55ee8c8dc2e8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55ee8c8dc388 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55ee8c8dc388
| `-ParmVarDecl 0x55ee8c8dc498 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55ee8c8dc508 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ee8c8dc508
|-CXXMethodDecl 0x55ee8c8dcca8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55ee8c8dcca8
| `-ParmVarDecl 0x55ee8c8dcdb8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55ee8c8dce28 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55ee8c8dce28
| `-ParmVarDecl 0x55ee8c8dcf38 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55ee8cac4970 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55ee8cac4a50 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8d6738 prev 0x55ee8c8d5bd0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55ee8c8d6830 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55ee8c8d68c0 <col:17, col:23> col:17 public
|-EnumDecl 0x55ee8c8d68e8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55ee8c8d69f0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7740 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d69d0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55ee8c8d69b0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55ee8c8d6a80 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7758 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6a60 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55ee8c8d6a40 <col:12> 'int' 2
| |-EnumConstantDecl 0x55ee8c8d6b10 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7770 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6af0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55ee8c8d6ad0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55ee8c8d6ba0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7788 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6b80 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55ee8c8d6b60 <col:16> 'int' 0
| |-EnumConstantDecl 0x55ee8c8d6c30 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d77a0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6c10 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55ee8c8d6bf0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55ee8c8d6cc0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d77b8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6ca0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55ee8c8d6c80 <col:10> 'int' 64
| |-EnumConstantDecl 0x55ee8c8d6d50 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d77d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6d30 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55ee8c8d6d10 <col:19> 'int' 128
| |-EnumConstantDecl 0x55ee8c8d6de0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d77e8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6dc0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55ee8c8d6da0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55ee8c8d6e70 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7800 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6e50 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55ee8c8d6e30 <col:17> 'int' 512
| |-EnumConstantDecl 0x55ee8c8d6f00 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7818 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6ee0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55ee8c8d6ec0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55ee8c8d6f90 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7830 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d6f70 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55ee8c8d6f50 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55ee8c8d7020 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7848 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d7000 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55ee8c8d6fe0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55ee8c8d70b0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7860 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d7090 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55ee8c8d7070 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55ee8c8d7140 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7878 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d7120 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55ee8c8d7100 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55ee8c8d7210 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55ee8c8d71f0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55ee8c8d71d0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55ee8c8d7190 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55ee8c8d71b0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55ee8c8d72e0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55ee8c8d72c0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55ee8c8d72a0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55ee8c8d7260 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55ee8c8d7280 <col:27> 'int' 27
| |-EnumConstantDecl 0x55ee8c8d7370 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d7890 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d7350 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55ee8c8d7330 <col:17> 'int' 28
| |-EnumConstantDecl 0x55ee8c8d7440 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55ee8c8d7420 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55ee8c8d7400 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55ee8c8d73c0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55ee8c8d73e0 <col:18> 'int' EnumConstant 0x55ee8c8d7370 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d74d0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d78a8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d74b0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55ee8c8d7490 <col:25> 'int' 8
| |-EnumConstantDecl 0x55ee8c8d7560 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55ee8c8d78c0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d7540 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55ee8c8d7520 <col:26> 'int' 16
| `-EnumConstantDecl 0x55ee8c8d76f0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55ee8c8d78d8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8d76d0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55ee8c8d76b0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55ee8c8d7670 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55ee8c8d7630 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55ee8c8d75f0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55ee8c8d75b0 <col:14> 'int' EnumConstant 0x55ee8c8d69f0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55ee8c8d75d0 <col:23> 'int' EnumConstant 0x55ee8c8d6a80 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55ee8c8d7610 <col:33> 'int' EnumConstant 0x55ee8c8d6b10 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55ee8c8d7650 <col:48> 'int' EnumConstant 0x55ee8c8d74d0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55ee8c8d7690 <col:71> 'int' EnumConstant 0x55ee8c8d7560 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d7938 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55ee8c8dd358 <col:39, line:64:5>
|   `-ReturnStmt 0x55ee8c8dd348 <line:63:2, col:9>
|     `-MemberExpr 0x55ee8c8dd318 <col:9> 'const String' lvalue ->_name 0x55ee8c8dad60
|       `-CXXThisExpr 0x55ee8c8dd308 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55ee8c8d79f8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55ee8c8dd3d8 <col:35, line:71:5>
|   `-ReturnStmt 0x55ee8c8dd3c8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c8dd3b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ee8c8dd380 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|         `-CXXThisExpr 0x55ee8c8dd370 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55ee8c8d7b48 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55ee8c8d7ab0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55ee8c8dd558 <col:42, line:77:5>
|   `-ReturnStmt 0x55ee8c8dd548 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55ee8c8dd530 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55ee8c8dd500 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55ee8c8dd460 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55ee8c8dd430 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ee8c8dd3f0 <col:9> 'int' lvalue ParmVar 0x55ee8c8d7ab0 'op' 'int'
|         | `-ImplicitCastExpr 0x55ee8c8dd448 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55ee8c8dd410 <col:15> 'Handler::Flags' EnumConstant 0x55ee8c8d6a80 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55ee8c8dd490 <col:25> 'void *const' lvalue ->_write_user_data 0x55ee8c8db410
|         | `-CXXThisExpr 0x55ee8c8dd480 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55ee8c8dd4d0 <col:44> 'void *const' lvalue ->_read_user_data 0x55ee8c8db3a8
|           `-CXXThisExpr 0x55ee8c8dd4c0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55ee8c8d7c18 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55ee8c8dd5d8 <col:41, line:82:5>
|   `-ReturnStmt 0x55ee8c8dd5c8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c8dd5b0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c8dd580 <col:9> 'void *const' lvalue ->_read_user_data 0x55ee8c8db3a8
|         `-CXXThisExpr 0x55ee8c8dd570 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55ee8c8d7ce0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55ee8c8dd658 <col:42, line:87:5>
|   `-ReturnStmt 0x55ee8c8dd648 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c8dd630 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c8dd600 <col:9> 'void *const' lvalue ->_write_user_data 0x55ee8c8db410
|         `-CXXThisExpr 0x55ee8c8dd5f0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55ee8c8d7da8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55ee8c8d7e48 <col:52> "" ""
|-CXXMethodDecl 0x55ee8c8d7ee0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55ee8c8d7f80 <col:52> "" ""
|-CXXMethodDecl 0x55ee8c8d8010 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55ee8c8dd748 <col:34, line:98:5>
|   `-ReturnStmt 0x55ee8c8dd738 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55ee8c8dd720 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55ee8c8dd700 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55ee8c8dd6d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55ee8c8dd680 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|         |   `-CXXThisExpr 0x55ee8c8dd670 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55ee8c8dd6e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55ee8c8dd6b0 <col:18> 'Handler::Flags' EnumConstant 0x55ee8c8d69f0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d80d0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55ee8c8dd838 <col:36, line:104:5>
|   `-ReturnStmt 0x55ee8c8dd828 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55ee8c8dd810 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55ee8c8dd7f0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55ee8c8dd7c0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55ee8c8dd770 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|         |   `-CXXThisExpr 0x55ee8c8dd760 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55ee8c8dd7d8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55ee8c8dd7a0 <col:18> 'Handler::Flags' EnumConstant 0x55ee8c8d6b10 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d8190 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55ee8c8dda18 <col:38, line:113:5>
|   `-ReturnStmt 0x55ee8c8dda08 <line:112:2, col:49>
|     `-BinaryOperator 0x55ee8c8dd9e8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55ee8c8dd990 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55ee8c8dd970 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55ee8c8dd940 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55ee8c8dd860 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|       |   |   `-CXXThisExpr 0x55ee8c8dd850 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55ee8c8dd958 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55ee8c8dd920 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55ee8c8dd900 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55ee8c8dd8d0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55ee8c8dd890 <col:20> 'Handler::Flags' EnumConstant 0x55ee8c8d69f0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55ee8c8dd8e8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55ee8c8dd8b0 <col:29> 'Handler::Flags' EnumConstant 0x55ee8c8d6d50 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55ee8c8dd9d0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55ee8c8dd9b0 <col:49> 'Handler::Flags' EnumConstant 0x55ee8c8d69f0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d8250 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55ee8c8ddb08 <col:34, line:118:5>
|   `-ReturnStmt 0x55ee8c8ddaf8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55ee8c8ddae0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55ee8c8ddac0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55ee8c8dda90 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55ee8c8dda40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|         |   `-CXXThisExpr 0x55ee8c8dda30 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55ee8c8ddaa8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55ee8c8dda70 <col:18> 'Handler::Flags' EnumConstant 0x55ee8c8d6a80 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d8310 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55ee8c8ddce8 <col:39, line:127:5>
|   `-ReturnStmt 0x55ee8c8ddcd8 <line:126:2, col:51>
|     `-BinaryOperator 0x55ee8c8ddcb8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55ee8c8ddc60 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55ee8c8ddc40 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55ee8c8ddc10 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55ee8c8ddb30 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|       |   |   `-CXXThisExpr 0x55ee8c8ddb20 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55ee8c8ddc28 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55ee8c8ddbf0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55ee8c8ddbd0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55ee8c8ddba0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55ee8c8ddb60 <col:20> 'Handler::Flags' EnumConstant 0x55ee8c8d6a80 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55ee8c8ddbb8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55ee8c8ddb80 <col:30> 'Handler::Flags' EnumConstant 0x55ee8c8d6de0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55ee8c8ddca0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55ee8c8ddc80 <col:51> 'Handler::Flags' EnumConstant 0x55ee8c8d6a80 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d83d0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55ee8c8dddf0 <col:33, line:132:5>
|   `-ReturnStmt 0x55ee8c8ddde0 <line:131:2, col:41>
|     `-BinaryOperator 0x55ee8c8dddc0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55ee8c8ddd40 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55ee8c8ddd10 <col:9> '<bound member function type>' ->read_visible 0x55ee8c8d8190
|       |   `-CXXThisExpr 0x55ee8c8ddd00 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55ee8c8ddda0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55ee8c8ddd70 <col:27> '<bound member function type>' ->write_visible 0x55ee8c8d8310
|           `-CXXThisExpr 0x55ee8c8ddd60 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55ee8c8d8490 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55ee8c8ddf28 <col:51, line:138:5>
|   `-ReturnStmt 0x55ee8c8ddf18 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55ee8c8ddf00 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55ee8c8ddee0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55ee8c8dde98 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55ee8c8dde68 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55ee8c8dde18 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|           |   `-CXXThisExpr 0x55ee8c8dde08 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55ee8c8dde80 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55ee8c8dde48 <col:26> 'Handler::Flags' EnumConstant 0x55ee8c8d6c30 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d8550 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55ee8c8de038 <col:50, line:144:5>
|   `-ReturnStmt 0x55ee8c8de028 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55ee8c8de010 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55ee8c8ddff0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55ee8c8ddfd0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55ee8c8ddfa0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55ee8c8ddf50 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|           |   `-CXXThisExpr 0x55ee8c8ddf40 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55ee8c8ddfb8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55ee8c8ddf80 <col:26> 'Handler::Flags' EnumConstant 0x55ee8c8d6c30 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d8610 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55ee8c8de128 <col:29, line:166:5>
|   `-ReturnStmt 0x55ee8c8de118 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55ee8c8de100 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55ee8c8de0e0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55ee8c8de0b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55ee8c8de060 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|         |   `-CXXThisExpr 0x55ee8c8de050 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55ee8c8de0c8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55ee8c8de090 <col:18> 'Handler::Flags' EnumConstant 0x55ee8c8d6cc0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8d8898 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55ee8c8d86c0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55ee8c8d8738 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55ee8c8d87b0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8d8aa8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55ee8c8d8960 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55ee8c8d89d8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55ee8c8dd240 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8c8dd220 <col:62> 'int' 0
| `-CompoundStmt 0x55ee8c8de3c8 <col:71, line:188:5>
|   `-ReturnStmt 0x55ee8c8de3b8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55ee8c8de3a0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55ee8c8de370 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c8de358 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55ee8c8de338 <col:9, col:36> 'String' (CXXTemporary 0x55ee8c8de338)
|             `-CXXMemberCallExpr 0x55ee8c8de298 <col:9, col:36> 'String'
|               |-MemberExpr 0x55ee8c8de268 <col:9> '<bound member function type>' ->call_read 0x55ee8c8d8898
|               | `-CXXThisExpr 0x55ee8c8de258 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55ee8c8de2d0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55ee8c8de1b0 <col:19> 'Element *' lvalue ParmVar 0x55ee8c8d8960 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55ee8c8de300 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55ee8c8de2e8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55ee8c8de218 <col:22, col:29> 'String' (CXXTemporary 0x55ee8c8de218)
|               |     `-CXXTemporaryObjectExpr 0x55ee8c8de1e0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55ee8c8de318 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55ee8c8de238 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55ee8c8d89d8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8d8d40 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55ee8c8d8b68 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55ee8c8d8be0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55ee8c8d8c58 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8d8ec8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55ee8c8d8e08 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55ee8c8d90f8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55ee8c8d8f80 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55ee8c8d8ff8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55ee8c8d91f8 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55ee8c8de428 <col:50, line:225:5>
|   `-ReturnStmt 0x55ee8c8de418 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c8de400 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c8de3e0 <col:9> 'const Handler *' lvalue Var 0x55ee8c8db5a0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55ee8c8d9298 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55ee8c8d93a0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8d9f40 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9380 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55ee8c8d9360 <col:11> 'Handler::Flags' EnumConstant 0x55ee8c8d69f0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9430 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8d9f58 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9410 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55ee8c8d93f0 <col:12> 'Handler::Flags' EnumConstant 0x55ee8c8d6a80 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d94c0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8d9f70 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d94a0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55ee8c8d9480 <col:17> 'Handler::Flags' EnumConstant 0x55ee8c8d6b10 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9550 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8d9f88 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9530 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55ee8c8d9510 <col:16> 'Handler::Flags' EnumConstant 0x55ee8c8d6ba0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d95e0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8d9fa0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d95c0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55ee8c8d95a0 <col:19> 'Handler::Flags' EnumConstant 0x55ee8c8d6c30 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9670 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8d9fb8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9650 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55ee8c8d9630 <col:10> 'Handler::Flags' EnumConstant 0x55ee8c8d6cc0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9700 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8d9fd0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d96e0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55ee8c8d96c0 <col:19> 'Handler::Flags' EnumConstant 0x55ee8c8d6d50 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9790 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8d9fe8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9770 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55ee8c8d9750 <col:20> 'Handler::Flags' EnumConstant 0x55ee8c8d6de0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9820 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da000 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9800 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55ee8c8d97e0 <col:17> 'Handler::Flags' EnumConstant 0x55ee8c8d6e70 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d98b0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da018 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9890 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55ee8c8d9870 <col:15> 'Handler::Flags' EnumConstant 0x55ee8c8d6f00 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9940 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da030 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9920 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55ee8c8d9900 <col:11> 'Handler::Flags' EnumConstant 0x55ee8c8d6f90 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d99d0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da048 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d99b0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55ee8c8d9990 <col:16> 'Handler::Flags' EnumConstant 0x55ee8c8d7020 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9a60 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da060 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9a40 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55ee8c8d9a20 <col:13> 'Handler::Flags' EnumConstant 0x55ee8c8d70b0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9af0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da078 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9ad0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55ee8c8d9ab0 <col:15> 'Handler::Flags' EnumConstant 0x55ee8c8d7140 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9b80 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da090 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9b60 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55ee8c8d9b40 <col:20> 'Handler::Flags' EnumConstant 0x55ee8c8d7210 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9c10 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da0a8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9bf0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55ee8c8d9bd0 <col:27> 'Handler::Flags' EnumConstant 0x55ee8c8d72e0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9ca0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da0c0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9c80 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55ee8c8d9c60 <col:22> 'Handler::Flags' EnumConstant 0x55ee8c8d7370 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9d30 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da0d8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9d10 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55ee8c8d9cf0 <col:18> 'Handler::Flags' EnumConstant 0x55ee8c8d7440 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9dc0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da0f0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9da0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55ee8c8d9d80 <col:25> 'Handler::Flags' EnumConstant 0x55ee8c8d74d0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8d9e50 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55ee8c8da108 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8d9e30 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55ee8c8d9e10 <col:26> 'Handler::Flags' EnumConstant 0x55ee8c8d7560 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55ee8c8d9ef0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55ee8c8da120 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8d9ed0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55ee8c8d9ea0 <col:20> 'Handler::Flags' EnumConstant 0x55ee8c8d76f0 'f_special' 'Handler::Flags'
|-EnumDecl 0x55ee8c8da138 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55ee8c8da240 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da7a0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da220 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55ee8c8da200 <col:12> 'Handler::Flags' EnumConstant 0x55ee8c8d69f0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8da2d0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da7b8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da2b0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55ee8c8da290 <col:13> 'Handler::Flags' EnumConstant 0x55ee8c8d6a80 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8da360 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da7d0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da340 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55ee8c8da320 <col:15> 'Handler::Flags' EnumConstant 0x55ee8c8d6b10 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8da3f0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da7e8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da3d0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55ee8c8da3b0 <col:8> 'Handler::Flags' EnumConstant 0x55ee8c8d6cc0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8da480 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da800 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da460 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55ee8c8da440 <col:9> 'Handler::Flags' EnumConstant 0x55ee8c8d6f90 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8da510 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da818 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da4f0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55ee8c8da4d0 <col:14> 'Handler::Flags' EnumConstant 0x55ee8c8d7020 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8da5a0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da830 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da580 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55ee8c8da560 <col:11> 'Handler::Flags' EnumConstant 0x55ee8c8d70b0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8da630 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da848 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da610 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55ee8c8da5f0 <col:13> 'Handler::Flags' EnumConstant 0x55ee8c8d7140 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55ee8c8da6c0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55ee8c8da860 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da6a0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55ee8c8da680 <col:20> 'Handler::Flags' EnumConstant 0x55ee8c8d7370 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55ee8c8da750 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55ee8c8da878 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8da730 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55ee8c8da710 <col:16> 'Handler::Flags' EnumConstant 0x55ee8c8d7440 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55ee8c8da890 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55ee8c8da950 <col:25> "" ""
| |-EnumConstantDecl 0x55ee8c8daa00 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55ee8c8daae0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8da9e0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55ee8c8da9c0 <col:14> 'Handler::Flags' EnumConstant 0x55ee8c8d6ba0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55ee8c8daa90 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55ee8c8daaf8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8daa70 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55ee8c8daa50 <col:17> 'Handler::Flags' EnumConstant 0x55ee8c8d6c30 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55ee8c8dac78 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55ee8c8dab20 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55ee8c8daba0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55ee8c8deae8 <col:70, line:284:5>
|   |-ParenExpr 0x55ee8c8de908 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55ee8c8de8d8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8de608 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8de5d8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55ee8c8de580 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55ee8c8de560 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55ee8c8de530 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55ee8c8de450 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55ee8c8db470
|   |   |   |   |   `-CXXThisExpr 0x55ee8c8de440 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55ee8c8de548 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55ee8c8de510 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55ee8c8de4f0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55ee8c8de4c0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55ee8c8de480 <col:34> 'Handler::Flags' EnumConstant 0x55ee8c8d69f0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55ee8c8de4d8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55ee8c8de4a0 <col:43> 'Handler::Flags' EnumConstant 0x55ee8c8d74d0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55ee8c8de5c0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55ee8c8de5a0 <col:69> 'Handler::Flags' EnumConstant 0x55ee8c8d69f0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55ee8c8de668 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8de648 <col:85> 'int' 0
|   |   `-CallExpr 0x55ee8c8de838 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8de820 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8de800 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8de878 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8de6d8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55ee8c8de890 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8de728 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8de8a8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8de760 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55ee8c8de8c0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8de7e8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8de7d0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8de780 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55ee8c8dead8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55ee8c8deac0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55ee8c8dea90 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c8dea78 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55ee8c8dea58 <col:9, col:38> 'String' (CXXTemporary 0x55ee8c8dea58)
|             `-CallExpr 0x55ee8c8de9f0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55ee8c8de9d8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55ee8c8de968 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55ee8c8daf80
|               |   `-MemberExpr 0x55ee8c8de938 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55ee8c8db048
|               |     `-CXXThisExpr 0x55ee8c8de928 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55ee8c8dea20 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55ee8c8de998 <col:22> 'Element *' lvalue ParmVar 0x55ee8c8dab20 'e' 'Element *'
|               `-ImplicitCastExpr 0x55ee8c8dea38 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55ee8c8de9b8 <col:25> 'void *' lvalue ParmVar 0x55ee8c8daba0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55ee8c8dad28 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55ee8c8dad60 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55ee8c8dadb0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55ee8c8daf00 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55ee8c8daf80 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55ee8c8dbd78 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55ee8c8dbd78
| | `-ParmVarDecl 0x55ee8c8dbe88 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55ee8c8dbf28 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55ee8c8dbf28
| | `-ParmVarDecl 0x55ee8c8dc038 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55ee8c8dc0a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ee8c8dc0a8
| |-CXXMethodDecl 0x55ee8c8dc978 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55ee8c8dc978
| | `-ParmVarDecl 0x55ee8c8dca88 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55ee8c8dcaf8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55ee8c8dcaf8
| | `-ParmVarDecl 0x55ee8c8dcc08 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55ee8cac4838 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55ee8cac4910 <col:5>
|-FieldDecl 0x55ee8c8db048 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55ee8c8db0b0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55ee8c8db1d8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55ee8c8db260 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55ee8c8dc1d8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55ee8c8dc1d8
| | `-ParmVarDecl 0x55ee8c8dc2e8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55ee8c8dc388 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55ee8c8dc388
| | `-ParmVarDecl 0x55ee8c8dc498 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55ee8c8dc508 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ee8c8dc508
| |-CXXMethodDecl 0x55ee8c8dcca8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55ee8c8dcca8
| | `-ParmVarDecl 0x55ee8c8dcdb8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55ee8c8dce28 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55ee8c8dce28
| | `-ParmVarDecl 0x55ee8c8dcf38 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55ee8cac4970 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55ee8cac4a50 <col:5>
|-FieldDecl 0x55ee8c8db328 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55ee8c8db3a8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55ee8c8db410 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55ee8c8db470 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55ee8c8db4d8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55ee8c8db540 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55ee8c8db5a0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55ee8c8db6c0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55ee8c8db618 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55ee8c8dd2f0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55ee8c8dd2d8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55ee8c8dd2c0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55ee8c8dd2a0 <col:30, col:37> 'String' (CXXTemporary 0x55ee8c8dd2a0)
|           `-CXXTemporaryObjectExpr 0x55ee8c8dd268 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55ee8c8db868 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55ee8c8db7a8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55ee8c8db9e8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55ee8c8db920 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55ee8c8dbba8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55ee8c8dbbe8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55ee8c8dbbe8
| `-ParmVarDecl 0x55ee8c8dbcc8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55ee8c8dc618 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55ee8c8dc618
| `-ParmVarDecl 0x55ee8c8dc728 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55ee8c8dc7c8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55ee8c8dc7c8
| `-ParmVarDecl 0x55ee8c8dc8d8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55ee8c8dcfa8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55ee8c8dcfa8
| `-ParmVarDecl 0x55ee8c8dd0b8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55ee8c8dd140 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55ee8c8dd140

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8caac298 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55ee8caac4a8 prev 0x55ee8caac298 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8caad4c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55ee8caad470 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55ee8caad450 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55ee8caad300 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca09b70 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8ca096c0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55ee8ca095d8 'sized_array_memory'
|-FieldDecl 0x55ee8caad5c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55ee8caad610 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8caad648 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55ee8caac540 'void *' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-PointerType 0x55ee8c379ce0 'void *'
|     `-BuiltinType 0x55ee8c3794e0 'void'
|-TypedefDecl 0x55ee8caad6d8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55ee8caad6a0 'void *&'
|   `-SubstTemplateTypeParmType 0x55ee8caac540 'void *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c379ce0 'void *'
|       `-BuiltinType 0x55ee8c3794e0 'void'
|-TypedefDecl 0x55ee8caad798 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55ee8caad760 'void *const &'
|   `-QualType 0x55ee8caac541 'void *const' const
|     `-SubstTemplateTypeParmType 0x55ee8caac540 'void *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c379ce0 'void *'
|         `-BuiltinType 0x55ee8c3794e0 'void'
|-TypedefDecl 0x55ee8caad828 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55ee8caad7f0 'void **'
|   `-SubstTemplateTypeParmType 0x55ee8caac540 'void *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c379ce0 'void *'
|       `-BuiltinType 0x55ee8c3794e0 'void'
|-TypedefDecl 0x55ee8caad8b8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55ee8caad880 'void *const *'
|   `-QualType 0x55ee8caac541 'void *const' const
|     `-SubstTemplateTypeParmType 0x55ee8caac540 'void *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c379ce0 'void *'
|         `-BuiltinType 0x55ee8c3794e0 'void'
|-TypedefDecl 0x55ee8caae4a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55ee8caae450 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55ee8caae430 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55ee8caae3c0 'type'
|     `-SubstTemplateTypeParmType 0x55ee8caae180 'void *' sugar
|       |-TemplateTypeParmType 0x55ee8c64e930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c64e8e0 'T'
|       `-PointerType 0x55ee8c379ce0 'void *'
|         `-BuiltinType 0x55ee8c3794e0 'void'
|-TypedefDecl 0x55ee8caae508 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55ee8caad760 'void *const &'
|   `-QualType 0x55ee8caac541 'void *const' const
|     `-SubstTemplateTypeParmType 0x55ee8caac540 'void *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c379ce0 'void *'
|         `-BuiltinType 0x55ee8c3794e0 'void'
|-TypedefDecl 0x55ee8caae560 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8caae5c8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55ee8caad7f0 'void **'
|   `-SubstTemplateTypeParmType 0x55ee8caac540 'void *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c379ce0 'void *'
|       `-BuiltinType 0x55ee8c3794e0 'void'
|-TypedefDecl 0x55ee8caae630 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55ee8caad880 'void *const *'
|   `-QualType 0x55ee8caac541 'void *const' const
|     `-SubstTemplateTypeParmType 0x55ee8caac540 'void *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c379ce0 'void *'
|         `-BuiltinType 0x55ee8c3794e0 'void'
|-EnumDecl 0x55ee8caae688 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8caae780 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8caae760 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8caae808 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8caaea58 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8caae8c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8caae960 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55ee8caaed18 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55ee8caaec00 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55ee8caaefd8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55ee8caaeec0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55ee8caaf320 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55ee8caaf200 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55ee8caaf630 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55ee8caaf510 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55ee8caaf920 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8caaf768 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8caaf7e0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55ee8caafa78 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55ee8caafb58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caafbb0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caafbf8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55ee8caafca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caafd00 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caafdc8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8caafe78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caafed0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8caaff18 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8caaffc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8cab0020 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cab0068 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8cab0118 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8cab0170 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cab01b8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8cab0268 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8cab02c0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cab02e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8cab0398 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8cab0448 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8cab0608 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8cab04f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8cab0570 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55ee8cab0758 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8cab06c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cab0908 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55ee8cab0810 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8cab09c0 <col:20>
| `-OptimizeNoneAttr 0x55ee8cab0a18 <col:30>
|-CXXMethodDecl 0x55ee8cab0b38 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8cab0a40 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8cab0bf0 <col:20>
| `-OptimizeNoneAttr 0x55ee8cab0c48 <col:30>
|-CXXMethodDecl 0x55ee8cab0d00 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8cab0c70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cab0e48 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8cab0db8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cab23c0 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55ee8cab24e8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55ee8cab25b8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55ee8cab2688 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55ee8cab27c8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8cab2738 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cab2910 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8cab2880 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cab2a58 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8cab29c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8cab2b10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8cab2c10 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8cab2b80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8cab2cc8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8cab2d88 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55ee8cab2e88 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55ee8cab3008 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8cab2f48 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55ee8cab37c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8cab30c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55ee8cab3728 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55ee8cab3628 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55ee8cab38a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8cab39f8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8cab3968 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55ee8cab3ab0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8cab3cf8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8cab3b70 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55ee8cab3be8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55ee8cab3eb8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55ee8cab3dc8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55ee8cab4108 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55ee8cab3f80 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55ee8cab3ff8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55ee8cab41c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8cab4428 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55ee8cab4330 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55ee8cab44f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8cab44f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8cab46f0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55ee8cab4808 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55ee8cab4898 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55ee8cab49a0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55ee8cab49f0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8cab4980 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55ee8cab4960 <col:27> 'int' 4096
|-FieldDecl 0x55ee8cab4a18 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55ee8cab4a80 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55ee8cab4c78 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55ee8cab4d08 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55ee8cab4ec8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55ee8cab4d68 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55ee8cab4de0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55ee8cab4a18 'name' 'String'
| | `-CXXConstructExpr 0x55ee8cabf898 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55ee8cabf858 <col:20> 'const String' lvalue ParmVar 0x55ee8cab4d68 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55ee8cab4a80 'nsig' 'int'
| | `-IntegerLiteral 0x55ee8cabf8f0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8cab4c78 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55ee8cabf9d8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55ee8cab4d08 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55ee8cabf998 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55ee8cabf958 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55ee8cab4de0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55ee8cabfc68 <col:42, line:289:9>
|   `-CallExpr 0x55ee8cabfc18 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55ee8cabfc00 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55ee8cabfbe0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55ee8c5ddfc8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55ee8cabfc50 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55ee8cabfb28 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55ee8cabfb08 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55ee8cabfaf0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ee8cabfaa0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55ee8cab4c78
|     |     |   `-CXXThisExpr 0x55ee8cabfa90 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55ee8cabfad0 <col:25> 'int' 0
|     |-IntegerLiteral 0x55ee8cabfb40 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55ee8cabfbc0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55ee8cabfba0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55ee8cabfb70 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55ee8cab4c78 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55ee8cabfb60 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55ee8cab4fa8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55ee8cab4fa8
| `-ParmVarDecl 0x55ee8cab50b8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55ee8cab5158 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55ee8cab5158
| `-ParmVarDecl 0x55ee8cab5268 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55ee8cab5308 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55ee8cab5308
| `-ParmVarDecl 0x55ee8cab5418 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55ee8cab5488 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55ee8cab5488
| `-ParmVarDecl 0x55ee8cab5598 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55ee8cab5620 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55ee8cab5620

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8ca70c30 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8ca70d48 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55ee8ca70dd8 <col:21, col:27> col:21 public
|-EnumDecl 0x55ee8ca70e00 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55ee8ca70f18 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55ee8ca70ef8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55ee8ca70ee0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ee8ca70ec0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55ee8ca70fc0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55ee8ca70fa0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55ee8ca70f88 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55ee8ca70f68 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55ee8ca71070 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55ee8ca715a8 <col:19, col:21>
|-CXXDestructorDecl 0x55ee8ca71160 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55ee8ca715b8 <col:28, col:30>
|-CXXMethodDecl 0x55ee8ca71320 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55ee8ca71250 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55ee8ca71428 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55ee8ca71428
  `-ParmVarDecl 0x55ee8ca71538 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class NameDB *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameInfo
         0 |   class Vector<class NameDB *> _namedb_roots
         0 |     class vector_memory<class sized_array_memory<8> > vm_
         0 |       vector_memory<class sized_array_memory<8> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   class Vector<class NameDB *> _namedbs
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8cac94a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'NameDB *'
|-CXXRecordDecl 0x55ee8cac96a8 prev 0x55ee8cac94a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8caca6c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<NameDB *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55ee8caca670 'typename array_memory<NameDB *>::type' sugar
|   `-TypedefType 0x55ee8caca650 'conditional<true, sized_array_memory<8>, typed_array_memory<NameDB *> >::type' sugar
|     |-Typedef 0x55ee8caca500 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca09b70 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8ca096c0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55ee8ca095d8 'sized_array_memory'
|-FieldDecl 0x55ee8caca7c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<NameDB *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55ee8caca810 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8caca848 <line:118:5, col:15> col:15 value_type 'NameDB *':'NameDB *'
| `-SubstTemplateTypeParmType 0x55ee8cac9740 'NameDB *' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-PointerType 0x55ee8cac7630 'NameDB *'
|     `-RecordType 0x55ee8cac4dc0 'NameDB'
|       `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-TypedefDecl 0x55ee8caca908 <line:119:5, col:16> col:16 reference 'NameDB *&'
| `-LValueReferenceType 0x55ee8caca8d0 'NameDB *&'
|   `-SubstTemplateTypeParmType 0x55ee8cac9740 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8cac7630 'NameDB *'
|       `-RecordType 0x55ee8cac4dc0 'NameDB'
|         `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-TypedefDecl 0x55ee8caca9c8 <line:120:5, col:22> col:22 const_reference 'NameDB *const &'
| `-LValueReferenceType 0x55ee8caca990 'NameDB *const &'
|   `-QualType 0x55ee8cac9741 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55ee8cac9740 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8cac7630 'NameDB *'
|         `-RecordType 0x55ee8cac4dc0 'NameDB'
|           `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-TypedefDecl 0x55ee8cacaa88 <line:121:5, col:16> col:16 pointer 'NameDB **'
| `-PointerType 0x55ee8cacaa50 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55ee8cac9740 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8cac7630 'NameDB *'
|       `-RecordType 0x55ee8cac4dc0 'NameDB'
|         `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-TypedefDecl 0x55ee8cacab48 <line:122:5, col:22> col:22 const_pointer 'NameDB *const *'
| `-PointerType 0x55ee8cacab10 'NameDB *const *'
|   `-QualType 0x55ee8cac9741 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55ee8cac9740 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8cac7630 'NameDB *'
|         `-RecordType 0x55ee8cac4dc0 'NameDB'
|           `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-TypedefDecl 0x55ee8cacb720 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<NameDB *>::type':'NameDB *'
| `-ElaboratedType 0x55ee8cacb6d0 'typename fast_argument<NameDB *>::type' sugar
|   `-TypedefType 0x55ee8cacb6b0 'fast_argument<NameDB *, false>::type' sugar
|     |-Typedef 0x55ee8cacb640 'type'
|     `-SubstTemplateTypeParmType 0x55ee8cacb400 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55ee8c64e930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c64e8e0 'T'
|       `-PointerType 0x55ee8cac7630 'NameDB *'
|         `-RecordType 0x55ee8cac4dc0 'NameDB'
|           `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-TypedefDecl 0x55ee8cacb788 <line:126:5, col:22> col:22 const_access_type 'NameDB *const &'
| `-LValueReferenceType 0x55ee8caca990 'NameDB *const &'
|   `-QualType 0x55ee8cac9741 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55ee8cac9740 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8cac7630 'NameDB *'
|         `-RecordType 0x55ee8cac4dc0 'NameDB'
|           `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-TypedefDecl 0x55ee8cacb7e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8cacb848 <line:130:5, col:16> col:16 iterator 'NameDB **'
| `-PointerType 0x55ee8cacaa50 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55ee8cac9740 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8cac7630 'NameDB *'
|       `-RecordType 0x55ee8cac4dc0 'NameDB'
|         `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-TypedefDecl 0x55ee8cacb8b0 <line:131:5, col:22> col:22 const_iterator 'NameDB *const *'
| `-PointerType 0x55ee8cacab10 'NameDB *const *'
|   `-QualType 0x55ee8cac9741 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55ee8cac9740 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8cac7630 'NameDB *'
|         `-RecordType 0x55ee8cac4dc0 'NameDB'
|           `-CXXRecord 0x55ee8cad0e08 'NameDB'
|-EnumDecl 0x55ee8cacb908 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8cacba00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<NameDB *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8cacb9e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8cacba88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8cacbd18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8cacbb40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8cacbbe0 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXConstructorDecl 0x55ee8cacbfd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55ee8cacbec0 <col:19, col:36> col:36 x 'const Vector<NameDB *> &'
|-CXXConstructorDecl 0x55ee8cacc298 <line:141:5, col:32> col:12 Vector 'void (Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55ee8cacc180 <col:19, col:31> col:31 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55ee8cacc5e0 <line:144:5, col:51> col:23 operator= 'Vector<NameDB *> &(const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55ee8cacc4c0 <col:33, col:50> col:50 x 'const Vector<NameDB *> &'
|-CXXMethodDecl 0x55ee8cacc8f0 <line:146:5, col:46> col:23 operator= 'Vector<NameDB *> &(Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55ee8cacc7d0 <col:33, col:45> col:45 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55ee8caccbe0 <line:148:5, col:70> col:23 assign 'Vector<NameDB *> &(Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8cacca28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8caccaa0 <col:43, col:69> col:63 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55ee8caccd38 <line:150:5, col:55> col:49 begin 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55ee8cacce18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8cacce70 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cacceb8 <line:151:5, col:53> col:49 end 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55ee8caccf68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8caccfc0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cacd088 <line:152:5, col:63> col:55 begin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8cacd138 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8cacd190 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cacd1d8 <line:153:5, col:61> col:55 end 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8cacd288 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8cacd2e0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cacd328 <line:154:5, col:64> col:55 cbegin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8cacd3d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8cacd430 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cacd478 <line:155:5, col:62> col:55 cend 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8cacd528 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8cacd580 <col:30> Inherited
|-CXXMethodDecl 0x55ee8cacd5a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8cacd658 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8cacd708 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8cacd8c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8cacd7b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8cacd830 <col:37, col:63> col:57 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55ee8cacda18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8cacd988 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cacdbc8 <line:163:5, col:65> col:43 operator[] 'NameDB *&(Vector::size_type)'
| |-ParmVarDecl 0x55ee8cacdad0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8cacdc80 <col:20>
| `-OptimizeNoneAttr 0x55ee8cacdcd8 <col:30>
|-CXXMethodDecl 0x55ee8cacddf8 <line:164:5, col:73> col:49 operator[] 'NameDB *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8cacdd00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8cacdeb0 <col:20>
| `-OptimizeNoneAttr 0x55ee8cacdf08 <col:30>
|-CXXMethodDecl 0x55ee8cacdfc0 <line:165:5, col:29> col:15 at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8cacdf30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cace108 <line:166:5, col:37> col:21 at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8cace078 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cace238 <line:167:5, col:21> col:15 front 'NameDB *&()' inline
|-CXXMethodDecl 0x55ee8cace368 <line:168:5, col:29> col:21 front 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55ee8cace438 <line:169:5, col:20> col:15 back 'NameDB *&()' inline
|-CXXMethodDecl 0x55ee8cace508 <line:170:5, col:28> col:21 back 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55ee8cace648 <line:172:5, col:39> col:15 unchecked_at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8cace5b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cace790 <line:173:5, col:47> col:21 unchecked_at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8cace700 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8cace8d8 <line:174:5, col:59> col:15 at_u 'NameDB *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8cace848 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8cace990 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8caceab0 <line:175:5, col:71> col:21 at_u 'NameDB *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8cacea20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8caceb68 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8cacec28 <line:177:5, col:20> col:15 data 'NameDB **()' inline
|-CXXMethodDecl 0x55ee8caced28 <line:178:5, col:28> col:21 data 'NameDB *const *() const' inline
|-CXXMethodDecl 0x55ee8caceea8 <line:180:5, col:48> col:17 push_back 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8cacede8 <col:27, col:47> col:47 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-FunctionTemplateDecl 0x55ee8cacf668 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8cacef60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<NameDB *>':'fast_argument<NameDB *, false>'
| `-CXXMethodDecl 0x55ee8cacf5c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (NameDB *&&)' inline
|   `-ParmVarDecl 0x55ee8cacf4c8 <col:58, col:62> col:62 v 'NameDB *&&'
|-CXXMethodDecl 0x55ee8cacf748 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8cacf898 <line:186:5, col:49> col:17 push_front 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8cacf808 <col:28, col:48> col:48 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55ee8cacf950 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8cacfb98 <line:189:5, col:62> col:21 insert 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8cacfa10 <col:28, col:37> col:37 it 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55ee8cacfa88 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55ee8cacfd58 <line:190:5, col:38> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator)' inline
| `-ParmVarDecl 0x55ee8cacfc68 <col:27, col:36> col:36 it 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55ee8cacffa8 <line:191:5, col:49> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::iterator)' inline
| |-ParmVarDecl 0x55ee8cacfe20 <col:27, col:36> col:36 a 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55ee8cacfe98 <col:39, col:48> col:48 b 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55ee8cad0068 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8cad02c8 <line:195:5, col:34> col:17 swap 'void (Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55ee8cad01d0 <col:22, col:33> col:33 x 'Vector<NameDB *> &'
`-CXXDestructorDecl 0x55ee8cad0398 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8cad0398

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8cac4e70 prev 0x55ee8ca71ab0 <../dummy_inc/click/nameinfo.hh:11:1, line:243:1> line:11:7 referenced class NameInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8cac4f68 <col:1, col:7> col:7 implicit referenced class NameInfo
|-AccessSpecDecl 0x55ee8cac4ff8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55ee8cac5058 <line:16:5, col:14> col:5 NameInfo 'void ()'
|-CXXDestructorDecl 0x55ee8cac5148 <line:23:5, col:15> col:5 ~NameInfo 'void ()' noexcept-unevaluated 0x55ee8cac5148
|-CXXMethodDecl 0x55ee8cac5250 <line:29:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55ee8cac5310 <line:35:5, col:32> col:17 static_cleanup 'void ()' static
|-EnumDecl 0x55ee8cac53b0 <line:38:5, line:63:5> line:38:10 DBType
| |-EnumConstantDecl 0x55ee8cac54b0 <line:39:2, col:11> col:2 T_NONE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7210 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac5490 <col:11> 'int' Int: 0
| |     `-IntegerLiteral 0x55ee8cac5470 <col:11> 'int' 0
| |-EnumConstantDecl 0x55ee8cac5540 <line:40:2, col:19> col:2 T_SCHEDULEINFO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7228 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac5520 <col:19> 'int' Int: 1
| |     `-IntegerLiteral 0x55ee8cac5500 <col:19> 'int' 1
| |-EnumConstantDecl 0x55ee8cac55d0 <line:41:2, col:17> col:2 T_ANNOTATION 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7240 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac55b0 <col:17> 'int' Int: 2
| |     `-IntegerLiteral 0x55ee8cac5590 <col:17> 'int' 2
| |-EnumConstantDecl 0x55ee8cac5660 <line:42:2, col:18> col:2 T_SCRIPT_INSN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7258 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac5640 <col:18> 'int' Int: 3
| |     `-IntegerLiteral 0x55ee8cac5620 <col:18> 'int' 3
| |-EnumConstantDecl 0x55ee8cac56f0 <line:43:2, col:12> col:2 T_SIGNO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7270 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac56d0 <col:12> 'int' Int: 4
| |     `-IntegerLiteral 0x55ee8cac56b0 <col:12> 'int' 4
| |-EnumConstantDecl 0x55ee8cac5780 <line:44:2, col:15> col:2 T_SPINLOCK 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7288 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac5760 <col:15> 'int' Int: 5
| |     `-IntegerLiteral 0x55ee8cac5740 <col:15> 'int' 5
| |-EnumConstantDecl 0x55ee8cac5810 <line:45:2, col:20> col:2 T_ETHERNET_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac72a0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac57f0 <col:20> 'int' Int: 16777217
| |     `-IntegerLiteral 0x55ee8cac57d0 <col:20> 'int' 16777217
| |-EnumConstantDecl 0x55ee8cac58a0 <line:46:2, col:14> col:2 T_IP_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac72b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac5880 <col:14> 'int' Int: 67108865
| |     `-IntegerLiteral 0x55ee8cac5860 <col:14> 'int' 67108865
| |-EnumConstantDecl 0x55ee8cac5930 <line:47:2, col:16> col:2 T_IP_PREFIX 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac72d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac5910 <col:16> 'int' Int: 67108866
| |     `-IntegerLiteral 0x55ee8cac58f0 <col:16> 'int' 67108866
| |-EnumConstantDecl 0x55ee8cac69e0 <line:48:2, col:15> col:2 T_IP_PROTO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac72e8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac59a0 <col:15> 'int' Int: 67108867
| |     `-IntegerLiteral 0x55ee8cac5980 <col:15> 'int' 67108867
| |-EnumConstantDecl 0x55ee8cac6a70 <line:49:2, col:20> col:2 T_IPFILTER_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7300 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6a50 <col:20> 'int' Int: 67108868
| |     `-IntegerLiteral 0x55ee8cac6a30 <col:20> 'int' 67108868
| |-EnumConstantDecl 0x55ee8cac6b00 <line:50:2, col:14> col:2 T_TCP_OPT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7318 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6ae0 <col:14> 'int' Int: 67108869
| |     `-IntegerLiteral 0x55ee8cac6ac0 <col:14> 'int' 67108869
| |-EnumConstantDecl 0x55ee8cac6b90 <line:51:2, col:25> col:2 T_IPREWRITER_PATTERN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7330 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6b70 <col:25> 'int' Int: 67108870
| |     `-IntegerLiteral 0x55ee8cac6b50 <col:25> 'int' 67108870
| |-EnumConstantDecl 0x55ee8cac6c20 <line:52:2, col:16> col:2 T_ICMP_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7348 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6c00 <col:16> 'int' Int: 67174400
| |     `-IntegerLiteral 0x55ee8cac6be0 <col:16> 'int' 67174400
| |-EnumConstantDecl 0x55ee8cac6cb0 <line:53:2, col:16> col:2 T_ICMP_CODE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7360 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6c90 <col:16> 'int' Int: 67174656
| |     `-IntegerLiteral 0x55ee8cac6c70 <col:16> 'int' 67174656
| |-EnumConstantDecl 0x55ee8cac6d40 <line:54:2, col:14> col:2 T_IP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7378 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6d20 <col:14> 'int' Int: 67239936
| |     `-IntegerLiteral 0x55ee8cac6d00 <col:14> 'int' 67239936
| |-EnumConstantDecl 0x55ee8cac6dd0 <line:55:2, col:15> col:2 T_TCP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7390 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6db0 <col:15> 'int' Int: 67239942
| |     `-IntegerLiteral 0x55ee8cac6d90 <col:15> 'int' 67239942
| |-EnumConstantDecl 0x55ee8cac6e60 <line:56:2, col:15> col:2 T_UDP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac73a8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6e40 <col:15> 'int' Int: 67239953
| |     `-IntegerLiteral 0x55ee8cac6e20 <col:15> 'int' 67239953
| |-EnumConstantDecl 0x55ee8cac6ef0 <line:57:2, col:19> col:2 T_IP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac73c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6ed0 <col:19> 'int' Int: 67305472
| |     `-IntegerLiteral 0x55ee8cac6eb0 <col:19> 'int' 67305472
| |-EnumConstantDecl 0x55ee8cac6f80 <line:58:2, col:21> col:2 T_ICMP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac73d8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6f60 <col:21> 'int' Int: 67305473
| |     `-IntegerLiteral 0x55ee8cac6f40 <col:21> 'int' 67305473
| |-EnumConstantDecl 0x55ee8cac7010 <line:59:2, col:20> col:2 T_TCP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac73f0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac6ff0 <col:20> 'int' Int: 67305478
| |     `-IntegerLiteral 0x55ee8cac6fd0 <col:20> 'int' 67305478
| |-EnumConstantDecl 0x55ee8cac70a0 <line:60:2, col:20> col:2 T_UDP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7408 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac7080 <col:20> 'int' Int: 67305489
| |     `-IntegerLiteral 0x55ee8cac7060 <col:20> 'int' 67305489
| |-EnumConstantDecl 0x55ee8cac7130 <line:61:2, col:15> col:2 T_IP6_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55ee8cac7420 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8cac7110 <col:15> 'int' Int: 100663297
| |     `-IntegerLiteral 0x55ee8cac70f0 <col:15> 'int' 100663297
| `-EnumConstantDecl 0x55ee8cac71c0 <line:62:2, col:17> col:2 T_IP6_PREFIX 'NameInfo::DBType'
|   `-ImplicitCastExpr 0x55ee8cac7438 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8cac71a0 <col:17> 'int' Int: 100663298
|       `-IntegerLiteral 0x55ee8cac7180 <col:17> 'int' 100663298
|-CXXMethodDecl 0x55ee8cac7738 <line:85:5, line:86:35> line:85:20 used getdb 'NameDB *(uint32_t, const Element *, size_t, bool)' static
| |-ParmVarDecl 0x55ee8cac7460 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cac74d8 <col:41, col:56> col:56 context 'const Element *'
| |-ParmVarDecl 0x55ee8cac7550 <line:86:5, col:12> col:12 value_size 'size_t':'unsigned long'
| `-ParmVarDecl 0x55ee8cac75c8 <col:24, col:29> col:29 create 'bool'
|-CXXMethodDecl 0x55ee8cac7958 <line:104:5, col:61> col:17 installdb 'void (NameDB *, const Element *)' static
| |-ParmVarDecl 0x55ee8cac7808 <col:27, col:35> col:35 db 'NameDB *'
| `-ParmVarDecl 0x55ee8cac7880 <col:39, col:54> col:54 context 'const Element *'
|-CXXMethodDecl 0x55ee8cac7ad8 <line:112:5, col:39> col:17 used uninstalldb 'void (NameDB *)' static
| `-ParmVarDecl 0x55ee8cac7a18 <col:29, col:37> col:37 db 'NameDB *'
|-CXXMethodDecl 0x55ee8cac7ec8 <line:127:5, line:128:65> line:127:17 used query 'bool (uint32_t, const Element *, const String &, void *, size_t)' static
| |-ParmVarDecl 0x55ee8cac7b90 <col:23, col:32> col:32 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cac7c08 <col:38, col:53> col:53 context 'const Element *'
| |-ParmVarDecl 0x55ee8cac7c80 <line:128:9, col:23> col:23 name 'const String &'
| |-ParmVarDecl 0x55ee8cac7d00 <col:29, col:35> col:35 value_store 'void *'
| `-ParmVarDecl 0x55ee8cac7d78 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55ee8cac8248 <line:147:5, line:148:46> line:147:17 query_int 'bool (uint32_t, const Element *, const String &, int32_t *)' static
| |-ParmVarDecl 0x55ee8cac7fa0 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cac8018 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55ee8cac8090 <line:148:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55ee8cac8108 <col:26, col:35> col:35 value_store 'int32_t *'
|-CXXMethodDecl 0x55ee8cac85c8 <line:151:5, line:152:47> line:151:17 query_int 'bool (uint32_t, const Element *, const String &, uint32_t *)' static
| |-ParmVarDecl 0x55ee8cac8318 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cac8390 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55ee8cac8408 <line:152:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55ee8cac8480 <col:26, col:36> col:36 value_store 'uint32_t *'
|-CXXMethodDecl 0x55ee8cac8948 <line:167:5, line:168:43> line:167:19 used revquery 'String (uint32_t, const Element *, const void *, size_t)' static
| |-ParmVarDecl 0x55ee8cac8698 <col:28, col:37> col:37 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cac8710 <col:43, col:58> col:58 context 'const Element *'
| |-ParmVarDecl 0x55ee8cac8790 <line:168:7, col:19> col:19 value 'const void *'
| `-ParmVarDecl 0x55ee8cac8808 <col:26, col:33> col:33 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55ee8cac8c28 <line:182:5, line:183:24> line:182:26 revquery_int 'String (uint32_t, const Element *, int32_t)' static inline
| |-ParmVarDecl 0x55ee8cac8a18 <col:39, col:48> col:48 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cac8a90 <col:54, col:69> col:69 context 'const Element *'
| `-ParmVarDecl 0x55ee8cac8b08 <line:183:11, col:19> col:19 value 'int32_t':'int'
|-CXXMethodDecl 0x55ee8cac9028 <line:202:5, line:203:66> line:202:24 define 'bool (uint32_t, const Element *, const String &, const void *, size_t)' static inline
| |-ParmVarDecl 0x55ee8cac8cf0 <col:31, col:40> col:40 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cac8d68 <col:46, col:61> col:61 context 'const Element *'
| |-ParmVarDecl 0x55ee8cac8de0 <line:203:10, col:24> col:24 name 'const String &'
| |-ParmVarDecl 0x55ee8cac8e60 <col:30, col:42> col:42 value 'const void *'
| `-ParmVarDecl 0x55ee8cac8ed8 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55ee8cac93a8 <line:220:5, line:221:40> line:220:24 define_int 'bool (uint32_t, const Element *, const String &, int32_t)' static inline
| |-ParmVarDecl 0x55ee8cac9100 <col:35, col:44> col:44 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cac9178 <col:50, col:65> col:65 context 'const Element *'
| |-ParmVarDecl 0x55ee8cac91f0 <line:221:7, col:21> col:21 name 'const String &'
| `-ParmVarDecl 0x55ee8cac9268 <col:27, col:35> col:35 value 'int32_t':'int'
|-AccessSpecDecl 0x55ee8cac9468 <line:230:3, col:10> col:3 private
|-FieldDecl 0x55ee8cad0480 <line:232:5, col:22> col:22 _namedb_roots 'Vector<NameDB *>':'Vector<NameDB *>'
|-FieldDecl 0x55ee8cad0580 <line:233:5, col:22> col:22 _namedbs 'Vector<NameDB *>':'Vector<NameDB *>'
|-CXXMethodDecl 0x55ee8cad0618 <line:235:5, col:73> col:20 install_dynamic_sentinel 'NameDB *()' inline
| `-CompoundStmt 0x55ee8cad0df0 <col:47, col:73>
|   `-ReturnStmt 0x55ee8cad0de0 <col:49, col:67>
|     `-CStyleCastExpr 0x55ee8cad0db8 <col:56, col:67> 'NameDB *' <BitCast>
|       `-CXXThisExpr 0x55ee8cad0d98 <col:67> 'NameInfo *' this
|-CXXMethodDecl 0x55ee8cad0978 <line:236:5, col:87> col:13 namedb 'NameDB *(uint32_t, size_t, const String &, NameDB *)'
| |-ParmVarDecl 0x55ee8cad06c8 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8cad0740 <col:35, col:42> col:42 size 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ee8cad07b8 <col:48, col:62> col:62 prefix 'const String &'
| `-ParmVarDecl 0x55ee8cad0830 <col:70, col:78> col:78 installer 'NameDB *'
|-CXXConstructorDecl 0x55ee8cad0a68 <line:11:7> col:7 implicit NameInfo 'void (const NameInfo &)' inline default noexcept-unevaluated 0x55ee8cad0a68
| `-ParmVarDecl 0x55ee8cad0b78 <col:7> col:7 'const NameInfo &'
`-CXXMethodDecl 0x55ee8cad0c18 <col:7> col:7 implicit operator= 'NameInfo &(const NameInfo &)' inline default noexcept-unevaluated 0x55ee8cad0c18
  `-ParmVarDecl 0x55ee8cad0d28 <col:7> col:7 'const NameInfo &'

Layout: <CGRecordLayout
  LLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  NonVirtualBaseLLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8ca71b60 prev 0x55ee8ca44d30 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55ee8ca71c58 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55ee8ca71ce8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55ee8ca71d58 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55ee8ca71e18 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca71ed8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca71f98 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca72058 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55ee8ca720f8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55ee8ca72258 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55ee8ca72238 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55ee8ca72218 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55ee8ca721e0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55ee8ca721c0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55ee8ca721f8 <col:42> 'int' 1
|-CXXMethodDecl 0x55ee8ca722f8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55ee8ca72468 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55ee8ca723a8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55ee8ca725b0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55ee8ca72520 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55ee8ca72678 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55ee8ca729a0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55ee8ca72a68 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55ee8ca737f8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55ee8ca73730 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55ee8ca738c0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55ee8ca73ac8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55ee8ca73970 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55ee8ca739f0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55ee8ca73c20 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55ee8ca73b90 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55ee8ca73d70 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55ee8ca73ce0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55ee8ca73ec0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55ee8ca73e30 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55ee8ca74010 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55ee8ca73f80 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55ee8ca741e0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55ee8ca740d0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55ee8ca74148 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55ee8ca743e8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55ee8ca742a0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55ee8ca74318 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ee8cab8ec0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8cab8ea0 <col:60> 'int' 0
|-CXXMethodDecl 0x55ee8ca74678 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55ee8ca744a8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55ee8ca74520 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55ee8ca74598 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ee8cab8ef8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8cab8ed8 <col:76> 'int' 0
|-CXXMethodDecl 0x55ee8ca74918 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55ee8ca74740 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55ee8ca747b8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55ee8ca74830 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ee8cab8f30 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8cab8f10 <col:84> 'int' 0
|-CXXMethodDecl 0x55ee8ca74c70 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55ee8ca749e0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55ee8ca74a58 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55ee8ca74ad8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55ee8ca74b78 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55ee8ca74f20 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55ee8ca74d40 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55ee8ca74dc0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55ee8ca74e38 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55ee8ca75188 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55ee8ca74fe8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55ee8ca75068 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55ee8ca750e0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55ee8ca75640 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55ee8ca75250 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55ee8ca752d0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55ee8ca75378 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55ee8ca754f0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55ee8ca75700 <col:115> "" ""
|-CXXMethodDecl 0x55ee8ca75ac0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55ee8ca75780 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55ee8ca75800 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55ee8ca75878 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55ee8ca759c0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55ee8ca75b80 <col:113> "" ""
|-CXXMethodDecl 0x55ee8ca75cd0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55ee8ca75c08 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55ee8ca75ea0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55ee8ca75d90 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55ee8ca75e08 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55ee8ca760a8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55ee8ca75f60 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55ee8ca75fd8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55ee8ca764a8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55ee8ca76168 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55ee8ca761e0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55ee8ca76258 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55ee8ca762d8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55ee8ca76350 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8cab8f68 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8cab8f48 <col:137> 'int' 0
|-CXXMethodDecl 0x55ee8ca768b8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55ee8ca76580 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55ee8ca765f8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55ee8ca76670 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8ca766f0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55ee8ca76768 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8cab8fa0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8cab8f80 <col:139> 'int' 0
|-CXXMethodDecl 0x55ee8ca76d68 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55ee8ca76990 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55ee8ca76a08 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55ee8ca76a80 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8ca76af8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8ca76b78 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55ee8cab8fd8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8cab8fb8 <col:133> 'int' 0
| `-ParmVarDecl 0x55ee8ca76bf8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55ee8cab9010 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8cab8ff0 <col:160> 'int' 0
|-CXXMethodDecl 0x55ee8ca77100 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55ee8ca76e48 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55ee8ca76ec0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55ee8ca76f38 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ee8ca76fb0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8cab9048 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8cab9028 <col:116> 'int' 0
|-EnumDecl 0x55ee8ca771c0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55ee8ca772c0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55ee8ca77310 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8ca772a0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55ee8ca77280 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55ee8ca77490 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55ee8ca77338 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55ee8ca773b0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55ee8ca776a8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55ee8ca77550 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55ee8ca775d0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55ee8ca779d8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55ee8ca77768 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55ee8ca778c0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55ee8ca77b60 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55ee8ca77a98 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55ee8ca77ce0 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55ee8ca77c18 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55ee8ca77ef0 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55ee8ca77d98 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55ee8ca77e18 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55ee8ca78078 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55ee8ca77fb0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55ee8ca78198 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55ee8ca78288 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55ee8ca783f8 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55ee8ca78338 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55ee8ca78580 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55ee8ca784b0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55ee8ca78788 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55ee8ca78638 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55ee8ca786b8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55ee8ca788b8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55ee8ca789a8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55ee8ca78a68 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55ee8ca78c68 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55ee8ca78b18 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55ee8ca78b90 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55ee8cab90f8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55ee8cab90e0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55ee8cab90c8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55ee8cab90a8 <col:58, col:65> 'String' (CXXTemporary 0x55ee8cab90a8)
|           `-CXXTemporaryObjectExpr 0x55ee8cab9070 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55ee8ca78e38 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55ee8ca78d28 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55ee8ca78da0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55ee8cab91a8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55ee8cab9190 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55ee8cab9178 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55ee8cab9158 <col:71, col:78> 'String' (CXXTemporary 0x55ee8cab9158)
|           `-CXXTemporaryObjectExpr 0x55ee8cab9120 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55ee8ca79008 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55ee8ca78ef8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55ee8ca78f70 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55ee8cab9258 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55ee8cab9240 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55ee8cab9228 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55ee8cab9208 <col:71, col:78> 'String' (CXXTemporary 0x55ee8cab9208)
|           `-CXXTemporaryObjectExpr 0x55ee8cab91d0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55ee8ca791d8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55ee8ca790c8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55ee8ca79140 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55ee8cab9308 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55ee8cab92f0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55ee8cab92d8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55ee8cab92b8 <col:70, col:77> 'String' (CXXTemporary 0x55ee8cab92b8)
|           `-CXXTemporaryObjectExpr 0x55ee8cab9280 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55ee8ca79358 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55ee8ca79298 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55ee8ca79578 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55ee8ca79410 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55ee8ca79488 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55ee8ca79678 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55ee8ca79678
|-CXXMethodDecl 0x55ee8ca79780 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55ee8ca79840 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55ee8ca79900 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55ee8ca799c0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55ee8ca79bb8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55ee8ca79a70 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55ee8ca79ae8 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55ee8ca79f70 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55ee8ca79c78 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55ee8ca79cf0 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55ee8ca79d68 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55ee8ca79de0 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55ee8ca79e60 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55ee8ca7a2d0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55ee8ca7a050 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55ee8ca7a0d0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55ee8ca7a150 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55ee8ca7a1d0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55ee8ca7a3b0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55ee8ca7a4f0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55ee8ca7a460 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55ee8ca7a640 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55ee8ca7a5a8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8ca7a848 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8ca7a6f8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55ee8ca7a770 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8ca7a998 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55ee8ca7a908 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8ca7aae0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55ee8ca7aa50 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55ee8ca7ad20 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55ee8ca7aba0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55ee8ca7ac48 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55ee8ca7aea8 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55ee8ca7ade0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55ee8ca7af50 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ee8ca7b068 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55ee8ca7b110 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55ee8ca7b178 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55ee8ca7b230 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55ee8cab9330 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55ee8ca7b408 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55ee8ca7b2f0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55ee8ca7b370 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55ee8ca7b110 'idx' 'int'
| | | `-ImplicitCastExpr 0x55ee8cab9380 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55ee8cab9340 <col:19> 'int' lvalue ParmVar 0x55ee8ca7b2f0 'i' 'int'
| | |-CXXCtorInitializer Field 0x55ee8ca7b178 'port' 'int'
| | | `-ImplicitCastExpr 0x55ee8cab9400 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55ee8cab93c0 <col:28> 'int' lvalue ParmVar 0x55ee8ca7b370 'p' 'int'
| | `-CompoundStmt 0x55ee8cab9450 <col:31, line:153:9>
| |-CXXMethodDecl 0x55ee8ca7b5e8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55ee8ca7b4f8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55ee8cab9650 <col:46, line:157:9>
| |   `-ReturnStmt 0x55ee8cab9640 <line:156:13, col:46>
| |     `-BinaryOperator 0x55ee8cab9620 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55ee8cab9520 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55ee8cab94f0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55ee8cab9470 <col:20> 'const int' lvalue ->idx 0x55ee8ca7b110
| |       | |   `-CXXThisExpr 0x55ee8cab9460 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55ee8cab9508 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55ee8cab94c0 <col:27, col:29> 'const int' lvalue .idx 0x55ee8ca7b110
| |       |     `-DeclRefExpr 0x55ee8cab94a0 <col:27> 'const Router::Port' lvalue ParmVar 0x55ee8ca7b4f8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55ee8cab9600 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55ee8cab95d0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55ee8cab9550 <col:36> 'const int' lvalue ->port 0x55ee8ca7b178
| |         |   `-CXXThisExpr 0x55ee8cab9540 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55ee8cab95e8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55ee8cab95a0 <col:44, col:46> 'const int' lvalue .port 0x55ee8ca7b178
| |             `-DeclRefExpr 0x55ee8cab9580 <col:44> 'const Router::Port' lvalue ParmVar 0x55ee8ca7b4f8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55ee8ca7eef0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55ee8ca7b6a0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55ee8cab9858 <col:46, line:160:9>
| |   `-ReturnStmt 0x55ee8cab9848 <line:159:13, col:46>
| |     `-BinaryOperator 0x55ee8cab9828 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55ee8cab9728 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55ee8cab96f8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55ee8cab9678 <col:20> 'const int' lvalue ->idx 0x55ee8ca7b110
| |       | |   `-CXXThisExpr 0x55ee8cab9668 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55ee8cab9710 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55ee8cab96c8 <col:27, col:29> 'const int' lvalue .idx 0x55ee8ca7b110
| |       |     `-DeclRefExpr 0x55ee8cab96a8 <col:27> 'const Router::Port' lvalue ParmVar 0x55ee8ca7b6a0 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55ee8cab9808 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55ee8cab97d8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55ee8cab9758 <col:36> 'const int' lvalue ->port 0x55ee8ca7b178
| |         |   `-CXXThisExpr 0x55ee8cab9748 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55ee8cab97f0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55ee8cab97a8 <col:44, col:46> 'const int' lvalue .port 0x55ee8ca7b178
| |             `-DeclRefExpr 0x55ee8cab9788 <col:44> 'const Router::Port' lvalue ParmVar 0x55ee8ca7b6a0 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55ee8ca7f038 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55ee8ca7efa8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55ee8cab9b80 <col:45, line:163:9>
| |   `-ReturnStmt 0x55ee8cab9b70 <line:162:13, col:65>
| |     `-BinaryOperator 0x55ee8cab9b50 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55ee8cab9930 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55ee8cab9900 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55ee8cab9880 <col:20> 'const int' lvalue ->idx 0x55ee8ca7b110
| |       | |   `-CXXThisExpr 0x55ee8cab9870 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55ee8cab9918 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55ee8cab98d0 <col:26, col:28> 'const int' lvalue .idx 0x55ee8ca7b110
| |       |     `-DeclRefExpr 0x55ee8cab98b0 <col:26> 'const Router::Port' lvalue ParmVar 0x55ee8ca7efa8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55ee8cab9b30 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55ee8cab9b10 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55ee8cab9a10 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55ee8cab99e0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55ee8cab9960 <col:36> 'const int' lvalue ->idx 0x55ee8ca7b110
| |           | |   `-CXXThisExpr 0x55ee8cab9950 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55ee8cab99f8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55ee8cab99b0 <col:43, col:45> 'const int' lvalue .idx 0x55ee8ca7b110
| |           |     `-DeclRefExpr 0x55ee8cab9990 <col:43> 'const Router::Port' lvalue ParmVar 0x55ee8ca7efa8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55ee8cab9af0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55ee8cab9ac0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55ee8cab9a40 <col:52> 'const int' lvalue ->port 0x55ee8ca7b178
| |             |   `-CXXThisExpr 0x55ee8cab9a30 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55ee8cab9ad8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55ee8cab9a90 <col:59, col:61> 'const int' lvalue .port 0x55ee8ca7b178
| |                 `-DeclRefExpr 0x55ee8cab9a70 <col:59> 'const Router::Port' lvalue ParmVar 0x55ee8ca7efa8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55ee8ca7f180 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55ee8ca7f0f0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55ee8cab9ea8 <col:46, line:166:9>
| |   `-ReturnStmt 0x55ee8cab9e98 <line:165:13, col:66>
| |     `-BinaryOperator 0x55ee8cab9e78 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55ee8cab9c58 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55ee8cab9c28 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55ee8cab9ba8 <col:20> 'const int' lvalue ->idx 0x55ee8ca7b110
| |       | |   `-CXXThisExpr 0x55ee8cab9b98 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55ee8cab9c40 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55ee8cab9bf8 <col:26, col:28> 'const int' lvalue .idx 0x55ee8ca7b110
| |       |     `-DeclRefExpr 0x55ee8cab9bd8 <col:26> 'const Router::Port' lvalue ParmVar 0x55ee8ca7f0f0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55ee8cab9e58 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55ee8cab9e38 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55ee8cab9d38 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55ee8cab9d08 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55ee8cab9c88 <col:36> 'const int' lvalue ->idx 0x55ee8ca7b110
| |           | |   `-CXXThisExpr 0x55ee8cab9c78 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55ee8cab9d20 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55ee8cab9cd8 <col:43, col:45> 'const int' lvalue .idx 0x55ee8ca7b110
| |           |     `-DeclRefExpr 0x55ee8cab9cb8 <col:43> 'const Router::Port' lvalue ParmVar 0x55ee8ca7f0f0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55ee8cab9e18 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55ee8cab9de8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55ee8cab9d68 <col:52> 'const int' lvalue ->port 0x55ee8ca7b178
| |             |   `-CXXThisExpr 0x55ee8cab9d58 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55ee8cab9e00 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55ee8cab9db8 <col:60, col:62> 'const int' lvalue .port 0x55ee8ca7b178
| |                 `-DeclRefExpr 0x55ee8cab9d98 <col:60> 'const Router::Port' lvalue ParmVar 0x55ee8ca7f0f0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55ee8cab9ec0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55ee8cab9ec0
| | `-ParmVarDecl 0x55ee8cab9fd8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55ee8caba078 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55ee8caba078
| | `-ParmVarDecl 0x55ee8caba188 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55ee8caba220 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55ee8cabdb08 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55ee8cabdb08
| | `-ParmVarDecl 0x55ee8cabdc18 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55ee8cabdc88 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55ee8cabdd98 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55ee8cabe0b8 <col:12>
|     |-BinaryOperator 0x55ee8cabdf58 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55ee8cabdf10 <col:12> 'int' lvalue ->idx 0x55ee8ca7b110
|     | | `-CXXThisExpr 0x55ee8cabdf00 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55ee8cabdf40 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55ee8cabded0 <col:12> 'int' xvalue .idx 0x55ee8ca7b110
|     |     `-CXXStaticCastExpr 0x55ee8cabdea0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55ee8cabde70 <col:12> 'Router::Port' lvalue ParmVar 0x55ee8cabdd98 '' 'Router::Port &&'
|     |-BinaryOperator 0x55ee8cabe060 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55ee8cabe018 <col:12> 'int' lvalue ->port 0x55ee8ca7b178
|     | | `-CXXThisExpr 0x55ee8cabe008 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55ee8cabe048 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55ee8cabdfd8 <col:12> 'int' xvalue .port 0x55ee8ca7b178
|     |     `-CXXStaticCastExpr 0x55ee8cabdfa8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55ee8cabdf78 <col:12> 'Router::Port' lvalue ParmVar 0x55ee8cabdd98 '' 'Router::Port &&'
|     `-ReturnStmt 0x55ee8cabe0a8 <col:12>
|       `-UnaryOperator 0x55ee8cabe090 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8cabe080 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55ee8ca7f240 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ee8ca7f358 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55ee8ca7f548 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55ee8ca7f600 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55ee8ca7f548 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55ee8caba1f8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55ee8caba330 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55ee8ca7f938 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55ee8ca7f6c0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55ee8ca7f740 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55ee8ca7f7c0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55ee8ca7f840 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55ee8ca7f548 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55ee8caba340 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55ee8cabe398 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55ee8cabe188 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55ee8cabe150 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55ee8cabe138 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55ee8cabde20 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55ee8cabdc88 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55ee8cabda28 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55ee8cabda10 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55ee8cabd9c0 <col:13> 'Router::Port [2]' lvalue ->p 0x55ee8ca7f548
| |   |   | |   `-CXXThisExpr 0x55ee8caba398 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55ee8cabd9f0 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55ee8cabde08 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55ee8cabdac8 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55ee8cabda98 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55ee8cabda58 <col:25> 'int' lvalue ParmVar 0x55ee8ca7f7c0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55ee8cabdab0 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55ee8cabda78 <col:33> 'int' lvalue ParmVar 0x55ee8ca7f840 'to_port' 'int'
| |   `-ExprWithCleanups 0x55ee8cabe380 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55ee8cabe348 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55ee8cabe330 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55ee8cabe310 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55ee8cabdc88 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55ee8cabe218 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55ee8cabe200 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55ee8cabe1b0 <col:13> 'Router::Port [2]' lvalue ->p 0x55ee8ca7f548
| |       | |   `-CXXThisExpr 0x55ee8cabe1a0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55ee8cabe1e0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55ee8cabe2f8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55ee8cabe2b8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55ee8cabe288 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55ee8cabe248 <col:25> 'int' lvalue ParmVar 0x55ee8ca7f6c0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55ee8cabe2a0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55ee8cabe268 <col:35> 'int' lvalue ParmVar 0x55ee8ca7f740 'from_port' 'int'
| |-CXXMethodDecl 0x55ee8ca7fb08 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55ee8ca7fa18 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55ee8cabe958 <col:45, line:182:9>
| |   |-ParenExpr 0x55ee8cabe838 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55ee8cabe808 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55ee8cabe4d8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55ee8cabe4a8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55ee8cabe410 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55ee8cabe3f8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55ee8cabe3b8 <col:34> 'int' lvalue ParmVar 0x55ee8ca7fa18 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55ee8cabe3d8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55ee8cabe488 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55ee8cabe470 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55ee8cabe430 <col:44> 'int' lvalue ParmVar 0x55ee8ca7fa18 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55ee8cabe450 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55ee8cabe538 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55ee8cabe518 <col:59> 'int' 0
| |   |   `-CallExpr 0x55ee8cabe768 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55ee8cabe750 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55ee8cabe730 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55ee8cabe7a8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55ee8cabe5a8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55ee8cabe7c0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55ee8cabe5d0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55ee8cabe7d8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55ee8cabe608 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55ee8cabe7f0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55ee8cabe718 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55ee8cabe700 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55ee8cabe6a8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55ee8cabe948 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55ee8cabe928 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55ee8cabe8f8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55ee8cabe868 <col:20> 'Router::Port const[2]' lvalue ->p 0x55ee8ca7f548
| |       |   `-CXXThisExpr 0x55ee8cabe858 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55ee8cabe910 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55ee8cabe898 <col:22> 'int' lvalue ParmVar 0x55ee8ca7fa18 'i' 'int'
| |-CXXMethodDecl 0x55ee8ca7fcb8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55ee8ca7fbc8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55ee8cabeed0 <col:33, line:186:9>
| |   |-ParenExpr 0x55ee8cabedf0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55ee8cabedc0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55ee8cabea98 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55ee8cabea68 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55ee8cabe9d0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55ee8cabe9b8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55ee8cabe978 <col:34> 'int' lvalue ParmVar 0x55ee8ca7fbc8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55ee8cabe998 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55ee8cabea48 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55ee8cabea30 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55ee8cabe9f0 <col:44> 'int' lvalue ParmVar 0x55ee8ca7fbc8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55ee8cabea10 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55ee8cabeaf8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55ee8cabead8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55ee8cabed20 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55ee8cabed08 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55ee8cabece8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55ee8cabed60 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55ee8cabeb68 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55ee8cabed78 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55ee8cabeb90 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55ee8cabed90 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55ee8cabebc8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55ee8cabeda8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55ee8cabecd0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55ee8cabecb8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55ee8cabec68 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55ee8cabeec0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55ee8cabeea0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55ee8cabee70 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55ee8cabee20 <col:20> 'Router::Port [2]' lvalue ->p 0x55ee8ca7f548
| |       |   `-CXXThisExpr 0x55ee8cabee10 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55ee8cabee88 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55ee8cabee50 <col:22> 'int' lvalue ParmVar 0x55ee8ca7fbc8 'i' 'int'
| |-CXXMethodDecl 0x55ee8ca7fe58 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55ee8ca7fd98 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55ee8cabf2a8 <col:52, line:190:9>
| |   `-ReturnStmt 0x55ee8cabf298 <line:189:13, col:51>
| |     `-BinaryOperator 0x55ee8cabf278 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55ee8cabf090 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55ee8cabf078 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55ee8cabf030 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55ee8ca7b5e8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55ee8cabef68 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55ee8cabef50 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55ee8cabef00 <col:20> 'Router::Port const[2]' lvalue ->p 0x55ee8ca7f548
| |       | | |   `-CXXThisExpr 0x55ee8cabeef0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55ee8cabef30 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55ee8cabf010 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55ee8cabeff8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55ee8cabefa8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55ee8ca7f548
| |       |   |   `-DeclRefExpr 0x55ee8cabef88 <col:28> 'const Router::Connection' lvalue ParmVar 0x55ee8ca7fd98 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55ee8cabefd8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55ee8cabf240 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55ee8cabf228 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55ee8cabf208 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55ee8ca7b5e8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55ee8cabf140 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55ee8cabf128 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55ee8cabf0d8 <col:38> 'Router::Port const[2]' lvalue ->p 0x55ee8ca7f548
| |         | |   `-CXXThisExpr 0x55ee8cabf0c8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55ee8cabf108 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55ee8cabf1e8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55ee8cabf1d0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55ee8cabf180 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55ee8ca7f548
| |           |   `-DeclRefExpr 0x55ee8cabf160 <col:46> 'const Router::Connection' lvalue ParmVar 0x55ee8ca7fd98 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55ee8cabf1b0 <col:50> 'int' 1
| `-CXXMethodDecl 0x55ee8ca7ffa0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55ee8ca7ff10 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55ee8cabf840 <col:51, line:193:9>
|     `-ReturnStmt 0x55ee8cabf830 <line:192:13, col:69>
|       `-BinaryOperator 0x55ee8cabf810 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55ee8cabf438 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55ee8cabf420 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55ee8cabf400 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55ee8ca7f038 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55ee8cabf338 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55ee8cabf320 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55ee8cabf2d0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55ee8ca7f548
|         | | |   `-CXXThisExpr 0x55ee8cabf2c0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55ee8cabf300 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55ee8cabf3e0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55ee8cabf3c8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55ee8cabf378 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55ee8ca7f548
|         |   |   `-DeclRefExpr 0x55ee8cabf358 <col:27> 'const Router::Connection' lvalue ParmVar 0x55ee8ca7ff10 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55ee8cabf3a8 <col:31> 'int' 0
|         `-ParenExpr 0x55ee8cabf7f0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55ee8cabf7d0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55ee8cabf5e8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55ee8cabf5d0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55ee8cabf5b0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55ee8ca7b5e8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55ee8cabf4e8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55ee8cabf4d0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55ee8cabf480 <col:38> 'Router::Port const[2]' lvalue ->p 0x55ee8ca7f548
|             | | |   `-CXXThisExpr 0x55ee8cabf470 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55ee8cabf4b0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55ee8cabf590 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55ee8cabf578 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55ee8cabf528 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55ee8ca7f548
|             |   |   `-DeclRefExpr 0x55ee8cabf508 <col:46> 'const Router::Connection' lvalue ParmVar 0x55ee8ca7ff10 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55ee8cabf558 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55ee8cabf798 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55ee8cabf780 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ee8cabf760 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55ee8ca7f038 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55ee8cabf698 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55ee8cabf680 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55ee8cabf630 <col:56> 'Router::Port const[2]' lvalue ->p 0x55ee8ca7f548
|               | |   `-CXXThisExpr 0x55ee8cabf620 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55ee8cabf660 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55ee8cabf740 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55ee8cabf728 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55ee8cabf6d8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55ee8ca7f548
|                 |   `-DeclRefExpr 0x55ee8cabf6b8 <col:63> 'const Router::Connection' lvalue ParmVar 0x55ee8ca7ff10 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55ee8cabf708 <col:67> 'int' 1
|-AccessSpecDecl 0x55ee8ca80060 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55ee8ca80088 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55ee8ca80140 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55ee8ca80200 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55ee8ca80250 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55ee8ca802a0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55ee8ca802f0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55ee8ca80340 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55ee8ca80390 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55ee8ca804a8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55ee8ca80488 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55ee8ca80470 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ee8ca80450 <col:25> 'int' 2
| |-EnumConstantDecl 0x55ee8ca80550 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55ee8ca80530 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55ee8ca80518 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ee8ca804f8 <col:48> 'int' 1
| |-EnumConstantDecl 0x55ee8ca805e0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55ee8ca805c0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55ee8ca805a0 <col:71> 'int' 0
| |-EnumConstantDecl 0x55ee8ca80670 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55ee8ca80650 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55ee8ca80630 <col:30> 'int' 1
| `-EnumConstantDecl 0x55ee8ca80700 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55ee8ca806e0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55ee8ca806c0 <col:50> 'int' 2
|-FieldDecl 0x55ee8ca80760 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55ee8ca807c0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55ee8ca80828 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55ee8ca808c8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55ee8ca808a8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55ee8ca80878 <col:30> 'int' 1
|-FieldDecl 0x55ee8ca80968 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55ee8ca80948 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55ee8ca80918 <col:33> 'int' 1
|-FieldDecl 0x55ee8ca80a08 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55ee8ca809e8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55ee8ca809b8 <col:32> 'int' 1
|-FieldDecl 0x55ee8ca80a70 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55ee8ca80ad0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55ee8ca8baf0 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55ee8ca8bbf0 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55ee8ca8bcf0 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55ee8ca92bf0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55ee8ca92d00 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55ee8ca92d50 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55ee8ca92e68 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55ee8ca92f08 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55ee8ca92f68 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55ee8ca965c0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55ee8ca965c0
| | `-ParmVarDecl 0x55ee8ca966d8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55ee8ca96778 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55ee8ca96778
| | `-ParmVarDecl 0x55ee8ca96888 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55ee8ca96928 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55ee8ca96928
| | `-ParmVarDecl 0x55ee8ca96a38 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55ee8ca96aa8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55ee8ca96aa8
| | `-ParmVarDecl 0x55ee8ca96bb8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55ee8ca96c40 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55ee8ca96c40
|-FieldDecl 0x55ee8caa2b60 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55ee8caa2bc0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55ee8caa2cd0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55ee8caa3028 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55ee8caa3130 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55ee8caab810 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55ee8caab920 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55ee8caaba20 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55ee8caabb30 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55ee8caabc40 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55ee8caabd50 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55ee8caabe60 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55ee8caabeb0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55ee8caabfb0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55ee8caac000 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8caabf90 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55ee8caabf70 <col:29> 'int' 256
|-FieldDecl 0x55ee8caac060 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55ee8caac0c8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55ee8caac130 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55ee8caac230 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55ee8cab45e0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55ee8cab4640 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55ee8cab46a0 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55ee8cab46f0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55ee8cab4808 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55ee8cab4898 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55ee8cab49a0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55ee8cab49f0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55ee8cab4980 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55ee8cab4960 <col:27> 'int' 4096
| |-FieldDecl 0x55ee8cab4a18 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55ee8cab4a80 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55ee8cab4c78 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55ee8cab4d08 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55ee8cab4ec8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55ee8cab4d68 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55ee8cab4de0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55ee8cab4a18 'name' 'String'
| | | `-CXXConstructExpr 0x55ee8cabf898 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55ee8cabf858 <col:20> 'const String' lvalue ParmVar 0x55ee8cab4d68 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55ee8cab4a80 'nsig' 'int'
| | | `-IntegerLiteral 0x55ee8cabf8f0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55ee8cab4c78 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55ee8cabf9d8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55ee8cab4d08 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55ee8cabf998 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55ee8cabf958 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55ee8cab4de0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55ee8cabfc68 <col:42, line:289:9>
| |   `-CallExpr 0x55ee8cabfc18 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55ee8cabfc00 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55ee8cabfbe0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55ee8c5ddfc8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55ee8cabfc50 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55ee8cabfb28 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55ee8cabfb08 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55ee8cabfaf0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55ee8cabfaa0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55ee8cab4c78
| |     |     |   `-CXXThisExpr 0x55ee8cabfa90 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55ee8cabfad0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55ee8cabfb40 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55ee8cabfbc0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55ee8cabfba0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55ee8cabfb70 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55ee8cab4c78 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55ee8cabfb60 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55ee8cab4fa8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55ee8cab4fa8
| | `-ParmVarDecl 0x55ee8cab50b8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55ee8cab5158 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55ee8cab5158
| | `-ParmVarDecl 0x55ee8cab5268 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55ee8cab5308 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55ee8cab5308
| | `-ParmVarDecl 0x55ee8cab5418 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55ee8cab5488 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55ee8cab5488
| | `-ParmVarDecl 0x55ee8cab5598 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55ee8cab5620 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55ee8cab5620
|-FieldDecl 0x55ee8cab5710 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55ee8cab5770 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55ee8cab57d0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55ee8cab5830 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55ee8cab5890 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55ee8cab59a0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55ee8cab5aa0 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55ee8cab5b00 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55ee8cab5c48 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55ee8cab5b88 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55ee8cab5df8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55ee8cab5d08 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55ee8cab5f40 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55ee8cab5eb0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55ee8cab62e8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55ee8cab5ff8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55ee8cab6070 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55ee8cab60f0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55ee8cab6168 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55ee8cab61e0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8cab9320 <col:57> 'bool' false
|-CXXMethodDecl 0x55ee8cab6458 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55ee8cab63c0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8cab65a8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55ee8cab6510 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8cab66f8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55ee8cab6660 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8cab6850 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55ee8cab67b8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55ee8cab6b70 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8cab6908 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55ee8cab6980 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55ee8cab6a00 <col:56> col:59 'int'
| `-ParmVarDecl 0x55ee8cab6a78 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8cab6cd8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55ee8cab6c40 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8cab6da0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55ee8cab6e60 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55ee8cab7060 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55ee8cab6f10 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55ee8cab6f88 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55ee8cab7130 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55ee8cab7278 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55ee8cab71e0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55ee8cabfea0 <col:42, line:326:5>
|   `-ReturnStmt 0x55ee8cabfe90 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55ee8cabfe78 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55ee8cabfe58 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55ee8cabfe28 <col:16, col:45> '<bound member function type>' .back 0x55ee8c97b9d8
|           `-ArraySubscriptExpr 0x55ee8cabfda8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55ee8cabfd78 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ee8cabfc90 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55ee8caa3028
|             |   `-CXXThisExpr 0x55ee8cabfc80 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55ee8cabfd90 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55ee8cabfcc0 <col:38> 'bool' lvalue ParmVar 0x55ee8cab71e0 'isout' 'bool'
|-CXXMethodDecl 0x55ee8cab7448 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55ee8cab7330 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55ee8cab73a8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55ee8cab75a0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55ee8cab7508 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55ee8cab7848 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55ee8cab7658 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55ee8cab76d0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55ee8cab7750 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55ee8cab7a20 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55ee8cab7910 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55ee8cab7988 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55ee8cab7ba8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55ee8cab7ae8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55ee8cab7e40 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55ee8cab7c68 <col:23> col:26 'int'
| |-ParmVarDecl 0x55ee8cab7ce0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55ee8cab7d58 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55ee8cab8058 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55ee8cab7f08 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55ee8cab7f80 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55ee8cab8268 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55ee8cab8120 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55ee8cab8198 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55ee8cab83e8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55ee8cab8328 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55ee8cab85e8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55ee8cab84a0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55ee8cab8518 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55ee8cab87c0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55ee8cab86a8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55ee8cab8728 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55ee8cab8aa0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55ee8cab8880 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55ee8cab88f8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55ee8cab8978 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55ee8cab89f0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55ee8cab8b80 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55ee8cab8be0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55ee8cab8e60 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55ee8cab8d60 parent 0x55ee8c8df850 prev 0x55ee8c8ef478 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55ee8cab8c40 <col:36> col:39 'int'
    `-ParmVarDecl 0x55ee8cab8cc0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8df850 prev 0x55ee8c8df5d0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c8df948 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55ee8c8df9d8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55ee8c8dfa38 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55ee8c8dfb28 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55ee8c8dfc28 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55ee8c8dfdf8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55ee8c8dfca8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55ee8c8dfd20 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55ee8c8dff88 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55ee8c8dfec0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55ee8c8e0030 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8e0168 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55ee8c8e00a0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55ee8c8e0308 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55ee8c8e0248 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55ee8c8e04a8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55ee8c8e03e8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55ee8c8e0550 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55ee8c8e0650 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55ee8c8e0730 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e0630 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55ee8c8e0610 <col:26> 'int' 1
| `-EnumConstantDecl 0x55ee8c8e06e0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55ee8c8e0748 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8e06c0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55ee8c8e06a0 <col:44> 'int' 2
|-CXXMethodDecl 0x55ee8c8e0890 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55ee8c8e0778 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55ee8c8e07f8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55ee8c8e09e8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55ee8c8e0958 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55ee8c8e0c28 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55ee8c8e0aa8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55ee8c8e0b20 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55ee8c8e0cd8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8e0d30 <col:30>
|-CXXMethodDecl 0x55ee8c8e0e38 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55ee8c8e0d70 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55ee8c8e0ee0 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8e0f38 <col:30>
|-CXXMethodDecl 0x55ee8c8e0f88 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55ee8c8e1050 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55ee8c8e1168 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55ee8c8e11f0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55ee8c8e1278 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55ee8c8e1300 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55ee8c8e1388 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55ee8c8e1418 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55ee8c8e14d8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55ee8c8e1560 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55ee8c8e15e8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55ee8c8e1670 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55ee8c8e16f8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55ee8c8e1780 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55ee8c8e1810 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55ee8c8e18d0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55ee8c8e1960 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55ee8c8e1ab0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55ee8c8e1a18 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55ee8c8e1c40 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55ee8c8e1b70 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55ee8c8e1ef0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55ee8c8e1cf8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55ee8c8e1d78 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55ee8c8e1df8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55ee8c8e1fa8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55ee8c8e20b0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55ee8c8e2340 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e2090 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55ee8c8e2070 <col:33> 'int' 0
| |-EnumConstantDecl 0x55ee8c8e2140 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55ee8c8e2358 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e2120 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55ee8c8e2100 <col:32> 'int' 20
| |-EnumConstantDecl 0x55ee8c8e21d0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55ee8c8e2370 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e21b0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55ee8c8e2190 <col:38> 'int' 90
| |-EnumConstantDecl 0x55ee8c8e2260 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55ee8c8e2388 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e2240 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55ee8c8e2220 <col:35> 'int' 100
| `-EnumConstantDecl 0x55ee8c8e22f0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55ee8c8e23a0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8e22d0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55ee8c8e22b0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55ee8c8e23e0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55ee8c8e2820 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55ee8c8e2690 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55ee8c8e2708 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8e28f0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55ee8c8e2a70 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55ee8c8e29a0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8e2c78 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55ee8c8e2b28 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55ee8c8e2ba0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8e2d78 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55ee8c8e2e18 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55ee8c8e2ee0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ee8c8e2f70 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55ee8c8e31a0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e2f50 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55ee8c8e2f30 <col:36> 'int' EnumConstant 0x55ee8c8e2ee0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ee8c8e2fc0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ee8c8e3010 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ee8c8e3060 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ee8c8e30b0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55ee8c8e3100 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55ee8c8e3150 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55ee8c8e3288 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55ee8c8e31c8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55ee8c8e3350 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55ee8c8e3410 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55ee8c8e34d0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55ee8c8e3590 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55ee8c8e36a8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55ee8c8e3770 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55ee8c8e38f0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55ee8c8e3820 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55ee8c8e3a18 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55ee8c8e3c18 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55ee8c8e3ac8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55ee8c8e3b48 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55ee8c8f1568 <col:54, line:127:5>
|   |-ParenExpr 0x55ee8c8f1418 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55ee8c8f13e8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8f10d8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55ee8c8f10b0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55ee8c8f1098 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55ee8c8f1080 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55ee8c8f1050 <col:31> 'Router *' lvalue ->_router 0x55ee8c8eef30
|   |   |         `-CXXThisExpr 0x55ee8c8f1040 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55ee8c8f1138 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8f1118 <col:48> 'int' 0
|   |   `-CallExpr 0x55ee8c8f1348 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8f1330 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8f1310 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8f1388 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8f11a8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55ee8c8f13a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8f11c8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8f13b8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8f1200 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55ee8c8f13d0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8f12f8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8f12e0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8f1298 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55ee8c8f14b0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55ee8c8f1448 <col:9> 'Router *' lvalue ->_router 0x55ee8c8eef30
|   | | `-CXXThisExpr 0x55ee8c8f1438 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c8f1498 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ee8c8f1478 <col:19> 'Router *' lvalue ParmVar 0x55ee8c8e3ac8 'r' 'Router *'
|   `-BinaryOperator 0x55ee8c8f1548 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55ee8c8f14e0 <col:9> 'int' lvalue ->_eindex 0x55ee8c8eef98
|     | `-CXXThisExpr 0x55ee8c8f14d0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55ee8c8f1530 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c8f1510 <col:19> 'int' lvalue ParmVar 0x55ee8c8e3b48 'eindex' 'int'
|-CXXMethodDecl 0x55ee8c8e3da0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55ee8c8e3cd8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55ee8c8e3e70 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55ee8c8e3f38 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55ee8c8e3fd8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55ee8c8e4228 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55ee8c8e40a0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55ee8c8e4120 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55ee8c8e42d8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8e4330 <col:30>
|-CXXMethodDecl 0x55ee8c8e4438 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55ee8c8e4370 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55ee8c8e44e0 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8e4538 <col:30>
|-CXXMethodDecl 0x55ee8c8e4608 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55ee8c8e4578 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55ee8c8e46b0 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8e4708 <col:30>
|-CXXMethodDecl 0x55ee8c8e4898 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55ee8c8e4740 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55ee8c8e47c0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55ee8c8e4a28 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55ee8c8e4960 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55ee8c8e4b78 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55ee8c8e4ae8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55ee8c8e4cc8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55ee8c8e4c38 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55ee8c8e4e18 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55ee8c8e4d88 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55ee8c8e50d8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55ee8c8e4ed0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55ee8c8e4f50 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55ee8c8e4ff8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55ee8c8e51b0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55ee8c8e5270 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55ee8c8e5540 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55ee8c8e53f0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55ee8c8e5468 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8e5668 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55ee8c8e5840 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55ee8c8e5720 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55ee8c8e57a0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55ee8c8e5a28 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55ee8c8e5908 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55ee8c8e5988 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55ee8c8e5d98 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55ee8c8e5ae8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55ee8c8e5b60 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55ee8c8e5be0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55ee8c8f0b50 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8c8f0b30 <col:106> 'int' 0
| `-ParmVarDecl 0x55ee8c8e5c58 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8c8f0b88 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8c8f0b68 <col:126> 'int' 0
|-CXXMethodDecl 0x55ee8c8e6138 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55ee8c8e5e68 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55ee8c8e5f00 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55ee8c8e5f80 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55ee8c8e5ff8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8c8f0bc0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8c8f0ba0 <col:114> 'int' 0
|-CXXMethodDecl 0x55ee8c8e64c8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55ee8c8e6210 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e6288 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55ee8c8e6308 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55ee8c8f0bd8 <col:96> 'int' 0
| `-ParmVarDecl 0x55ee8c8e6380 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8c8f0c18 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8c8f0bf8 <col:116> 'int' 0
|-CXXMethodDecl 0x55ee8c8e6848 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55ee8c8e6598 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55ee8c8e6610 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c8e6690 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55ee8c8f0c50 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8c8f0c30 <col:109> 'int' 0
| `-ParmVarDecl 0x55ee8c8e6708 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8c8f0c88 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8c8f0c68 <col:129> 'int' 0
|-CXXMethodDecl 0x55ee8c8e6bc8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55ee8c8e6918 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55ee8c8e6990 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c8e6a10 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55ee8c8e6a88 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8c8f0cc0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8c8f0ca0 <col:117> 'int' 0
|-CXXMethodDecl 0x55ee8c8e6f58 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55ee8c8e6ca0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e6d18 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c8e6d98 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55ee8c8f0cd8 <col:99> 'int' 0
| `-ParmVarDecl 0x55ee8c8e6e10 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55ee8c8f0d18 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55ee8c8f0cf8 <col:119> 'int' 0
|-CXXMethodDecl 0x55ee8c8e7378 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55ee8c8e7028 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55ee8c8e70a8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55ee8c8e7120 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c8e71a0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55ee8c8f0d50 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8c8f0d30 <col:108> 'int' 0
| `-ParmVarDecl 0x55ee8c8e7220 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55ee8c8f0d88 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8c8f0d68 <col:141> 'int' 0
|-CXXMethodDecl 0x55ee8c8e7798 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55ee8c8e7450 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55ee8c8e74d0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55ee8c8e7548 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c8e75c8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55ee8c8e7648 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55ee8c8f0da0 <col:121> 'int' 0
|-CXXMethodDecl 0x55ee8c8e7bc8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55ee8c8e7878 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e78f8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55ee8c8e7970 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c8e79f0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55ee8c8f0dc0 <col:98> 'int' 0
| `-ParmVarDecl 0x55ee8c8e7a70 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55ee8c8f0de0 <col:123> 'int' 0
|-CXXMethodDecl 0x55ee8c8e7e90 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55ee8c8e7ca0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55ee8c8e7d20 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55ee8c8e7da0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55ee8c8f0e00 <col:80> 'int' 0
|-EnumDecl 0x55ee8c8e7f48 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55ee8c8e8050 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55ee8c8e82e0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e8030 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55ee8c8e8010 <col:42> 'int' 1
| |-EnumConstantDecl 0x55ee8c8e80e0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55ee8c8e82f8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e80c0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55ee8c8e80a0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55ee8c8e8170 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55ee8c8e8310 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e8150 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55ee8c8e8130 <col:44> 'int' 4
| |-EnumConstantDecl 0x55ee8c8e8200 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55ee8c8e8328 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8e81e0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55ee8c8e81c0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55ee8c8e8290 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55ee8c8e8340 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8e8270 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55ee8c8e8250 <col:34> 'int' 6
|-CXXMethodDecl 0x55ee8c8e85f8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55ee8c8e8368 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55ee8c8e8408 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55ee8c8e8488 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55ee8c8e8500 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55ee8c8f0eb8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55ee8c8f0ea0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55ee8c8f0e88 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55ee8c8f0e68 <col:98, col:105> 'String' (CXXTemporary 0x55ee8c8f0e68)
|           `-CXXTemporaryObjectExpr 0x55ee8c8f0e30 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55ee8c8e8898 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55ee8c8e86c8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55ee8c8e8740 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55ee8c8e87b8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55ee8c8f0f68 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55ee8c8f0f50 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55ee8c8f0f38 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55ee8c8f0f18 <col:94, col:101> 'String' (CXXTemporary 0x55ee8c8f0f18)
| |         `-CXXTemporaryObjectExpr 0x55ee8c8f0ee0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55ee8c8f1750 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55ee8c8f16c8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55ee8c8f1698 <col:9> '<bound member function type>' ->add_task_handlers 0x55ee8c8e85f8
|     | `-CXXThisExpr 0x55ee8c8f1688 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55ee8c8f1708 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55ee8c8f1608 <col:27> 'Task *' lvalue ParmVar 0x55ee8c8e86c8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55ee8c8f1720 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55ee8c8f1628 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55ee8c8e8740 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55ee8c8f1738 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55ee8c8f1648 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55ee8c8e8290 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55ee8c8f1668 <col:62> 'const String' lvalue ParmVar 0x55ee8c8e87b8 'prefix' 'const String &'
|-CXXMethodDecl 0x55ee8c8e8aa8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55ee8c8e8960 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55ee8c8e89d8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55ee8c8f1018 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55ee8c8f1000 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55ee8c8f0fe8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55ee8c8f0fc8 <col:70, col:77> 'String' (CXXTemporary 0x55ee8c8f0fc8)
| |         `-CXXTemporaryObjectExpr 0x55ee8c8f0f90 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55ee8c8f1928 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55ee8c8f18a0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55ee8c8f1870 <col:9> '<bound member function type>' ->add_task_handlers 0x55ee8c8e85f8
|     | `-CXXThisExpr 0x55ee8c8f1860 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55ee8c8f18e0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55ee8c8f17e0 <col:27> 'Task *' lvalue ParmVar 0x55ee8c8e8960 'task' 'Task *'
|     |-ImplicitCastExpr 0x55ee8c8f18f8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55ee8c8f1800 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55ee8c8f1910 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55ee8c8f1820 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55ee8c8e8290 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55ee8c8f1840 <col:57> 'const String' lvalue ParmVar 0x55ee8c8e89d8 'prefix' 'const String &'
|-CXXMethodDecl 0x55ee8c8e8d88 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55ee8c8e8b70 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e8bf0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8e8c68 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55ee8c8e9038 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55ee8c8e8e58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e8ed8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8e8f58 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55ee8c8e9328 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55ee8c8e9108 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e9188 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8e9200 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55ee8c8e95d8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55ee8c8e93f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e9478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8e94f8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55ee8c8e9888 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55ee8c8e96a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e9728 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8e97a8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55ee8c8e9b38 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55ee8c8e9958 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e99d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8e9a50 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55ee8c8e9de8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55ee8c8e9c08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e9c88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8e9d08 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55ee8c8ea0f8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55ee8c8e9f10 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8e9f90 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8ea010 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55ee8c8ea3d8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55ee8c8ea1c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8ea248 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8ea2f0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55ee8c8ea6b8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55ee8c8ea4a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8ea528 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8ea5d0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55ee8c8ea920 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55ee8c8ea788 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55ee8c8ea808 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55ee8c8ea880 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55ee8c8eabc8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55ee8c8ea9f0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55ee8c8eaa70 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55ee8c8eaae8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55ee8c8eae78 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55ee8c8eac98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8ead18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8ead98 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55ee8c8eb128 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55ee8c8eaf48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8eafc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8eb040 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55ee8c8eb3d8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55ee8c8eb1f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8eb278 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8eb2f0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55ee8c8eb6a8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55ee8c8eb4a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8eb528 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55ee8c8eb5c8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55ee8c8eb9d8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55ee8c8eb778 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55ee8c8eb7f8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55ee8c8eb870 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55ee8c8eb8e8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8c8f1030 <col:93> 'bool' false
|-CXXMethodDecl 0x55ee8c8ebbc0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55ee8c8ebaa8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55ee8c8ebb28 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55ee8c8ebd98 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55ee8c8ebc80 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55ee8c8ebd00 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55ee8c8ec078 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55ee8c8ebe58 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55ee8c8ebed0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55ee8c8ebf50 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55ee8c8ebfc8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8ec368 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55ee8c8ec148 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55ee8c8ec1c0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55ee8c8ec240 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55ee8c8ec2b8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8ec5a0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55ee8c8ec440 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55ee8c8ec4c0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55ee8c8ec788 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55ee8c8ec668 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55ee8c8ec6e8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55ee8c8ec838 prev 0x55ee8c8e3fd8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ee8c8ec930 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55ee8c8ec9c0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55ee8c8eca38 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55ee8c8ecaf8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55ee8c8ecbc0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55ee8c8ecd38 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55ee8c8ecc70 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55ee8c8ecde0 <col:24>
| | `-OptimizeNoneAttr 0x55ee8c8ece38 <col:34>
| |-CXXMethodDecl 0x55ee8c8ece80 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55ee8c8ed138 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55ee8c8ecf30 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55ee8c8ecfa8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55ee8c8ed028 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55ee8c8ed1f0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55ee8c8ed228 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55ee8c8ed290 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55ee8c8ed318 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55ee8c8ed638 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55ee8c8ed3d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55ee8c8ed448 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55ee8c8ed4c0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55ee8c8ed540 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55ee8c8ed750 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55ee8c8f50c8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55ee8c8f50c8
| | `-ParmVarDecl 0x55ee8c8f51d8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55ee8c8f5278 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55ee8c8f5278
| | `-ParmVarDecl 0x55ee8c8f5388 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55ee8cadbb30 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55ee8c8ed7c8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55ee8c8ed868 <col:38> "" ""
|-CXXMethodDecl 0x55ee8c8ed8f8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55ee8c8ed998 <col:44> "" ""
|-AccessSpecDecl 0x55ee8c8eda08 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55ee8c8eda30 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55ee8c8edb30 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55ee8c8edb80 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8edb10 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55ee8c8edaf0 <col:27> 'int' 4
|-FieldDecl 0x55ee8c8edc38 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55ee8c8edde8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55ee8c8edea0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55ee8c8eef30 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55ee8c8eef98 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55ee8c8ef0e8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55ee8c8ef028 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55ee8c8ef298 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55ee8c8ef1a8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55ee8c8ef478 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55ee8c8ef358 <col:20> col:23 'int'
| `-ParmVarDecl 0x55ee8c8ef3d8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55ee8c8ef720 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c8ef540 <col:23> col:26 'int'
| |-ParmVarDecl 0x55ee8c8ef5c0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55ee8c8ef638 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55ee8c8ef7d8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55ee8c8ef8a0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55ee8c8ef8f0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55ee8c8ef940 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55ee8c8efb20 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55ee8c8ef9d0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55ee8c8efa48 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8efdc8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55ee8c8efbe8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55ee8c8efc68 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55ee8c8efce0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8effe8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55ee8c8efe98 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55ee8c8eff18 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55ee8c8f0320 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55ee8c8f00a8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55ee8c8f0128 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55ee8c8f01a0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55ee8c8f0220 <col:57> col:60 'int'
|-CXXMethodDecl 0x55ee8c8f0508 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55ee8c8f03f0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55ee8c8f0470 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55ee8c8f0658 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55ee8c8f05c8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55ee8c8f09d8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55ee8c8f0718 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55ee8c8f0798 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55ee8c8f0810 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55ee8c8f0890 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55ee8c8f0af0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ARPPrint
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class String _label
       112 |     struct String::rep_t _r
       112 |       const char * data
       120 |       int length
       128 |       struct String::memo_t * memo
       136 |   _Bool _print_timestamp
       137 |   _Bool _print_ether
       138 |   _Bool _active
       144 |   class String _outfilename
       144 |     struct String::rep_t _r
       144 |       const char * data
       152 |       int length
       160 |       struct String::memo_t * memo
       168 |   FILE * _outfile
       176 |   class ErrorHandler * _errh
           | [sizeof=184, dsize=184, align=8,
           |  nvsize=184, nvalign=8]

*** Dumping AST Record Layout
         0 | struct _IO_FILE
         0 |   int _flags
         8 |   char * _IO_read_ptr
        16 |   char * _IO_read_end
        24 |   char * _IO_read_base
        32 |   char * _IO_write_base
        40 |   char * _IO_write_ptr
        48 |   char * _IO_write_end
        56 |   char * _IO_buf_base
        64 |   char * _IO_buf_end
        72 |   char * _IO_save_base
        80 |   char * _IO_backup_base
        88 |   char * _IO_save_end
        96 |   struct _IO_marker * _markers
       104 |   struct _IO_FILE * _chain
       112 |   int _fileno
       116 |   int _flags2
       120 |   __off_t _old_offset
       128 |   unsigned short _cur_column
       130 |   signed char _vtable_offset
       131 |   char [1] _shortbuf
       136 |   _IO_lock_t * _lock
       144 |   __off64_t _offset
       152 |   struct _IO_codecvt * _codecvt
       160 |   struct _IO_wide_data * _wide_data
       168 |   struct _IO_FILE * _freeres_list
       176 |   void * _freeres_buf
       184 |   size_t __pad5
       192 |   int _mode
       196 |   char [20] _unused2
           | [sizeof=216, dsize=216, align=8,
           |  nvsize=216, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c599968 prev 0x55ee8c599660 </usr/include/bits/types/struct_FILE.h:49:1, line:99:1> line:49:8 struct _IO_FILE definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55ee8c599a60 <col:1, col:8> col:8 implicit struct _IO_FILE
|-FieldDecl 0x55ee8c599b08 <line:51:3, col:7> col:7 _flags 'int'
|-FieldDecl 0x55ee8c599b70 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
|-FieldDecl 0x55ee8c599bd8 <line:55:3, col:9> col:9 _IO_read_end 'char *'
|-FieldDecl 0x55ee8c599c40 <line:56:3, col:9> col:9 _IO_read_base 'char *'
|-FieldDecl 0x55ee8c599ca8 <line:57:3, col:9> col:9 _IO_write_base 'char *'
|-FieldDecl 0x55ee8c599d10 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
|-FieldDecl 0x55ee8c599d78 <line:59:3, col:9> col:9 _IO_write_end 'char *'
|-FieldDecl 0x55ee8c599de0 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
|-FieldDecl 0x55ee8c599e48 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
|-FieldDecl 0x55ee8c599eb0 <line:64:3, col:9> col:9 _IO_save_base 'char *'
|-FieldDecl 0x55ee8c599f18 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
|-FieldDecl 0x55ee8c599f80 <line:66:3, col:9> col:9 _IO_save_end 'char *'
|-FieldDecl 0x55ee8c59a080 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
|-FieldDecl 0x55ee8c59a150 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
|-FieldDecl 0x55ee8c59a1b8 <line:72:3, col:7> col:7 _fileno 'int'
|-FieldDecl 0x55ee8c59a220 <line:73:3, col:7> col:7 _flags2 'int'
|-FieldDecl 0x55ee8c59a280 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
|-FieldDecl 0x55ee8c59a2e8 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
|-FieldDecl 0x55ee8c59a350 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
|-FieldDecl 0x55ee8c59a438 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
|-FieldDecl 0x55ee8c59a4e8 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
|-FieldDecl 0x55ee8c59a548 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
|-FieldDecl 0x55ee8c59a650 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
|-FieldDecl 0x55ee8c59a750 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
|-FieldDecl 0x55ee8c59a7c8 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
|-FieldDecl 0x55ee8c59a830 <line:94:3, col:9> col:9 _freeres_buf 'void *'
|-FieldDecl 0x55ee8c59a890 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
|-FieldDecl 0x55ee8c59a8f8 <line:96:3, col:7> col:7 _mode 'int'
`-FieldDecl 0x55ee8c59ab58 <line:98:3, col:74> col:8 _unused2 'char [20]'

Layout: <CGRecordLayout
  LLVMType:%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
  NonVirtualBaseLLVMType:%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8f8238 <../elements/ethernet/arpprint.hh:53:1, line:81:1> line:53:7 class ARPPrint definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55ee8c8f8398 <col:1, col:7> col:7 implicit referenced class ARPPrint
|-AccessSpecDecl 0x55ee8c8f8428 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x55ee8c8f84b0 <line:55:5, col:14> col:5 ARPPrint 'void ()'
|-CXXDestructorDecl 0x55ee8c8f85a0 <line:56:5, col:15> col:5 ~ARPPrint 'void ()' noexcept-unevaluated 0x55ee8c8f85a0
| `-Overrides: [ 0x55ee8c8dfb28 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55ee8c8f86d0 <line:58:5, col:57> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55ee8c8e0f88 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55ee8c8f9630 <col:36, col:57>
|   `-ReturnStmt 0x55ee8c8f9620 <col:38, col:45>
|     `-ImplicitCastExpr 0x55ee8c8f9608 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55ee8c8f95e8 <col:45> 'const char [9]' lvalue "ARPPrint"
|-CXXMethodDecl 0x55ee8c8f8798 <line:59:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55ee8c8e1050 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55ee8c8f9690 <col:36, col:56>
|   `-ReturnStmt 0x55ee8c8f9680 <col:38, col:45>
|     `-ImplicitCastExpr 0x55ee8c8f9668 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55ee8c8f9648 <col:45> 'const char []' lvalue Var 0x55ee8c8e1300 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x55ee8c8f8a70 <line:61:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55ee8c8e2820 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55ee8c8f8920 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55ee8c8f8998 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8f8bc8 <line:62:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55ee8c8e2a70 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55ee8c8f8b30 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x55ee8c8f8d10 <line:63:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55ee8c8e3288 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55ee8c8f8c80 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55ee8c8f8dd8 <line:64:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55ee8c8e28f0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55ee8c8f8f18 <line:66:5, col:35> col:13 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55ee8c8e0168 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55ee8c8f8e88 <col:27, col:34> col:35 'Packet *'
|-AccessSpecDecl 0x55ee8c8f8fc0 <line:68:2, col:9> col:2 private
|-FieldDecl 0x55ee8c8f8ff8 <line:70:5, col:12> col:12 _label 'String'
|-FieldDecl 0x55ee8c8f9058 <line:71:5, col:10> col:10 _print_timestamp 'bool'
|-FieldDecl 0x55ee8c8f90b8 <line:72:5, col:10> col:10 _print_ether 'bool'
|-FieldDecl 0x55ee8c8f9118 <line:73:5, col:10> col:10 _active 'bool'
|-FieldDecl 0x55ee8c8f9178 <line:76:5, col:12> col:12 _outfilename 'String'
|-FieldDecl 0x55ee8c8f91d8 <line:77:5, col:11> col:11 referenced _outfile 'FILE *'
|-FieldDecl 0x55ee8c8f9238 <line:79:5, col:19> col:19 _errh 'ErrorHandler *'
|-CXXConstructorDecl 0x55ee8c8f92b8 <line:53:7> col:7 implicit ARPPrint 'void (const ARPPrint &)' inline default_delete noexcept-unevaluated 0x55ee8c8f92b8
| `-ParmVarDecl 0x55ee8c8f93c8 <col:7> col:7 'const ARPPrint &'
`-CXXMethodDecl 0x55ee8c8f9468 <col:7> col:7 implicit operator= 'ARPPrint &(const ARPPrint &)' inline default_delete noexcept-unevaluated 0x55ee8c8f9468
  `-ParmVarDecl 0x55ee8c8f9578 <col:7> col:7 'const ARPPrint &'

Layout: <CGRecordLayout
  LLVMType:%class.ARPPrint = type { %class.Element.base, %class.String, i8, i8, i8, %class.String, %struct._IO_FILE*, %class.ErrorHandler* }
  NonVirtualBaseLLVMType:%class.ARPPrint = type { %class.Element.base, %class.String, i8, i8, i8, %class.String, %struct._IO_FILE*, %class.ErrorHandler* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c860268 prev 0x55ee8c8a4f38 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c860360 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55ee8c8603f0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55ee8c860528 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c860428 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55ee8c861950 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8c861930 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c8614c8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55ee8c8619e0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55ee8c8619a0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55ee8c860428 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55ee8c861530 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55ee8c861a60 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8c861a20 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c861590 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55ee8c861aa0 <col:54> 'bool' false
| `-CompoundStmt 0x55ee8c861ba8 <col:61, line:38:5>
|   `-BinaryOperator 0x55ee8c861b88 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55ee8c861b20 <col:9> 'const Element *' lvalue ->_context 0x55ee8c861468
|     | `-CXXThisExpr 0x55ee8c861b10 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55ee8c861b70 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55ee8c861b50 <col:20> 'int' 0
|-CXXConstructorDecl 0x55ee8c860738 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c8605e8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55ee8c860660 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55ee8c861988 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8c861968 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c861468 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55ee8c861c00 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55ee8c861bc0 <col:20> 'const Element *' lvalue ParmVar 0x55ee8c8605e8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55ee8c8614c8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55ee8c861c80 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55ee8c861c40 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55ee8c860660 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55ee8c861530 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55ee8c861d00 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55ee8c861cc0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c861590 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55ee8c861d40 <col:73> 'bool' false
| `-CompoundStmt 0x55ee8c861db8 <col:80, line:46:5>
|-CXXMethodDecl 0x55ee8c860868 <line:49:5, line:51:5> line:49:20 used context 'const Element *() const'
| `-CompoundStmt 0x55ee8c861e30 <col:36, line:51:5>
|   `-ReturnStmt 0x55ee8c861e20 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c861e08 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c861dd8 <col:16> 'const Element *const' lvalue ->_context 0x55ee8c861468
|         `-CXXThisExpr 0x55ee8c861dc8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55ee8c860958 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55ee8c861eb0 <col:32, line:57:5>
|   `-ReturnStmt 0x55ee8c861ea0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c861e88 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c861e58 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55ee8c8614c8
|         `-CXXThisExpr 0x55ee8c861e48 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55ee8c860a18 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55ee8c860ba0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55ee8c860ad0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c860cf0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55ee8c860c60 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c860e40 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55ee8c860db0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55ee8c861048 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55ee8c860ef8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55ee8c860f70 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55ee8c861378 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55ee8c861108 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55ee8c861188 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55ee8c861250 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55ee8c861430 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55ee8c861468 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55ee8c8614c8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55ee8c861530 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55ee8c861590 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55ee8c8615e0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55ee8c8615e0
| `-ParmVarDecl 0x55ee8c8616f8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55ee8c861798 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55ee8c861798
| `-ParmVarDecl 0x55ee8c8618a8 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55ee8cadd840 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c969978 prev 0x55ee8c950488 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c969a70 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55ee8c969b60 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55ee8c98f5a0 <col:16, line:828:9>
|-CXXDestructorDecl 0x55ee8c969c50 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55ee8c98f5b0 <col:25, line:830:9>
|-CXXMethodDecl 0x55ee8c969d50 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55ee8c969e00 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55ee8c969ea8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55ee8c969ea8
| `-ParmVarDecl 0x55ee8c969fb8 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55ee8c96a778 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55ee8c96a778
  `-ParmVarDecl 0x55ee8c96a888 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9502a0 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55ee8c9503f8 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55ee8c950488 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55ee8c950540 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55ee8c950648 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55ee8c950578 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ee8c97ee08 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8c97ede8 <col:31> 'int' 0
|-CXXConstructorDecl 0x55ee8c950968 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c9507e0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55ee8c950858 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ee8c97ee40 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8c97ee20 <col:59> 'int' 0
|-CXXConstructorDecl 0x55ee8c950b40 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c950a30 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55ee8c950aa8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ee8c97ee78 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8c97ee58 <col:55> 'int' 0
|-CXXConstructorDecl 0x55ee8c950ef8 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55ee8c950ce0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55ee8c950d58 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55ee8c950dd0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55ee8c97eeb0 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55ee8c97ee90 <col:31> 'int' 0
|-CXXConstructorDecl 0x55ee8c9510b8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55ee8c950ff8 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55ee8c9511b0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55ee8c951398 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55ee8c9512a0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55ee8c951488 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55ee8c97f260 <col:24, line:291:5>
|   `-ReturnStmt 0x55ee8c97f250 <line:290:9, col:79>
|     `-BinaryOperator 0x55ee8c97f230 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55ee8c97f108 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55ee8c97f060 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55ee8c97f040 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55ee8c97ef38 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55ee8c97ef20 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55ee8c97ef08 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55ee8c97eed8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55ee8c96b7a0
|       | |   |       `-CXXThisExpr 0x55ee8c97eec8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55ee8c97f028 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55ee8c97f010 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55ee8c97efd8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55ee8c97efa8 <col:28, col:35> '<bound member function type>' ->size 0x55ee8c92e578
|       | |           `-ImplicitCastExpr 0x55ee8c97eff8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55ee8c97ef90 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55ee8c97ef60 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55ee8c96b7a0
|       | |                 `-CXXThisExpr 0x55ee8c97ef50 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55ee8c97f0f0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55ee8c97f0d8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55ee8c97f0c0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55ee8c97f090 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55ee8c97d990
|       |         `-CXXThisExpr 0x55ee8c97f080 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55ee8c97f210 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55ee8c97f1f8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55ee8c97f1e0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55ee8c97f1a0 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55ee8c97f188 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55ee8c97f138 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55ee8c97da40
|         |     |   `-CXXThisExpr 0x55ee8c97f128 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55ee8c97f168 <col:73> 'int' 0
|         `-IntegerLiteral 0x55ee8c97f1c0 <col:79> 'int' 0
|-CXXMethodDecl 0x55ee8c951548 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55ee8c97f438 <col:32, line:296:5>
|   `-ReturnStmt 0x55ee8c97f428 <line:295:9, col:49>
|     `-BinaryOperator 0x55ee8c97f408 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55ee8c97f2e8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55ee8c97f2d0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55ee8c97f2b8 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55ee8c97f288 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55ee8c97d990
|       |       `-CXXThisExpr 0x55ee8c97f278 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55ee8c97f3e8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55ee8c97f3d0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55ee8c97f3b8 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55ee8c97f378 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55ee8c97f360 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55ee8c97f310 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55ee8c97da40
|         |     |   `-CXXThisExpr 0x55ee8c97f300 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55ee8c97f340 <col:43> 'int' 0
|         `-IntegerLiteral 0x55ee8c97f398 <col:49> 'int' 0
|-CXXMethodDecl 0x55ee8c951638 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55ee8c980fb0 <col:19, line:306:5>
|   |-IfStmt 0x55ee8c97f568 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55ee8c97f4a8 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55ee8c97f490 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55ee8c97f460 <col:13> 'Vector<String> *' lvalue ->_conf 0x55ee8c96b7a0
|   | |     `-CXXThisExpr 0x55ee8c97f450 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55ee8c97f548 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55ee8c97f518 <col:13, col:20> '<bound member function type>' ->clear 0x55ee8c930f78
|   |     `-ImplicitCastExpr 0x55ee8c97f500 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55ee8c97f4d0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55ee8c96b7a0
|   |         `-CXXThisExpr 0x55ee8c97f4c0 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55ee8c97f5f0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55ee8c97f5c0 <col:9, col:16> '<bound member function type>' .clear 0x55ee8c97d518
|   |   `-MemberExpr 0x55ee8c97f590 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55ee8c97d930
|   |     `-CXXThisExpr 0x55ee8c97f580 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55ee8c980fa0 <line:305:9, col:17>
|     `-UnaryOperator 0x55ee8c97f620 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c97f610 <col:17> 'Args *' this
|-CXXMethodDecl 0x55ee8c9518b8 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55ee8c9517c0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55ee8c951a38 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55ee8c951970 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55ee8c951db8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55ee8c951ae0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55ee8c951d18 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55ee8c951b88 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55ee8c951c00 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55ee8c9812d0 <col:67, line:327:5>
|     |-WhileStmt 0x55ee8c981280 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55ee8c981098 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55ee8c981018 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55ee8c89d408 0x55ee8c6e69e8 0x55ee8c6e66c0 0x55ee8c6d7ea0 0x55ee8c6d7b50 0x55ee8c6d7440 0x55ee8c6a9db0 0x55ee8c636050
|     | | |-DeclRefExpr 0x55ee8c980fd8 <col:16> 'Iter' lvalue ParmVar 0x55ee8c951b88 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55ee8c980ff8 <col:25> 'Iter' lvalue ParmVar 0x55ee8c951c00 'end' 'Iter'
|     | `-CompoundStmt 0x55ee8c981260 <col:30, line:325:9>
|     |   |-CallExpr 0x55ee8c981200 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55ee8c9810e0 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55ee8c9811d0 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55ee8c981160 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|     |   |   `-DeclRefExpr 0x55ee8c981140 <col:24> 'Iter' lvalue ParmVar 0x55ee8c951b88 'begin' 'Iter'
|     |   `-UnaryOperator 0x55ee8c981248 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55ee8c981228 <col:15> 'Iter' lvalue ParmVar 0x55ee8c951b88 'begin' 'Iter'
|     `-ReturnStmt 0x55ee8c9812c0 <line:326:9, col:17>
|       `-UnaryOperator 0x55ee8c9812a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c981298 <col:17> 'Args *' this
|-CXXMethodDecl 0x55ee8c951ec0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55ee8c951e30 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55ee8c952008 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55ee8c951f78 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55ee8c9520d0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55ee8c9813b0 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55ee8c981350 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55ee8c981300 <col:9> '<bound member function type>' ->reset_from 0x55ee8c97ddb8
|   | | `-CXXThisExpr 0x55ee8c9812f0 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55ee8c981330 <col:20> 'int' 0
|   `-ReturnStmt 0x55ee8c9813a0 <line:352:9, col:17>
|     `-UnaryOperator 0x55ee8c981388 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c981378 <col:17> 'Args *' this
|-VarDecl 0x55ee8c952188 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55ee8c9521f0 <col:38> 'int' 1
|-VarDecl 0x55ee8c952280 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55ee8c9522e8 <col:39> 'int' 2
|-VarDecl 0x55ee8c952378 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55ee8c9523e0 <col:39> 'int' 4
|-VarDecl 0x55ee8c952470 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55ee8c9524d8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55ee8c952858 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55ee8c952550 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55ee8c9527b8 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55ee8c952600 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55ee8c9526a8 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55ee8c981508 <col:43, line:371:5>
| |   `-ReturnStmt 0x55ee8c9814f8 <line:370:9, col:34>
| |     `-CallExpr 0x55ee8c9814c0 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55ee8c9813e0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55ee8c981460 <col:21> 'const char *' lvalue ParmVar 0x55ee8c952600 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55ee8c981480 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55ee8c9814a0 <col:33> 'T' lvalue ParmVar 0x55ee8c9526a8 'x' 'T &'
| `-CXXMethodDecl 0x55ee8cade1e8 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x55ee8cade000 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55ee8cade0d8 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x55ee8c952b88 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55ee8c9528c0 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ee8c952ae8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55ee8c952970 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c952a18 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c981658 <col:45, line:375:5>
|     `-ReturnStmt 0x55ee8c981648 <line:374:9, col:42>
|       `-CallExpr 0x55ee8c981610 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c981530 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c9815b0 <col:21> 'const char *' lvalue ParmVar 0x55ee8c952970 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c9815d0 <col:30> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int'
|         `-DeclRefExpr 0x55ee8c9815f0 <col:41> 'T' lvalue ParmVar 0x55ee8c952a18 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c952eb8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55ee8c952bf0 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55ee8c952e18 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55ee8c952ca0 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55ee8c952d48 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x55ee8c9817a8 <col:45, line:379:5>
| |   `-ReturnStmt 0x55ee8c981798 <line:378:9, col:43>
| |     `-CallExpr 0x55ee8c981760 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55ee8c981680 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55ee8c981700 <col:21> 'const char *' lvalue ParmVar 0x55ee8c952ca0 'keyword' 'const char *'
| |       |-DeclRefExpr 0x55ee8c981720 <col:30> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int'
| |       `-DeclRefExpr 0x55ee8c981740 <col:42> 'T' lvalue ParmVar 0x55ee8c952d48 'x' 'T &'
| `-CXXMethodDecl 0x55ee8caddcc8 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, String &)'
|   |-TemplateArgument type 'String'
|   |-ParmVarDecl 0x55ee8caddae0 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x55ee8caddbb8 <col:39, col:42> col:42 x 'String &'
|-FunctionTemplateDecl 0x55ee8c9531e8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55ee8c952f20 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ee8c953148 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55ee8c952fd0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c953078 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c9819a8 <col:46, line:383:5>
|     `-ReturnStmt 0x55ee8c981998 <line:382:9, col:55>
|       `-CallExpr 0x55ee8c981960 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c9817d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c981850 <col:21> 'const char *' lvalue ParmVar 0x55ee8c952fd0 'keyword' 'const char *'
|         |-BinaryOperator 0x55ee8c981920 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55ee8c9818d0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ee8c9818b0 <col:30> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55ee8c981908 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ee8c9818e8 <col:42> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55ee8c981940 <col:54> 'T' lvalue ParmVar 0x55ee8c953078 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c9535e8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55ee8c953250 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ee8c953548 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55ee8c953300 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c953380 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c953428 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c981ae8 <col:54, line:388:5>
|     |-CallExpr 0x55ee8c981a70 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c9819c0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55ee8c981a00 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c981a10 <col:30> 'const char *' lvalue ParmVar 0x55ee8c953300 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ee8c981a30 <col:39> 'int' lvalue ParmVar 0x55ee8c953380 'flags' 'int'
|     | `-DeclRefExpr 0x55ee8c981a50 <col:46> 'T' lvalue ParmVar 0x55ee8c953428 'x' 'T &'
|     `-ReturnStmt 0x55ee8c981ad8 <line:387:9, col:17>
|       `-UnaryOperator 0x55ee8c981ac0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c981ab0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c953a98 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55ee8c953658 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ee8c9536d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ee8c9539f8 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55ee8c953798 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c953838 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55ee8c9538d8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ee8c981c58 <col:74, line:403:5>
|     `-ReturnStmt 0x55ee8c981c48 <line:402:9, col:56>
|       `-CallExpr 0x55ee8c981c08 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c981b18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c981b88 <col:28> 'const char *' lvalue ParmVar 0x55ee8c953798 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ee8c981ba8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55ee8c981bc8 <col:40> 'T' lvalue ParmVar 0x55ee8c953838 'x' 'T &'
|         `-DeclRefExpr 0x55ee8c981be8 <col:43> 'const V' lvalue ParmVar 0x55ee8c9538d8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55ee8c953f08 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55ee8c953b08 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ee8c953b88 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ee8c953e68 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55ee8c953c48 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c953ce8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55ee8c953d88 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ee8c981dc0 <col:76, line:407:5>
|     `-ReturnStmt 0x55ee8c981db0 <line:406:9, col:65>
|       `-CallExpr 0x55ee8c981d70 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c981c80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c981cf0 <col:28> 'const char *' lvalue ParmVar 0x55ee8c953c48 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c981d10 <col:37> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int'
|         |-DeclRefExpr 0x55ee8c981d30 <col:49> 'T' lvalue ParmVar 0x55ee8c953ce8 'x' 'T &'
|         `-DeclRefExpr 0x55ee8c981d50 <col:52> 'const V' lvalue ParmVar 0x55ee8c953d88 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55ee8c954458 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55ee8c953f78 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ee8c953ff8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ee8c9543b8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55ee8c9540b8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c954138 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c9541d8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55ee8c954278 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ee8c981f28 <col:85, line:412:5>
|     |-CallExpr 0x55ee8c981ea8 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c981dd8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55ee8c981e18 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c981e28 <col:37> 'const char *' lvalue ParmVar 0x55ee8c9540b8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ee8c981e48 <col:46> 'int' lvalue ParmVar 0x55ee8c954138 'flags' 'int'
|     | |-DeclRefExpr 0x55ee8c981e68 <col:53> 'T' lvalue ParmVar 0x55ee8c9541d8 'x' 'T &'
|     | `-DeclRefExpr 0x55ee8c981e88 <col:56> 'const V' lvalue ParmVar 0x55ee8c954278 'default_value' 'const V &'
|     `-ReturnStmt 0x55ee8c981f18 <line:411:9, col:17>
|       `-UnaryOperator 0x55ee8c981f00 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c981ef0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c9548e8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55ee8c9544d0 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c954548 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55ee8c954848 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55ee8c954608 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55ee8c954680 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55ee8c954728 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x55ee8c9820a8 <col:53, line:425:5>
| |   `-ReturnStmt 0x55ee8c982098 <line:424:9, col:42>
| |     `-CallExpr 0x55ee8c982058 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55ee8c981f58 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55ee8c981fd8 <col:21> 'const char *' lvalue ParmVar 0x55ee8c954608 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55ee8c981ff8 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55ee8c982018 <col:33> 'P' lvalue ParmVar 0x55ee8c954680 'parser' 'P'
| |       `-DeclRefExpr 0x55ee8c982038 <col:41> 'T' lvalue ParmVar 0x55ee8c954728 'x' 'T &'
| `-CXXMethodDecl 0x55ee8cafa168 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, FilenameArg, String &)'
|   |-TemplateArgument type 'FilenameArg'
|   |-TemplateArgument type 'String'
|   |-ParmVarDecl 0x55ee8caf9ed0 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55ee8caf9f78 <col:37, col:39> col:39 parser 'FilenameArg':'FilenameArg'
|   `-ParmVarDecl 0x55ee8cafa048 <col:47, col:50> col:50 x 'String &'
|-FunctionTemplateDecl 0x55ee8c954d38 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55ee8c954958 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c9549d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c954c98 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ee8c954a98 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c954b10 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c954bb8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c982220 <col:55, line:429:5>
|     `-ReturnStmt 0x55ee8c982210 <line:428:9, col:50>
|       `-CallExpr 0x55ee8c9821d0 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c9820d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c982150 <col:21> 'const char *' lvalue ParmVar 0x55ee8c954a98 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c982170 <col:30> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int'
|         |-DeclRefExpr 0x55ee8c982190 <col:41> 'P' lvalue ParmVar 0x55ee8c954b10 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c9821b0 <col:49> 'T' lvalue ParmVar 0x55ee8c954bb8 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c955188 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55ee8c954da8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c954e28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c9550e8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ee8c954ee8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c954f60 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c955008 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c982398 <col:55, line:433:5>
|     `-ReturnStmt 0x55ee8c982388 <line:432:9, col:51>
|       `-CallExpr 0x55ee8c982348 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c982248 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c9822c8 <col:21> 'const char *' lvalue ParmVar 0x55ee8c954ee8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c9822e8 <col:30> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int'
|         |-DeclRefExpr 0x55ee8c982308 <col:42> 'P' lvalue ParmVar 0x55ee8c954f60 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c982328 <col:50> 'T' lvalue ParmVar 0x55ee8c955008 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c9555d8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55ee8c9551f8 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c955278 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c955538 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ee8c955338 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c9553b0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c955458 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c9825c0 <col:56, line:437:5>
|     `-ReturnStmt 0x55ee8c9825b0 <line:436:9, col:63>
|       `-CallExpr 0x55ee8c982570 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c9823c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c982440 <col:21> 'const char *' lvalue ParmVar 0x55ee8c955338 'keyword' 'const char *'
|         |-BinaryOperator 0x55ee8c982510 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55ee8c9824c0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ee8c9824a0 <col:30> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55ee8c9824f8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ee8c9824d8 <col:42> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55ee8c982530 <col:54> 'P' lvalue ParmVar 0x55ee8c9553b0 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c982550 <col:62> 'T' lvalue ParmVar 0x55ee8c955458 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c955b08 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55ee8c955648 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c9556c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c955a68 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ee8c955788 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c955808 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c955880 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c955928 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c982728 <col:64, line:442:5>
|     |-CallExpr 0x55ee8c9826a8 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c9825d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55ee8c982618 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c982628 <col:30> 'const char *' lvalue ParmVar 0x55ee8c955788 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ee8c982648 <col:39> 'int' lvalue ParmVar 0x55ee8c955808 'flags' 'int'
|     | |-DeclRefExpr 0x55ee8c982668 <col:46> 'P' lvalue ParmVar 0x55ee8c955880 'parser' 'P'
|     | `-DeclRefExpr 0x55ee8c982688 <col:54> 'T' lvalue ParmVar 0x55ee8c955928 'x' 'T &'
|     `-ReturnStmt 0x55ee8c982718 <line:441:9, col:17>
|       `-UnaryOperator 0x55ee8c982700 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c9826f0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c956108 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55ee8c955b80 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c955bf8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55ee8c955c78 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55ee8c956068 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55ee8c955d40 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c955db8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c955e58 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55ee8c955f28 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ee8c9828c0 <col:84, line:458:5>
|     `-ReturnStmt 0x55ee8c9828b0 <line:457:9, col:64>
|       `-CallExpr 0x55ee8c982868 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c982758 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c9827c8 <col:28> 'const char *' lvalue ParmVar 0x55ee8c955d40 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ee8c9827e8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55ee8c982808 <col:40> 'P' lvalue ParmVar 0x55ee8c955db8 'parser' 'P'
|         |-DeclRefExpr 0x55ee8c982828 <col:48> 'T' lvalue ParmVar 0x55ee8c955e58 'x' 'T &'
|         `-DeclRefExpr 0x55ee8c982848 <col:51> 'const V' lvalue ParmVar 0x55ee8c955f28 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55ee8c956688 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55ee8c956180 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c9561f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55ee8c956278 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55ee8c9565e8 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55ee8c956340 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c9563b8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c956458 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55ee8c9564f8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ee8c982a50 <col:86, line:462:5>
|     `-ReturnStmt 0x55ee8c982a40 <line:461:9, col:73>
|       `-CallExpr 0x55ee8c9829f8 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c9828e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c982958 <col:28> 'const char *' lvalue ParmVar 0x55ee8c956340 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c982978 <col:37> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int'
|         |-DeclRefExpr 0x55ee8c982998 <col:49> 'P' lvalue ParmVar 0x55ee8c9563b8 'parser' 'P'
|         |-DeclRefExpr 0x55ee8c9829b8 <col:57> 'T' lvalue ParmVar 0x55ee8c956458 'x' 'T &'
|         `-DeclRefExpr 0x55ee8c9829d8 <col:60> 'const V' lvalue ParmVar 0x55ee8c9564f8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55ee8c956ce8 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55ee8c956700 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c956778 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55ee8c9567f8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55ee8c956c48 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55ee8c9568c0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c956940 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c9569b8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c956a58 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55ee8c956af8 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55ee8c982be0 <col:95, line:467:5>
|     |-CallExpr 0x55ee8c982b58 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c982a68 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55ee8c982aa8 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c982ab8 <col:37> 'const char *' lvalue ParmVar 0x55ee8c9568c0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ee8c982ad8 <col:46> 'int' lvalue ParmVar 0x55ee8c956940 'flags' 'int'
|     | |-DeclRefExpr 0x55ee8c982af8 <col:53> 'P' lvalue ParmVar 0x55ee8c9569b8 'parser' 'P'
|     | |-DeclRefExpr 0x55ee8c982b18 <col:61> 'T' lvalue ParmVar 0x55ee8c956a58 'x' 'T &'
|     | `-DeclRefExpr 0x55ee8c982b38 <col:64> 'const V' lvalue ParmVar 0x55ee8c956af8 'default_value' 'const V &'
|     `-ReturnStmt 0x55ee8c982bd0 <line:466:9, col:17>
|       `-UnaryOperator 0x55ee8c982bb8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c982ba8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c9572c8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55ee8c956d68 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c956de8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ee8c956e68 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ee8c957228 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ee8c956f30 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c956fa8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c957048 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ee8c9570e8 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ee8c982d88 <col:63, line:481:5>
|     `-ReturnStmt 0x55ee8c982d78 <line:480:9, col:47>
|       `-CallExpr 0x55ee8c982d30 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c982c10 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c982c90 <col:21> 'const char *' lvalue ParmVar 0x55ee8c956f30 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ee8c982cb0 <col:30> 'int' 0
|         |-DeclRefExpr 0x55ee8c982cd0 <col:33> 'P' lvalue ParmVar 0x55ee8c956fa8 'parser' 'P'
|         |-DeclRefExpr 0x55ee8c982cf0 <col:41> 'T1' lvalue ParmVar 0x55ee8c957048 'x1' 'T1 &'
|         `-DeclRefExpr 0x55ee8c982d10 <col:45> 'T2' lvalue ParmVar 0x55ee8c9570e8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55ee8c957848 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55ee8c957340 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c9573b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ee8c957438 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ee8c9577a8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ee8c957500 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c957578 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c957618 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ee8c9576b8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ee8c982f28 <col:65, line:485:5>
|     `-ReturnStmt 0x55ee8c982f18 <line:484:9, col:55>
|       `-CallExpr 0x55ee8c982ed0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c982db0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c982e30 <col:21> 'const char *' lvalue ParmVar 0x55ee8c957500 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c982e50 <col:30> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int'
|         |-DeclRefExpr 0x55ee8c982e70 <col:41> 'P' lvalue ParmVar 0x55ee8c957578 'parser' 'P'
|         |-DeclRefExpr 0x55ee8c982e90 <col:49> 'T1' lvalue ParmVar 0x55ee8c957618 'x1' 'T1 &'
|         `-DeclRefExpr 0x55ee8c982eb0 <col:53> 'T2' lvalue ParmVar 0x55ee8c9576b8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55ee8c957dc8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55ee8c9578c0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c957938 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ee8c9579b8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ee8c957d28 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ee8c957a80 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c957af8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c957b98 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ee8c957c38 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ee8c9830c8 <col:65, line:489:5>
|     `-ReturnStmt 0x55ee8c9830b8 <line:488:9, col:56>
|       `-CallExpr 0x55ee8c983070 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c982f50 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c982fd0 <col:21> 'const char *' lvalue ParmVar 0x55ee8c957a80 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c982ff0 <col:30> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int'
|         |-DeclRefExpr 0x55ee8c983010 <col:42> 'P' lvalue ParmVar 0x55ee8c957af8 'parser' 'P'
|         |-DeclRefExpr 0x55ee8c983030 <col:50> 'T1' lvalue ParmVar 0x55ee8c957b98 'x1' 'T1 &'
|         `-DeclRefExpr 0x55ee8c983050 <col:54> 'T2' lvalue ParmVar 0x55ee8c957c38 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55ee8c9589a8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55ee8c957e40 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c957eb8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ee8c957f38 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ee8c958908 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ee8c958000 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c9586d0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c958778 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ee8c958818 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ee8c983318 <col:66, line:493:5>
|     `-ReturnStmt 0x55ee8c983308 <line:492:9, col:68>
|       `-CallExpr 0x55ee8c9832c0 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c9830f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c983170 <col:21> 'const char *' lvalue ParmVar 0x55ee8c958000 'keyword' 'const char *'
|         |-BinaryOperator 0x55ee8c983240 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55ee8c9831f0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ee8c9831d0 <col:30> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55ee8c983228 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ee8c983208 <col:42> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55ee8c983260 <col:54> 'P' lvalue ParmVar 0x55ee8c9586d0 'parser' 'P'
|         |-DeclRefExpr 0x55ee8c983280 <col:62> 'T1' lvalue ParmVar 0x55ee8c958778 'x1' 'T1 &'
|         `-DeclRefExpr 0x55ee8c9832a0 <col:66> 'T2' lvalue ParmVar 0x55ee8c958818 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55ee8c959008 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55ee8c958a20 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c958a98 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ee8c958b18 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ee8c958f68 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ee8c958be0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c958c60 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c958cd8 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c958d78 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55ee8c958e18 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55ee8c9834a8 <col:74, line:498:5>
|     |-CallExpr 0x55ee8c983420 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c983330 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55ee8c983370 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c983380 <col:30> 'const char *' lvalue ParmVar 0x55ee8c958be0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ee8c9833a0 <col:39> 'int' lvalue ParmVar 0x55ee8c958c60 'flags' 'int'
|     | |-DeclRefExpr 0x55ee8c9833c0 <col:46> 'P' lvalue ParmVar 0x55ee8c958cd8 'parser' 'P'
|     | |-DeclRefExpr 0x55ee8c9833e0 <col:54> 'T1' lvalue ParmVar 0x55ee8c958d78 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55ee8c983400 <col:58> 'T2' lvalue ParmVar 0x55ee8c958e18 'x2' 'T2 &'
|     `-ReturnStmt 0x55ee8c983498 <line:497:9, col:17>
|       `-UnaryOperator 0x55ee8c983480 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c983470 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c959368 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55ee8c959088 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c9592c8 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ee8c959140 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c9591b8 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c9835f0 <col:52, line:509:5>
|     `-ReturnStmt 0x55ee8c9835e0 <line:508:9, col:44>
|       `-CallExpr 0x55ee8c9835a8 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c9834d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c983548 <col:26> 'const char *' lvalue ParmVar 0x55ee8c959140 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ee8c983568 <col:35> 'int' 0
|         `-DeclRefExpr 0x55ee8c983588 <col:38> 'P' lvalue ParmVar 0x55ee8c9591b8 'parser' 'P'
|-FunctionTemplateDecl 0x55ee8c959668 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55ee8c9593d0 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c9595c8 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ee8c959480 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c9594f8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c983730 <col:54, line:513:5>
|     `-ReturnStmt 0x55ee8c983720 <line:512:9, col:52>
|       `-CallExpr 0x55ee8c9836e8 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c983618 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c983688 <col:26> 'const char *' lvalue ParmVar 0x55ee8c959480 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c9836a8 <col:35> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int'
|         `-DeclRefExpr 0x55ee8c9836c8 <col:46> 'P' lvalue ParmVar 0x55ee8c9594f8 'parser' 'P'
|-FunctionTemplateDecl 0x55ee8c959968 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55ee8c9596d0 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c9598c8 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ee8c959780 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c9597f8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c983870 <col:54, line:517:5>
|     `-ReturnStmt 0x55ee8c983860 <line:516:9, col:53>
|       `-CallExpr 0x55ee8c983828 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c983758 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c9837c8 <col:26> 'const char *' lvalue ParmVar 0x55ee8c959780 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c9837e8 <col:35> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int'
|         `-DeclRefExpr 0x55ee8c983808 <col:47> 'P' lvalue ParmVar 0x55ee8c9597f8 'parser' 'P'
|-FunctionTemplateDecl 0x55ee8c959c68 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55ee8c9599d0 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c959bc8 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ee8c959a80 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c959af8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c983a60 <col:55, line:521:5>
|     `-ReturnStmt 0x55ee8c983a50 <line:520:9, col:65>
|       `-CallExpr 0x55ee8c983a18 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c983898 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c983908 <col:26> 'const char *' lvalue ParmVar 0x55ee8c959a80 'keyword' 'const char *'
|         |-BinaryOperator 0x55ee8c9839d8 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55ee8c983988 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55ee8c983968 <col:35> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55ee8c9839c0 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55ee8c9839a0 <col:47> 'const int' lvalue Var 0x55ee8c952280 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55ee8c9839f8 <col:59> 'P' lvalue ParmVar 0x55ee8c959af8 'parser' 'P'
|-FunctionTemplateDecl 0x55ee8c95a038 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55ee8c959cd0 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c959f98 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55ee8c959d80 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c959e00 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c959e78 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c983ba0 <col:63, line:526:5>
|     |-CallExpr 0x55ee8c983b28 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c983a78 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55ee8c983ab8 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c983ac8 <col:35> 'const char *' lvalue ParmVar 0x55ee8c959d80 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55ee8c983ae8 <col:44> 'int' lvalue ParmVar 0x55ee8c959e00 'flags' 'int'
|     | `-DeclRefExpr 0x55ee8c983b08 <col:51> 'P' lvalue ParmVar 0x55ee8c959e78 'parser' 'P'
|     `-ReturnStmt 0x55ee8c983b90 <line:525:9, col:17>
|       `-UnaryOperator 0x55ee8c983b78 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c983b68 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c95a488 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55ee8c95a0a8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95a128 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95a3e8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ee8c95a1e8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95a260 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95a308 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c983cf8 <col:58, line:541:5>
|     `-ReturnStmt 0x55ee8c983ce8 <line:540:9, col:39>
|       `-CallExpr 0x55ee8c983cb0 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c983bd0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c983c50 <col:21> 'const char *' lvalue ParmVar 0x55ee8c95a1e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c983c70 <col:30> 'P' lvalue ParmVar 0x55ee8c95a260 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c983c90 <col:38> 'T' lvalue ParmVar 0x55ee8c95a308 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c95a8d8 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55ee8c95a4f8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95a578 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95a838 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ee8c95a638 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95a6b0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95a758 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c983e30 <col:60, line:545:5>
|     `-ReturnStmt 0x55ee8c983e20 <line:544:9, col:41>
|       `-CallExpr 0x55ee8c983de8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c983d20 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c983d88 <col:23> 'const char *' lvalue ParmVar 0x55ee8c95a638 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c983da8 <col:32> 'P' lvalue ParmVar 0x55ee8c95a6b0 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c983dc8 <col:40> 'T' lvalue ParmVar 0x55ee8c95a758 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c95ad28 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55ee8c95a948 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95a9c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95ac88 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ee8c95aa88 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95ab00 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95aba8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c983f68 <col:60, line:549:5>
|     `-ReturnStmt 0x55ee8c983f58 <line:548:9, col:41>
|       `-CallExpr 0x55ee8c983f20 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c983e58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c983ec0 <col:23> 'const char *' lvalue ParmVar 0x55ee8c95aa88 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c983ee0 <col:32> 'P' lvalue ParmVar 0x55ee8c95ab00 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c983f00 <col:40> 'T' lvalue ParmVar 0x55ee8c95aba8 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c95b178 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55ee8c95ad98 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95ae18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95b0d8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ee8c95aed8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95af50 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95aff8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c9840a0 <col:61, line:553:5>
|     `-ReturnStmt 0x55ee8c984090 <line:552:9, col:42>
|       `-CallExpr 0x55ee8c984058 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c983f90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c983ff8 <col:24> 'const char *' lvalue ParmVar 0x55ee8c95aed8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c984018 <col:33> 'P' lvalue ParmVar 0x55ee8c95af50 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c984038 <col:41> 'T' lvalue ParmVar 0x55ee8c95aff8 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c95b658 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55ee8c95b1e8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95b268 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95b5b8 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ee8c95b328 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95b3a8 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c95b420 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95b4c8 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c984218 <col:69, line:557:5>
|     `-ReturnStmt 0x55ee8c984208 <line:556:9, col:46>
|       `-CallExpr 0x55ee8c9841c8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c9840c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c984148 <col:21> 'const char *' lvalue ParmVar 0x55ee8c95b328 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c984168 <col:30> 'int' lvalue ParmVar 0x55ee8c95b3a8 'flags' 'int'
|         |-DeclRefExpr 0x55ee8c984188 <col:37> 'P' lvalue ParmVar 0x55ee8c95b420 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c9841a8 <col:45> 'T' lvalue ParmVar 0x55ee8c95b4c8 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c95b968 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55ee8c95b6d0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c95b8c8 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55ee8c95b780 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95b7f8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c984358 <col:56, line:571:5>
|     `-ReturnStmt 0x55ee8c984348 <line:570:9, col:48>
|       `-CallExpr 0x55ee8c984310 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c984240 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c9842b0 <col:30> 'const char *' lvalue ParmVar 0x55ee8c95b780 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ee8c9842d0 <col:39> 'int' 0
|         `-DeclRefExpr 0x55ee8c9842f0 <col:42> 'P' lvalue ParmVar 0x55ee8c95b7f8 'parser' 'P'
|-FunctionTemplateDecl 0x55ee8c95bcf8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55ee8c95b9d0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c95bc58 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55ee8c95ba80 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95bb00 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c95bb78 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c984528 <col:67, line:576:5>
|     |-CallExpr 0x55ee8c9844b0 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c984370 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55ee8c9843b0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c9843c0 <col:39> 'const char *' lvalue ParmVar 0x55ee8c95ba80 'keyword' 'const char *'
|     | |-BinaryOperator 0x55ee8c984470 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55ee8c984420 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55ee8c9843e0 <col:48> 'int' lvalue ParmVar 0x55ee8c95bb00 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55ee8c984458 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55ee8c984438 <col:56> 'const int' lvalue Var 0x55ee8c952470 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55ee8c984490 <col:68> 'P' lvalue ParmVar 0x55ee8c95bb78 'parser' 'P'
|     `-ReturnStmt 0x55ee8c984518 <line:575:9, col:17>
|       `-UnaryOperator 0x55ee8c984500 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c9844f0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c95c148 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55ee8c95bd68 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95bde8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95c0a8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55ee8c95bea8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95bf20 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95bfc8 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c984698 <col:62, line:592:5>
|     `-ReturnStmt 0x55ee8c984688 <line:591:9, col:51>
|       `-CallExpr 0x55ee8c984648 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c984558 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c9845c8 <col:30> 'const char *' lvalue ParmVar 0x55ee8c95bea8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ee8c9845e8 <col:39> 'int' 0
|         |-DeclRefExpr 0x55ee8c984608 <col:42> 'P' lvalue ParmVar 0x55ee8c95bf20 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c984628 <col:50> 'T' lvalue ParmVar 0x55ee8c95bfc8 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c95c628 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55ee8c95c1b8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95c238 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95c588 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ee8c95c2f8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95c378 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c95c3f0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95c498 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c984890 <col:73, line:597:5>
|     |-CallExpr 0x55ee8c984810 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c9846b0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55ee8c9846f0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c984700 <col:39> 'const char *' lvalue ParmVar 0x55ee8c95c2f8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55ee8c9847b0 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55ee8c984760 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55ee8c984720 <col:48> 'int' lvalue ParmVar 0x55ee8c95c378 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55ee8c984798 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55ee8c984778 <col:56> 'const int' lvalue Var 0x55ee8c952470 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55ee8c9847d0 <col:68> 'P' lvalue ParmVar 0x55ee8c95c3f0 'parser' 'P'
|     | `-DeclRefExpr 0x55ee8c9847f0 <col:76> 'T' lvalue ParmVar 0x55ee8c95c498 'x' 'T &'
|     `-ReturnStmt 0x55ee8c984880 <line:596:9, col:17>
|       `-UnaryOperator 0x55ee8c984868 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c984858 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c95cbd8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55ee8c95c6a0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95c718 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95cb38 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55ee8c95c7d8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95c850 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95ca10 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55ee8c984a00 <col:65, line:614:5>
|     `-ReturnStmt 0x55ee8c9849f0 <line:613:9, col:46>
|       `-CallExpr 0x55ee8c9849b0 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c9848c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c984930 <col:25> 'const char *' lvalue ParmVar 0x55ee8c95c7d8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ee8c984950 <col:34> 'int' 0
|         |-DeclRefExpr 0x55ee8c984970 <col:37> 'P' lvalue ParmVar 0x55ee8c95c850 'parser' 'P'
|         `-DeclRefExpr 0x55ee8c984990 <col:45> 'Vector<T>' lvalue ParmVar 0x55ee8c95ca10 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55ee8c95d008 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55ee8c95cc48 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ee8c95cf68 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55ee8c95cd00 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95ce50 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55ee8c984c20 <col:55, line:618:5>
|     `-ReturnStmt 0x55ee8c984c10 <line:617:9, col:55>
|       `-CallExpr 0x55ee8c984bd0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c984a28 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c984a98 <col:25> 'const char *' lvalue ParmVar 0x55ee8c95cd00 'keyword' 'const char *'
|         |-IntegerLiteral 0x55ee8c984ab8 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55ee8c984b90 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55ee8c984bb0 <col:54> 'Vector<T>' lvalue ParmVar 0x55ee8c95ce50 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55ee8c95d5d8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55ee8c95d070 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95d0e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95d538 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55ee8c95d1a8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95d228 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c95d2a0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95d3f0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55ee8c984e18 <col:76, line:623:5>
|     |-CallExpr 0x55ee8c984d98 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55ee8c984c38 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55ee8c984c78 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55ee8c984c88 <col:34> 'const char *' lvalue ParmVar 0x55ee8c95d1a8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55ee8c984d38 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55ee8c984ce8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55ee8c984ca8 <col:43> 'int' lvalue ParmVar 0x55ee8c95d228 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55ee8c984d20 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55ee8c984d00 <col:51> 'const int' lvalue Var 0x55ee8c952470 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55ee8c984d58 <col:63> 'P' lvalue ParmVar 0x55ee8c95d2a0 'parser' 'P'
|     | `-DeclRefExpr 0x55ee8c984d78 <col:71> 'Vector<T>' lvalue ParmVar 0x55ee8c95d3f0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55ee8c984e08 <line:622:9, col:17>
|       `-UnaryOperator 0x55ee8c984df0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c984de0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c95db18 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55ee8c95d650 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95d6c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95da78 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55ee8c95d788 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95d808 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c95d950 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55ee8c985080 <col:66, line:627:5>
|     `-ReturnStmt 0x55ee8c985070 <line:626:9, col:59>
|       `-CallExpr 0x55ee8c985030 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55ee8c984e48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55ee8c984eb8 <col:25> 'const char *' lvalue ParmVar 0x55ee8c95d788 'keyword' 'const char *'
|         |-DeclRefExpr 0x55ee8c984ed8 <col:34> 'int' lvalue ParmVar 0x55ee8c95d808 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55ee8c984ff0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55ee8c985010 <col:58> 'Vector<T>' lvalue ParmVar 0x55ee8c95d950 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55ee8c95dba8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55ee8c985100 <col:25, line:633:5>
|   `-ReturnStmt 0x55ee8c9850f0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c9850d8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55ee8c9850a8 <col:16> 'const bool' lvalue ->_status 0x55ee8c96b608
|         `-CXXThisExpr 0x55ee8c985098 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55ee8c95dd28 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55ee8c95dc60 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55ee8c9851e8 <col:27, line:639:5>
|   |-BinaryOperator 0x55ee8c985190 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55ee8c985118 <col:9> 'bool' lvalue ParmVar 0x55ee8c95dc60 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55ee8c985178 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55ee8c985148 <col:13> 'bool' lvalue ->_status 0x55ee8c96b608
|   |     `-CXXThisExpr 0x55ee8c985138 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55ee8c9851d8 <line:638:9, col:17>
|     `-UnaryOperator 0x55ee8c9851c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c9851b0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55ee8c95dea8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55ee8c95dde8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55ee8c9852d8 <col:39, line:644:5>
|   |-BinaryOperator 0x55ee8c985280 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55ee8c985208 <col:9> 'bool' lvalue ParmVar 0x55ee8c95dde8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55ee8c985268 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55ee8c985238 <col:13> 'const bool' lvalue ->_status 0x55ee8c96b608
|   |     `-CXXThisExpr 0x55ee8c985228 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55ee8c9852c8 <line:643:9, col:17>
|     `-UnaryOperator 0x55ee8c9852b0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c9852a0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55ee8c95df70 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55ee8c985380 <col:30, line:651:5>
|   `-ReturnStmt 0x55ee8c985370 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c985358 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55ee8c985328 <col:16> 'bool' lvalue ->_read_status 0x55ee8c861590
|         `-ImplicitCastExpr 0x55ee8c985308 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55ee8c9852f8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55ee8c95e0b8 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55ee8c95e028 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55ee8c985488 <col:32, line:658:5>
|   |-BinaryOperator 0x55ee8c985430 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55ee8c985398 <col:9> 'bool' lvalue ParmVar 0x55ee8c95e028 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55ee8c985418 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55ee8c9853e8 <col:13> 'bool' lvalue ->_read_status 0x55ee8c861590
|   |     `-ImplicitCastExpr 0x55ee8c9853c8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55ee8c9853b8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55ee8c985478 <line:657:9, col:17>
|     `-UnaryOperator 0x55ee8c985460 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c985450 <col:17> 'Args *' this
|-CXXMethodDecl 0x55ee8c95e208 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55ee8c95e178 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55ee8c985598 <col:44, line:663:5>
|   |-BinaryOperator 0x55ee8c985540 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55ee8c9854a8 <col:9> 'bool' lvalue ParmVar 0x55ee8c95e178 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55ee8c985528 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55ee8c9854f8 <col:13> 'bool' lvalue ->_read_status 0x55ee8c861590
|   |     `-ImplicitCastExpr 0x55ee8c9854d8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55ee8c9854c8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55ee8c985588 <line:662:9, col:17>
|     `-UnaryOperator 0x55ee8c985570 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c985560 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55ee8c95e2d0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55ee8c95e398 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55ee8c95e460 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55ee8c95e528 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55ee8c95e838 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55ee8c95e5c8 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ee8c95e798 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55ee8c95e6a8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c985950 <col:19, line:706:5>
|     `-IfStmt 0x55ee8c985928 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55ee8c985698 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55ee8c985858 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55ee8c985828 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55ee8c9857e8 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55ee8c9856f0 <col:42> '<bound member function type>' ->simple_slot 0x55ee8c97ea70
|       |     | `-CXXThisExpr 0x55ee8c9856e0 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55ee8c985788 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55ee8c985740 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55ee8c6eb488
|       |     | `-DeclRefExpr 0x55ee8c985720 <col:55> 'T' lvalue ParmVar 0x55ee8c95e6a8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55ee8c9857c8 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55ee8c985918 <line:705:13, col:34>
|         `-CallExpr 0x55ee8c9858f0 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55ee8c985878 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55ee8c9858d0 <col:33> 'T' lvalue ParmVar 0x55ee8c95e6a8 'x' 'T &'
|-FunctionTemplateDecl 0x55ee8c95eb08 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55ee8c95e898 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ee8c95ea68 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55ee8c95e978 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55ee8c985d30 <col:31, line:717:5>
|     |-DeclStmt 0x55ee8c985a90 <line:713:9, col:23>
|     | `-VarDecl 0x55ee8c985978 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55ee8c985a68 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55ee8c9859f0 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55ee8c985a48 <col:21> 'T' lvalue ParmVar 0x55ee8c95e978 'x' 'T &'
|     |-IfStmt 0x55ee8c985ce0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55ee8c985b88 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55ee8c985cc0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55ee8c985c60 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55ee8c985bf0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|     |   | `-DeclRefExpr 0x55ee8c985bd0 <col:14> 'T *' lvalue Var 0x55ee8c985978 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55ee8c985ca0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55ee8c985d18 <line:716:9, col:16>
|       `-DeclRefExpr 0x55ee8c985cf8 <col:16> 'T *' lvalue Var 0x55ee8c985978 's' 'T *'
|-FunctionTemplateDecl 0x55ee8c95ef18 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55ee8c95eb68 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ee8c95ebe8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ee8c95ee78 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55ee8c95ecc8 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55ee8c95ed68 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55ee8c986040 <col:37, line:726:5>
|     |-IfStmt 0x55ee8c985fd0 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55ee8c985ff0 <line:723:13, col:26>
|     | | `-VarDecl 0x55ee8c985d98 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55ee8c985e88 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55ee8c985e10 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55ee8c985e68 <col:25> 'T' lvalue ParmVar 0x55ee8c95ecc8 'x' 'T &'
|     | |-DeclRefExpr 0x55ee8c985eb0 <col:16> 'T *' lvalue Var 0x55ee8c985d98 's' 'T *'
|     | `-BinaryOperator 0x55ee8c985fb0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55ee8c985f60 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55ee8c985ef0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|     |   | `-DeclRefExpr 0x55ee8c985ed0 <col:14> 'T *' lvalue Var 0x55ee8c985d98 's' 'T *'
|     |   `-DeclRefExpr 0x55ee8c985f90 <col:18> 'const V' lvalue ParmVar 0x55ee8c95ed68 'value' 'const V &'
|     `-ReturnStmt 0x55ee8c986030 <line:725:9, col:17>
|       `-UnaryOperator 0x55ee8c986018 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c986008 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55ee8c95f318 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55ee8c95ef80 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55ee8c95f278 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55ee8c95f030 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95f0b0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c95f158 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55ee8c986e60 <col:65, line:737:5>
|     |-DeclStmt 0x55ee8c9860d8 <line:732:9, col:26>
|     | `-VarDecl 0x55ee8c986070 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55ee8c986e28 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55ee8c986e48 <line:733:13, col:58>
|       | `-VarDecl 0x55ee8c986100 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55ee8c9862e0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55ee8c9862b0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55ee8c986298 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55ee8c986278 <col:26, col:58> 'String' (CXXTemporary 0x55ee8c986278)
|       |           `-CXXMemberCallExpr 0x55ee8c986208 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55ee8c986178 <col:26> '<bound member function type>' ->find 0x55ee8c97e088
|       |             | `-CXXThisExpr 0x55ee8c986168 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55ee8c986240 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ee8c9861a8 <col:31> 'const char *' lvalue ParmVar 0x55ee8c95f030 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55ee8c986258 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ee8c9861c8 <col:40> 'int' lvalue ParmVar 0x55ee8c95f0b0 'flags' 'int'
|       |             `-DeclRefExpr 0x55ee8c9861e8 <col:47> 'Args::Slot *' lvalue Var 0x55ee8c986070 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55ee8c986398 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ee8c986380 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ee8c986360 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ee8c986330 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|       |       `-ImplicitCastExpr 0x55ee8c986318 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55ee8c9862f8 <col:20> 'String' lvalue Var 0x55ee8c986100 'str' 'String'
|       `-CompoundStmt 0x55ee8c986e08 <col:61, line:736:9>
|         |-DeclStmt 0x55ee8c986850 <line:734:13, col:76>
|         | `-VarDecl 0x55ee8c9863e8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55ee8c986820 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55ee8c986790 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55ee8c9867d8 <col:60> 'T' lvalue ParmVar 0x55ee8c95f158 'variable' 'T &'
|         |     `-UnaryOperator 0x55ee8c986808 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55ee8c9867f8 <col:71> 'Args *' this
|         `-CallExpr 0x55ee8c986dd8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55ee8c986878 <col:13> '<bound member function type>' ->postparse 0x55ee8c97e298
|           | `-CXXThisExpr 0x55ee8c986868 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55ee8c986d98 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55ee8c9868a8 <col:23> 'T *' lvalue Var 0x55ee8c9863e8 's' 'T *'
|           | `-CallExpr 0x55ee8c986d58 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55ee8c986b30 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55ee8c986c30 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55ee8c986c50 <col:86> 'String' lvalue Var 0x55ee8c986100 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55ee8c986d00 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55ee8c986c90 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|           |   | `-DeclRefExpr 0x55ee8c986c70 <col:92> 'T *' lvalue Var 0x55ee8c9863e8 's' 'T *'
|           |   `-UnaryOperator 0x55ee8c986d40 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55ee8c986d30 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55ee8c986db8 <col:103> 'Args::Slot *' lvalue Var 0x55ee8c986070 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ee8c95f868 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55ee8c95f388 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ee8c95f408 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55ee8c95f7c8 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55ee8c95f4c8 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95f548 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c95f5e8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55ee8c95f688 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55ee8c987d00 <col:88, line:745:5>
|     |-DeclStmt 0x55ee8c986ef8 <line:741:9, col:26>
|     | `-VarDecl 0x55ee8c986e90 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ee8c987118 <line:742:9, col:55>
|     | `-VarDecl 0x55ee8c986f20 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55ee8c987100 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55ee8c9870d0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55ee8c9870b8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55ee8c987098 <col:22, col:54> 'String' (CXXTemporary 0x55ee8c987098)
|     |           `-CXXMemberCallExpr 0x55ee8c987028 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55ee8c986f98 <col:22> '<bound member function type>' ->find 0x55ee8c97e088
|     |             | `-CXXThisExpr 0x55ee8c986f88 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55ee8c987060 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55ee8c986fc8 <col:27> 'const char *' lvalue ParmVar 0x55ee8c95f4c8 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55ee8c987078 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55ee8c986fe8 <col:36> 'int' lvalue ParmVar 0x55ee8c95f548 'flags' 'int'
|     |             `-DeclRefExpr 0x55ee8c987008 <col:43> 'Args::Slot *' lvalue Var 0x55ee8c986e90 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55ee8c9874f0 <line:743:9, col:72>
|     | `-VarDecl 0x55ee8c987168 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55ee8c9874c0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55ee8c987430 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55ee8c987478 <col:56> 'T' lvalue ParmVar 0x55ee8c95f5e8 'variable' 'T &'
|     |     `-UnaryOperator 0x55ee8c9874a8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55ee8c987498 <col:67> 'Args *' this
|     `-CallExpr 0x55ee8c987cd0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55ee8c987518 <col:9> '<bound member function type>' ->postparse 0x55ee8c97e298
|       | `-CXXThisExpr 0x55ee8c987508 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55ee8c987c90 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55ee8c987548 <col:19> 'T *' lvalue Var 0x55ee8c987168 's' 'T *'
|       | `-ParenExpr 0x55ee8c987c70 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55ee8c987c40 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55ee8c987c28 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55ee8c987c10 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55ee8c987bf0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55ee8c987bc0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|       |     |       `-ImplicitCastExpr 0x55ee8c987ba8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55ee8c987568 <col:25> 'String' lvalue Var 0x55ee8c986f20 'str' 'String'
|       |     |-CallExpr 0x55ee8c987a18 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55ee8c9877f0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55ee8c9878f0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55ee8c987910 <col:89> 'String' lvalue Var 0x55ee8c986f20 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55ee8c9879c0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55ee8c987950 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|       |     | | `-DeclRefExpr 0x55ee8c987930 <col:95> 'T *' lvalue Var 0x55ee8c987168 's' 'T *'
|       |     | `-UnaryOperator 0x55ee8c987a00 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55ee8c9879f0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55ee8c987b88 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55ee8c987b68 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55ee8c987b38 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55ee8c987ae8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55ee8c987a78 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|       |         | | `-DeclRefExpr 0x55ee8c987a58 <col:109> 'T *' lvalue Var 0x55ee8c987168 's' 'T *'
|       |         | `-DeclRefExpr 0x55ee8c987b18 <col:113> 'const V' lvalue ParmVar 0x55ee8c95f688 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55ee8c987b58 <col:120> 'bool' true
|       `-DeclRefExpr 0x55ee8c987cb0 <col:128> 'Args::Slot *' lvalue Var 0x55ee8c986e90 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ee8c95fd98 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55ee8c95f8e0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c95f958 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c95fcf8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ee8c95fa18 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c95fa98 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c95fb10 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c95fbb8 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55ee8c9888f8 <col:75, line:754:5>
|     |-DeclStmt 0x55ee8c987da8 <line:749:9, col:26>
|     | `-VarDecl 0x55ee8c987d40 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55ee8c9888c0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55ee8c9888e0 <line:750:13, col:58>
|       | `-VarDecl 0x55ee8c987dd0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55ee8c987fb0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55ee8c987f80 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55ee8c987f68 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55ee8c987f48 <col:26, col:58> 'String' (CXXTemporary 0x55ee8c987f48)
|       |           `-CXXMemberCallExpr 0x55ee8c987ed8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55ee8c987e48 <col:26> '<bound member function type>' ->find 0x55ee8c97e088
|       |             | `-CXXThisExpr 0x55ee8c987e38 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55ee8c987f10 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ee8c987e78 <col:31> 'const char *' lvalue ParmVar 0x55ee8c95fa18 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55ee8c987f28 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ee8c987e98 <col:40> 'int' lvalue ParmVar 0x55ee8c95fa98 'flags' 'int'
|       |             `-DeclRefExpr 0x55ee8c987eb8 <col:47> 'Args::Slot *' lvalue Var 0x55ee8c987d40 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55ee8c988068 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ee8c988050 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ee8c988030 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ee8c988000 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|       |       `-ImplicitCastExpr 0x55ee8c987fe8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55ee8c987fc8 <col:20> 'String' lvalue Var 0x55ee8c987dd0 'str' 'String'
|       `-CompoundStmt 0x55ee8c9888a0 <col:61, line:753:9>
|         |-DeclStmt 0x55ee8c988440 <line:751:13, col:63>
|         | `-VarDecl 0x55ee8c9880b8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55ee8c988410 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55ee8c988380 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55ee8c9883c8 <col:47> 'T' lvalue ParmVar 0x55ee8c95fbb8 'variable' 'T &'
|         |     `-UnaryOperator 0x55ee8c9883f8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55ee8c9883e8 <col:58> 'Args *' this
|         `-CallExpr 0x55ee8c988870 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55ee8c988468 <col:13> '<bound member function type>' ->postparse 0x55ee8c97e298
|           | `-CXXThisExpr 0x55ee8c988458 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55ee8c988830 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55ee8c988498 <col:23> 'T *' lvalue Var 0x55ee8c9880b8 's' 'T *'
|           | `-CallExpr 0x55ee8c9887f0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55ee8c988680 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55ee8c9886c8 <col:56> 'P' lvalue ParmVar 0x55ee8c95fb10 'parser' 'P'
|           |   |-DeclRefExpr 0x55ee8c9886e8 <col:64> 'String' lvalue Var 0x55ee8c987dd0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55ee8c988798 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55ee8c988728 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|           |   | `-DeclRefExpr 0x55ee8c988708 <col:70> 'T *' lvalue Var 0x55ee8c9880b8 's' 'T *'
|           |   `-UnaryOperator 0x55ee8c9887d8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55ee8c9887c8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55ee8c988850 <col:81> 'Args::Slot *' lvalue Var 0x55ee8c987d40 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ee8c9603f8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55ee8c95fe10 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55ee8c95fe88 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55ee8c95ff08 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55ee8c960358 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55ee8c95ffd0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c960050 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c9600c8 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c960168 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55ee8c960208 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55ee8c98b968 <col:98, line:762:5>
|     |-DeclStmt 0x55ee8c988990 <line:758:9, col:26>
|     | `-VarDecl 0x55ee8c988928 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ee8c988bb0 <line:759:9, col:55>
|     | `-VarDecl 0x55ee8c9889b8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55ee8c988b98 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55ee8c988b68 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55ee8c988b50 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55ee8c988b30 <col:22, col:54> 'String' (CXXTemporary 0x55ee8c988b30)
|     |           `-CXXMemberCallExpr 0x55ee8c988ac0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55ee8c988a30 <col:22> '<bound member function type>' ->find 0x55ee8c97e088
|     |             | `-CXXThisExpr 0x55ee8c988a20 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55ee8c988af8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55ee8c988a60 <col:27> 'const char *' lvalue ParmVar 0x55ee8c95ffd0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55ee8c988b10 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55ee8c988a80 <col:36> 'int' lvalue ParmVar 0x55ee8c960050 'flags' 'int'
|     |             `-DeclRefExpr 0x55ee8c988aa0 <col:43> 'Args::Slot *' lvalue Var 0x55ee8c988928 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55ee8c98b2b0 <line:760:9, col:59>
|     | `-VarDecl 0x55ee8c988c08 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55ee8c98b280 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55ee8c988f10 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55ee8c988f58 <col:43> 'T' lvalue ParmVar 0x55ee8c960168 'variable' 'T &'
|     |     `-UnaryOperator 0x55ee8c988f88 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55ee8c988f78 <col:54> 'Args *' this
|     `-CallExpr 0x55ee8c98b938 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55ee8c98b2d8 <col:9> '<bound member function type>' ->postparse 0x55ee8c97e298
|       | `-CXXThisExpr 0x55ee8c98b2c8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55ee8c98b8f8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55ee8c98b308 <col:19> 'T *' lvalue Var 0x55ee8c988c08 's' 'T *'
|       | `-ParenExpr 0x55ee8c98b8d8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55ee8c98b8a8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55ee8c98b890 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55ee8c98b878 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55ee8c98b858 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55ee8c98b828 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|       |     |       `-ImplicitCastExpr 0x55ee8c98b810 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55ee8c98b328 <col:25> 'String' lvalue Var 0x55ee8c9889b8 'str' 'String'
|       |     |-CallExpr 0x55ee8c98b680 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55ee8c98b510 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55ee8c98b558 <col:59> 'P' lvalue ParmVar 0x55ee8c9600c8 'parser' 'P'
|       |     | |-DeclRefExpr 0x55ee8c98b578 <col:67> 'String' lvalue Var 0x55ee8c9889b8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55ee8c98b628 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55ee8c98b5b8 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|       |     | | `-DeclRefExpr 0x55ee8c98b598 <col:73> 'T *' lvalue Var 0x55ee8c988c08 's' 'T *'
|       |     | `-UnaryOperator 0x55ee8c98b668 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55ee8c98b658 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55ee8c98b7f0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55ee8c98b7d0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55ee8c98b7a0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55ee8c98b750 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55ee8c98b6e0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|       |         | | `-DeclRefExpr 0x55ee8c98b6c0 <col:87> 'T *' lvalue Var 0x55ee8c988c08 's' 'T *'
|       |         | `-DeclRefExpr 0x55ee8c98b780 <col:91> 'const V' lvalue ParmVar 0x55ee8c960208 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55ee8c98b7c0 <col:98> 'bool' true
|       `-DeclRefExpr 0x55ee8c98b918 <col:106> 'Args::Slot *' lvalue Var 0x55ee8c988928 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ee8c968688 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55ee8c960478 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c9604f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55ee8c960578 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55ee8c9685e8 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55ee8c960640 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c9682e0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c968358 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c9683f8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55ee8c968498 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55ee8c98c948 <col:60, line:773:5>
|     |-DeclStmt 0x55ee8c98ba10 <line:767:9, col:26>
|     | `-VarDecl 0x55ee8c98b9a8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55ee8c98c910 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55ee8c98c930 <line:768:13, col:58>
|       | `-VarDecl 0x55ee8c98ba38 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55ee8c98bc18 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55ee8c98bbe8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55ee8c98bbd0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55ee8c98bbb0 <col:26, col:58> 'String' (CXXTemporary 0x55ee8c98bbb0)
|       |           `-CXXMemberCallExpr 0x55ee8c98bb40 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55ee8c98bab0 <col:26> '<bound member function type>' ->find 0x55ee8c97e088
|       |             | `-CXXThisExpr 0x55ee8c98baa0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55ee8c98bb78 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ee8c98bae0 <col:31> 'const char *' lvalue ParmVar 0x55ee8c960640 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55ee8c98bb90 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ee8c98bb00 <col:40> 'int' lvalue ParmVar 0x55ee8c9682e0 'flags' 'int'
|       |             `-DeclRefExpr 0x55ee8c98bb20 <col:47> 'Args::Slot *' lvalue Var 0x55ee8c98b9a8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55ee8c98bcd0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ee8c98bcb8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ee8c98bc98 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ee8c98bc68 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|       |       `-ImplicitCastExpr 0x55ee8c98bc50 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55ee8c98bc30 <col:20> 'String' lvalue Var 0x55ee8c98ba38 'str' 'String'
|       `-CompoundStmt 0x55ee8c98c8e8 <col:61, line:772:9>
|         |-DeclStmt 0x55ee8c98c010 <line:769:13, col:66>
|         | `-VarDecl 0x55ee8c98bd28 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55ee8c98bfe0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55ee8c98bf50 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55ee8c98bf98 <col:49> 'T1' lvalue ParmVar 0x55ee8c9683f8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55ee8c98bfc8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55ee8c98bfb8 <col:61> 'Args *' this
|         |-DeclStmt 0x55ee8c98c380 <line:770:13, col:66>
|         | `-VarDecl 0x55ee8c98c098 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55ee8c98c350 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55ee8c98c2c0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55ee8c98c308 <col:49> 'T2' lvalue ParmVar 0x55ee8c968498 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55ee8c98c338 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55ee8c98c328 <col:61> 'Args *' this
|         `-CallExpr 0x55ee8c98c8b8 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55ee8c98c3a8 <col:13> '<bound member function type>' ->postparse 0x55ee8c97e298
|           | `-CXXThisExpr 0x55ee8c98c398 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55ee8c98c878 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55ee8c98c418 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55ee8c98c3d8 <col:23> 'T1 *' lvalue Var 0x55ee8c98bd28 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55ee8c98c3f8 <col:29> 'T2 *' lvalue Var 0x55ee8c98c098 's2' 'T2 *'
|           | `-CallExpr 0x55ee8c98c830 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55ee8c98c600 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55ee8c98c648 <col:63> 'P' lvalue ParmVar 0x55ee8c968358 'parser' 'P'
|           |   |-DeclRefExpr 0x55ee8c98c668 <col:71> 'String' lvalue Var 0x55ee8c98ba38 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55ee8c98c718 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55ee8c98c6a8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|           |   | `-DeclRefExpr 0x55ee8c98c688 <col:77> 'T1 *' lvalue Var 0x55ee8c98bd28 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55ee8c98c7d8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55ee8c98c768 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|           |   | `-DeclRefExpr 0x55ee8c98c748 <col:82> 'T2 *' lvalue Var 0x55ee8c98c098 's2' 'T2 *'
|           |   `-UnaryOperator 0x55ee8c98c818 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55ee8c98c808 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55ee8c98c898 <col:94> 'Args::Slot *' lvalue Var 0x55ee8c98b9a8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ee8c968a78 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55ee8c968708 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c9689d8 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55ee8c9687c0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c968840 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c9688b8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c98ce60 <col:67, line:780:5>
|     |-DeclStmt 0x55ee8c98c9e0 <line:777:9, col:26>
|     | `-VarDecl 0x55ee8c98c978 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55ee8c98ce28 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55ee8c98ce48 <line:778:13, col:58>
|       | `-VarDecl 0x55ee8c98ca08 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55ee8c98cbe8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55ee8c98cbb8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55ee8c98cba0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55ee8c98cb80 <col:26, col:58> 'String' (CXXTemporary 0x55ee8c98cb80)
|       |           `-CXXMemberCallExpr 0x55ee8c98cb10 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55ee8c98ca80 <col:26> '<bound member function type>' ->find 0x55ee8c97e088
|       |             | `-CXXThisExpr 0x55ee8c98ca70 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55ee8c98cb48 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ee8c98cab0 <col:31> 'const char *' lvalue ParmVar 0x55ee8c9687c0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55ee8c98cb60 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55ee8c98cad0 <col:40> 'int' lvalue ParmVar 0x55ee8c968840 'flags' 'int'
|       |             `-DeclRefExpr 0x55ee8c98caf0 <col:47> 'Args::Slot *' lvalue Var 0x55ee8c98c978 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55ee8c98cca0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55ee8c98cc88 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55ee8c98cc68 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55ee8c98cc38 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|       |       `-ImplicitCastExpr 0x55ee8c98cc20 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55ee8c98cc00 <col:20> 'String' lvalue Var 0x55ee8c98ca08 'str' 'String'
|       `-CallExpr 0x55ee8c98cdf8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55ee8c98ccc8 <col:13> '<bound member function type>' ->postparse 0x55ee8c97e298
|         | `-CXXThisExpr 0x55ee8c98ccb8 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55ee8c98cda8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55ee8c98cd18 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55ee8c98ccf8 <col:23> 'P' lvalue ParmVar 0x55ee8c9688b8 'parser' 'P'
|         | |-DeclRefExpr 0x55ee8c98cd60 <col:36> 'String' lvalue Var 0x55ee8c98ca08 'str' 'String'
|         | `-UnaryOperator 0x55ee8c98cd90 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55ee8c98cd80 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55ee8c98cdd8 <col:49> 'Args::Slot *' lvalue Var 0x55ee8c98c978 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55ee8c968e18 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55ee8c968ae8 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55ee8c968d78 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55ee8c968ba0 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c968c20 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c968c98 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55ee8c98d7d0 <col:71, line:792:5>
|     |-DeclStmt 0x55ee8c98cef8 <line:784:9, col:26>
|     | `-VarDecl 0x55ee8c98ce90 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ee8c98cfc8 <line:785:9, col:29>
|     | `-VarDecl 0x55ee8c98cf28 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55ee8c98cfb0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55ee8c98cf90 <col:28> 'int' 1
|     |-WhileStmt 0x55ee8c98d680 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55ee8c98d6a0 <line:786:16, col:61>
|     | | `-VarDecl 0x55ee8c98cff0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55ee8c98d1d0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55ee8c98d1a0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55ee8c98d188 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55ee8c98d168 <col:29, col:61> 'String' (CXXTemporary 0x55ee8c98d168)
|     | |           `-CXXMemberCallExpr 0x55ee8c98d0f8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55ee8c98d068 <col:29> '<bound member function type>' ->find 0x55ee8c97e088
|     | |             | `-CXXThisExpr 0x55ee8c98d058 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55ee8c98d130 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ee8c98d098 <col:34> 'const char *' lvalue ParmVar 0x55ee8c968ba0 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55ee8c98d148 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ee8c98d0b8 <col:43> 'int' lvalue ParmVar 0x55ee8c968c20 'flags' 'int'
|     | |             `-DeclRefExpr 0x55ee8c98d0d8 <col:50> 'Args::Slot *' lvalue Var 0x55ee8c98ce90 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55ee8c98d288 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55ee8c98d270 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55ee8c98d250 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55ee8c98d220 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|     | |       `-ImplicitCastExpr 0x55ee8c98d208 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55ee8c98d1e8 <col:23> 'String' lvalue Var 0x55ee8c98cff0 'str' 'String'
|     | `-CompoundStmt 0x55ee8c98d658 <col:64, line:790:9>
|     |   |-CallExpr 0x55ee8c98d3e0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55ee8c98d2b0 <col:13> '<bound member function type>' ->postparse 0x55ee8c97e298
|     |   | | `-CXXThisExpr 0x55ee8c98d2a0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55ee8c98d390 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55ee8c98d300 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55ee8c98d2e0 <col:23> 'P' lvalue ParmVar 0x55ee8c968c98 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55ee8c98d348 <col:36> 'String' lvalue Var 0x55ee8c98cff0 'str' 'String'
|     |   | | `-UnaryOperator 0x55ee8c98d378 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55ee8c98d368 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55ee8c98d3c0 <col:49> 'Args::Slot *' lvalue Var 0x55ee8c98ce90 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55ee8c98d578 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55ee8c98d410 <col:13> 'int' lvalue Var 0x55ee8c98cf28 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55ee8c98d560 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55ee8c98d540 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55ee8c98d4a8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55ee8c98d488 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55ee8c98d470 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55ee8c98d430 <col:28> 'int' lvalue Var 0x55ee8c98cf28 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55ee8c98d450 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55ee8c98d528 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55ee8c98d4f8 <col:49> 'bool' lvalue ->_read_status 0x55ee8c861590
|     |   |         `-ImplicitCastExpr 0x55ee8c98d4d8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55ee8c98d4c8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55ee8c98d628 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55ee8c98d598 <col:13> 'int' lvalue ParmVar 0x55ee8c968c20 'flags' 'int'
|     |     `-UnaryOperator 0x55ee8c98d610 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55ee8c98d5f8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ee8c98d5d8 <col:23> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55ee8c98d7b0 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55ee8c98d6e8 <col:9> 'bool' lvalue ->_read_status 0x55ee8c861590
|       | `-ImplicitCastExpr 0x55ee8c98d6c8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55ee8c98d6b8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55ee8c98d790 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55ee8c98d770 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55ee8c98d758 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55ee8c98d718 <col:25> 'int' lvalue Var 0x55ee8c98cf28 'read_status' 'int'
|           `-IntegerLiteral 0x55ee8c98d738 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55ee8c9692f8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55ee8c968e88 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c968f08 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c969258 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55ee8c968fc8 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c969048 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c9690c0 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c969168 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55ee8c98e760 <col:84, line:805:5>
|     |-DeclStmt 0x55ee8c98d878 <line:796:9, col:26>
|     | `-VarDecl 0x55ee8c98d810 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ee8c98d948 <line:797:9, col:29>
|     | `-VarDecl 0x55ee8c98d8a8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55ee8c98d930 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55ee8c98d910 <col:28> 'int' 1
|     |-DeclStmt 0x55ee8c98dc80 <line:798:9, col:71>
|     | `-VarDecl 0x55ee8c98d998 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55ee8c98dc50 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55ee8c98dbc0 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55ee8c98dc08 <col:55> 'T' lvalue ParmVar 0x55ee8c969168 'variable' 'T &'
|     |     `-UnaryOperator 0x55ee8c98dc38 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55ee8c98dc28 <col:66> 'Args *' this
|     |-WhileStmt 0x55ee8c98e610 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55ee8c98e630 <line:799:16, col:61>
|     | | `-VarDecl 0x55ee8c98dca8 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55ee8c98de88 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55ee8c98de58 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55ee8c98de40 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55ee8c98de20 <col:29, col:61> 'String' (CXXTemporary 0x55ee8c98de20)
|     | |           `-CXXMemberCallExpr 0x55ee8c98ddb0 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55ee8c98dd20 <col:29> '<bound member function type>' ->find 0x55ee8c97e088
|     | |             | `-CXXThisExpr 0x55ee8c98dd10 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55ee8c98dde8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ee8c98dd50 <col:34> 'const char *' lvalue ParmVar 0x55ee8c968fc8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55ee8c98de00 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ee8c98dd70 <col:43> 'int' lvalue ParmVar 0x55ee8c969048 'flags' 'int'
|     | |             `-DeclRefExpr 0x55ee8c98dd90 <col:50> 'Args::Slot *' lvalue Var 0x55ee8c98d810 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55ee8c98df40 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55ee8c98df28 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55ee8c98df08 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55ee8c98ded8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|     | |       `-ImplicitCastExpr 0x55ee8c98dec0 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55ee8c98dea0 <col:23> 'String' lvalue Var 0x55ee8c98dca8 'str' 'String'
|     | `-CompoundStmt 0x55ee8c98e5e8 <col:64, line:803:9>
|     |   |-CallExpr 0x55ee8c98e370 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55ee8c98df68 <col:13> '<bound member function type>' ->postparse 0x55ee8c97e298
|     |   | | `-CXXThisExpr 0x55ee8c98df58 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55ee8c98e330 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55ee8c98df98 <col:23> 'T *' lvalue Var 0x55ee8c98d998 's' 'T *'
|     |   | | `-CallExpr 0x55ee8c98e2f0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55ee8c98e180 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55ee8c98e1c8 <col:56> 'P' lvalue ParmVar 0x55ee8c9690c0 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55ee8c98e1e8 <col:64> 'String' lvalue Var 0x55ee8c98dca8 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55ee8c98e298 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55ee8c98e228 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|     |   | |   | `-DeclRefExpr 0x55ee8c98e208 <col:70> 'T *' lvalue Var 0x55ee8c98d998 's' 'T *'
|     |   | |   `-UnaryOperator 0x55ee8c98e2d8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55ee8c98e2c8 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55ee8c98e350 <col:81> 'Args::Slot *' lvalue Var 0x55ee8c98d810 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55ee8c98e508 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55ee8c98e3a0 <col:13> 'int' lvalue Var 0x55ee8c98d8a8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55ee8c98e4f0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55ee8c98e4d0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55ee8c98e438 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55ee8c98e418 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55ee8c98e400 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55ee8c98e3c0 <col:28> 'int' lvalue Var 0x55ee8c98d8a8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55ee8c98e3e0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55ee8c98e4b8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55ee8c98e488 <col:49> 'bool' lvalue ->_read_status 0x55ee8c861590
|     |   |         `-ImplicitCastExpr 0x55ee8c98e468 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55ee8c98e458 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55ee8c98e5b8 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55ee8c98e528 <col:13> 'int' lvalue ParmVar 0x55ee8c969048 'flags' 'int'
|     |     `-UnaryOperator 0x55ee8c98e5a0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55ee8c98e588 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ee8c98e568 <col:23> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55ee8c98e740 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55ee8c98e678 <col:9> 'bool' lvalue ->_read_status 0x55ee8c861590
|       | `-ImplicitCastExpr 0x55ee8c98e658 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55ee8c98e648 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55ee8c98e720 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55ee8c98e700 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55ee8c98e6e8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55ee8c98e6a8 <col:25> 'int' lvalue Var 0x55ee8c98d8a8 'read_status' 'int'
|           `-IntegerLiteral 0x55ee8c98e6c8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55ee8c9698d8 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55ee8c969370 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55ee8c9693e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55ee8c969838 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55ee8c9694a8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55ee8c969528 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55ee8c9695a0 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55ee8c9696f0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55ee8c98f568 <col:87, line:821:5>
|     |-DeclStmt 0x55ee8c98e810 <line:809:9, col:26>
|     | `-VarDecl 0x55ee8c98e7a8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55ee8c98e8e0 <line:810:9, col:29>
|     | `-VarDecl 0x55ee8c98e840 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55ee8c98e8c8 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55ee8c98e8a8 <col:28> 'int' 1
|     |-DeclStmt 0x55ee8c98eb28 <line:811:9, col:38>
|     | `-VarDecl 0x55ee8c98ea10 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55ee8c98eb00 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55ee8c98ea88 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55ee8c98eae0 <col:29> 'Vector<T>' lvalue ParmVar 0x55ee8c9696f0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55ee8c98f418 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55ee8c98f438 <line:812:16, col:61>
|     | | `-VarDecl 0x55ee8c98eb50 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55ee8c98ed30 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55ee8c98ed00 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55ee8c98ece8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55ee8c98ecc8 <col:29, col:61> 'String' (CXXTemporary 0x55ee8c98ecc8)
|     | |           `-CXXMemberCallExpr 0x55ee8c98ec58 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55ee8c98ebc8 <col:29> '<bound member function type>' ->find 0x55ee8c97e088
|     | |             | `-CXXThisExpr 0x55ee8c98ebb8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55ee8c98ec90 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ee8c98ebf8 <col:34> 'const char *' lvalue ParmVar 0x55ee8c9694a8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55ee8c98eca8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55ee8c98ec18 <col:43> 'int' lvalue ParmVar 0x55ee8c969528 'flags' 'int'
|     | |             `-DeclRefExpr 0x55ee8c98ec38 <col:50> 'Args::Slot *' lvalue Var 0x55ee8c98e7a8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55ee8c98ede8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55ee8c98edd0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55ee8c98edb0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55ee8c98ed80 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55ee8c6ae458
|     | |       `-ImplicitCastExpr 0x55ee8c98ed68 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55ee8c98ed48 <col:23> 'String' lvalue Var 0x55ee8c98eb50 'str' 'String'
|     | `-CompoundStmt 0x55ee8c98f3e0 <col:64, line:819:9>
|     |   |-DeclStmt 0x55ee8c98eea8 <line:813:13, col:23>
|     |   | `-VarDecl 0x55ee8c98ee10 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55ee8c98ee88 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55ee8c98f028 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55ee8c98eed0 <col:13> '<bound member function type>' ->postparse 0x55ee8c97e298
|     |   | | `-CXXThisExpr 0x55ee8c98eec0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55ee8c98efd0 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55ee8c98ef20 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55ee8c98ef00 <col:23> 'P' lvalue ParmVar 0x55ee8c9695a0 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55ee8c98ef68 <col:36> 'String' lvalue Var 0x55ee8c98eb50 'str' 'String'
|     |   | | |-DeclRefExpr 0x55ee8c98ef88 <col:41> 'T' lvalue Var 0x55ee8c98ee10 'sx' 'T'
|     |   | | `-UnaryOperator 0x55ee8c98efb8 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55ee8c98efa8 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55ee8c98f008 <col:53> 'Args::Slot *' lvalue Var 0x55ee8c98e7a8 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55ee8c98f180 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55ee8c98f0b8 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55ee8c98f088 <col:17> 'bool' lvalue ->_read_status 0x55ee8c861590
|     |   | |   `-ImplicitCastExpr 0x55ee8c98f068 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55ee8c98f058 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55ee8c98f158 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55ee8c98f0f0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55ee8c98f0d0 <col:17> 'Vector<T> *' lvalue Var 0x55ee8c98ea10 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55ee8c98f138 <col:30> 'T' lvalue Var 0x55ee8c98ee10 'sx' 'T'
|     |   |-BinaryOperator 0x55ee8c98f300 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55ee8c98f198 <col:13> 'int' lvalue Var 0x55ee8c98e840 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55ee8c98f2e8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55ee8c98f2c8 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55ee8c98f230 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55ee8c98f210 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55ee8c98f1f8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55ee8c98f1b8 <col:28> 'int' lvalue Var 0x55ee8c98e840 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55ee8c98f1d8 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55ee8c98f2b0 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55ee8c98f280 <col:49> 'bool' lvalue ->_read_status 0x55ee8c861590
|     |   |         `-ImplicitCastExpr 0x55ee8c98f260 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55ee8c98f250 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55ee8c98f3b0 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55ee8c98f320 <col:13> 'int' lvalue ParmVar 0x55ee8c969528 'flags' 'int'
|     |     `-UnaryOperator 0x55ee8c98f398 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55ee8c98f380 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55ee8c98f360 <col:23> 'const int' lvalue Var 0x55ee8c952188 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55ee8c98f548 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55ee8c98f480 <col:9> 'bool' lvalue ->_read_status 0x55ee8c861590
|       | `-ImplicitCastExpr 0x55ee8c98f460 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55ee8c98f450 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55ee8c98f528 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55ee8c98f508 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55ee8c98f4f0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55ee8c98f4b0 <col:25> 'int' lvalue Var 0x55ee8c98e840 'read_status' 'int'
|           `-IntegerLiteral 0x55ee8c98f4d0 <col:40> 'int' 1
|-AccessSpecDecl 0x55ee8c969950 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55ee8c969978 prev 0x55ee8c950488 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55ee8c969a70 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55ee8c969b60 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55ee8c98f5a0 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55ee8c969c50 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55ee8c98f5b0 <col:25, line:830:9>
| |-CXXMethodDecl 0x55ee8c969d50 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55ee8c969e00 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55ee8c969ea8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55ee8c969ea8
| | `-ParmVarDecl 0x55ee8c969fb8 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55ee8c96a778 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55ee8c96a778
|   `-ParmVarDecl 0x55ee8c96a888 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55ee8c96a028 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55ee8c96a188 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55ee8c96a380 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55ee8c96a230 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55ee8c96a2a8 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55ee8c98f790 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55ee8c96a638 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55ee8c98f600 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55ee8c98f5c0 <col:20> 'void *' lvalue ParmVar 0x55ee8c96a230 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55ee8c96a6a0 '_slot' 'char *'
| | | `-CXXNewExpr 0x55ee8c98f688 <col:32, col:45> 'char *' array Function 0x55ee8c4d0ec8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55ee8c98f670 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55ee8c98f640 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55ee8c96a2a8 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55ee8c96a700 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55ee8c98f750 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55ee8c98f710 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55ee8c96a2a8 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55ee8c98f810 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55ee8c96a480 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55ee8c969c50 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55ee8c98f898 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55ee8c98f878 <line:840:13, col:22> 'void' array Function 0x55ee8c4d1228 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55ee8c98f860 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55ee8c98f830 <col:22> 'char *' lvalue ->_slot 0x55ee8c96a6a0
| |         `-CXXThisExpr 0x55ee8c98f820 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55ee8c96a580 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55ee8c969d50 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55ee8c98fa88 <col:22, line:844:9>
| |   `-CallExpr 0x55ee8c98f9f0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55ee8c98f9d8 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55ee8c98f9b8 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55ee8c5dcc88 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55ee8c98fa28 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55ee8c98f908 <col:20> 'void *' lvalue ->_ptr 0x55ee8c96a638
| |     |   `-CXXThisExpr 0x55ee8c98f8f8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55ee8c98fa58 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55ee8c98fa40 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55ee8c98f948 <col:26> 'char *' lvalue ->_slot 0x55ee8c96a6a0
| |     |     `-CXXThisExpr 0x55ee8c98f938 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55ee8c98fa70 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55ee8c98f988 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55ee8c96a700
| |         `-CXXThisExpr 0x55ee8c98f978 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55ee8c96a638 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55ee8c96a6a0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55ee8c96a700 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55ee8c96a8f8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55ee8c96a8f8
| | `-ParmVarDecl 0x55ee8c96aa08 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55ee8c96aaa8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55ee8c96aaa8
|   `-ParmVarDecl 0x55ee8c96abb8 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55ee8c96ad58 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55ee8c96ac28 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55ee8c96acc8 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55ee8c96aff0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55ee8c96b1e8 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55ee8c96b0b8 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55ee8c96b368 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55ee8c98fac0 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55ee8c98faa0 <col:20> 'T *' lvalue ParmVar 0x55ee8c96b0b8 'ptr' 'T *'
|   | `-CompoundStmt 0x55ee8c98fb10 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55ee8c96b2b8 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55ee8c969d50 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55ee8c98fcc0 <col:22, line:857:9>
|   |   `-CallExpr 0x55ee8c98fc90 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55ee8c98fb20 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55ee8c6955d8 0x55ee8c63f6e8
|   |     |-CXXOperatorCallExpr 0x55ee8c98fc20 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55ee8c98fbb0 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55ee8c8a2588 0x55ee8c8a21a8 0x55ee8c8a1dd8 0x55ee8c8a19f8 0x55ee8c8a1618 0x55ee8c8a1248
|   |     | `-MemberExpr 0x55ee8c98fb80 <col:29> 'T *' lvalue ->_ptr 0x55ee8c96b368
|   |     |   `-CXXThisExpr 0x55ee8c98fb70 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55ee8c98fc60 <col:35> 'T' lvalue ->_slot 0x55ee8c96b3c8
|   |       `-CXXThisExpr 0x55ee8c98fc50 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55ee8c96b368 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55ee8c96b3c8 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55ee8c96b430 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55ee8c96b530 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55ee8c96b580 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c96b510 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55ee8c96b4f0 <col:31> 'int' 48
|-FieldDecl 0x55ee8c96b5a8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55ee8c96b608 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55ee8c96b668 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55ee8c96b7a0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55ee8c97d930 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55ee8c97d990 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55ee8c97da40 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55ee8c97dc68 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55ee8c97db70 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55ee8c97ddb8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55ee8c97dd28 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55ee8c97e088 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55ee8c97de78 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55ee8c97def8 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55ee8c97dfa0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55ee8c97e298 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55ee8c97e150 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55ee8c97e1c8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55ee8c97e368 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55ee8c97e4b8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55ee8c97e420 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55ee8c97e848 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55ee8c97e578 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55ee8c97e5f8 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55ee8c97e6a0 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55ee8c97e758 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55ee8c97ea70 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55ee8c97e920 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55ee8c97e998 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55ee8c97ed88 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55ee8c97eb20 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55ee8c97ece8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55ee8c97ebf8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FilenameArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9ad7f0 <../dummy_inc/click/args.hh:1379:1, line:1381:1> line:1379:7 referenced class FilenameArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c9ad908 <col:1, col:7> col:7 implicit class FilenameArg
|-AccessSpecDecl 0x55ee8c9ad998 <col:21, col:27> col:21 public
|-CXXMethodDecl 0x55ee8c9adb90 <line:1380:5, col:93> col:17 parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x55ee8c9ad9d0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55ee8c9ada48 <col:42, col:50> col:50 result 'String &'
| `-ParmVarDecl 0x55ee8c9adac0 <col:58, col:83> col:76 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55ee8c9adc60 <col:83> 'const ArgContext' lvalue Var 0x55ee8c98fce8 'blank_args' 'const ArgContext'
|-CXXConstructorDecl 0x55ee8cade798 <line:1379:7> col:7 implicit referenced constexpr FilenameArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55ee8cade898 <col:7> col:7 implicit constexpr FilenameArg 'void (const FilenameArg &)' inline default trivial noexcept-unevaluated 0x55ee8cade898
| `-ParmVarDecl 0x55ee8caf9a70 <col:7> col:7 'const FilenameArg &'
|-CXXConstructorDecl 0x55ee8caf9b08 <col:7> col:7 implicit used constexpr FilenameArg 'void (FilenameArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8caf9c18 <col:7> col:7 'FilenameArg &&'
| `-CompoundStmt 0x55ee8cafa370 <col:7>
`-CXXDestructorDecl 0x55ee8caf9cb8 <col:7> col:7 implicit referenced ~FilenameArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.FilenameArg = type { i8 }
  NonVirtualBaseLLVMType:%class.FilenameArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_arp
         0 |   uint16_t ar_hrd
         2 |   uint16_t ar_pro
         4 |   uint8_t ar_hln
         5 |   uint8_t ar_pln
         6 |   uint16_t ar_op
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8b7ee8 prev 0x55ee8c8ad0f0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c8b7fe0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55ee8c8b80d0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55ee8c8b81f8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55ee8c8b8378 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55ee8c8b84f8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55ee8c8b8678 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55ee8c8c94a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ee8c8c9d18 <col:11>
|-CXXDestructorDecl 0x55ee8c8c9580 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55ee8c8c96b8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55ee8c8c96b8
| `-ParmVarDecl 0x55ee8c8c97c8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55ee8c8c9868 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55ee8c8c9868
| `-ParmVarDecl 0x55ee8c8c9978 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55ee8c8cc738 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c8cc848 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55ee8c8ccac8 <col:11>
|   `-ReturnStmt 0x55ee8c8ccab8 <col:11>
|     `-UnaryOperator 0x55ee8c8ccaa0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c8cca90 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55ee8c8cc8b8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55ee8c8cc8b8
  `-ParmVarDecl 0x55ee8c8cc9c8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8b86e0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c8b87f8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55ee8c8b8898 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55ee8c8b8900 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55ee8c8b8968 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55ee8c8b89d0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55ee8c8b8a30 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55ee8c8b8af0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55ee8c8b8b50 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55ee8c8b8bb0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55ee8c8c93b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55ee8c8b8898 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55ee8c8c9d28 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55ee8c8c9d80 <col:12>
|-CXXConstructorDecl 0x55ee8c8c99e8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55ee8c8c99e8
| `-ParmVarDecl 0x55ee8c8c9af8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55ee8c8c9b98 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55ee8c8c9b98
| `-ParmVarDecl 0x55ee8c8c9ca8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55ee8c8cbe20 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c8a6800 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c8a6918 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55ee8c8a69a8 <col:16, col:22> col:16 public
|-EnumDecl 0x55ee8c8a69d0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55ee8c8a6ad0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55ee8c8a6bb0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8a6ab0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55ee8c8a6a90 <col:21> 'int' 28
| `-EnumConstantDecl 0x55ee8c8a6b60 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55ee8c8a6bc8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8a6b40 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55ee8c8a6b20 <col:22> 'int' 64
|-CXXMethodDecl 0x55ee8c8a6f08 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55ee8c8a6bf0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8c8a6c70 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55ee8c8a6ce8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8c8a6d60 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ee8c8a6fc8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a71c8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c8a7040 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55ee8c8a70b8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ee8c8a7278 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a73d8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c8a72e8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ee8c8a7480 <col:72> warn_unused_result ""
|-TypedefDecl 0x55ee8c8a77e0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55ee8c8a7770 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55ee8c8a7710 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55ee8c8a76d0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55ee8c3794e0 'void'
|       |-PointerType 0x55ee8c626980 'unsigned char *'
|       | `-BuiltinType 0x55ee8c3795e0 'unsigned char'
|       |-TypedefType 0x55ee8c422f70 'size_t' sugar
|       | |-Typedef 0x55ee8c3e9be0 'size_t'
|       | `-BuiltinType 0x55ee8c379640 'unsigned long'
|       `-PointerType 0x55ee8c379ce0 'void *'
|         `-BuiltinType 0x55ee8c3794e0 'void'
|-CXXMethodDecl 0x55ee8c8a7c58 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55ee8c8a7850 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55ee8c8a78c8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8c8a7960 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55ee8c8a79e0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55ee8c8c2350 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55ee8c8c2338 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55ee8c8c2300 <col:58> 'int' 0
| |-ParmVarDecl 0x55ee8c8a7a60 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55ee8c8c2378 <col:76> 'int' 0
| |-ParmVarDecl 0x55ee8c8a7ae0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55ee8c8c2398 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55ee8c8a7d28 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a7da8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55ee8c8a7e68 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55ee8c8a7f08 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8a7f60 <col:30>
|-CXXMethodDecl 0x55ee8c8a7fd8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55ee8c8a8078 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8a80d0 <col:30>
|-CXXMethodDecl 0x55ee8c8a8148 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55ee8c8a81e8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a8298 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55ee8c8a8338 <col:20>
| |-OptimizeNoneAttr 0x55ee8c8a8390 <col:30>
| `-WarnUnusedResultAttr 0x55ee8c8a83b8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a8410 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55ee8c8a84b0 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8a8508 <col:30>
|-CXXMethodDecl 0x55ee8c8a8558 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55ee8c8a85f8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8a8650 <col:30>
|-CXXMethodDecl 0x55ee8c8a8698 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55ee8c8a8738 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8a8790 <col:30>
|-CXXMethodDecl 0x55ee8c8a87d8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c8a8898 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c8a8960 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55ee8c8a8a28 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55ee8c8a8ae8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c8a8c08 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55ee8c8c2460 <col:54, line:99:5>
|   `-ReturnStmt 0x55ee8c8c2450 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c8c2438 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55ee8c8c2408 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55ee8c8b8ee8
|         `-CXXThisExpr 0x55ee8c8c23f8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55ee8c8a8da8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55ee8c8a8cb8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55ee8c8c2510 <col:67, line:103:5>
|   `-BinaryOperator 0x55ee8c8c24f0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55ee8c8c2488 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55ee8c8b8ee8
|     | `-CXXThisExpr 0x55ee8c8c2478 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55ee8c8c24d8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c8c24b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55ee8c8a8cb8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55ee8c8a8ea0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55ee8c8c2590 <col:33, line:107:5>
|   `-ReturnStmt 0x55ee8c8c2580 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c8c2568 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c8c2538 <col:16> 'void *' lvalue ->_destructor_argument 0x55ee8c8b8f50
|         `-CXXThisExpr 0x55ee8c8c2528 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55ee8c8a8f60 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55ee8c8c2bc0 <col:25, line:113:5>
|   |-ParenExpr 0x55ee8c8c2908 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55ee8c8c28d8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c2648 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55ee8c8c2620 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55ee8c8c25e8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55ee8c8c25b8 <col:24> '<bound member function type>' ->shared 0x55ee8c8a7fd8
|   |   |       `-ImplicitCastExpr 0x55ee8c8c2608 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55ee8c8c25a8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c26a8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c2688 <col:42> 'int' 0
|   |   `-CallExpr 0x55ee8c8c2838 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c2820 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c2800 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c2878 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c2718 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55ee8c8c2890 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c2740 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c28a8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c2778 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55ee8c8c28c0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c27e8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c27d0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c2798 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55ee8c8c2b08 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55ee8c8c2938 <col:2> 'unsigned char *' lvalue ->_head 0x55ee8c8b8cf0
|   | | `-CXXThisExpr 0x55ee8c8c2928 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c8c2af0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55ee8c8c2ad0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55ee8c8c2978 <col:10> 'unsigned char *' lvalue ->_data 0x55ee8c8b8d58
|   |     | `-CXXThisExpr 0x55ee8c8c2968 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55ee8c8c2ab8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55ee8c8c2a98 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55ee8c8c29b8 <col:18> 'unsigned char *' lvalue ->_tail 0x55ee8c8b8dc0
|   |         | `-CXXThisExpr 0x55ee8c8c29a8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55ee8c8c2a80 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55ee8c8c2a60 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55ee8c8c29f8 <col:26> 'unsigned char *' lvalue ->_end 0x55ee8c8b8e28
|   |             | `-CXXThisExpr 0x55ee8c8c29e8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55ee8c8c2a48 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55ee8c8c2a28 <col:33> 'int' 0
|   `-BinaryOperator 0x55ee8c8c2ba0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55ee8c8c2b38 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55ee8c8b8ee8
|     | `-CXXThisExpr 0x55ee8c8c2b28 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55ee8c8c2b88 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55ee8c8c2b68 <col:16> 'int' 0
|-CXXMethodDecl 0x55ee8c8a90a0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55ee8c8a9010 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ee8c8a9148 <col:20>
| |-OptimizeNoneAttr 0x55ee8c8a91a0 <col:30>
| `-WarnUnusedResultAttr 0x55ee8c8a91c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a9298 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55ee8c8a9208 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ee8c8a9340 <col:20>
| |-OptimizeNoneAttr 0x55ee8c8a9398 <col:30>
| `-WarnUnusedResultAttr 0x55ee8c8a93c0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a94f8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55ee8c8a9400 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ee8c8a95a0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a96a0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55ee8c8a9610 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ee8c8a9748 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8a97a0 <col:30>
|-CXXMethodDecl 0x55ee8c8a9868 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55ee8c8a97d8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ee8c8a9910 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a9a10 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55ee8c8a9980 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55ee8c8a9ab8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8a9bb8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55ee8c8a9b28 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ee8c8a9c60 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8a9cb8 <col:30>
|-CXXMethodDecl 0x55ee8c8a9e48 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55ee8c8a9cf8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55ee8c8a9d70 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55ee8c8c23b8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55ee8c8a9ef8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55ee8c8aa0f8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c8a9f70 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c8a9fe8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c8aa308 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c8aa1b8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ee8c8aa230 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c8aa518 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55ee8c8aa3c8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55ee8c8aa448 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55ee8c8c23c8 <col:39> 'int' 0
|-CXXMethodDecl 0x55ee8c8aa5e8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55ee8c8aa6b0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55ee8c8aa778 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55ee8c8aa838 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c8aa900 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55ee8c8aaa48 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55ee8c8aa9b8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55ee8c8aac18 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c8aab08 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c8aab80 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c8aace8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55ee8c8aada8 <line:288:5, col:66> col:45 used has_network_header 'bool () const'
| |-NoInlineAttr 0x55ee8c8aae48 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8aaea0 <col:30>
|-CXXMethodDecl 0x55ee8c8aaef0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55ee8c8aaf90 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8aafe8 <col:30>
|-CXXMethodDecl 0x55ee8c8ab038 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55ee8c8ab0f8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c8ab1c0 <line:292:5, col:61> col:44 used network_length 'int () const'
| |-NoInlineAttr 0x55ee8c8ab260 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ab2b8 <col:30>
|-CXXMethodDecl 0x55ee8c8ab408 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c8ab2f8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c8ab370 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c8ab558 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55ee8c8ab4c8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c8ab630 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55ee8c8ab6f0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55ee8c8ab790 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ab7e8 <col:30>
|-CXXMethodDecl 0x55ee8c8ab838 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55ee8c8ab8d8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ab930 <col:30>
|-CXXMethodDecl 0x55ee8c8ab980 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55ee8c8aba48 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55ee8c8abae8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8abb40 <col:30>
|-CXXMethodDecl 0x55ee8c8abb88 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55ee8c8abca8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55ee8c8abe18 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55ee8c8abd58 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55ee8c8abf08 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55ee8c8abfa8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ac000 <col:30>
|-CXXMethodDecl 0x55ee8c8ac050 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55ee8c8ac110 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c8ac348 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55ee8c8ac1c0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55ee8c8ac238 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ee8c8ac3f8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ac450 <col:30>
|-CXXMethodDecl 0x55ee8c8ac4f8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55ee8c8ac598 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ac5f0 <col:30>
|-CXXMethodDecl 0x55ee8c8ac640 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55ee8c8ac6e0 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ac738 <col:30>
|-CXXMethodDecl 0x55ee8c8ac780 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55ee8c8ac820 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ac878 <col:30>
|-CXXMethodDecl 0x55ee8c8ac978 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55ee8c8ac8b0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55ee8c8aca20 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8aca78 <col:30>
|-CXXMethodDecl 0x55ee8c8acc38 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55ee8c8acab0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55ee8c8acb28 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ee8c8acce8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8acd40 <col:30>
|-CXXMethodDecl 0x55ee8c8acde8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55ee8c8acf08 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55ee8c8ad028 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55ee8c8ad0c8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55ee8c8ad0f0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55ee8c8ad218 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55ee8c8ad2b8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ad310 <col:30>
|-CXXMethodDecl 0x55ee8c8ad3b8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55ee8c8ad458 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ad4b0 <col:30>
|-AccessSpecDecl 0x55ee8c8ad4d8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55ee8c8ad500 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55ee8c8ad600 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55ee8c8ad650 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8ad5e0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55ee8c8ad5c0 <col:14> 'int' 48
|-CXXMethodDecl 0x55ee8c8ad6b8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55ee8c8ad758 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ad7b0 <col:30>
|-CXXMethodDecl 0x55ee8c8ad828 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55ee8c8ad8c8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ad920 <col:30>
|-CXXMethodDecl 0x55ee8c8ad9e8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55ee8c8ad958 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c8adb88 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55ee8c8add28 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55ee8c8adc38 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55ee8c8addd0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55ee8c8aded0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ee8c8ae280 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8adeb0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55ee8c8ade90 <col:9> 'int' 0
| |-EnumConstantDecl 0x55ee8c8adf60 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ee8c8ae298 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8adf40 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55ee8c8adf20 <col:14> 'int' 1
| |-EnumConstantDecl 0x55ee8c8adff0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ee8c8ae2b0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8adfd0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55ee8c8adfb0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55ee8c8ae080 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ee8c8ae2c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8ae060 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55ee8c8ae040 <col:14> 'int' 3
| |-EnumConstantDecl 0x55ee8c8ae110 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ee8c8ae2e0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8ae0f0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55ee8c8ae0d0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55ee8c8ae1a0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55ee8c8ae2f8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8ae180 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55ee8c8ae160 <col:13> 'int' 5
| `-EnumConstantDecl 0x55ee8c8ae230 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55ee8c8ae310 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8ae210 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55ee8c8ae1f0 <col:14> 'int' 6
|-CXXMethodDecl 0x55ee8c8ae378 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55ee8c8ae418 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ae470 <col:30>
|-CXXMethodDecl 0x55ee8c8ae568 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55ee8c8ae4a8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55ee8c8ae610 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8ae668 <col:30>
|-CXXMethodDecl 0x55ee8c8ae6d8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55ee8c8ae800 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55ee8c8ae978 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55ee8c8ae8b0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55ee8c8aea40 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55ee8c8aeb08 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55ee8c8aec48 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55ee8c8aebb8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55ee8c8aecf0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55ee8c8aedf0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55ee8c8aeff0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8aedd0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55ee8c8aedb0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55ee8c8aee80 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55ee8c8af008 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8aee60 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55ee8c8aee40 <col:45> 'int' 4
| |-EnumConstantDecl 0x55ee8c8aef10 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55ee8c8af020 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8aeef0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55ee8c8aeed0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55ee8c8aefa0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55ee8c8af038 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8aef80 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55ee8c8aef60 <col:47> 'int' 16
|-CXXMethodDecl 0x55ee8c8af098 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55ee8c8af208 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55ee8c8af148 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55ee8c8af2b0 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8af308 <col:30>
|-CXXMethodDecl 0x55ee8c8af358 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55ee8c8c2ce0 <col:18, col:36>
|   `-ReturnStmt 0x55ee8c8c2cd0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55ee8c8c2cb8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55ee8c8c2c98 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55ee8c8c2c68 <col:27> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|           `-CXXThisExpr 0x55ee8c8c2c58 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55ee8c8af450 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55ee8c8c2df0 <col:30, col:48>
|   `-ReturnStmt 0x55ee8c8c2de0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55ee8c8c2dc8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55ee8c8c2da8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55ee8c8c2d78 <col:39> '<bound member function type>' ->xanno 0x55ee8c8ad218
|           `-CXXThisExpr 0x55ee8c8c2d68 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55ee8c8af538 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55ee8c8c2f88 <col:24, col:50>
|   `-ReturnStmt 0x55ee8c8c2f78 <col:26, col:47>
|     `-UnaryOperator 0x55ee8c8c2f60 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55ee8c8c2f40 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55ee8c8c2f28 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ee8c8c2ed8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55ee8c8b81f8
|         |   `-CXXMemberCallExpr 0x55ee8c8c2eb8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55ee8c8c2e88 <col:34> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|         |       `-CXXThisExpr 0x55ee8c8c2e78 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55ee8c8c2f08 <col:46> 'int' 0
|-CXXMethodDecl 0x55ee8c8af640 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55ee8c8c3158 <col:36, col:62>
|   `-ReturnStmt 0x55ee8c8c3148 <col:38, col:59>
|     `-UnaryOperator 0x55ee8c8c3130 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55ee8c8c3110 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55ee8c8c30f8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ee8c8c3070 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55ee8c8b81f8
|         |   `-CXXMemberCallExpr 0x55ee8c8c3050 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55ee8c8c3020 <col:46> '<bound member function type>' ->xanno 0x55ee8c8ad218
|         |       `-CXXThisExpr 0x55ee8c8c3010 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55ee8c8c30a0 <col:58> 'int' 0
|-CXXMethodDecl 0x55ee8c8af758 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55ee8c8c32f0 <col:26, col:53>
|   `-ReturnStmt 0x55ee8c8c32e0 <col:28, col:50>
|     `-UnaryOperator 0x55ee8c8c32c8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55ee8c8c32a8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55ee8c8c3290 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ee8c8c3240 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55ee8c8b84f8
|         |   `-CXXMemberCallExpr 0x55ee8c8c3220 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55ee8c8c31f0 <col:36> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|         |       `-CXXThisExpr 0x55ee8c8c31e0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55ee8c8c3270 <col:49> 'int' 0
|-CXXMethodDecl 0x55ee8c8af878 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55ee8c8c34c8 <col:38, col:65>
|   `-ReturnStmt 0x55ee8c8c34b8 <col:40, col:62>
|     `-UnaryOperator 0x55ee8c8c34a0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55ee8c8c3480 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55ee8c8c3468 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ee8c8c33d8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55ee8c8b84f8
|         |   `-CXXMemberCallExpr 0x55ee8c8c33b8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55ee8c8c3388 <col:48> '<bound member function type>' ->xanno 0x55ee8c8ad218
|         |       `-CXXThisExpr 0x55ee8c8c3378 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55ee8c8c3408 <col:61> 'int' 0
|-CXXMethodDecl 0x55ee8c8afa28 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55ee8c8af930 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55ee8c8c3b98 <col:34, line:463:5>
|   |-ParenExpr 0x55ee8c8c39e0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55ee8c8c39b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c3618 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c35e8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c3538 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c3520 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c34e0 <col:23> 'int' lvalue ParmVar 0x55ee8c8af930 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c3500 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c35c8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c3598 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c3558 <col:33> 'int' lvalue ParmVar 0x55ee8c8af930 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55ee8c8c35b0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55ee8c8c3578 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c3678 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c3658 <col:56> 'int' 0
|   |   `-CallExpr 0x55ee8c8c3910 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c38f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c38d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c3950 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c3768 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55ee8c8c3968 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c3798 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c3980 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c37d0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55ee8c8c3998 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c38c0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c38a8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c3868 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55ee8c8c3b88 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55ee8c8c3b70 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55ee8c8c3b50 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55ee8c8c3b20 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55ee8c8c3ad0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55ee8c8b81f8
|         |   `-CXXMemberCallExpr 0x55ee8c8c3ab0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55ee8c8c3a80 <col:9> '<bound member function type>' ->xanno 0x55ee8c8ad218
|         |       `-CXXThisExpr 0x55ee8c8c3a70 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55ee8c8c3b38 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55ee8c8c3b00 <col:21> 'int' lvalue ParmVar 0x55ee8c8af930 'i' 'int'
|-CXXMethodDecl 0x55ee8c8afc78 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55ee8c8afae8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55ee8c8afb60 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55ee8c8c4228 <col:40, line:472:5>
|   |-ParenExpr 0x55ee8c8c4040 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55ee8c8c4010 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c3cf0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c3cc0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c3c10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c3bf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c3bb8 <col:23> 'int' lvalue ParmVar 0x55ee8c8afae8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c3bd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c3ca0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c3c70 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c3c30 <col:33> 'int' lvalue ParmVar 0x55ee8c8afae8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55ee8c8c3c88 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55ee8c8c3c50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c3d50 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c3d30 <col:56> 'int' 0
|   |   `-CallExpr 0x55ee8c8c3f70 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c3f58 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c3f38 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c3fb0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c3dc0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55ee8c8c3fc8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c3df0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c3fe0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c3e28 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55ee8c8c3ff8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c3f20 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c3f08 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c3ec8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55ee8c8c4208 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55ee8c8c41b0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55ee8c8c4180 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55ee8c8c4130 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55ee8c8b81f8
|     | |   `-CXXMemberCallExpr 0x55ee8c8c4110 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55ee8c8c40e0 <col:2> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|     | |       `-CXXThisExpr 0x55ee8c8c40d0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55ee8c8c4198 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ee8c8c4160 <col:14> 'int' lvalue ParmVar 0x55ee8c8afae8 'i' 'int'
|     `-ImplicitCastExpr 0x55ee8c8c41f0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c8c41d0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55ee8c8afb60 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55ee8c8afe38 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55ee8c8afd40 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55ee8c8c49a8 <col:36, line:485:5>
|   |-ParenExpr 0x55ee8c8c4710 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c46e0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c43c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c4390 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c42a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c4288 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c4248 <col:23> 'int' lvalue ParmVar 0x55ee8c8afd40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c4268 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c4370 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c4358 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c42c0 <col:33> 'int' lvalue ParmVar 0x55ee8c8afd40 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c4338 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c4320 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c42e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c4300 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c4420 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c4400 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c4640 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c4628 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c4608 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c4680 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c4490 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55ee8c8c4698 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c44c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c46b0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c4500 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55ee8c8c46c8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c45f0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c45d8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c4598 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55ee8c8c4998 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55ee8c8c4980 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55ee8c8c4968 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ee8c8c4938 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55ee8c8c48d8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ee8c8c48a8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ee8c8c4820 <col:61, col:70> 'char const[48]' lvalue ->c 0x55ee8c8b80d0
|             |   `-CXXMemberCallExpr 0x55ee8c8c4800 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ee8c8c47d0 <col:61> '<bound member function type>' ->xanno 0x55ee8c8ad218
|             |       `-CXXThisExpr 0x55ee8c8c47c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ee8c8c48c0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ee8c8c4850 <col:74> 'int' lvalue ParmVar 0x55ee8c8afd40 'i' 'int'
|-CXXMethodDecl 0x55ee8c8b0088 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55ee8c8afef8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ee8c8aff70 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55ee8c8c50f8 <col:42, line:500:5>
|   |-ParenExpr 0x55ee8c8c4e90 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c4e60 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c4b40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c4b10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c4a20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c4a08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c49c8 <col:23> 'int' lvalue ParmVar 0x55ee8c8afef8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c49e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c4af0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c4ad8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c4a40 <col:33> 'int' lvalue ParmVar 0x55ee8c8afef8 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c4ab8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c4aa0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c4a60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c4a80 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c4ba0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c4b80 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c4dc0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c4da8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c4d88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c4e00 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c4c10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55ee8c8c4e18 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c4c48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c4e30 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c4c80 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55ee8c8c4e48 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c4d70 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c4d58 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c4d18 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55ee8c8c50d8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55ee8c8c5088 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ee8c8c5058 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55ee8c8c5000 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ee8c8c4fd0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ee8c8c4f80 <col:48, col:57> 'char [48]' lvalue ->c 0x55ee8c8b80d0
|     |     |   `-CXXMemberCallExpr 0x55ee8c8c4f60 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ee8c8c4f30 <col:48> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|     |     |       `-CXXThisExpr 0x55ee8c8c4f20 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ee8c8c4fe8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ee8c8c4fb0 <col:61> 'int' lvalue ParmVar 0x55ee8c8afef8 'i' 'int'
|     `-ImplicitCastExpr 0x55ee8c8c50c0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c8c50a0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55ee8c8aff70 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55ee8c8b0248 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55ee8c8b0150 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55ee8c8c5858 <col:35, line:513:5>
|   |-ParenExpr 0x55ee8c8c5568 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c5538 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c5290 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c5260 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c5170 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c5158 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c5118 <col:23> 'int' lvalue ParmVar 0x55ee8c8b0150 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c5138 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c5240 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c5228 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c5190 <col:33> 'int' lvalue ParmVar 0x55ee8c8b0150 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c5208 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c51f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c51b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c51d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c52f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c52d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c5498 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c5480 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c5460 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c54d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c5360 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55ee8c8c54f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c5398 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c5508 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c53d0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55ee8c8c5520 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c5448 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c5430 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c53f0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55ee8c8c5848 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55ee8c8c5830 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55ee8c8c5818 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ee8c8c57e8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55ee8c8c5760 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ee8c8c5730 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ee8c8c56e0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55ee8c8b80d0
|             |   `-CXXMemberCallExpr 0x55ee8c8c56c0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ee8c8c5690 <col:60> '<bound member function type>' ->xanno 0x55ee8c8ad218
|             |       `-CXXThisExpr 0x55ee8c8c5680 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ee8c8c5748 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ee8c8c5710 <col:73> 'int' lvalue ParmVar 0x55ee8c8b0150 'i' 'int'
|-CXXMethodDecl 0x55ee8c8b0498 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55ee8c8b0308 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ee8c8b0380 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55ee8c8c5f78 <col:41, line:528:5>
|   |-ParenExpr 0x55ee8c8c5d00 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c5cd0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c59f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c59c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c58d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c58b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c5878 <col:23> 'int' lvalue ParmVar 0x55ee8c8b0308 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c5898 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c59a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c5988 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c58f0 <col:33> 'int' lvalue ParmVar 0x55ee8c8b0308 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c5968 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c5950 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c5910 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c5930 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c5a50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c5a30 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c5c30 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c5c18 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c5bf8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c5c70 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c5ac0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55ee8c8c5c88 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c5af8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c5ca0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c5b30 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55ee8c8c5cb8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c5be0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c5bc8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c5b88 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55ee8c8c5f58 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55ee8c8c5f08 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ee8c8c5ed8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55ee8c8c5e80 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ee8c8c5e40 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ee8c8c5df0 <col:47, col:56> 'char [48]' lvalue ->c 0x55ee8c8b80d0
|     |     |   `-CXXMemberCallExpr 0x55ee8c8c5dd0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ee8c8c5da0 <col:47> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|     |     |       `-CXXThisExpr 0x55ee8c8c5d90 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ee8c8c5e58 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ee8c8c5e20 <col:60> 'int' lvalue ParmVar 0x55ee8c8b0308 'i' 'int'
|     `-ImplicitCastExpr 0x55ee8c8c5f40 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c8c5f20 <col:65> 'int16_t':'short' lvalue ParmVar 0x55ee8c8b0380 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55ee8c8b0658 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55ee8c8b0560 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55ee8c8c6648 <col:36, line:541:5>
|   |-ParenExpr 0x55ee8c8c63e8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c63b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c6110 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c60e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c5ff0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c5fd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c5f98 <col:23> 'int' lvalue ParmVar 0x55ee8c8b0560 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c5fb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c60c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c60a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c6010 <col:33> 'int' lvalue ParmVar 0x55ee8c8b0560 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c6088 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c6070 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c6030 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c6050 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c6170 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c6150 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c6318 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c6300 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c62e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c6358 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c61e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55ee8c8c6370 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c6218 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c6388 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c6250 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55ee8c8c63a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c62c8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c62b0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c6270 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55ee8c8c6638 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55ee8c8c6620 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55ee8c8c6608 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ee8c8c65d8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55ee8c8c6580 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ee8c8c6550 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ee8c8c6500 <col:61, col:70> 'char const[48]' lvalue ->c 0x55ee8c8b80d0
|             |   `-CXXMemberCallExpr 0x55ee8c8c64e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ee8c8c64b0 <col:61> '<bound member function type>' ->xanno 0x55ee8c8ad218
|             |       `-CXXThisExpr 0x55ee8c8c64a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ee8c8c6568 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ee8c8c6530 <col:74> 'int' lvalue ParmVar 0x55ee8c8b0560 'i' 'int'
|-CXXMethodDecl 0x55ee8c8b0828 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55ee8c8b0718 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55ee8c8b0790 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55ee8c8b08d8 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8b0930 <col:30>
|-CXXMethodDecl 0x55ee8c8b0a68 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55ee8c8b0970 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55ee8c8c6d18 <col:35, line:562:5>
|   |-ParenExpr 0x55ee8c8c6ab8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c6a88 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c67e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c67b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c66c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c66a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c6668 <col:23> 'int' lvalue ParmVar 0x55ee8c8b0970 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c6688 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c6790 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c6778 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c66e0 <col:33> 'int' lvalue ParmVar 0x55ee8c8b0970 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c6758 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c6740 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c6700 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c6720 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c6840 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c6820 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c69e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c69d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c69b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c6a28 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c68b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55ee8c8c6a40 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c68e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c6a58 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c6920 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55ee8c8c6a70 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c6998 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c6980 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c6940 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55ee8c8c6d08 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55ee8c8c6cf0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55ee8c8c6cd8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ee8c8c6ca8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55ee8c8c6c50 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ee8c8c6c20 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ee8c8c6bd0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55ee8c8b80d0
|             |   `-CXXMemberCallExpr 0x55ee8c8c6bb0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ee8c8c6b80 <col:60> '<bound member function type>' ->xanno 0x55ee8c8ad218
|             |       `-CXXThisExpr 0x55ee8c8c6b70 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ee8c8c6c38 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ee8c8c6c00 <col:73> 'int' lvalue ParmVar 0x55ee8c8b0970 'i' 'int'
|-CXXMethodDecl 0x55ee8c8b0c78 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55ee8c8b0b28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ee8c8b0ba0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55ee8c8c73f8 <col:41, line:577:5>
|   |-ParenExpr 0x55ee8c8c7188 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c7158 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c6eb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c6e80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c6d90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c6d78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c6d38 <col:23> 'int' lvalue ParmVar 0x55ee8c8b0b28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c6d58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c6e60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c6e48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c6db0 <col:33> 'int' lvalue ParmVar 0x55ee8c8b0b28 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c6e28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c6e10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c6dd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c6df0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c6f10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c6ef0 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c70b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c70a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c7080 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c70f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c6f80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55ee8c8c7110 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c6fb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c7128 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c6ff0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55ee8c8c7140 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c7068 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c7050 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c7010 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55ee8c8c73d8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55ee8c8c7388 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ee8c8c7358 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55ee8c8c72f8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ee8c8c72c8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ee8c8c7278 <col:47, col:56> 'char [48]' lvalue ->c 0x55ee8c8b80d0
|     |     |   `-CXXMemberCallExpr 0x55ee8c8c7258 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ee8c8c7228 <col:47> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|     |     |       `-CXXThisExpr 0x55ee8c8c7218 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ee8c8c72e0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ee8c8c72a8 <col:60> 'int' lvalue ParmVar 0x55ee8c8b0b28 'i' 'int'
|     `-ImplicitCastExpr 0x55ee8c8c73c0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c8c73a0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55ee8c8b0ba0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55ee8c8b0e38 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55ee8c8b0d40 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55ee8c8c7b28 <col:36, line:591:5>
|   |-ParenExpr 0x55ee8c8c7868 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c7838 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c7590 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c7560 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c7470 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c7458 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c7418 <col:23> 'int' lvalue ParmVar 0x55ee8c8b0d40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c7438 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c7540 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c7528 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c7490 <col:33> 'int' lvalue ParmVar 0x55ee8c8b0d40 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c7508 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c74f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c74b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c74d0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c75f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c75d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c7798 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c7780 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c7760 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c77d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c7660 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55ee8c8c77f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c7698 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c7808 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c76d0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55ee8c8c7820 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c7748 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c7730 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c76f0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55ee8c8c7b18 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55ee8c8c7b00 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55ee8c8c7ae8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ee8c8c7ab8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55ee8c8c7a30 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ee8c8c7a00 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ee8c8c79b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55ee8c8b80d0
|             |   `-CXXMemberCallExpr 0x55ee8c8c7990 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ee8c8c7960 <col:61> '<bound member function type>' ->xanno 0x55ee8c8ad218
|             |       `-CXXThisExpr 0x55ee8c8c7950 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ee8c8c7a18 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ee8c8c79e0 <col:74> 'int' lvalue ParmVar 0x55ee8c8b0d40 'i' 'int'
|-CXXMethodDecl 0x55ee8c8b1088 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55ee8c8b0ef8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ee8c8b0f70 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55ee8c8c8208 <col:42, line:606:5>
|   |-ParenExpr 0x55ee8c8c7f98 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55ee8c8c7f68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c7cc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c7c90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c7ba0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c7b88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c7b48 <col:23> 'int' lvalue ParmVar 0x55ee8c8b0ef8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c7b68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c7c70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55ee8c8c7c58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c7bc0 <col:33> 'int' lvalue ParmVar 0x55ee8c8b0ef8 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c7c38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c7c20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c7be0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55ee8c8c7c00 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c7d20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c7d00 <col:60> 'int' 0
|   |   `-CallExpr 0x55ee8c8c7ec8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c7eb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c7e90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c7f08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c7d90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55ee8c8c7f20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c7dc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c7f38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c7e00 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55ee8c8c7f50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c7e78 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c7e60 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c7e20 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55ee8c8c81e8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55ee8c8c8198 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ee8c8c8168 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55ee8c8c8108 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ee8c8c80d8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ee8c8c8088 <col:48, col:57> 'char [48]' lvalue ->c 0x55ee8c8b80d0
|     |     |   `-CXXMemberCallExpr 0x55ee8c8c8068 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ee8c8c8038 <col:48> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|     |     |       `-CXXThisExpr 0x55ee8c8c8028 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ee8c8c80f0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ee8c8c80b8 <col:61> 'int' lvalue ParmVar 0x55ee8c8b0ef8 'i' 'int'
|     `-ImplicitCastExpr 0x55ee8c8c81d0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c8c81b0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55ee8c8b0f70 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55ee8c8b1220 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55ee8c8b1150 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55ee8c8c8a78 <col:33, line:620:5>
|   |-ParenExpr 0x55ee8c8c87f0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55ee8c8c87c0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c8410 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c83e0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c8280 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c8268 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c8228 <col:23> 'int' lvalue ParmVar 0x55ee8c8b1150 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c8248 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c83c0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55ee8c8c83a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c82a0 <col:33> 'int' lvalue ParmVar 0x55ee8c8b1150 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c8388 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c8370 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c82c0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55ee8c8c8348 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55ee8c8c8330 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55ee8c8c82f8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c8470 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c8450 <col:79> 'int' 0
|   |   `-CallExpr 0x55ee8c8c8720 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c8708 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c86e8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c8760 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c8558 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55ee8c8c8778 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c85a0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c8790 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c85d8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55ee8c8c87a8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c86d0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c86b8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c8678 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55ee8c8c8a68 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55ee8c8c8a50 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55ee8c8c8a38 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55ee8c8c8a08 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55ee8c8c8980 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55ee8c8c8950 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55ee8c8c8900 <col:67, col:76> 'char const[48]' lvalue ->c 0x55ee8c8b80d0
|             |   `-CXXMemberCallExpr 0x55ee8c8c88e0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55ee8c8c88b0 <col:67> '<bound member function type>' ->xanno 0x55ee8c8ad218
|             |       `-CXXThisExpr 0x55ee8c8c88a0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55ee8c8c8968 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55ee8c8c8930 <col:80> 'int' lvalue ParmVar 0x55ee8c8b1150 'i' 'int'
|-CXXMethodDecl 0x55ee8c8b1438 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55ee8c8b12e0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55ee8c8b1360 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55ee8c8c92a0 <col:45, line:635:5>
|   |-ParenExpr 0x55ee8c8c8fe8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55ee8c8c8fb8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55ee8c8c8c80 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55ee8c8c8c50 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55ee8c8c8af0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55ee8c8c8ad8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55ee8c8c8a98 <col:23> 'int' lvalue ParmVar 0x55ee8c8b12e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55ee8c8c8ab8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55ee8c8c8c30 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55ee8c8c8c18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55ee8c8c8b10 <col:33> 'int' lvalue ParmVar 0x55ee8c8b12e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55ee8c8c8bf8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55ee8c8c8be0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55ee8c8c8b30 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55ee8c8ad600 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55ee8c8c8bb8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55ee8c8c8ba0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55ee8c8c8b68 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55ee8c8c8ce0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55ee8c8c8cc0 <col:79> 'int' 0
|   |   `-CallExpr 0x55ee8c8c8f18 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55ee8c8c8f00 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8c8ee0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55ee8c8c8f58 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c8d50 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55ee8c8c8f70 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55ee8c8c8d98 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55ee8c8c8f88 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55ee8c8c8dd0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55ee8c8c8fa0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55ee8c8c8ec8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55ee8c8c8eb0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55ee8c8c8e68 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55ee8c8c9280 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55ee8c8c91e8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55ee8c8c91b8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55ee8c8c9158 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55ee8c8c9128 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55ee8c8c90d8 <col:54, col:63> 'char [48]' lvalue ->c 0x55ee8c8b80d0
|     |     |   `-CXXMemberCallExpr 0x55ee8c8c90b8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55ee8c8c9088 <col:54> '<bound member function type>' ->xanno 0x55ee8c8ad3b8
|     |     |       `-CXXThisExpr 0x55ee8c8c9078 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55ee8c8c9140 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55ee8c8c9108 <col:67> 'int' lvalue ParmVar 0x55ee8c8b12e0 'i' 'int'
|     `-CXXConstCastExpr 0x55ee8c8c9250 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55ee8c8c9238 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55ee8c8c9200 <col:91> 'const void *' lvalue ParmVar 0x55ee8c8b1360 'x' 'const void *'
|-CXXMethodDecl 0x55ee8c8b1508 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55ee8c8c9328 <col:34, line:640:5>
|   `-ReturnStmt 0x55ee8c8c9318 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c8c9300 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c8c92d0 <col:16> 'Packet *' lvalue ->_data_packet 0x55ee8c8b8c88
|         `-CXXThisExpr 0x55ee8c8c92c0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55ee8c8b1648 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55ee8c8b15b8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8c8c23e8 <col:46> 'bool' true
|-CXXMethodDecl 0x55ee8c8b17c8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55ee8c8b1700 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55ee8c8b1870 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55ee8c8b2020 <line:660:22> "" ""
| |-EnumConstantDecl 0x55ee8c8b1970 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b2090 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1950 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55ee8c8b1930 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55ee8c8a6ad0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55ee8c8b1a00 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b20a8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b19e0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55ee8c8b19c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55ee8c8a6b60 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55ee8c8b1a90 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b20c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1a70 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55ee8c8b1a50 <col:21> 'int' 0
| |-EnumConstantDecl 0x55ee8c8b1b20 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b20d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1b00 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55ee8c8b1ae0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55ee8c8b1bb0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b20f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1b90 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55ee8c8b1b70 <col:21> 'int' 16
| |-EnumConstantDecl 0x55ee8c8b1c40 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b2108 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1c20 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55ee8c8b1c00 <col:19> 'int' 32
| |-EnumConstantDecl 0x55ee8c8b1cd0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b2120 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1cb0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55ee8c8b1c90 <col:19> 'int' EnumConstant 0x55ee8c8b1b20 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55ee8c8b1d60 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b2138 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1d40 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55ee8c8b1d20 <col:19> 'int' EnumConstant 0x55ee8c8b1c40 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55ee8c8b1e30 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b2150 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1e10 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55ee8c8b1df0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55ee8c8b1db0 <col:23> 'int' EnumConstant 0x55ee8c8b1d60 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55ee8c8b1dd0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55ee8c8b1f00 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55ee8c8b2168 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8b1ee0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55ee8c8b1ec0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55ee8c8b1e80 <col:23> 'int' EnumConstant 0x55ee8c8b1d60 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55ee8c8b1ea0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55ee8c8b1fd0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55ee8c8b2180 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c8b1fb0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55ee8c8b1f90 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55ee8c8b1f50 <col:23> 'int' EnumConstant 0x55ee8c8b1d60 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55ee8c8b1f70 <col:40> 'int' 8
|-CXXMethodDecl 0x55ee8c8b21c0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55ee8c8b2260 <col:68> "" ""
|-CXXMethodDecl 0x55ee8c8b22f8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55ee8c8b2398 <col:45> "" ""
|-CXXMethodDecl 0x55ee8c8b2430 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55ee8c8b24d0 <col:57> "" ""
|-CXXMethodDecl 0x55ee8c8b2568 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55ee8c8b2608 <col:45> "" ""
|-CXXMethodDecl 0x55ee8c8b26a0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55ee8c8b2740 <col:57> "" ""
|-CXXMethodDecl 0x55ee8c8b27d0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55ee8c8b2870 <col:51> "" ""
|-CXXMethodDecl 0x55ee8c8b2900 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55ee8c8b29a0 <col:63> "" ""
|-CXXMethodDecl 0x55ee8c8b2a30 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55ee8c8b2ad0 <col:53> "" ""
|-CXXMethodDecl 0x55ee8c8b2b60 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55ee8c8b2c00 <col:65> "" ""
|-CXXMethodDecl 0x55ee8c8b2d18 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b2c88 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55ee8c8b2dc0 <col:61> "" ""
|-CXXMethodDecl 0x55ee8c8b2f58 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55ee8c8b2e48 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55ee8c8b2ec0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55ee8c8b3008 <col:67> "" ""
|-CXXMethodDecl 0x55ee8c8b3120 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b3090 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55ee8c8b31c8 <col:63> "" ""
|-CXXMethodDecl 0x55ee8c8b3360 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55ee8c8b3250 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55ee8c8b32c8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55ee8c8b3410 <col:69> "" ""
|-CXXMethodDecl 0x55ee8c8b3528 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b3498 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55ee8c8b35d0 <col:63> "" ""
|-CXXMethodDecl 0x55ee8c8b5ca8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c8b5b98 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55ee8c8b5c10 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c8b5d58 <col:69> "" ""
|-CXXMethodDecl 0x55ee8c8b5e70 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b5de0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55ee8c8b5f18 <col:62> "" ""
|-CXXMethodDecl 0x55ee8c8b60b0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55ee8c8b5fa0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55ee8c8b6018 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55ee8c8b6160 <col:68> "" ""
|-CXXMethodDecl 0x55ee8c8b6278 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b61e8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55ee8c8b6320 <col:63> "" ""
|-CXXMethodDecl 0x55ee8c8b64b8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55ee8c8b63a8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55ee8c8b6420 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55ee8c8b6568 <col:69> "" ""
|-CXXMethodDecl 0x55ee8c8b65f8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55ee8c8b6698 <col:64> "" ""
|-CXXMethodDecl 0x55ee8c8b6728 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55ee8c8b67c8 <col:52> "" ""
|-CXXMethodDecl 0x55ee8c8b6858 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55ee8c8b68f8 <col:67> "" ""
|-CXXMethodDecl 0x55ee8c8b6988 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55ee8c8b6a28 <col:55> "" ""
|-CXXMethodDecl 0x55ee8c8b6b40 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b6ab0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55ee8c8b6be8 <col:58> "" ""
|-CXXMethodDecl 0x55ee8c8b6d80 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55ee8c8b6c70 <col:33> col:36 'int'
| |-ParmVarDecl 0x55ee8c8b6ce8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55ee8c8b6e30 <col:62> "" ""
|-CXXMethodDecl 0x55ee8c8b6f48 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b6eb8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55ee8c8b6ff0 <col:58> "" ""
|-CXXMethodDecl 0x55ee8c8b7188 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55ee8c8b7078 <col:33> col:36 'int'
| |-ParmVarDecl 0x55ee8c8b70f0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55ee8c8b7238 <col:62> "" ""
|-CXXMethodDecl 0x55ee8c8b7350 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b72c0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55ee8c8b73f8 <col:60> "" ""
|-CXXMethodDecl 0x55ee8c8b7590 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55ee8c8b7480 <col:34> col:37 'int'
| |-ParmVarDecl 0x55ee8c8b74f8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55ee8c8b7640 <col:64> "" ""
|-CXXMethodDecl 0x55ee8c8b7758 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b76c8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55ee8c8b7800 <col:58> "" ""
|-CXXMethodDecl 0x55ee8c8b7998 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55ee8c8b7888 <col:33> col:36 'int'
| |-ParmVarDecl 0x55ee8c8b7900 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55ee8c8b7a48 <col:62> "" ""
|-CXXMethodDecl 0x55ee8c8b7b60 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55ee8c8b7ad0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55ee8c8b7c08 <col:59> "" ""
|-CXXMethodDecl 0x55ee8c8b7da0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c8b7c90 <col:33> col:36 'int'
| |-ParmVarDecl 0x55ee8c8b7d08 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c8b7e50 <col:63> "" ""
|-AccessSpecDecl 0x55ee8c8b7ec0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55ee8c8b7ee8 prev 0x55ee8c8ad0f0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ee8c8b7fe0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55ee8c8b80d0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55ee8c8b81f8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55ee8c8b8378 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55ee8c8b84f8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55ee8c8b8678 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55ee8c8c94a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ee8c8c9d18 <col:11>
| |-CXXDestructorDecl 0x55ee8c8c9580 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55ee8c8c96b8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55ee8c8c96b8
| | `-ParmVarDecl 0x55ee8c8c97c8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55ee8c8c9868 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55ee8c8c9868
| | `-ParmVarDecl 0x55ee8c8c9978 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55ee8c8cc738 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ee8c8cc848 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55ee8c8ccac8 <col:11>
| |   `-ReturnStmt 0x55ee8c8ccab8 <col:11>
| |     `-UnaryOperator 0x55ee8c8ccaa0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55ee8c8cca90 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55ee8c8cc8b8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55ee8c8cc8b8
|   `-ParmVarDecl 0x55ee8c8cc9c8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55ee8c8b86e0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ee8c8b87f8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55ee8c8b8898 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55ee8c8b8900 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55ee8c8b8968 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55ee8c8b89d0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55ee8c8b8a30 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55ee8c8b8af0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55ee8c8b8b50 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55ee8c8b8bb0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55ee8c8c93b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55ee8c8b8898 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55ee8c8c9d28 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55ee8c8c9d80 <col:12>
| |-CXXConstructorDecl 0x55ee8c8c99e8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55ee8c8c99e8
| | `-ParmVarDecl 0x55ee8c8c9af8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55ee8c8c9b98 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55ee8c8c9b98
| | `-ParmVarDecl 0x55ee8c8c9ca8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55ee8c8cbe20 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55ee8c8b8c28 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55ee8c8b8c88 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55ee8c8b8cf0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55ee8c8b8d58 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55ee8c8b8dc0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55ee8c8b8e28 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55ee8c8b8e88 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55ee8c8b8ee8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55ee8c8b8f50 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55ee8c8b8fd8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55ee8c8b8c28 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55ee8c8c9350 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55ee8c8b8e88 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55ee8c8c9d90 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55ee8c8c9df0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55ee8c8b9178 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55ee8c8b90b8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55ee8c8b9270 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55ee8c8b9458 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55ee8c8b9360 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55ee8c8b9728 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55ee8c8b9510 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55ee8c8b9588 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55ee8c8b9600 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c8b9948 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55ee8c8b97f8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c8b9870 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55ee8c8c1f28 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55ee8c8b9a08 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55ee8c8b9a80 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55ee8c8b9af8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55ee8c8c2080 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55ee8c8c1ff0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c8c21c8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55ee8c8c2138 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55ee8c8c22c0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9c80d0 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c9c81e8 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55ee8c9c8290 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55ee8c9c82f8 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55ee8c9c8360 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55ee8c9c8410 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55ee8c9c8290 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55ee8c9c92b0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55ee8c9c9268 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55ee8c9c9230 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55ee8c9c9218 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55ee8c9c91c0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55ee8c6d0f40 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55ee8c9c82f8 'len' 'int'
| | `-IntegerLiteral 0x55ee8c9c9328 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c9c8360 'cap' 'int'
| | `-IntegerLiteral 0x55ee8c9c9390 <col:20> 'int' 0
| `-CompoundStmt 0x55ee8c9c9410 <col:23, line:119:2>
|-CXXConstructorDecl 0x55ee8c9c8588 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55ee8c9c84c8 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55ee8c9c9420 <col:37, line:121:2>
|-CXXConstructorDecl 0x55ee8c9cb638 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c9cb748 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55ee8c9c8290 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55ee8c9cd100 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55ee8c9cd0d0 <col:12> 'unsigned char *const' lvalue .s 0x55ee8c9c8290
| |     `-DeclRefExpr 0x55ee8c9cd0b0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55ee8c9cb748 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55ee8c9c82f8 'len' 'int'
| | `-ImplicitCastExpr 0x55ee8c9cd190 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55ee8c9cd160 <col:12> 'const int' lvalue .len 0x55ee8c9c82f8
| |     `-DeclRefExpr 0x55ee8c9cd140 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55ee8c9cb748 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55ee8c9c8360 'cap' 'int'
| | `-ImplicitCastExpr 0x55ee8c9cd220 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55ee8c9cd1f0 <col:12> 'const int' lvalue .cap 0x55ee8c9c8360
| |     `-DeclRefExpr 0x55ee8c9cd1d0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55ee8c9cb748 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55ee8c9cd278 <col:12>
|-CXXConstructorDecl 0x55ee8c9cb7e8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ee8c9cb7e8
| `-ParmVarDecl 0x55ee8c9cb8f8 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55ee8c9cd530 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9c3878 prev 0x55ee8c8f9858 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c9c3970 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55ee8c9c3a00 <col:21, col:27> col:21 public
|-TypedefDecl 0x55ee8c9c3a40 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55ee8c379fd0 'const char *'
|   `-QualType 0x55ee8c379521 'const char' const
|     `-BuiltinType 0x55ee8c379520 'char'
|-TypedefDecl 0x55ee8c9c3ab0 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55ee8c37a1a0 'char *'
|   `-BuiltinType 0x55ee8c379520 'char'
|-TypedefDecl 0x55ee8c9c3bf0 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55ee8c9c3b60 'int (StringAccum::*)() const'
|   |-RecordType 0x55ee8c63b5e0 'StringAccum'
|   | `-CXXRecord 0x55ee8c9c3878 'StringAccum'
|   `-ParenType 0x55ee8c6aaf50 'int () const' sugar
|     `-FunctionProtoType 0x55ee8c67eae0 'int () const' const cdecl
|       `-BuiltinType 0x55ee8c379580 'int'
|-CXXConstructorDecl 0x55ee8c9c3cb0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55ee8c9c3e00 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55ee8c9c3d70 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55ee8c9c3f50 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55ee8c9c3ec0 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55ee8c9c40f8 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55ee8c9c4038 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55ee8c9c42a8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55ee8c9c41e8 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55ee8c9c43a0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55ee8c9c4558 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55ee8c9c4490 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55ee8c9c46d8 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55ee8c9c4610 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55ee8c9c47d0 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55ee8c9c4898 <line:50:5, col:23> col:18 used data 'char *()' inline
|-CXXMethodDecl 0x55ee8c9c4960 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55ee8c9c4a28 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55ee8c9c4af0 <line:54:5, col:23> col:17 used c_str 'const char *()'
|-CXXConversionDecl 0x55ee8c9c4c58 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55ee8c9c4d28 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8c9c4de8 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55ee8c9c4ef8 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55ee8c9c5008 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55ee8c9c50c8 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55ee8c9c5188 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55ee8c9c52d0 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55ee8c9c5240 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55ee8c9c5460 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55ee8c9c5390 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55ee8c9c5528 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55ee8c9c5620 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55ee8c9c56e0 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55ee8c9c57a8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55ee8c9c5868 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55ee8c9c5928 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55ee8c9c59e8 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8c9c5b38 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55ee8c9c5aa0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55ee8c9c5c88 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55ee8c9c5bf8 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55ee8c9c5de0 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55ee8c9c5d48 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55ee8c9c5f30 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55ee8c9c5ea0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55ee8c9c6150 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55ee8c9c5ff0 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55ee8c9c6070 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55ee8c9c90e8 <col:53> 'int' 0
|-CXXMethodDecl 0x55ee8c9c62a8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55ee8c9c6218 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55ee8c9c9108 <col:34> 'int' 1
|-CXXMethodDecl 0x55ee8c9c63f0 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55ee8c9c6360 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55ee8c9c6540 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55ee8c9c64b0 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55ee8c9c6690 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55ee8c9c6600 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55ee8c9c67e0 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55ee8c9c6750 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55ee8c9c69b8 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55ee8c9c68a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55ee8c9c6920 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55ee8c9c6b98 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55ee8c9c6a80 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c9c6b00 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55ee8c9c6d78 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55ee8c9c6c60 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55ee8c9c6ce0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55ee8c9c6f58 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55ee8c9c6e40 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55ee8c9c6ec0 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55ee8c9c7138 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55ee8c9c7020 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55ee8c9c70a0 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55ee8c9c7498 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55ee8c9c7280 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55ee8c9c7300 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55ee8c9c9128 <col:56> 'int' 10
| `-ParmVarDecl 0x55ee8c9c7378 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8c9c9148 <col:77> 'bool' true
|-CXXMethodDecl 0x55ee8c9c77f8 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55ee8c9c75e0 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55ee8c9c7660 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55ee8c9c9158 <col:57> 'int' 10
| `-ParmVarDecl 0x55ee8c9c76d8 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8c9c9178 <col:78> 'bool' true
|-CXXMethodDecl 0x55ee8c9c7a20 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55ee8c9c78c8 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55ee8c9c7948 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55ee8c9c7b18 <line:98:5, col:24> col:12 take_string 'String ()'
|-CXXMethodDecl 0x55ee8c9c7c88 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55ee8c9c7bc8 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55ee8c9c7dd8 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55ee8c9c7d48 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55ee8c9c7e80 <col:51> "" ""
|-AccessSpecDecl 0x55ee8c9c7ef0 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55ee8c9c7f18 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55ee8c9c8068 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55ee8c9c80b8 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c9c8048 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55ee8c9c8018 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55ee8c6b3cb8 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55ee8c9c80d0 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ee8c9c81e8 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55ee8c9c8290 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55ee8c9c82f8 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55ee8c9c8360 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55ee8c9c8410 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55ee8c9c8290 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55ee8c9c92b0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55ee8c9c9268 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55ee8c9c9230 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55ee8c9c9218 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55ee8c9c91c0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55ee8c6d0f40 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55ee8c9c82f8 'len' 'int'
| | | `-IntegerLiteral 0x55ee8c9c9328 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55ee8c9c8360 'cap' 'int'
| | | `-IntegerLiteral 0x55ee8c9c9390 <col:20> 'int' 0
| | `-CompoundStmt 0x55ee8c9c9410 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55ee8c9c8588 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55ee8c9c84c8 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55ee8c9c9420 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55ee8c9cb638 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ee8c9cb748 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55ee8c9c8290 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55ee8c9cd100 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55ee8c9cd0d0 <col:12> 'unsigned char *const' lvalue .s 0x55ee8c9c8290
| | |     `-DeclRefExpr 0x55ee8c9cd0b0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55ee8c9cb748 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55ee8c9c82f8 'len' 'int'
| | | `-ImplicitCastExpr 0x55ee8c9cd190 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55ee8c9cd160 <col:12> 'const int' lvalue .len 0x55ee8c9c82f8
| | |     `-DeclRefExpr 0x55ee8c9cd140 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55ee8c9cb748 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55ee8c9c8360 'cap' 'int'
| | | `-ImplicitCastExpr 0x55ee8c9cd220 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55ee8c9cd1f0 <col:12> 'const int' lvalue .cap 0x55ee8c9c8360
| | |     `-DeclRefExpr 0x55ee8c9cd1d0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55ee8c9cb748 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55ee8c9cd278 <col:12>
| |-CXXConstructorDecl 0x55ee8c9cb7e8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55ee8c9cb7e8
| | `-ParmVarDecl 0x55ee8c9cb8f8 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55ee8c9cd530 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55ee8c9c8660 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55ee8c9c8780 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55ee8c9c86c8 <col:16> col:19 'int'
|-CXXMethodDecl 0x55ee8c9c8960 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55ee8c9c8840 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55ee8c9c88c0 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55ee8c9c8b40 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55ee8c9c8a28 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55ee8c9c8aa8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55ee8c9c8c98 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55ee8c9c8c08 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55ee8c9c8de8 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55ee8c9c8d58 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55ee8c9c90a8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55ee8c9c8fe8 parent 0x55ee8c379488 <col:5, col:70> col:25 used operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55ee8c9c8ea0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55ee8c9c8f18 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c878180 prev 0x55ee8c86efc0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c878278 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55ee8c878318 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55ee8c87f0e0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ee8c87f4c8 <col:11>
|-CXXConstructorDecl 0x55ee8c87f1c0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c87f2a8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55ee8c87fc10 <col:11>
|-CXXConstructorDecl 0x55ee8c87f348 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c87f458 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55ee8c881468 <col:11>
|-CXXDestructorDecl 0x55ee8c880778 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55ee8c587108 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c587218 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55ee8c587ae0 <col:11>
|   `-ReturnStmt 0x55ee8c587ad0 <col:11>
|     `-UnaryOperator 0x55ee8c587ab8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c587aa8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55ee8c587288 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55ee8c587398 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55ee8c9e8b90 <col:11>
    `-ReturnStmt 0x55ee8c9e8b80 <col:11>
      `-UnaryOperator 0x55ee8c9e8b68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55ee8c9e8b58 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c86e178 prev 0x55ee8c86de88 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c86e270 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55ee8c86e300 <col:19, col:25> col:19 public
|-TypedefDecl 0x55ee8c86e338 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55ee8c4d3300 'int32_t' sugar
|   |-Typedef 0x55ee8c3e2328 'int32_t'
|   `-TypedefType 0x55ee8c3bb510 '__int32_t' sugar
|     |-Typedef 0x55ee8c3bb128 '__int32_t'
|     `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8c86e3a0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55ee8c4d34c0 'int64_t' sugar
|   |-Typedef 0x55ee8c3e2390 'int64_t'
|   `-TypedefType 0x55ee8c3bb630 '__int64_t' sugar
|     |-Typedef 0x55ee8c3bb208 '__int64_t'
|     `-BuiltinType 0x55ee8c3795a0 'long'
|-EnumDecl 0x55ee8c86e3f8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55ee8c86e570 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55ee8c86e550 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55ee8c86e528 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55ee8c86e510 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55ee8c86e4e0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55ee8c86e668 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55ee8c86e648 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55ee8c86e620 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55ee8c86e608 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55ee8c86e5e0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55ee8c86e5c0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55ee8c86e6b8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55ee8c86e7c0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ee8c86ed10 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c86e7a0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55ee8c86e780 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55ee8c86e850 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ee8c86ed28 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c86e830 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55ee8c86e810 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55ee8c86e8e0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ee8c86ed40 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c86e8c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55ee8c86e8a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55ee8c86e970 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ee8c86ed58 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c86e950 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55ee8c86e930 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55ee8c86ea00 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ee8c86ed70 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c86e9e0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55ee8c86e9c0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55ee8c86ea90 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ee8c86ed88 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c86ea70 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55ee8c86ea50 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55ee8c86eb20 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ee8c86eda0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c86eb00 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55ee8c86eae0 <col:26> 'int' EnumConstant 0x55ee8c86e7c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55ee8c86ebf0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55ee8c86edb8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c86ebd0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55ee8c86ebb0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55ee8c86eb70 <col:27> 'int' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55ee8c86eb90 <col:44> 'int' EnumConstant 0x55ee8c86ea90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55ee8c86ecc0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55ee8c86edd0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c86eca0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55ee8c86ec80 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55ee8c86ec40 <col:27> 'int' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55ee8c86ec60 <col:44> 'int' EnumConstant 0x55ee8c86e970 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55ee8c86ede8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55ee8c86eef0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55ee8c86ef40 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c86eed0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55ee8c86eeb0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55ee8c86ef68 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55ee8c4d2f30 'uninitialized_type'
|   `-CXXRecord 0x55ee8c4d2e98 'uninitialized_type'
|-CXXRecordDecl 0x55ee8c86efc0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55ee8c86f0d0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c87f4d8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ee8c87f5f8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55ee8c87f5b0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55ee8c87f540 <col:9> '<bound member function type>' ->assign 0x55ee8c873d18
|     | `-CXXThisExpr 0x55ee8c87f530 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55ee8c87f570 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55ee8c87f5e0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55ee8c87f590 <col:19> 'int' 0
|-CXXConstructorDecl 0x55ee8c86f318 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c86f190 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55ee8c86f208 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ee8c87ae10 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ee8c87adf0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c87f610 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ee8c87f760 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55ee8c87f6e8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55ee8c87f678 <col:9> '<bound member function type>' ->assign 0x55ee8c873d18
|     | `-CXXThisExpr 0x55ee8c87f668 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ee8c87f730 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55ee8c87f718 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ee8c87f6a8 <col:16> 'long' lvalue ParmVar 0x55ee8c86f190 'sec' 'long'
|     `-ImplicitCastExpr 0x55ee8c87f748 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c87f6c8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c86f208 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ee8c86f578 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c86f3e8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55ee8c86f460 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ee8c87ae48 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ee8c87ae28 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c87f778 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ee8c87f8b0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55ee8c87f850 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55ee8c87f7e0 <col:9> '<bound member function type>' ->assign 0x55ee8c873d18
|     | `-CXXThisExpr 0x55ee8c87f7d0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ee8c87f880 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55ee8c87f810 <col:16> 'int' lvalue ParmVar 0x55ee8c86f3e8 'sec' 'int'
|     `-ImplicitCastExpr 0x55ee8c87f898 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c87f830 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c86f460 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ee8c86f7d8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c86f648 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55ee8c86f6c0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ee8c87ae80 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ee8c87ae60 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c87f8c8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ee8c87fa18 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55ee8c87f9a0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55ee8c87f930 <col:9> '<bound member function type>' ->assign 0x55ee8c873d18
|     | `-CXXThisExpr 0x55ee8c87f920 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ee8c87f9e8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55ee8c87f9d0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ee8c87f960 <col:16> 'unsigned long' lvalue ParmVar 0x55ee8c86f648 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55ee8c87fa00 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c87f980 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c86f6c0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ee8c870970 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c86f8a8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55ee8c86f920 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ee8c87aeb8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ee8c87ae98 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c87fa30 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ee8c87fb80 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55ee8c87fb08 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55ee8c87fa98 <col:9> '<bound member function type>' ->assign 0x55ee8c873d18
|     | `-CXXThisExpr 0x55ee8c87fa88 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ee8c87fb50 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55ee8c87fb38 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ee8c87fac8 <col:16> 'unsigned int' lvalue ParmVar 0x55ee8c86f8a8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55ee8c87fb68 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c87fae8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c86f920 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ee8c870ad0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55ee8c870a40 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55ee8c870c68 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55ee8c870ba8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55ee8c870e98 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55ee8c870da0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55ee8c871048 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55ee8c870f88 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c87fc20 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55ee8c87fb98 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55ee8c870f88 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55ee8c87fc80 <col:19, line:214:5>
|-CXXConstructorDecl 0x55ee8c871218 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55ee8c871158 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c87fc90 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55ee8c87fd40 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55ee8c87fd18 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55ee8c87fce8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55ee8c871158 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55ee8c871408 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55ee8c871380 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55ee8c86df20 'Timestamp'
|   | `-CXXRecord 0x55ee8c86e178 'Timestamp'
|   `-ParenType 0x55ee8c871320 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55ee8c8712f0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55ee8c86e4c0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55ee8c86e338 'seconds_type'
|         `-TypedefType 0x55ee8c4d3300 'int32_t' sugar
|           |-Typedef 0x55ee8c3e2328 'int32_t'
|           `-TypedefType 0x55ee8c3bb510 '__int32_t' sugar
|             |-Typedef 0x55ee8c3bb128 '__int32_t'
|             `-BuiltinType 0x55ee8c379580 'int'
|-CXXConversionDecl 0x55ee8c871548 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55ee8c871618 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55ee8c87fe48 <col:37, line:231:5>
|   `-ReturnStmt 0x55ee8c87fe38 <line:227:9, col:23>
|     `-BinaryOperator 0x55ee8c87fe18 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55ee8c87fde8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55ee8c87fd98 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55ee8c878318
|       |   `-MemberExpr 0x55ee8c87fd68 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55ee8c8792c8
|       |     `-CXXThisExpr 0x55ee8c87fd58 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55ee8c87fe00 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55ee8c87fdc8 <col:23> 'int' 0
|-CXXMethodDecl 0x55ee8c8716d8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55ee8c871798 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c871858 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c871918 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c8719d8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c871b48 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55ee8c871a88 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55ee8c871c90 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55ee8c871c00 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c871d58 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55ee8c871df8 <col:54> "" ""
|-CXXMethodDecl 0x55ee8c871e88 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55ee8c871f28 <col:54> "" ""
|-CXXMethodDecl 0x55ee8c871fb8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55ee8c872058 <col:54> "" ""
|-CXXMethodDecl 0x55ee8c872158 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55ee8c872228 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55ee8c872358 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55ee8c872450 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55ee8c872588 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55ee8c880060 <col:39, line:271:5>
|   `-ReturnStmt 0x55ee8c880050 <line:267:9, col:61>
|     `-CallExpr 0x55ee8c87fff0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55ee8c87ffd8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8c87fe60 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55ee8c8795f8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55ee8c880020 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55ee8c87fec0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55ee8c878318
|       |   `-MemberExpr 0x55ee8c87fe90 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55ee8c8792c8
|       |     `-CXXThisExpr 0x55ee8c87fe80 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55ee8c880038 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55ee8c87ff60 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55ee8c87ff30 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55ee8c87fef0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55ee8c87ff48 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55ee8c87ff10 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86ea90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ee8c872648 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55ee8c880220 <col:39, line:279:5>
|   `-ReturnStmt 0x55ee8c880210 <line:275:9, col:61>
|     `-CallExpr 0x55ee8c8801b0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55ee8c880198 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8c880078 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55ee8c8795f8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55ee8c8801e0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55ee8c8800d8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55ee8c878318
|       |   `-MemberExpr 0x55ee8c8800a8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55ee8c8792c8
|       |     `-CXXThisExpr 0x55ee8c880098 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55ee8c8801f8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55ee8c880178 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55ee8c880148 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55ee8c880108 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55ee8c880160 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55ee8c880128 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86e970 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ee8c872708 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55ee8c8803b8 <col:39, line:287:5>
|   `-ReturnStmt 0x55ee8c8803a8 <line:283:9, col:53>
|     `-BinaryOperator 0x55ee8c880388 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55ee8c880358 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55ee8c880278 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55ee8c878318
|       |   `-MemberExpr 0x55ee8c880248 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55ee8c8792c8
|       |     `-CXXThisExpr 0x55ee8c880238 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55ee8c880370 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55ee8c880338 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55ee8c880318 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55ee8c8802e8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ee8c8802a8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86e7c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ee8c880300 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ee8c8802c8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ee8c8727f8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55ee8c881650 <col:40, line:293:5>
|   |-DeclStmt 0x55ee8c880500 <line:291:9, col:48>
|   | `-VarDecl 0x55ee8c8803e0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55ee8c8804e0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55ee8c880488 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55ee8c880458 <col:22> '<bound member function type>' ->subsec 0x55ee8c871798
|   |     |   `-CXXThisExpr 0x55ee8c880448 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55ee8c8804c8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55ee8c8804a8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86ebf0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ee8c881640 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55ee8c881628 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55ee8c8815f8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c8815e0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55ee8c8815c0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55ee8c881590 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55ee8c881328 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55ee8c881310 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55ee8c880518 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55ee8c8803e0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55ee8c881530 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55ee8c881518 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55ee8c8814e8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55ee8c881340 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55ee8c8812b0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55ee8c881298 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55ee8c881248 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ee8c86e0c8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55ee8c8811e8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55ee8c880548 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55ee8c880538 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55ee8c881230 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55ee8c881218 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55ee8c880a08 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55ee8c880570 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55ee8c880600 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55ee8c8805d0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55ee8c880590 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86ebf0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55ee8c8805e8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55ee8c8805b0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55ee8c8803e0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55ee8c881560 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55ee8c8812f8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55ee8c8812e8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55ee8c8728b8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55ee8c881ba8 <col:40, line:302:5>
|   |-DeclStmt 0x55ee8c8817a0 <line:297:9, col:48>
|   | `-VarDecl 0x55ee8c881680 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55ee8c881780 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55ee8c881728 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55ee8c8816f8 <col:22> '<bound member function type>' ->subsec 0x55ee8c871798
|   |     |   `-CXXThisExpr 0x55ee8c8816e8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55ee8c881768 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55ee8c881748 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86ecc0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ee8c881b98 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55ee8c881b80 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55ee8c881b50 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c881b38 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55ee8c881b18 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55ee8c881ae8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55ee8c881a10 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55ee8c8819f8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55ee8c8817b8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55ee8c881680 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55ee8c881a88 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55ee8c881a70 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55ee8c881a40 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55ee8c881a28 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55ee8c881998 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55ee8c881980 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55ee8c881960 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ee8c86e0c8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55ee8c881900 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55ee8c8817e8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55ee8c8817d8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55ee8c881948 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55ee8c881930 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55ee8c8818c0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55ee8c881810 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55ee8c8818a0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55ee8c881870 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55ee8c881830 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86ecc0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55ee8c881888 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55ee8c881850 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55ee8c881680 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55ee8c881ab8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55ee8c8819e0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55ee8c8819d0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55ee8c872978 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55ee8c881c30 <col:40, line:306:5>
|   `-ReturnStmt 0x55ee8c881c20 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55ee8c881bf0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55ee8c881bd8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c881bc8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55ee8c872b18 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55ee8c872a28 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c872ce8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55ee8c872bf0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55ee8c872dd8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55ee8c872f48 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55ee8c872e88 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55ee8c881d78 <col:56, line:320:5>
|   `-ReturnStmt 0x55ee8c881d68 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55ee8c881d50 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55ee8c881d20 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c881d08 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ee8c881cc8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55ee8c881c98 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ee8c881c58 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ee8c872e88 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55ee8c881cb0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55ee8c881c78 <col:31> 'int' 0
|-CXXMethodDecl 0x55ee8c873188 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c873000 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c873078 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c881f48 <col:72, line:326:5>
|   `-ReturnStmt 0x55ee8c881f38 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55ee8c881f20 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55ee8c881ef0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c881ed8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ee8c881e98 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55ee8c881e80 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ee8c881da0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ee8c873000 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55ee8c881e40 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55ee8c881e28 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ee8c881dc0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ee8c877a70 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55ee8c881e68 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55ee8c881de0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c873078 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c873338 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55ee8c873248 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55ee8c882610 <col:56, line:337:5>
|   |-DeclStmt 0x55ee8c882248 <line:329:9, col:51>
|   | `-VarDecl 0x55ee8c881f70 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55ee8c882230 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55ee8c882200 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55ee8c8821e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55ee8c8821d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55ee8c8821a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55ee8c882188 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55ee8c882170 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55ee8c882060 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55ee8c882400 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55ee8c8822b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55ee8c878318
|   | | `-MemberExpr 0x55ee8c882280 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55ee8c8792c8
|   | |   `-DeclRefExpr 0x55ee8c882260 <col:9> 'Timestamp' lvalue Var 0x55ee8c881f70 't' 'Timestamp'
|   | `-BinaryOperator 0x55ee8c8823e0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55ee8c8823b0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ee8c8822e0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ee8c873248 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55ee8c8823c8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55ee8c882390 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55ee8c882370 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55ee8c882340 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55ee8c882300 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55ee8c882358 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55ee8c882320 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86ea90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ee8c8825f8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55ee8c8825c8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55ee8c8825b0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55ee8c882590 <col:16> 'Timestamp' lvalue Var 0x55ee8c881f70 't' 'Timestamp'
|-CXXMethodDecl 0x55ee8c873500 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c8733f0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c873468 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c8827c8 <col:72, line:343:5>
|   `-ReturnStmt 0x55ee8c8827b8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55ee8c8827a0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55ee8c882770 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c882758 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ee8c882718 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55ee8c882700 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ee8c882648 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ee8c8733f0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55ee8c8826c0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55ee8c8826a8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ee8c882668 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ee8c877bb8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55ee8c8826e8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55ee8c882688 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c873468 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c873650 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55ee8c8735c0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55ee8c882c10 <col:56, line:354:5>
|   |-DeclStmt 0x55ee8c8829b8 <line:346:9, col:51>
|   | `-VarDecl 0x55ee8c8827f0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55ee8c8829a0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55ee8c882970 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55ee8c882958 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55ee8c882940 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55ee8c882910 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55ee8c8828f8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55ee8c8828e0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55ee8c8828b0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55ee8c882b70 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55ee8c882a20 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55ee8c878318
|   | | `-MemberExpr 0x55ee8c8829f0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55ee8c8792c8
|   | |   `-DeclRefExpr 0x55ee8c8829d0 <col:9> 'Timestamp' lvalue Var 0x55ee8c8827f0 't' 'Timestamp'
|   | `-BinaryOperator 0x55ee8c882b50 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55ee8c882b20 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ee8c882a50 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ee8c8735c0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55ee8c882b38 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55ee8c882b00 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55ee8c882ae0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55ee8c882ab0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55ee8c882a70 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55ee8c882ac8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55ee8c882a90 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86e970 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ee8c882bf8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55ee8c882bc8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55ee8c882bb0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55ee8c882b90 <col:16> 'Timestamp' lvalue Var 0x55ee8c8827f0 't' 'Timestamp'
|-CXXMethodDecl 0x55ee8c873818 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c873708 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c873780 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c882dc8 <col:72, line:360:5>
|   `-ReturnStmt 0x55ee8c882db8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55ee8c882da0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55ee8c882d70 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c882d58 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ee8c882d18 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55ee8c882d00 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ee8c882c48 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ee8c873708 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55ee8c882cc0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55ee8c882ca8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55ee8c882c68 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ee8c877d00 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55ee8c882ce8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55ee8c882c88 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c873780 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c873968 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55ee8c8738d8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55ee8c88f738 <col:56, line:371:5>
|   |-DeclStmt 0x55ee8c882fb8 <line:363:9, col:51>
|   | `-VarDecl 0x55ee8c882df0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55ee8c882fa0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55ee8c882f70 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55ee8c882f58 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55ee8c882f40 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55ee8c882f10 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55ee8c882ef8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55ee8c882ee0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55ee8c882eb0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55ee8c88f698 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55ee8c883020 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55ee8c878318
|   | | `-MemberExpr 0x55ee8c882ff0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55ee8c8792c8
|   | |   `-DeclRefExpr 0x55ee8c882fd0 <col:9> 'Timestamp' lvalue Var 0x55ee8c882df0 't' 'Timestamp'
|   | `-CallExpr 0x55ee8c88f638 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55ee8c88f620 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55ee8c883050 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55ee8c8795f8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55ee8c88f668 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ee8c883070 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ee8c8738d8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55ee8c88f680 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55ee8c88f600 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55ee8c88f5d0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55ee8c883090 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86e7c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55ee8c88f5e8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55ee8c8830b0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55ee8c88f720 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55ee8c88f6f0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55ee8c88f6d8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55ee8c88f6b8 <col:16> 'Timestamp' lvalue Var 0x55ee8c882df0 't' 'Timestamp'
|-CXXMethodDecl 0x55ee8c873a58 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55ee8c88f878 <col:39, line:377:5>
|   `-ReturnStmt 0x55ee8c88f868 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55ee8c88f850 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55ee8c88f820 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c88f808 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ee8c88f7c8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55ee8c88f770 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55ee8c88f7b0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55ee8c88f790 <col:29> 'int' 1
|-CXXMethodDecl 0x55ee8c873b18 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55ee8c88f958 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55ee8c88f910 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55ee8c88f8a0 <col:9> '<bound member function type>' ->assign 0x55ee8c873d18
|     | `-CXXThisExpr 0x55ee8c88f890 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55ee8c88f8d0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55ee8c88f940 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55ee8c88f8f0 <col:19> 'int' 0
|-CXXMethodDecl 0x55ee8c873d18 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c873bc8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c873c40 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ee8c87aef0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ee8c87aed0 <col:60> 'int' 0
| `-CompoundStmt 0x55ee8c88fb50 <col:63, line:395:5>
|   `-BinaryOperator 0x55ee8c88fb30 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55ee8c88f9b0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55ee8c878318
|     | `-MemberExpr 0x55ee8c88f980 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55ee8c8792c8
|     |   `-CXXThisExpr 0x55ee8c88f970 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55ee8c88fb10 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55ee8c88faa0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55ee8c88fa40 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55ee8c88fa28 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55ee8c88fa10 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55ee8c88f9e0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ee8c873bc8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55ee8c88fa88 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55ee8c88fa68 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55ee8c88faf8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55ee8c88fae0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55ee8c88fac0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c873c40 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c873ee8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c873dd8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c873e50 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c88fca8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55ee8c88fc60 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55ee8c88fb78 <col:9> '<bound member function type>' ->assign 0x55ee8c873d18
|     | `-CXXThisExpr 0x55ee8c88fb68 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ee8c88fc90 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55ee8c88fba8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ee8c873dd8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55ee8c88fc20 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55ee8c88fc08 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8c88fbc8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ee8c877bb8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55ee8c88fc48 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ee8c88fbe8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c873e50 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c8740b8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c873fa8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c874020 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c88fe00 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55ee8c88fdb8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55ee8c88fcd0 <col:9> '<bound member function type>' ->assign 0x55ee8c873d18
|     | `-CXXThisExpr 0x55ee8c88fcc0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55ee8c88fde8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55ee8c88fd00 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55ee8c873fa8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55ee8c88fd78 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55ee8c88fd60 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8c88fd20 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55ee8c877d00 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55ee8c88fda0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ee8c88fd40 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c874020 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c874288 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c874178 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c8741f0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55ee8c87af28 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ee8c87af08 <col:57> 'int' 0
| `-DeprecatedAttr 0x55ee8c874338 <col:75> "" ""
|-CXXMethodDecl 0x55ee8c8744c8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c8743b8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c874430 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c874578 <col:74> "" ""
|-CXXMethodDecl 0x55ee8c874708 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55ee8c8745f8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55ee8c874670 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c8747b8 <col:74> "" ""
|-CXXMethodDecl 0x55ee8c874848 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55ee8c8748e8 <col:42> "" ""
|-CXXMethodDecl 0x55ee8c877120 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55ee8c877000 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55ee8c877080 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55ee8c8771f0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ee8c8772b0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55ee8c877350 <col:20>
| `-OptimizeNoneAttr 0x55ee8c8773a8 <col:30>
|-CXXMethodDecl 0x55ee8c8773f0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ee8c8774b0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55ee8c877570 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ee8c877630 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55ee8c8776f0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ee8c8777b0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55ee8c877870 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55ee8c877930 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55ee8c877a70 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c8779e0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c88ff48 <col:58, line:512:5>
|   `-ReturnStmt 0x55ee8c88ff38 <line:511:9, col:53>
|     `-BinaryOperator 0x55ee8c88ff18 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55ee8c88fee8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ee8c88fe18 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c8779e0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ee8c88ff00 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ee8c88fec8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55ee8c88fea8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55ee8c88fe78 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ee8c88fe38 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ee8c88fe90 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ee8c88fe58 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86ea90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ee8c877bb8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c877b28 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c890090 <col:58, line:516:5>
|   `-ReturnStmt 0x55ee8c890080 <line:515:9, col:53>
|     `-BinaryOperator 0x55ee8c890060 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55ee8c890030 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ee8c88ff60 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c877b28 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ee8c890048 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ee8c890010 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55ee8c88fff0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55ee8c88ffc0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ee8c88ff80 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ee8c88ffd8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ee8c88ffa0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86e970 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ee8c877d00 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c877c70 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c8901d8 <col:58, line:520:5>
|   `-ReturnStmt 0x55ee8c8901c8 <line:519:9, col:53>
|     `-BinaryOperator 0x55ee8c8901a8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55ee8c890178 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ee8c8900a8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c877c70 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ee8c890190 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ee8c890158 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55ee8c890138 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55ee8c890108 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ee8c8900c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86e7c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ee8c890120 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ee8c8900e8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ee8c877e48 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c877db8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c890320 <col:60, line:524:5>
|   `-ReturnStmt 0x55ee8c890310 <line:523:9, col:55>
|     `-BinaryOperator 0x55ee8c8902f0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55ee8c8902c0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ee8c8901f0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c877db8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ee8c8902d8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ee8c8902a0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55ee8c890280 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55ee8c890250 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ee8c890210 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ee8c890268 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ee8c890230 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86ea90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ee8c877f90 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c877f00 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c890468 <col:60, line:528:5>
|   `-ReturnStmt 0x55ee8c890458 <line:527:9, col:55>
|     `-BinaryOperator 0x55ee8c890438 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55ee8c890408 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ee8c890338 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c877f00 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ee8c890420 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ee8c8903e8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55ee8c8903c8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55ee8c890398 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ee8c890358 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ee8c8903b0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ee8c890378 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86e970 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55ee8c8780d8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c878048 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c8905b0 <col:60, line:532:5>
|   `-ReturnStmt 0x55ee8c8905a0 <line:531:9, col:55>
|     `-BinaryOperator 0x55ee8c890580 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55ee8c890550 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55ee8c890480 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c878048 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55ee8c890568 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55ee8c890530 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55ee8c890510 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55ee8c8904e0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55ee8c8904a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86e7c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55ee8c8904f8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55ee8c8904c0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55ee8c86eb20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55ee8c878180 prev 0x55ee8c86efc0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ee8c878278 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55ee8c878318 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55ee8c87f0e0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ee8c87f4c8 <col:11>
| |-CXXConstructorDecl 0x55ee8c87f1c0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ee8c87f2a8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55ee8c87fc10 <col:11>
| |-CXXConstructorDecl 0x55ee8c87f348 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ee8c87f458 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55ee8c881468 <col:11>
| |-CXXDestructorDecl 0x55ee8c880778 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55ee8c587108 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55ee8c587218 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55ee8c587ae0 <col:11>
| |   `-ReturnStmt 0x55ee8c587ad0 <col:11>
| |     `-UnaryOperator 0x55ee8c587ab8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55ee8c587aa8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55ee8c587288 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55ee8c587398 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55ee8c9e8b90 <col:11>
|     `-ReturnStmt 0x55ee8c9e8b80 <col:11>
|       `-UnaryOperator 0x55ee8c9e8b68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55ee8c9e8b58 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55ee8c878380 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55ee8c878480 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55ee8c878680 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c878460 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55ee8c878440 <col:21> 'int' 0
| |-EnumConstantDecl 0x55ee8c878510 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55ee8c878698 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c8784f0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55ee8c8784d0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55ee8c8785a0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55ee8c8786b0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c878580 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55ee8c878560 <col:23> 'int' 2
| `-EnumConstantDecl 0x55ee8c878630 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55ee8c8786c8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c878610 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55ee8c8785f0 <col:27> 'int' 3
|-CXXMethodDecl 0x55ee8c878708 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55ee8c8787d0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55ee8c8789d8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55ee8c878880 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55ee8c878900 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55ee8c87af40 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55ee8c878be8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55ee8c878a98 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55ee8c878b10 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c878cb8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55ee8c878d78 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55ee8c878ee8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55ee8c878e28 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c878fb0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ee8c879070 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55ee8c879130 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55ee8c8791f0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55ee8c879290 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55ee8c8792c8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55ee8c879338 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55ee8c8905c8 <col:27, line:684:5>
|-CXXMethodDecl 0x55ee8c8793f8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55ee8c8905d8 <col:27, line:696:5>
|-CXXMethodDecl 0x55ee8c8795f8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c8794a8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55ee8c879520 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c890760 <col:66, line:700:5>
|   `-ReturnStmt 0x55ee8c890750 <line:699:9, col:31>
|     `-CallExpr 0x55ee8c8906f0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55ee8c8906d8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8c890688 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55ee8c6fb9a8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55ee8c890720 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55ee8c890648 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ee8c8794a8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55ee8c890738 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ee8c890668 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c879520 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c879968 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55ee8c8796b8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55ee8c879730 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55ee8c8797a8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55ee8c879820 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c890ab0 <col:64, line:707:5>
|   |-DeclStmt 0x55ee8c8907f0 <line:704:9, col:24>
|   | `-VarDecl 0x55ee8c890788 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55ee8c890a00 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55ee8c890808 <col:9> 'int32_t':'int' lvalue ParmVar 0x55ee8c879730 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55ee8c8909e8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55ee8c890980 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55ee8c890968 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55ee8c8908e8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55ee8c700c78 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55ee8c8909b8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55ee8c890888 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55ee8c8797a8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55ee8c8909d0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55ee8c8908a8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c879820 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55ee8c8908c8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55ee8c890788 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55ee8c890a90 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55ee8c890a20 <col:9> 'int32_t':'int' lvalue ParmVar 0x55ee8c8796b8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55ee8c890a78 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55ee8c890a60 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55ee8c890a40 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55ee8c890788 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55ee8c879c08 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55ee8c879a38 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55ee8c879ab0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55ee8c879b28 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55ee8c879ea8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55ee8c879cd0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55ee8c879d48 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55ee8c879dc0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c87a038 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55ee8c879f70 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55ee8c87a238 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55ee8c87a0f0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55ee8c87a168 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55ee8c87a508 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55ee8c87a448 parent 0x55ee8c379488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55ee8c87a2f8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55ee8c87a370 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55ee8c87a728 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55ee8c87a668 parent 0x55ee8c379488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55ee8c87a558 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55ee8c87a5d0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55ee8c87a8f0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55ee8c87a838 parent 0x55ee8c379488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55ee8c87a778 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55ee8c87ab78 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55ee8c87aab8 parent 0x55ee8c379488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55ee8c87a968 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55ee8c87a9e0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55ee8c87ad98 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55ee8c87acd8 parent 0x55ee8c379488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55ee8c87abc8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55ee8c87ac40 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55ee8c880620 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c880708 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c881178 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55ee8c881130 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55ee8c8792c8
| |     `-DeclRefExpr 0x55ee8c881110 <col:7> 'const Timestamp' lvalue ParmVar 0x55ee8c880708 '' 'const Timestamp &'
| `-CompoundStmt 0x55ee8c8811d8 <col:7>
|-CXXConstructorDecl 0x55ee8c880888 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c880998 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55ee8c8792c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55ee8c881478 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55ee8c881420 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55ee8c8792c8
| |     `-CXXStaticCastExpr 0x55ee8c8813f0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55ee8c8813c0 <col:7> 'Timestamp' lvalue ParmVar 0x55ee8c880998 '' 'Timestamp &&'
| `-CompoundStmt 0x55ee8c8814d8 <col:7>
|-CXXDestructorDecl 0x55ee8c880a48 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55ee8c586f58 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c587068 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55ee8c587b58 <col:7>
|   |-CXXMemberCallExpr 0x55ee8c587af8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55ee8c587a38 <col:7> '<bound member function type>' .operator= 0x55ee8c587108
|   | | `-MemberExpr 0x55ee8c587948 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55ee8c8792c8
|   | |   `-CXXThisExpr 0x55ee8c587938 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55ee8c587a08 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55ee8c8792c8
|   |   `-DeclRefExpr 0x55ee8c5879e8 <col:7> 'const Timestamp' lvalue ParmVar 0x55ee8c587068 '' 'const Timestamp &'
|   `-ReturnStmt 0x55ee8c587b48 <col:7>
|     `-UnaryOperator 0x55ee8c587b30 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55ee8c587b20 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55ee8c587408 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55ee8c587518 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55ee8c9e8c08 <col:7>
    |-CXXMemberCallExpr 0x55ee8c9e8ba8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55ee8c9e8b10 <col:7> '<bound member function type>' .operator= 0x55ee8c587288
    | | `-MemberExpr 0x55ee8c9e89e0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55ee8c8792c8
    | |   `-CXXThisExpr 0x55ee8c9e89d0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55ee8c9e8ae0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55ee8c8792c8
    |   `-CXXStaticCastExpr 0x55ee8c9e8ab0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55ee8c9e8a80 <col:7> 'Timestamp' lvalue ParmVar 0x55ee8c587518 '' 'Timestamp &&'
    `-ReturnStmt 0x55ee8c9e8bf8 <col:7>
      `-UnaryOperator 0x55ee8c9e8be0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55ee8c9e8bd0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ether
         0 |   uint8_t [6] ether_dhost
         6 |   uint8_t [6] ether_shost
        12 |   uint16_t ether_type
           | [sizeof=14, dsize=14, align=1,
           |  nvsize=14, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8cad9180 prev 0x55ee8c8a62a0 <../dummy_inc/clicknet/ether.h:17:1, line:21:1> line:17:8 referenced struct click_ether definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-PackedAttr 0x55ee8cad9548 <line:21:18>
|-CXXRecordDecl 0x55ee8cad9278 <line:17:1, col:8> col:8 implicit struct click_ether
|-FieldDecl 0x55ee8cad93e8 <line:18:5, col:26> col:13 referenced ether_dhost 'uint8_t [6]'
|-FieldDecl 0x55ee8cad9498 <line:19:5, col:26> col:13 referenced ether_shost 'uint8_t [6]'
`-FieldDecl 0x55ee8cad94f8 <line:20:5, col:14> col:14 ether_type 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  NonVirtualBaseLLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class EtherAddress
         0 |   uint16_t [3] _data
           | [sizeof=6, dsize=6, align=1,
           |  nvsize=6, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c792f98 prev 0x55ee8c9095b0 <../dummy_inc/click/etheraddress.hh:9:1, line:148:1> line:9:7 referenced class EtherAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-PackedAttr 0x55ee8c7949d8 <line:148:18>
|-CXXRecordDecl 0x55ee8c793090 <line:9:1, col:7> col:7 implicit referenced class EtherAddress
|-AccessSpecDecl 0x55ee8c793120 <col:22, col:28> col:22 public
|-TypedefDecl 0x55ee8c793158 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55ee8c4d2f30 'uninitialized_type'
|   `-CXXRecord 0x55ee8c4d2e98 'uninitialized_type'
|-CXXConstructorDecl 0x55ee8c7931e8 <line:14:5, line:16:5> line:14:12 EtherAddress 'void ()' inline
| `-CompoundStmt 0x55ee8c794cd8 <col:27, line:16:5>
|   `-BinaryOperator 0x55ee8c794cb8 <line:15:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x55ee8c794ac0 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x55ee8c794aa8 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55ee8c794a58 <col:2> 'uint16_t [3]' lvalue ->_data 0x55ee8c7947d8
|     | |   `-CXXThisExpr 0x55ee8c794a48 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x55ee8c794a88 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x55ee8c794ca0 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x55ee8c794c80 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x55ee8c794b58 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x55ee8c794b40 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x55ee8c794af0 <col:13> 'uint16_t [3]' lvalue ->_data 0x55ee8c7947d8
|         | |   `-CXXThisExpr 0x55ee8c794ae0 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x55ee8c794b20 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x55ee8c794c68 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x55ee8c794c48 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x55ee8c794bf0 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x55ee8c794bd8 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x55ee8c794b88 <col:24> 'uint16_t [3]' lvalue ->_data 0x55ee8c7947d8
|             | |   `-CXXThisExpr 0x55ee8c794b78 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x55ee8c794bb8 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x55ee8c794c30 <col:35> 'uint16_t':'unsigned short' <IntegralCast>
|               `-IntegerLiteral 0x55ee8c794c10 <col:35> 'int' 0
|-CXXConstructorDecl 0x55ee8c793338 <line:22:5, line:24:5> line:22:21 used EtherAddress 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x55ee8c7932a8 <col:34, col:55> col:55 used data 'const unsigned char *'
| `-CompoundStmt 0x55ee8c794ea0 <col:61, line:24:5>
|   `-CallExpr 0x55ee8c794df0 <line:23:2, col:23> 'void *'
|     |-ImplicitCastExpr 0x55ee8c794dd8 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55ee8c794db8 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55ee8c5dcc88 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x55ee8c794e40 <col:9> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x55ee8c794e28 <col:9> 'uint16_t *' <ArrayToPointerDecay>
|     |   `-MemberExpr 0x55ee8c794d48 <col:9> 'uint16_t [3]' lvalue ->_data 0x55ee8c7947d8
|     |     `-CXXThisExpr 0x55ee8c794d38 <col:9> 'EtherAddress *' implicit this
|     |-ImplicitCastExpr 0x55ee8c794e70 <col:16> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x55ee8c794e58 <col:16> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x55ee8c794d78 <col:16> 'const unsigned char *' lvalue ParmVar 0x55ee8c7932a8 'data' 'const unsigned char *'
|     `-ImplicitCastExpr 0x55ee8c794e88 <col:22> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x55ee8c794d98 <col:22> 'int' 6
|-CXXConstructorDecl 0x55ee8c793488 <line:27:5, line:29:5> line:27:12 EtherAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55ee8c7933f8 <col:25, col:51> col:51 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55ee8c794f10 <col:59, line:29:5>
|   `-CStyleCastExpr 0x55ee8c794ee8 <line:28:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55ee8c794eb8 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55ee8c7933f8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55ee8c793588 <line:32:5, line:34:5> line:32:25 used make_broadcast 'EtherAddress ()' static
| `-CompoundStmt 0x55ee8c795658 <col:42, line:34:5>
|   `-ReturnStmt 0x55ee8c795648 <line:33:2, col:28>
|     `-ExprWithCleanups 0x55ee8c795630 <col:9, col:28> 'EtherAddress'
|       `-CXXConstructExpr 0x55ee8c795600 <col:9, col:28> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c795438 <col:9, col:28> 'EtherAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55ee8c7953b0 <col:9, col:28> 'EtherAddress' functional cast to class EtherAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55ee8c7952a0 <col:9, col:28> 'EtherAddress' 'void (uint16_t)'
|               `-ImplicitCastExpr 0x55ee8c795288 <col:22> 'uint16_t':'unsigned short' <IntegralCast>
|                 `-IntegerLiteral 0x55ee8c794f38 <col:22> 'int' 65535
|-CXXMethodDecl 0x55ee8c793648 <line:36:5, col:70> col:32 broadcast 'EtherAddress ()' static inline
| `-DeprecatedAttr 0x55ee8c7936e8 <col:59> "" ""
|-TypedefDecl 0x55ee8c793868 <line:39:5, col:59> col:34 referenced unspecified_bool_type 'bool (EtherAddress::*)() const'
| `-MemberPointerType 0x55ee8c7937e0 'bool (EtherAddress::*)() const'
|   |-RecordType 0x55ee8c8df830 'EtherAddress'
|   | `-CXXRecord 0x55ee8c792f98 'EtherAddress'
|   `-ParenType 0x55ee8c793780 'bool () const' sugar
|     `-FunctionProtoType 0x55ee8c425cb0 'bool () const' const cdecl
|       `-BuiltinType 0x55ee8c379500 'bool'
|-CXXConversionDecl 0x55ee8c7939a8 <line:41:5, line:43:5> line:41:12 operator bool (EtherAddress::*)() const 'EtherAddress::unspecified_bool_type () const' inline
| `-CompoundStmt 0x55ee8c795a38 <col:51, line:43:5>
|   `-ReturnStmt 0x55ee8c795a28 <line:42:2, col:70>
|     `-ConditionalOperator 0x55ee8c7959f8 <col:9, col:70> 'bool (EtherAddress::*)() const'
|       |-BinaryOperator 0x55ee8c795920 <col:9, col:40> 'bool' '||'
|       | |-BinaryOperator 0x55ee8c795838 <col:9, col:28> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55ee8c7957f0 <col:9, col:16> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55ee8c7957d8 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x55ee8c795720 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x55ee8c795708 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x55ee8c795680 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|       | | |     |   `-CXXThisExpr 0x55ee8c795670 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x55ee8c7956b0 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x55ee8c795820 <col:21, col:28> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55ee8c795808 <col:21, col:28> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x55ee8c7957b8 <col:21, col:28> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x55ee8c7957a0 <col:21> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x55ee8c795750 <col:21> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|       | |       |   `-CXXThisExpr 0x55ee8c795740 <col:21> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x55ee8c795780 <col:27> 'int' 1
|       | `-ImplicitCastExpr 0x55ee8c795908 <col:33, col:40> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55ee8c7958f0 <col:33, col:40> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x55ee8c7958d0 <col:33, col:40> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x55ee8c7958b8 <col:33> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x55ee8c795868 <col:33> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|       |       |   `-CXXThisExpr 0x55ee8c795858 <col:33> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x55ee8c795898 <col:39> 'int' 2
|       |-UnaryOperator 0x55ee8c7959a8 <col:44, col:59> 'bool (EtherAddress::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55ee8c795978 <col:45, col:59> 'bool () const' CXXMethod 0x55ee8c793a78 'is_group' 'bool () const'
|       `-ImplicitCastExpr 0x55ee8c7959e0 <col:70> 'bool (EtherAddress::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55ee8c7959c0 <col:70> 'int' 0
|-CXXMethodDecl 0x55ee8c793a78 <line:49:5, line:51:5> line:49:17 used is_group 'bool () const' inline
| `-CompoundStmt 0x55ee8c795bf8 <col:34, line:51:5>
|   `-ReturnStmt 0x55ee8c795be8 <line:50:2, col:21>
|     `-ImplicitCastExpr 0x55ee8c795bd0 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55ee8c795bb0 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x55ee8c795b98 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55ee8c795b80 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55ee8c795b40 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x55ee8c795b00 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x55ee8c795ad0 <col:9> '<bound member function type>' ->data 0x55ee8c793f10
|         |     |   `-CXXThisExpr 0x55ee8c795ac0 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x55ee8c795b20 <col:16> 'int' 0
|         `-IntegerLiteral 0x55ee8c795b60 <col:21> 'int' 1
|-CXXMethodDecl 0x55ee8c793b38 <line:57:5, line:59:5> line:57:17 is_local 'bool () const' inline
| `-CompoundStmt 0x55ee8c795db8 <col:34, line:59:5>
|   `-ReturnStmt 0x55ee8c795da8 <line:58:2, col:21>
|     `-ImplicitCastExpr 0x55ee8c795d90 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55ee8c795d70 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x55ee8c795d58 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55ee8c795d40 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55ee8c795d00 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x55ee8c795cc0 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x55ee8c795c90 <col:9> '<bound member function type>' ->data 0x55ee8c793f10
|         |     |   `-CXXThisExpr 0x55ee8c795c80 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x55ee8c795ce0 <col:16> 'int' 0
|         `-IntegerLiteral 0x55ee8c795d20 <col:21> 'int' 2
|-CXXMethodDecl 0x55ee8c793bf8 <line:64:5, line:66:5> line:64:17 used is_broadcast 'bool () const' inline
| `-CompoundStmt 0x55ee8c7960b8 <col:38, line:66:5>
|   `-ReturnStmt 0x55ee8c7960a8 <line:65:2, col:43>
|     `-BinaryOperator 0x55ee8c796088 <col:9, col:43> 'bool' '=='
|       |-BinaryOperator 0x55ee8c796048 <col:9, col:38> 'int' '+'
|       | |-BinaryOperator 0x55ee8c795f60 <col:9, col:27> 'int' '+'
|       | | |-ImplicitCastExpr 0x55ee8c795f18 <col:9, col:16> 'int' <IntegralCast>
|       | | | `-ImplicitCastExpr 0x55ee8c795f00 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x55ee8c795e48 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x55ee8c795e30 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x55ee8c795de0 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|       | | |     |   `-CXXThisExpr 0x55ee8c795dd0 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x55ee8c795e10 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x55ee8c795f48 <col:20, col:27> 'int' <IntegralCast>
|       | |   `-ImplicitCastExpr 0x55ee8c795f30 <col:20, col:27> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x55ee8c795ee0 <col:20, col:27> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x55ee8c795ec8 <col:20> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x55ee8c795e78 <col:20> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|       | |       |   `-CXXThisExpr 0x55ee8c795e68 <col:20> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x55ee8c795ea8 <col:26> 'int' 1
|       | `-ImplicitCastExpr 0x55ee8c796030 <col:31, col:38> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x55ee8c796018 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x55ee8c795ff8 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x55ee8c795fe0 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x55ee8c795f90 <col:31> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|       |       |   `-CXXThisExpr 0x55ee8c795f80 <col:31> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x55ee8c795fc0 <col:37> 'int' 2
|       `-IntegerLiteral 0x55ee8c796068 <col:43> 'int' 196605
|-CXXMethodDecl 0x55ee8c793d78 <line:69:5, line:75:5> line:69:24 is_broadcast 'bool (const unsigned char *)' static inline
| |-ParmVarDecl 0x55ee8c793cb0 <col:37, col:58> col:58 used data 'const unsigned char *'
| `-CompoundStmt 0x55ee8c796208 <col:64, line:75:5>
|   `-ReturnStmt 0x55ee8c7961f8 <line:71:2, col:68>
|     `-CXXMemberCallExpr 0x55ee8c7961d8 <col:9, col:68> 'bool'
|       `-MemberExpr 0x55ee8c7961a8 <col:9, col:55> '<bound member function type>' ->is_broadcast 0x55ee8c793bf8
|         `-CXXReinterpretCastExpr 0x55ee8c796118 <col:9, col:52> 'const EtherAddress *' reinterpret_cast<const class EtherAddress *> <BitCast>
|           `-ImplicitCastExpr 0x55ee8c796100 <col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x55ee8c7960d0 <col:48> 'const unsigned char *' lvalue ParmVar 0x55ee8c793cb0 'data' 'const unsigned char *'
|-CXXMethodDecl 0x55ee8c793e48 <line:78:5, line:80:5> line:78:27 data 'unsigned char *()' inline
| `-CompoundStmt 0x55ee8c7962d0 <col:34, line:80:5>
|   `-ReturnStmt 0x55ee8c7962c0 <line:79:2, col:48>
|     `-CXXReinterpretCastExpr 0x55ee8c796290 <col:9, col:48> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x55ee8c796278 <col:43> 'uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x55ee8c796230 <col:43> 'uint16_t [3]' lvalue ->_data 0x55ee8c7947d8
|           `-CXXThisExpr 0x55ee8c796220 <col:43> 'EtherAddress *' implicit this
|-CXXMethodDecl 0x55ee8c793f10 <line:83:5, line:85:5> line:83:33 used data 'const unsigned char *() const' inline
| `-CompoundStmt 0x55ee8c796398 <col:46, line:85:5>
|   `-ReturnStmt 0x55ee8c796388 <line:84:2, col:54>
|     `-CXXReinterpretCastExpr 0x55ee8c796358 <col:9, col:54> 'const unsigned char *' reinterpret_cast<const unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x55ee8c796340 <col:49> 'const uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x55ee8c7962f8 <col:49> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|           `-CXXThisExpr 0x55ee8c7962e8 <col:49> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55ee8c794058 <line:89:5, line:91:5> line:89:28 used sdata 'const uint16_t *() const' inline
| `-CompoundStmt 0x55ee8c796418 <col:42, line:91:5>
|   `-ReturnStmt 0x55ee8c796408 <line:90:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c7963f0 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       `-MemberExpr 0x55ee8c7963c0 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|         `-CXXThisExpr 0x55ee8c7963b0 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55ee8c794118 <line:94:5, line:97:5> line:94:19 hashcode 'size_t () const' inline
| `-CompoundStmt 0x55ee8c796828 <col:36, line:97:5>
|   `-ReturnStmt 0x55ee8c796818 <line:95:2, line:96:31>
|     `-BinaryOperator 0x55ee8c7967f8 <line:95:9, line:96:31> 'unsigned long' '^'
|       |-ParenExpr 0x55ee8c796678 <line:95:9, col:46> 'unsigned long'
|       | `-BinaryOperator 0x55ee8c796658 <col:10, col:45> 'unsigned long' '|'
|       |   |-ImplicitCastExpr 0x55ee8c796640 <col:10, col:17> 'unsigned long' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55ee8c796628 <col:10, col:17> 'uint16_t':'unsigned short' <LValueToRValue>
|       |   |   `-ArraySubscriptExpr 0x55ee8c7964a8 <col:10, col:17> 'const uint16_t':'const unsigned short' lvalue
|       |   |     |-ImplicitCastExpr 0x55ee8c796490 <col:10> 'const uint16_t *' <ArrayToPointerDecay>
|       |   |     | `-MemberExpr 0x55ee8c796440 <col:10> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|       |   |     |   `-CXXThisExpr 0x55ee8c796430 <col:10> 'const EtherAddress *' implicit this
|       |   |     `-IntegerLiteral 0x55ee8c796470 <col:16> 'int' 2
|       |   `-ParenExpr 0x55ee8c796608 <col:21, col:45> 'size_t':'unsigned long'
|       |     `-BinaryOperator 0x55ee8c7965e8 <col:22, col:43> 'size_t':'unsigned long' '<<'
|       |       |-CStyleCastExpr 0x55ee8c7965a0 <col:22, col:38> 'size_t':'unsigned long' <NoOp>
|       |       | `-ImplicitCastExpr 0x55ee8c796588 <col:31, col:38> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|       |       |   `-ImplicitCastExpr 0x55ee8c796570 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|       |       |     `-ArraySubscriptExpr 0x55ee8c796540 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |       |-ImplicitCastExpr 0x55ee8c796528 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       |       | `-MemberExpr 0x55ee8c7964d8 <col:31> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|       |       |       |   `-CXXThisExpr 0x55ee8c7964c8 <col:31> 'const EtherAddress *' implicit this
|       |       |       `-IntegerLiteral 0x55ee8c796508 <col:37> 'int' 1
|       |       `-IntegerLiteral 0x55ee8c7965c8 <col:43> 'int' 16
|       `-ParenExpr 0x55ee8c7967d8 <line:96:8, col:31> 'size_t':'unsigned long'
|         `-BinaryOperator 0x55ee8c7967b8 <col:9, col:30> 'size_t':'unsigned long' '<<'
|           |-CStyleCastExpr 0x55ee8c796770 <col:9, col:25> 'size_t':'unsigned long' <NoOp>
|           | `-ImplicitCastExpr 0x55ee8c796758 <col:18, col:25> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           |   `-ImplicitCastExpr 0x55ee8c796740 <col:18, col:25> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|           |     `-ArraySubscriptExpr 0x55ee8c796710 <col:18, col:25> 'const uint16_t':'const unsigned short' lvalue
|           |       |-ImplicitCastExpr 0x55ee8c7966f8 <col:18> 'const uint16_t *' <ArrayToPointerDecay>
|           |       | `-MemberExpr 0x55ee8c7966a8 <col:18> 'uint16_t const[3]' lvalue ->_data 0x55ee8c7947d8
|           |       |   `-CXXThisExpr 0x55ee8c796698 <col:18> 'const EtherAddress *' implicit this
|           |       `-IntegerLiteral 0x55ee8c7966d8 <col:24> 'int' 0
|           `-IntegerLiteral 0x55ee8c796798 <col:30> 'int' 9
|-CXXMethodDecl 0x55ee8c7941d8 <line:109:5, line:111:5> line:109:19 used unparse 'String () const' inline
| `-CompoundStmt 0x55ee8c796938 <col:35, line:111:5>
|   `-ReturnStmt 0x55ee8c796928 <line:110:2, col:22>
|     `-ExprWithCleanups 0x55ee8c796910 <col:9, col:22> 'String'
|       `-CXXConstructExpr 0x55ee8c7968e0 <col:9, col:22> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c7968c8 <col:9, col:22> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55ee8c7968a8 <col:9, col:22> 'String' (CXXTemporary 0x55ee8c7968a8)
|             `-CXXMemberCallExpr 0x55ee8c796880 <col:9, col:22> 'String'
|               `-MemberExpr 0x55ee8c796850 <col:9> '<bound member function type>' ->unparse_dash 0x55ee8c794358
|                 `-CXXThisExpr 0x55ee8c796840 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55ee8c794298 <line:118:5, col:28> col:12 unparse_colon 'String () const'
|-CXXMethodDecl 0x55ee8c794358 <line:126:5, col:27> col:12 used unparse_dash 'String () const'
|-CXXMethodDecl 0x55ee8c794418 <line:131:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55ee8c7944b8 <col:44> "" ""
|-CXXConversionDecl 0x55ee8c794558 <line:136:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55ee8c794600 <col:51> "" ""
|-TypedefDecl 0x55ee8c7946b8 <line:138:5, col:33> col:33 parameter_type 'const EtherAddress &'
| `-LValueReferenceType 0x55ee8c794680 'const EtherAddress &'
|   `-QualType 0x55ee8c8df831 'const EtherAddress' const
|     `-RecordType 0x55ee8c8df830 'EtherAddress'
|       `-CXXRecord 0x55ee8c792f98 'EtherAddress'
|-AccessSpecDecl 0x55ee8c794710 <line:140:2, col:9> col:2 private
|-FieldDecl 0x55ee8c7947d8 <line:142:5, col:21> col:14 referenced _data 'uint16_t [3]'
|-CXXConstructorDecl 0x55ee8c794928 <line:144:5, line:146:5> line:144:5 used EtherAddress 'void (uint16_t)'
| |-ParmVarDecl 0x55ee8c794838 <col:18, col:27> col:27 used m 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55ee8c796be0 <col:30, line:146:5>
|   `-BinaryOperator 0x55ee8c796bc0 <line:145:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x55ee8c7969c8 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x55ee8c7969b0 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55ee8c796960 <col:2> 'uint16_t [3]' lvalue ->_data 0x55ee8c7947d8
|     | |   `-CXXThisExpr 0x55ee8c796950 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x55ee8c796990 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x55ee8c796ba8 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x55ee8c796b88 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x55ee8c796a60 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x55ee8c796a48 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x55ee8c7969f8 <col:13> 'uint16_t [3]' lvalue ->_data 0x55ee8c7947d8
|         | |   `-CXXThisExpr 0x55ee8c7969e8 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x55ee8c796a28 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x55ee8c796b70 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x55ee8c796b50 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x55ee8c796af8 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x55ee8c796ae0 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x55ee8c796a90 <col:24> 'uint16_t [3]' lvalue ->_data 0x55ee8c7947d8
|             | |   `-CXXThisExpr 0x55ee8c796a80 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x55ee8c796ac0 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x55ee8c796b38 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-DeclRefExpr 0x55ee8c796b18 <col:35> 'uint16_t':'unsigned short' lvalue ParmVar 0x55ee8c794838 'm' 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x55ee8c794f58 <line:9:7> col:7 implicit constexpr EtherAddress 'void (const EtherAddress &)' inline default trivial noexcept-unevaluated 0x55ee8c794f58
| `-ParmVarDecl 0x55ee8c795068 <col:7> col:7 'const EtherAddress &'
|-CXXConstructorDecl 0x55ee8c795108 <col:7> col:7 implicit used constexpr EtherAddress 'void (EtherAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c795218 <col:7> col:7 used 'EtherAddress &&'
| |-CXXCtorInitializer Field 0x55ee8c7947d8 '_data' 'uint16_t [3]'
| | `-ArrayInitLoopExpr 0x55ee8c7955a0 <col:7> 'uint16_t [3]'
| |   |-OpaqueValueExpr 0x55ee8c795528 <col:7> 'uint16_t [3]' xvalue
| |   | `-MemberExpr 0x55ee8c7954e0 <col:7> 'uint16_t [3]' xvalue ._data 0x55ee8c7947d8
| |   |   `-CXXStaticCastExpr 0x55ee8c7954b0 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |   |     `-DeclRefExpr 0x55ee8c795480 <col:7> 'EtherAddress' lvalue ParmVar 0x55ee8c795218 '' 'EtherAddress &&'
| |   `-ImplicitCastExpr 0x55ee8c795588 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |     `-ArraySubscriptExpr 0x55ee8c795568 <col:7> 'uint16_t':'unsigned short' xvalue
| |       |-ImplicitCastExpr 0x55ee8c795550 <col:7> 'uint16_t *' <ArrayToPointerDecay>
| |       | `-OpaqueValueExpr 0x55ee8c795528 <col:7> 'uint16_t [3]' xvalue
| |       |   `-MemberExpr 0x55ee8c7954e0 <col:7> 'uint16_t [3]' xvalue ._data 0x55ee8c7947d8
| |       |     `-CXXStaticCastExpr 0x55ee8c7954b0 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |       |       `-DeclRefExpr 0x55ee8c795480 <col:7> 'EtherAddress' lvalue ParmVar 0x55ee8c795218 '' 'EtherAddress &&'
| |       `-ArrayInitIndexExpr 0x55ee8c795540 <<invalid sloc>> 'unsigned long'
| `-CompoundStmt 0x55ee8c7955f0 <col:7>
`-CXXDestructorDecl 0x55ee8c7952d0 <col:7> col:7 implicit referenced ~EtherAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddress = type { [3 x i16] }
  NonVirtualBaseLLVMType:%class.EtherAddress = type { [3 x i16] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ether_arp
         0 |   struct click_arp ea_hdr
         0 |     uint16_t ar_hrd
         2 |     uint16_t ar_pro
         4 |     uint8_t ar_hln
         5 |     uint8_t ar_pln
         6 |     uint16_t ar_op
         8 |   uint8_t [6] arp_sha
        14 |   uint8_t [4] arp_spa
        18 |   uint8_t [6] arp_tha
        24 |   uint8_t [4] arp_tpa
           | [sizeof=28, dsize=28, align=2,
           |  nvsize=28, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8cad95b8 <../dummy_inc/clicknet/ether.h:33:1, line:52:1> line:33:8 referenced struct click_arp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55ee8cad96d8 <col:1, col:8> col:8 implicit struct click_arp
|-FieldDecl 0x55ee8cad9778 <line:34:5, col:14> col:14 referenced ar_hrd 'uint16_t':'unsigned short'
|-FieldDecl 0x55ee8cad97d8 <line:42:5, col:14> col:14 referenced ar_pro 'uint16_t':'unsigned short'
|-FieldDecl 0x55ee8cad9838 <line:43:5, col:13> col:13 referenced ar_hln 'uint8_t':'unsigned char'
|-FieldDecl 0x55ee8cad9898 <line:44:5, col:13> col:13 referenced ar_pln 'uint8_t':'unsigned char'
`-FieldDecl 0x55ee8cad98f8 <line:45:5, col:14> col:14 referenced ar_op 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_arp = type { i16, i16, i8, i8, i16 }
  NonVirtualBaseLLVMType:%struct.click_arp = type { i16, i16, i8, i8, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8cad9960 <../dummy_inc/clicknet/ether.h:54:1, line:60:1> line:54:8 referenced struct click_ether_arp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55ee8cad9a78 <col:1, col:8> col:8 implicit struct click_ether_arp
|-FieldDecl 0x55ee8cad9b60 <line:55:5, col:22> col:22 referenced ea_hdr 'struct click_arp':'click_arp'
|-FieldDecl 0x55ee8cad9c10 <line:56:5, col:22> col:13 referenced arp_sha 'uint8_t [6]'
|-FieldDecl 0x55ee8cad9cf8 <line:57:5, col:22> col:13 referenced arp_spa 'uint8_t [4]'
|-FieldDecl 0x55ee8cad9da8 <line:58:5, col:22> col:13 referenced arp_tha 'uint8_t [6]'
`-FieldDecl 0x55ee8cad9e58 <line:59:5, col:22> col:13 referenced arp_tpa 'uint8_t [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ether_arp = type { %struct.click_arp, [6 x i8], [4 x i8], [6 x i8], [4 x i8] }
  NonVirtualBaseLLVMType:%struct.click_ether_arp = type { %struct.click_arp, [6 x i8], [4 x i8], [6 x i8], [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c6e0820 prev 0x55ee8c645638 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c6e0918 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55ee8c6e09a8 <col:19, col:25> col:19 public
|-TypedefDecl 0x55ee8c6e09e0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55ee8c4d2f30 'uninitialized_type'
|   `-CXXRecord 0x55ee8c4d2e98 'uninitialized_type'
|-CXXConstructorDecl 0x55ee8c6e0aa0 <line:20:5, line:22:5> line:20:12 IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55ee8c6e41f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55ee8c6e4298 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55ee8c6e4258 <col:10> 'int' 0
| `-CompoundStmt 0x55ee8c6e42e0 <col:13, line:22:5>
|-CXXConstructorDecl 0x55ee8c6e0bf0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55ee8c6e0b60 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55ee8c6e41f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55ee8c6e4330 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55ee8c6e42f0 <col:10> 'unsigned int' lvalue ParmVar 0x55ee8c6e0b60 'x' 'unsigned int'
| `-CompoundStmt 0x55ee8c6e4378 <col:13, line:27:5>
|-CXXConstructorDecl 0x55ee8c6e0d48 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55ee8c6e0cb8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55ee8c6e41f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55ee8c6e43e0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55ee8c6e43c8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55ee8c6e4388 <col:10> 'int' lvalue ParmVar 0x55ee8c6e0cb8 'x' 'int'
| `-CompoundStmt 0x55ee8c6e4428 <col:13, line:31:5>
|-CXXConstructorDecl 0x55ee8c6e0ea0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55ee8c6e0e10 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55ee8c6e41f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55ee8c6e4490 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55ee8c6e4478 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55ee8c6e4438 <col:10> 'unsigned long' lvalue ParmVar 0x55ee8c6e0e10 'x' 'unsigned long'
| `-CompoundStmt 0x55ee8c6e44d8 <col:13, line:35:5>
|-CXXConstructorDecl 0x55ee8c6e0ff8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55ee8c6e0f68 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55ee8c6e41f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55ee8c6e4540 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55ee8c6e4528 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55ee8c6e44e8 <col:10> 'long' lvalue ParmVar 0x55ee8c6e0f68 'x' 'long'
| `-CompoundStmt 0x55ee8c6e4588 <col:13, line:39:5>
|-CXXConstructorDecl 0x55ee8c6e11b8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55ee8c6e10c8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55ee8c6e41f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55ee8c6e4608 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55ee8c6e45b8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55ee8c6143f0
| |     `-DeclRefExpr 0x55ee8c6e4598 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55ee8c6e10c8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55ee8c6e4650 <col:20, line:44:5>
|-CXXConstructorDecl 0x55ee8c6e1348 <line:50:5, line:56:5> line:50:14 used IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55ee8c6e1280 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55ee8c6e47b8 <col:51, line:56:5>
|   `-BinaryOperator 0x55ee8c6e4798 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55ee8c6e4670 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55ee8c6e41f0
|     | `-CXXThisExpr 0x55ee8c6e4660 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55ee8c6e4780 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55ee8c6e4768 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55ee8c6e4748 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55ee8c6e4718 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55ee8c6e4700 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55ee8c6e46a0 <col:47> 'const unsigned char *' lvalue ParmVar 0x55ee8c6e1280 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55ee8c6e1498 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55ee8c6e1408 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55ee8c6e1648 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55ee8c6e1588 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55ee8c6e4828 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55ee8c6e4800 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55ee8c6e47d0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55ee8c6e1588 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55ee8c6e17d8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55ee8c6e1710 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55ee8c6e18c8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55ee8c6e57e8 <col:46, line:83:5>
|   `-ReturnStmt 0x55ee8c6e57d8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55ee8c6e57c0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55ee8c6e5790 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c6e5648 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55ee8c6e5530 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55ee8c6e5418 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55ee8c6e4850 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55ee8c6e19b8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55ee8c6e5898 <col:31, line:88:5>
|   `-ReturnStmt 0x55ee8c6e5888 <line:87:2, col:10>
|     `-UnaryOperator 0x55ee8c6e5870 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55ee8c6e5858 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55ee8c6e5840 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55ee8c6e5810 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55ee8c6e41f0
|             `-CXXThisExpr 0x55ee8c6e5800 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55ee8c6e1a78 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55ee8c6e5918 <col:34, line:93:5>
|   `-ReturnStmt 0x55ee8c6e5908 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c6e58f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ee8c6e58c0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55ee8c6e41f0
|         `-CXXThisExpr 0x55ee8c6e58b0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55ee8c6e1b48 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55ee8c6e5998 <col:38, line:101:5>
|   `-ReturnStmt 0x55ee8c6e5988 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c6e5970 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ee8c6e5940 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55ee8c6e41f0
|         `-CXXThisExpr 0x55ee8c6e5930 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55ee8c6e1c18 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55ee8c6e5c68 <col:38, line:108:5>
|   `-ReturnStmt 0x55ee8c6e5c58 <line:107:2, col:58>
|     `-BinaryOperator 0x55ee8c6e5c38 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55ee8c6e5b50 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55ee8c6e5b30 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55ee8c6e5b18 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55ee8c6e59c0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55ee8c6e41f0
|       |   |   `-CXXThisExpr 0x55ee8c6e59b0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55ee8c6e5af0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55ee8c6e5ad8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55ee8c6e5a58 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55ee8c622928 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55ee8c6e5a38 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55ee8c6e5c10 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55ee8c6e5bf8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55ee8c6e5bd8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55ee8c622928 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55ee8c6e5bb8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55ee8c6e1cd8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55ee8c6e5ed8 <col:39, line:112:5>
|   `-ReturnStmt 0x55ee8c6e5ec8 <line:111:2, col:56>
|     `-BinaryOperator 0x55ee8c6e5ea8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55ee8c6e5dc0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55ee8c6e5da0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55ee8c6e5d88 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55ee8c6e5c90 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55ee8c6e41f0
|       |   |   `-CXXThisExpr 0x55ee8c6e5c80 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55ee8c6e5d60 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55ee8c6e5d48 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55ee8c6e5d28 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55ee8c622928 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55ee8c6e5d08 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55ee8c6e5e80 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55ee8c6e5e68 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55ee8c6e5e48 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55ee8c622928 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55ee8c6e5e28 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55ee8c6e1e08 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55ee8c6e1f10 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55ee8c6e2020 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55ee8c6e30e8 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55ee8c6e31a8 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55ee8c6e3270 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55ee8c6e3468 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55ee8c6e3320 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55ee8c6e3398 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55ee8c6e35e8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55ee8c6e3528 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55ee8c6e3730 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55ee8c6e36a0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55ee8c6e38d8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55ee8c6e37e8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55ee8c6e3a20 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55ee8c6e3990 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55ee8c6e3b68 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55ee8c6e3ad8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55ee8c6e3c30 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55ee8c6e3cf0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55ee8c6e3e68 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55ee8c6e3da0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55ee8c6e3f30 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55ee8c6e4018 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55ee8c6e40c0 <col:51> "" ""
|-TypedefDecl 0x55ee8c6e4160 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55ee8c6456d0 'IPAddress'
|   `-CXXRecord 0x55ee8c6e0820 'IPAddress'
|-AccessSpecDecl 0x55ee8c6e41b8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55ee8c6e41f0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ee8c6e4898 <line:15:7> col:7 implicit constexpr IPAddress 'void (const IPAddress &)' inline default trivial noexcept-unevaluated 0x55ee8c6e4898
| `-ParmVarDecl 0x55ee8c6e49a8 <col:7> col:7 'const IPAddress &'
|-CXXConstructorDecl 0x55ee8c6e4a48 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8c6e4b58 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55ee8c6e41f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55ee8c6e5738 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55ee8c6e56f0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55ee8c6e41f0
| |     `-CXXStaticCastExpr 0x55ee8c6e56c0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55ee8c6e5690 <col:7> 'IPAddress' lvalue ParmVar 0x55ee8c6e4b58 '' 'IPAddress &&'
| `-CompoundStmt 0x55ee8c6e5780 <col:7>
`-CXXDestructorDecl 0x55ee8c6e5448 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9f48c0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c9f49d8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55ee8c9f4aa8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55ee8c9f4b08 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55ee8c9f4b70 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55ee8c9f4bf8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55ee8c9f4e60 <col:16, line:46:5>
|   |-BinaryOperator 0x55ee8c9f4da8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55ee8c9f4cc8 <col:9> 'TaskLink *' lvalue ->_prev 0x55ee8c9f4aa8
|   | | `-CXXThisExpr 0x55ee8c9f4cb8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c9f4d90 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55ee8c9f4d70 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55ee8c9f4d08 <col:17> 'TaskLink *' lvalue ->_next 0x55ee8c9f4b08
|   |     | `-CXXThisExpr 0x55ee8c9f4cf8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55ee8c9f4d58 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55ee8c9f4d38 <col:25> 'int' 0
|   `-BinaryOperator 0x55ee8c9f4e40 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55ee8c9f4dd8 <col:9> 'unsigned int' lvalue ->_pass 0x55ee8c9f4b70
|     | `-CXXThisExpr 0x55ee8c9f4dc8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55ee8c9f4e28 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55ee8c9f4e08 <col:17> 'int' 0
|-CXXConstructorDecl 0x55ee8ca61be8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55ee8ca61be8
| `-ParmVarDecl 0x55ee8ca61cf8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55ee8ca61d98 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55ee8ca61d98
| `-ParmVarDecl 0x55ee8ca61ea8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55ee8ca62098 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55ee8ca62098
|-CXXMethodDecl 0x55ee8ca62898 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55ee8ca62898
| `-ParmVarDecl 0x55ee8ca629a8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55ee8ca62a18 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55ee8ca62a18
  `-ParmVarDecl 0x55ee8ca62b28 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9f73c8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55ee8c9f74f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55ee8c9f7558 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55ee8c9f75b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55ee8ca6c588 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55ee8ca6c660 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ee8ca6c660
|-CXXConstructorDecl 0x55ee8ca6c918 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55ee8ca6c918
| `-ParmVarDecl 0x55ee8ca6ca28 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55ee8ca6cac8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55ee8ca6cac8
  `-ParmVarDecl 0x55ee8ca6cbd8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9f7220 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55ee8c9f7338 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55ee8c9f73c8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55ee8c9f74f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55ee8c9f7558 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55ee8c9f75b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55ee8ca6c588 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55ee8ca6c660 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ee8ca6c660
| |-CXXConstructorDecl 0x55ee8ca6c918 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55ee8ca6c918
| | `-ParmVarDecl 0x55ee8ca6ca28 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55ee8ca6cac8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55ee8ca6cac8
|   `-ParmVarDecl 0x55ee8ca6cbd8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55ee8c9f7678 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55ee8c9f76d8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55ee8c9f7678 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55ee8c9f74f8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55ee8c9f7730 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55ee8c9f7678 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55ee8c9f7558 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55ee8c9f7788 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55ee8c9f7678 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55ee8c9f75b8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55ee8c9f77e0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55ee8ca6c498 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55ee8ca6cdf8 <col:11>
|-CXXConstructorDecl 0x55ee8ca6c768 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55ee8ca6c768
| `-ParmVarDecl 0x55ee8ca6c878 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55ee8ca6cc78 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55ee8ca6cc78
  `-ParmVarDecl 0x55ee8ca6cd88 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c9fca30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55ee8c9fcc38 prev 0x55ee8c9fca30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8c9fde40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55ee8c9fddf0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55ee8c9fddd0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55ee8c9fdc80 'type'
|     `-SubstTemplateTypeParmType 0x55ee8c9fdaa0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8c9fd5f0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55ee8c9fd508 'sized_array_memory'
|-FieldDecl 0x55ee8ca01a70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55ee8ca01ac0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8ca01af8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55ee8c9fccd0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|     `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-TypedefDecl 0x55ee8ca01bb8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55ee8ca01b80 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55ee8c9fccd0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|       `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-TypedefDecl 0x55ee8ca01c48 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55ee8ca01c10 'const TimerSet::heap_element &'
|   `-QualType 0x55ee8c9fccd1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55ee8c9fccd0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|         `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-TypedefDecl 0x55ee8ca01cd8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55ee8ca01ca0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55ee8c9fccd0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|       `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-TypedefDecl 0x55ee8ca01d98 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55ee8ca01d60 'const TimerSet::heap_element *'
|   `-QualType 0x55ee8c9fccd1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55ee8c9fccd0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|         `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-TypedefDecl 0x55ee8ca029f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55ee8ca029a0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55ee8ca02980 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55ee8ca028b8 'type'
|     `-LValueReferenceType 0x55ee8ca02880 'const TimerSet::heap_element &'
|       `-QualType 0x55ee8ca02621 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55ee8ca02620 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55ee8c64e200 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ee8c64e1a8 'T'
|           `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|             `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-TypedefDecl 0x55ee8ca02a58 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55ee8ca01c10 'const TimerSet::heap_element &'
|   `-QualType 0x55ee8c9fccd1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55ee8c9fccd0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|         `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-TypedefDecl 0x55ee8ca02ab0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca02b18 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55ee8ca01ca0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55ee8c9fccd0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|       `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-TypedefDecl 0x55ee8ca02b80 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55ee8ca01d60 'const TimerSet::heap_element *'
|   `-QualType 0x55ee8c9fccd1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55ee8c9fccd0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8c9faa00 'TimerSet::heap_element'
|         `-CXXRecord 0x55ee8c9fa970 'heap_element'
|-EnumDecl 0x55ee8ca02bd8 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8ca02cd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8ca02cb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8ca02d58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8ca02fe8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca02e10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca02eb0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55ee8ca032a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55ee8ca03190 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55ee8ca03568 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55ee8ca03450 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55ee8ca038b0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55ee8ca03790 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55ee8ca03bc0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55ee8ca03aa0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55ee8ca03eb0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca03cf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca03d70 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55ee8ca04008 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55ee8ca040e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca04140 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca04188 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55ee8ca04238 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca04290 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca04358 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca04408 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca04460 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca044a8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca04558 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca045b0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca045f8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca046a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca04700 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca04748 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca047f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca04850 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca04878 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca04928 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca05de0 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca05fa0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca05e90 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca05f08 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55ee8ca060f0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca06060 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca06298 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55ee8ca061a8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca06350 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca063a8 <col:30>
|-CXXMethodDecl 0x55ee8ca064c8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8ca063d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca06580 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca065d8 <col:30>
|-CXXMethodDecl 0x55ee8ca06690 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca06600 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca067d8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca06748 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca06908 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55ee8ca06a38 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55ee8ca06b08 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55ee8ca06bd8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55ee8ca06d18 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca06c88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca06e60 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca06dd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca06fa8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8ca06f18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca07060 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca07160 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8ca070d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca07218 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca072d8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55ee8ca073d8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55ee8ca07588 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca07498 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55ee8ca07d48 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8ca07640 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55ee8ca07ca8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55ee8ca07ba8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55ee8ca07e28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca07f78 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca07ee8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55ee8ca08030 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8ca08278 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca080f0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55ee8ca08168 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55ee8ca08438 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55ee8ca08348 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55ee8ca08688 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55ee8ca08500 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55ee8ca08578 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55ee8ca08748 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca089a8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55ee8ca088b0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55ee8ca08a78 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8ca08a78

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca08bc0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55ee8ca08dc8 prev 0x55ee8ca08bc0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8ca09f10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55ee8ca09ec0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55ee8ca09ea0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55ee8ca09d50 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca09b70 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8ca096c0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55ee8ca095d8 'sized_array_memory'
|-FieldDecl 0x55ee8ca0db40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55ee8ca0db90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8ca0dbc8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55ee8ca08e60 'Timer *' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-PointerType 0x55ee8c8e03b0 'Timer *'
|     `-RecordType 0x55ee8c8df500 'Timer'
|       `-CXXRecord 0x55ee8c9e2488 'Timer'
|-TypedefDecl 0x55ee8ca0dc88 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55ee8ca0dc50 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55ee8ca08e60 'Timer *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c8e03b0 'Timer *'
|       `-RecordType 0x55ee8c8df500 'Timer'
|         `-CXXRecord 0x55ee8c9e2488 'Timer'
|-TypedefDecl 0x55ee8ca0dd48 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55ee8ca0dd10 'Timer *const &'
|   `-QualType 0x55ee8ca08e61 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55ee8ca08e60 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c8e03b0 'Timer *'
|         `-RecordType 0x55ee8c8df500 'Timer'
|           `-CXXRecord 0x55ee8c9e2488 'Timer'
|-TypedefDecl 0x55ee8ca0f558 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55ee8ca0f520 'Timer **'
|   `-SubstTemplateTypeParmType 0x55ee8ca08e60 'Timer *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c8e03b0 'Timer *'
|       `-RecordType 0x55ee8c8df500 'Timer'
|         `-CXXRecord 0x55ee8c9e2488 'Timer'
|-TypedefDecl 0x55ee8ca0f618 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55ee8ca0f5e0 'Timer *const *'
|   `-QualType 0x55ee8ca08e61 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55ee8ca08e60 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c8e03b0 'Timer *'
|         `-RecordType 0x55ee8c8df500 'Timer'
|           `-CXXRecord 0x55ee8c9e2488 'Timer'
|-TypedefDecl 0x55ee8ca101f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55ee8ca101a0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55ee8ca10180 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55ee8ca10110 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca0fed0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ee8c64e930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c64e8e0 'T'
|       `-PointerType 0x55ee8c8e03b0 'Timer *'
|         `-RecordType 0x55ee8c8df500 'Timer'
|           `-CXXRecord 0x55ee8c9e2488 'Timer'
|-TypedefDecl 0x55ee8ca10258 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55ee8ca0dd10 'Timer *const &'
|   `-QualType 0x55ee8ca08e61 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55ee8ca08e60 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c8e03b0 'Timer *'
|         `-RecordType 0x55ee8c8df500 'Timer'
|           `-CXXRecord 0x55ee8c9e2488 'Timer'
|-TypedefDecl 0x55ee8ca102b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca10318 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55ee8ca0f520 'Timer **'
|   `-SubstTemplateTypeParmType 0x55ee8ca08e60 'Timer *' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-PointerType 0x55ee8c8e03b0 'Timer *'
|       `-RecordType 0x55ee8c8df500 'Timer'
|         `-CXXRecord 0x55ee8c9e2488 'Timer'
|-TypedefDecl 0x55ee8ca10380 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55ee8ca0f5e0 'Timer *const *'
|   `-QualType 0x55ee8ca08e61 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55ee8ca08e60 'Timer *' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-PointerType 0x55ee8c8e03b0 'Timer *'
|         `-RecordType 0x55ee8c8df500 'Timer'
|           `-CXXRecord 0x55ee8c9e2488 'Timer'
|-EnumDecl 0x55ee8ca103d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8ca104d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8ca104b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8ca10558 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8ca107e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca10610 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca106b0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55ee8ca10aa8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55ee8ca10990 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55ee8ca10d68 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55ee8ca10c50 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55ee8ca110b0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55ee8ca10f90 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55ee8ca113c0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55ee8ca112a0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55ee8ca116b0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca114f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca11570 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55ee8ca11808 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55ee8ca118e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca11940 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca11988 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55ee8ca11a38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca11a90 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca11b58 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca11c08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca11c60 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca11ca8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca11d58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca11db0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca11df8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca11ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca11f00 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca11f48 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca11ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca12050 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca12078 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca12128 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca121d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca12398 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca12288 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca12300 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55ee8ca124e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca12458 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca12698 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55ee8ca125a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca12750 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca127a8 <col:30>
|-CXXMethodDecl 0x55ee8ca128c8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8ca127d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca12980 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca129d8 <col:30>
|-CXXMethodDecl 0x55ee8ca12a90 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca12a00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca12bd8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca12b48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca12d08 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55ee8ca12e38 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55ee8ca12f08 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55ee8ca12fd8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55ee8ca13118 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca13088 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca13260 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca131d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca133a8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8ca13318 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca13460 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca13560 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8ca134d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca13618 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca136d8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55ee8ca137d8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55ee8ca13958 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca13898 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55ee8ca14118 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8ca13a10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55ee8ca14078 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55ee8ca13f78 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55ee8ca141f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca14348 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca142b8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55ee8ca14400 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8ca14648 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca144c0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55ee8ca14538 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55ee8ca14808 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55ee8ca14718 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55ee8ca14a58 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55ee8ca148d0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55ee8ca14948 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55ee8ca14b18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca14d78 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55ee8ca14c80 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55ee8ca14e48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8ca14e48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9ddea0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c9ddfb8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55ee8c9de048 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55ee8c9de0d0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55ee8c9de1c0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55ee8c9de2c0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55ee8c9de380 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55ee8c9de440 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55ee8c9de568 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55ee8c9de568
| `-ParmVarDecl 0x55ee8c9de678 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55ee8ca15bf8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55ee8ca15bf8
  `-ParmVarDecl 0x55ee8ca15d08 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9f9af0 prev 0x55ee8c9e6698 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55ee8c9f9be8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55ee8c9f9c78 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55ee8c9f9d00 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55ee8c9f9df8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55ee8ca16070 <col:43, col:67>
|   `-ReturnStmt 0x55ee8ca16060 <col:45, col:52>
|     `-CXXConstructExpr 0x55ee8ca16030 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55ee8ca16000 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55ee8c9fb5e0
|         `-CXXThisExpr 0x55ee8ca15ff0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55ee8c9f9eb8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55ee8c9fa0c0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55ee8c9f9f68 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55ee8c9f9fe0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55ee8c9fa1b8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55ee8c9fa280 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55ee8ca160f0 <col:39, col:67>
|   `-ReturnStmt 0x55ee8ca160e0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55ee8ca160c8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ee8ca16098 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55ee8c9fb6c8
|         `-CXXThisExpr 0x55ee8ca16088 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55ee8c9fa348 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55ee8ca16170 <col:35, col:59>
|   `-ReturnStmt 0x55ee8ca16160 <col:37, col:44>
|     `-ImplicitCastExpr 0x55ee8ca16148 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ee8ca16118 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55ee8c9fb730
|         `-CXXThisExpr 0x55ee8ca16108 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55ee8c9fa490 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55ee8c9fa400 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55ee8c9fa5d8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55ee8c9fa548 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55ee8c9fa7d8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55ee8c9fa690 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55ee8c9fa708 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55ee8c9fa8a8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55ee8c9fa948 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55ee8c9fa970 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ee8c9faa88 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55ee8c9fab28 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55ee8c9fab88 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55ee8c9facb8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55ee8c9fabe8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55ee8c9fab28 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55ee8ca16248 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55ee8ca161f0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55ee8ca161c0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55ee8c9e3af8
|   |       `-ImplicitCastExpr 0x55ee8ca16210 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55ee8ca161a8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55ee8ca16188 <col:17> 'Timer *' lvalue ParmVar 0x55ee8c9fabe8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55ee8c9fab88 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55ee8ca162e0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ee8ca162a0 <col:41> 'Timer *' lvalue ParmVar 0x55ee8c9fabe8 't_' 'Timer *'
|   `-CompoundStmt 0x55ee8ca16330 <col:45, line:44:2>
|-CXXRecordDecl 0x55ee8c9fad80 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ee8c9fae98 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55ee8c9fb0e8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55ee8c9faf68 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55ee8c9fafe0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55ee8ca16460 <col:71, line:49:2>
|     `-ReturnStmt 0x55ee8ca16450 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55ee8ca16418 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55ee8ca16400 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55ee8ca163e0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55ee8c89d718 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55ee8ca16360 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55ee8c9fab28
|         | `-DeclRefExpr 0x55ee8ca16340 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55ee8c9faf68 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55ee8ca163b0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55ee8c9fab28
|           `-DeclRefExpr 0x55ee8ca16390 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55ee8c9fafe0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55ee8c9fb1b0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ee8c9fb2c8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55ee8c9fb4e8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55ee8c9fb368 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55ee8c9fb3e0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55ee8ca16668 <col:63, line:54:2>
|     `-BinaryOperator 0x55ee8ca16648 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55ee8ca164f8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55ee8c9e5b38
|       | `-ImplicitCastExpr 0x55ee8ca164e0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55ee8ca164b0 <col:6, col:9> 'Timer *' lvalue ->t 0x55ee8c9fab88
|       |     `-ImplicitCastExpr 0x55ee8ca16498 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55ee8ca16478 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55ee8c9fb3e0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55ee8ca16630 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55ee8ca16610 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55ee8ca165b8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55ee8ca16598 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55ee8ca16568 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55ee8ca16528 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55ee8c9fb3e0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55ee8ca16580 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55ee8ca16548 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55ee8c9fb368 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55ee8ca165f8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55ee8ca165d8 <col:39> 'int' 1
|-FieldDecl 0x55ee8c9fb5e0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55ee8c9fb650 <col:44, col:53> aligned
|   `-ConstantExpr 0x55ee8c9fb630 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55ee8c9fb5b0 <col:52> 'int' 8
|-FieldDecl 0x55ee8c9fb6c8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55ee8c9fb730 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55ee8c9fc9d0 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55ee8ca08b60 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55ee8ca14f30 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55ee8ca14f90 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55ee8ca14ff0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55ee8ca15050 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8ca15140 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55ee8ca150b0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55ee8ca15208 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55ee8ca16ac0 <col:29, line:81:5>
|   `-IfStmt 0x55ee8ca16a98 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55ee8ca16750 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55ee8ca166f0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55ee8ca166c0 <col:6, col:18> '<bound member function type>' .size 0x55ee8ca04878
|     |     `-ImplicitCastExpr 0x55ee8ca16738 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55ee8ca16690 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55ee8ca08b60
|     |         `-CXXThisExpr 0x55ee8ca16680 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55ee8ca16940 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55ee8ca16928 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55ee8ca16908 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55ee8c586f58 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55ee8ca16778 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55ee8c9fb5e0
|     | | `-CXXThisExpr 0x55ee8ca16768 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55ee8ca168f0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55ee8ca168c0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55ee8c9fab28
|     |     `-CXXMemberCallExpr 0x55ee8ca16898 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55ee8ca16868 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55ee8ca06d18
|     |       | `-MemberExpr 0x55ee8ca167b8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55ee8ca08b60
|     |       |   `-CXXThisExpr 0x55ee8ca167a8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55ee8ca16848 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55ee8ca16a80 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55ee8ca16a48 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55ee8ca16a30 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55ee8ca16a10 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55ee8c587408 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55ee8ca16988 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55ee8c9fb5e0
|         | `-CXXThisExpr 0x55ee8ca16978 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55ee8ca169f8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55ee8ca169c8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55ee8ca15348 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55ee8ca152b8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55ee8ca15410 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55ee8ca154d0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55ee8ca15590 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55ee8ca15680 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55ee8ca156e8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55ee8ca156e8
| `-ParmVarDecl 0x55ee8ca157f8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55ee8ca15898 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55ee8ca15898
| `-ParmVarDecl 0x55ee8ca159a8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55ee8ca15a48 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55ee8ca15a48
| `-ParmVarDecl 0x55ee8ca15b58 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55ee8ca15d78 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55ee8ca15d78
| `-ParmVarDecl 0x55ee8ca15e88 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55ee8ca15f10 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55ee8ca15f10

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca46198 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55ee8ca463a8 prev 0x55ee8ca46198 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8ca47480 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55ee8ca47430 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55ee8ca47410 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55ee8ca472c0 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca09b70 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8ca096c0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55ee8ca095d8 'sized_array_memory'
|-FieldDecl 0x55ee8ca47580 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55ee8ca475d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8ca47608 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55ee8ca46440 'pollfd' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-RecordType 0x55ee8ca44250 'pollfd'
|     `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-TypedefDecl 0x55ee8ca476c8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55ee8ca47690 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55ee8ca46440 'pollfd' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca44250 'pollfd'
|       `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-TypedefDecl 0x55ee8ca47788 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55ee8ca47750 'const pollfd &'
|   `-QualType 0x55ee8ca46441 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55ee8ca46440 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca44250 'pollfd'
|         `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-TypedefDecl 0x55ee8ca47818 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55ee8ca477e0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55ee8ca46440 'pollfd' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca44250 'pollfd'
|       `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-TypedefDecl 0x55ee8ca478d8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55ee8ca478a0 'const pollfd *'
|   `-QualType 0x55ee8ca46441 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55ee8ca46440 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca44250 'pollfd'
|         `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-TypedefDecl 0x55ee8ca484b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55ee8ca48460 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55ee8ca48440 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55ee8ca483d0 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca48190 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ee8c64e930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c64e8e0 'T'
|       `-RecordType 0x55ee8ca44250 'pollfd'
|         `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-TypedefDecl 0x55ee8ca48518 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55ee8ca47750 'const pollfd &'
|   `-QualType 0x55ee8ca46441 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55ee8ca46440 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca44250 'pollfd'
|         `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-TypedefDecl 0x55ee8ca48570 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca485d8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55ee8ca477e0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55ee8ca46440 'pollfd' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca44250 'pollfd'
|       `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-TypedefDecl 0x55ee8ca48640 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55ee8ca478a0 'const pollfd *'
|   `-QualType 0x55ee8ca46441 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55ee8ca46440 'pollfd' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca44250 'pollfd'
|         `-CXXRecord 0x55ee8ca441c0 'pollfd'
|-EnumDecl 0x55ee8ca48698 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8ca48790 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8ca48770 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8ca48818 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8ca48aa8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca488d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca48970 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55ee8ca48d68 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55ee8ca48c50 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55ee8ca49028 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55ee8ca48f10 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55ee8ca49370 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55ee8ca49250 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55ee8ca49680 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55ee8ca49560 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55ee8ca49970 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca497b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca49830 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55ee8ca49ac8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55ee8ca49ba8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca49c00 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca49c48 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55ee8ca49cf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca49d50 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca49e18 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca49ec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca49f20 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca49f68 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca4a018 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca4a070 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca4a0b8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca4a168 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca4a1c0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca4a208 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca4a2b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca4a310 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca4a338 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca4a3e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca4a498 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca4a658 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca4a548 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca4a5c0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55ee8ca4a7a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca4a718 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca4a958 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55ee8ca4a860 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca4aa10 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca4baa0 <col:30>
|-CXXMethodDecl 0x55ee8ca4bbb8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8ca4bac8 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca4bc70 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca4bcc8 <col:30>
|-CXXMethodDecl 0x55ee8ca4bd80 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca4bcf0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca4bec8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca4be38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca4bff8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55ee8ca4c128 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55ee8ca4c1f8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55ee8ca4c2c8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55ee8ca4c408 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca4c378 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca4c550 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca4c4c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca4c698 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8ca4c608 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca4c750 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca4c850 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8ca4c7c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca4c908 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca4c9c8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55ee8ca4cac8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55ee8ca4cc78 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca4cb88 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55ee8ca4d438 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8ca4cd30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55ee8ca4d398 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55ee8ca4d298 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55ee8ca4d518 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca4d668 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca4d5d8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55ee8ca4d720 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8ca4d968 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca4d7e0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55ee8ca4d858 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55ee8ca4db28 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55ee8ca4da38 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55ee8ca4dd78 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55ee8ca4dbf0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55ee8ca4dc68 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55ee8ca4de38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca4e098 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55ee8ca4dfa0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55ee8ca4e168 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8ca4e168

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca4f650 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55ee8ca4f828 prev 0x55ee8ca4f650 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55ee8ca4f8b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55ee8ca4f8e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca514b0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55ee8ca51460 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55ee8ca4fd90 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55ee8ca4fc90 'type'
|     `-TemplateSpecializationType 0x55ee8ca4fc20 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55ee8ca4fb00 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55ee8ca4fae0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55ee8ca4fac0 <col:24> 'unsigned long' 24
|       `-RecordType 0x55ee8ca4fc00 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55ee8ca4fb20 'char_array'
|-TypedefDecl 0x55ee8ca51568 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55ee8ca51530 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55ee8ca51510 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55ee8ca514b0 'type'
|     `-ElaboratedType 0x55ee8ca51460 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55ee8ca4fd90 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55ee8ca4fc90 'type'
|         `-TemplateSpecializationType 0x55ee8ca4fc20 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55ee8ca4fb00 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55ee8ca4fae0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55ee8ca4fac0 <col:24> 'unsigned long' 24
|           `-RecordType 0x55ee8ca4fc00 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55ee8ca4fb20 'char_array'
|-CXXMethodDecl 0x55ee8ca516e8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55ee8ca515f8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55ee8ca517d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55ee8ca518b8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55ee8ca518b8
|-CXXMethodDecl 0x55ee8ca51b88 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55ee8ca51a90 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55ee8ca51dc8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55ee8ca51c40 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca51cb8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ee8ca51f98 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55ee8ca51e88 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca51f00 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ee8ca520f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55ee8ca521c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55ee8ca52418 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55ee8ca52288 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55ee8ca52300 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ee8ca52678 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55ee8ca524e8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55ee8ca52560 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ee8ca52838 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55ee8ca52748 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ee8ca529f8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55ee8ca52900 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ee8ca52ab0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca52b60 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca52d98 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55ee8ca52c10 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55ee8ca52c88 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55ee8ca53038 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55ee8ca52f40 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55ee8ca53100 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55ee8ca53150 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55ee8ca531a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8ca4e2b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55ee8ca4e4b8 prev 0x55ee8ca4e2b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55ee8ca4f5c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55ee8ca4f570 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55ee8ca4f550 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55ee8ca4f400 'type'
|     `-SubstTemplateTypeParmType 0x55ee8ca4f220 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55ee8c643910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c6438b8 'T'
|       `-RecordType 0x55ee8c927650 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55ee8c927568 'sized_array_memory'
|-FieldDecl 0x55ee8ca531f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55ee8ca53240 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55ee8ca53278 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55ee8ca4e550 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|   `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-TypedefDecl 0x55ee8ca53338 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55ee8ca53300 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55ee8ca4e550 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-TypedefDecl 0x55ee8ca533f8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55ee8ca533c0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55ee8ca4e551 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55ee8ca4e550 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-TypedefDecl 0x55ee8ca53488 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55ee8ca53450 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55ee8ca4e550 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-TypedefDecl 0x55ee8ca53548 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55ee8ca53510 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55ee8ca4e551 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55ee8ca4e550 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-TypedefDecl 0x55ee8ca55100 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55ee8ca550b0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55ee8ca55090 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55ee8ca54fc8 'type'
|     `-LValueReferenceType 0x55ee8ca54f90 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55ee8ca54d31 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55ee8ca54d30 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55ee8c64e200 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55ee8c64e1a8 'T'
|           `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-TypedefDecl 0x55ee8ca55168 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55ee8ca533c0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55ee8ca4e551 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55ee8ca4e550 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-TypedefDecl 0x55ee8ca551c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-TypedefDecl 0x55ee8ca55228 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55ee8ca53450 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55ee8ca4e550 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|     `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-TypedefDecl 0x55ee8ca55290 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55ee8ca53510 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55ee8ca4e551 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55ee8ca4e550 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55ee8c67b820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55ee8c67b7c8 'T'
|       `-RecordType 0x55ee8ca45d00 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55ee8ca45c70 'SelectorInfo'
|-EnumDecl 0x55ee8ca552e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55ee8ca553e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55ee8ca553c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55ee8c67cea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55ee8c67ce80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55ee8c67ce60 <col:40> 'int' 1
|-CXXConstructorDecl 0x55ee8ca55468 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55ee8ca556f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca55520 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca555c0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55ee8ca559b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55ee8ca558a0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55ee8ca55c78 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55ee8ca55b60 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55ee8ca55fc0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55ee8ca55ea0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55ee8ca562d0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55ee8ca561b0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55ee8ca565c0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca56408 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca56480 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55ee8ca56718 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55ee8ca567f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca56850 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca56898 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55ee8ca56948 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca569a0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca56a68 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca56b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca56b70 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca56bb8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca56c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca56cc0 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca56d08 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca56db8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca56e10 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca56e58 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55ee8ca56f08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55ee8ca56f60 <col:30> Inherited
|-CXXMethodDecl 0x55ee8ca56f88 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca57038 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55ee8ca570e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca572a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca57198 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55ee8ca57210 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55ee8ca573f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca57368 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca575a8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55ee8ca574b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca57660 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca576b8 <col:30>
|-CXXMethodDecl 0x55ee8ca577d8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55ee8ca576e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55ee8ca57890 <col:20>
| `-OptimizeNoneAttr 0x55ee8ca578e8 <col:30>
|-CXXMethodDecl 0x55ee8ca579a0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca57910 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca57ae8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca57a58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca57c18 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55ee8ca57d48 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55ee8ca57e18 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55ee8ca57ee8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55ee8ca58028 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55ee8ca57f98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca58170 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55ee8ca580e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55ee8ca582b8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55ee8ca58228 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca58370 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca58470 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55ee8ca583e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55ee8ca58528 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55ee8ca585e8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55ee8ca586e8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55ee8ca58898 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca587a8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55ee8ca59058 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55ee8ca58950 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55ee8ca58fb8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55ee8ca58eb8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55ee8ca59138 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55ee8ca59288 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55ee8ca591f8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55ee8ca59340 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55ee8ca59588 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55ee8ca59400 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55ee8ca59478 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55ee8ca59748 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55ee8ca59658 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55ee8ca59998 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55ee8ca59810 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55ee8ca59888 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55ee8ca59a58 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55ee8ca59cb8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55ee8ca59bc0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55ee8ca59d88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55ee8ca59d88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8ca44e50 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8ca44f68 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55ee8ca44ff8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55ee8ca45080 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55ee8ca45170 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55ee8ca45170
|-CXXMethodDecl 0x55ee8ca45270 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55ee8ca45510 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55ee8ca45328 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55ee8ca453a0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55ee8ca45420 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55ee8ca45780 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55ee8ca455e0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55ee8ca45658 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55ee8ca456d8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55ee8ca458d8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55ee8ca45848 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55ee8ca459a0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55ee8ca5b438 <col:34, line:50:5>
|   |-BinaryOperator 0x55ee8ca5ae08 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55ee8ca5adc8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55ee8ca46128
|   | | `-CXXThisExpr 0x55ee8ca5adb8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55ee8ca5adf8 <col:23> 'bool' true
|   `-CallExpr 0x55ee8ca5b410 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55ee8ca5b3f8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55ee8ca5b378 <col:2> 'void (long)' lvalue Function 0x55ee8ca5b278 'ignore_result' 'void (long)' (FunctionTemplate 0x55ee8c63e8b8 'ignore_result')
|     `-CallExpr 0x55ee8ca5b020 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55ee8ca5b008 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8ca5af88 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55ee8c895bb8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55ee8ca5b058 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55ee8ca5af30 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55ee8ca5af18 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55ee8ca5aec8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55ee8ca460c8
|       |   |   `-CXXThisExpr 0x55ee8ca5aeb8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55ee8ca5aef8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55ee8ca5b088 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55ee8ca5b070 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55ee8ca5af50 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55ee8ca5b0a0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55ee8ca5af68 <col:41> 'int' 1
|-CXXMethodDecl 0x55ee8ca45ae0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55ee8ca45a50 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55ee8ca45ba8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55ee8ca45c48 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55ee8ca45c70 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ee8ca45d88 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55ee8ca45e28 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55ee8ca45e88 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55ee8ca45ef0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55ee8ca45fa0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55ee8ca45e28 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55ee8ca5b498 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55ee8ca5b458 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55ee8ca45e88 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55ee8ca5b518 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55ee8ca5b4d8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55ee8ca45ef0 'pollfd' 'int'
|   | `-UnaryOperator 0x55ee8ca5b578 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55ee8ca5b558 <col:35> 'int' 1
|   `-CompoundStmt 0x55ee8ca5b5f0 <line:64:2, line:65:2>
|-FieldDecl 0x55ee8ca460c8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55ee8ca46128 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55ee8ca4e250 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55ee8ca59e70 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55ee8ca5a0a8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55ee8ca59ed8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55ee8ca59f50 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55ee8ca59fc8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55ee8ca5a290 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55ee8ca5a178 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55ee8ca5a1f8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55ee8ca5a4d8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55ee8ca5a358 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55ee8ca5a3d8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55ee8ca5a6e8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55ee8ca5a598 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55ee8ca5a610 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55ee8ca5a838 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55ee8ca5a7a8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55ee8ca5a900 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55ee8ca5a9c0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55ee8ca5aa88 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55ee8ca5aa88
| `-ParmVarDecl 0x55ee8ca5ab98 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55ee8ca5ac38 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55ee8ca5ac38
  `-ParmVarDecl 0x55ee8ca5ad48 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9dce08 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c9dcf28 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55ee8c9dcfb8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55ee8c9dd040 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55ee8c9dd130 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55ee8c9dd230 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55ee8c9dd2f0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55ee8c9dd3b0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55ee8c9dd498 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55ee8c9dd5b8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55ee8c9dd5b8
| `-ParmVarDecl 0x55ee8c9dd6c8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55ee8ca62bc8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55ee8ca62bc8
  `-ParmVarDecl 0x55ee8ca62cd8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9f7a98 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c9f7bb8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55ee8c9f7c58 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55ee8c9f7cb8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55ee8ca621c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55ee8ca621c8
| `-ParmVarDecl 0x55ee8ca622d8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55ee8ca62378 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55ee8ca62378
| `-ParmVarDecl 0x55ee8ca62488 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55ee8ca624f8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55ee8ca624f8
|-CXXMethodDecl 0x55ee8ca62d78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55ee8ca62d78
| `-ParmVarDecl 0x55ee8ca62e88 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55ee8ca62ef8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55ee8ca62ef8
| `-ParmVarDecl 0x55ee8ca63008 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55ee8ca6ce58 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55ee8ca6cf30 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9ded00 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c9dee18 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55ee8c9deea8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55ee8c9def30 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55ee8c9deff0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55ee8c379580 'int'
|-CXXMethodDecl 0x55ee8c9df0b8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55ee8c9df158 <col:45> always_inline
|-CXXMethodDecl 0x55ee8c9df288 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55ee8c9df1c0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55ee8c9df330 <col:49> always_inline
|-CXXConstructorDecl 0x55ee8c9df428 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55ee8c9df428
| `-ParmVarDecl 0x55ee8c9df538 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55ee8c9df5d8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55ee8c9df5d8
| `-ParmVarDecl 0x55ee8c9df6e8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55ee8ca625e0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55ee8ca625e0
|-CXXMethodDecl 0x55ee8ca630a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55ee8ca630a8
| `-ParmVarDecl 0x55ee8ca631b8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55ee8ca63228 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55ee8ca63228
  `-ParmVarDecl 0x55ee8ca63338 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8ca5ba60 prev 0x55ee8ca44dc0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55ee8ca5bb58 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55ee8ca5bbe8 <col:22, col:28> col:22 public
|-EnumDecl 0x55ee8ca5bc10 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55ee8ca5bd28 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55ee8ca5bd08 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55ee8ca5bcf0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55ee8ca5bcd0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55ee8ca5bdd0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55ee8ca5bdb0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55ee8ca5bd98 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55ee8ca5bd78 <col:53> 'int' 1000
|-CXXMethodDecl 0x55ee8ca5be70 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55ee8ca5bf30 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55ee8ca5c018 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55ee8ca633f8 <col:34, col:52>
|   `-ReturnStmt 0x55ee8ca633e8 <col:36, col:43>
|     `-MemberExpr 0x55ee8ca633b8 <col:43> 'TimerSet' lvalue ->_timers 0x55ee8ca606c8
|       `-CXXThisExpr 0x55ee8ca633a8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55ee8ca5c108 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55ee8ca63460 <col:46, col:64>
|   `-ReturnStmt 0x55ee8ca63450 <col:48, col:55>
|     `-MemberExpr 0x55ee8ca63420 <col:55> 'const TimerSet' lvalue ->_timers 0x55ee8ca606c8
|       `-CXXThisExpr 0x55ee8ca63410 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55ee8ca5c1f8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55ee8ca634c8 <col:36, col:55>
|   `-ReturnStmt 0x55ee8ca634b8 <col:38, col:45>
|     `-MemberExpr 0x55ee8ca63488 <col:45> 'SelectSet' lvalue ->_selects 0x55ee8ca60728
|       `-CXXThisExpr 0x55ee8ca63478 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55ee8ca5c2e8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55ee8ca63530 <col:48, col:67>
|   `-ReturnStmt 0x55ee8ca63520 <col:50, col:57>
|     `-MemberExpr 0x55ee8ca634f0 <col:57> 'const SelectSet' lvalue ->_selects 0x55ee8ca60728
|       `-CXXThisExpr 0x55ee8ca634e0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55ee8ca5c3a8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca5c498 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55ee8ca5c608 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55ee8ca5c548 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55ee8ca5c6d0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55ee8ca5f4f8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55ee8ca5c780 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55ee8ca5f3e0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55ee8ca5f5c8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55ee8ca5f688 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55ee8ca5f748 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55ee8ca5f888 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55ee8ca5f7f8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55ee8ca5f950 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55ee8ca5fa10 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca5fad0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55ee8ca5fb90 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55ee8ca5fcd0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55ee8ca5fc40 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55ee8ca5fd98 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55ee8ca5fe58 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55ee8ca5fef8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55ee8ca5ffc0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca60010 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca60060 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca600b0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca60100 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca60150 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca601a0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca601f0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca60240 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55ee8ca60290 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55ee8ca602e0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55ee8ca603d8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55ee8ca60348 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55ee8ca60528 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55ee8ca60498 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55ee8ca605d0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55ee8ca60608 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55ee8ca60668 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55ee8ca606c8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55ee8ca60728 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55ee8ca607a8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55ee8ca60818 <col:40, col:50> aligned
|   `-ConstantExpr 0x55ee8ca607f8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55ee8ca60778 <col:48> 'int' 64
|-FieldDecl 0x55ee8ca60888 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55ee8ca608e8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55ee8ca609e0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55ee8ca60af0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55ee8ca60b50 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55ee8ca60bd0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55ee8ca60c40 <col:36, col:46> aligned
|   `-ConstantExpr 0x55ee8ca60c20 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55ee8ca60ba0 <col:44> 'int' 64
|-FieldDecl 0x55ee8ca60cb8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55ee8ca60d18 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55ee8ca60d68 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55ee8ca60da8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55ee8ca60e10 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55ee8ca60e60 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55ee8ca61008 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55ee8ca60e98 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55ee8ca60f18 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55ee8ca61108 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55ee8ca61108
|-CXXMethodDecl 0x55ee8ca61210 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55ee8ca612d8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55ee8ca63628 <col:34, line:217:5>
|   `-ReturnStmt 0x55ee8ca63618 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55ee8ca63600 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55ee8ca635d0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55ee8c9f4b70
|         `-ImplicitCastExpr 0x55ee8ca635b8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55ee8ca63588 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55ee8c9f4b08
|             `-MemberExpr 0x55ee8ca63558 <col:16> 'const TaskLink' lvalue ->_task_link 0x55ee8ca60608
|               `-CXXThisExpr 0x55ee8ca63548 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55ee8ca61398 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55ee8ca61458 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55ee8ca63d50 <col:39, line:226:5>
|   |-DeclStmt 0x55ee8ca63878 <line:223:9, col:68>
|   | `-VarDecl 0x55ee8ca63650 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55ee8ca63830 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55ee8ca63800 <col:24, col:38> '<bound member function type>' .compare_swap 0x55ee8c6a5120
|   |     | `-MemberExpr 0x55ee8ca636c8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55ee8ca60888
|   |     |   `-CXXThisExpr 0x55ee8ca636b8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55ee8ca637b8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55ee8ca637a0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55ee8ca63778 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55ee8ca63758 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55ee8ca63860 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55ee8ca637e0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55ee8ca638c0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55ee8ca63890 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55ee8ca63650 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55ee8ca63d30 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55ee8ca63d00 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55ee8ca639d8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55ee8ca639a8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55ee8ca63990 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55ee8ca638e8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55ee8ca63650 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55ee8ca63968 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55ee8ca63950 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55ee8ca63928 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55ee8ca63908 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55ee8ca63a38 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55ee8ca63a18 <col:60> 'int' 0
|       `-CallExpr 0x55ee8ca63c60 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55ee8ca63c48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55ee8ca63c28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55ee8c419cd0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55ee8ca63ca0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55ee8ca63b28 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55ee8ca63cb8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55ee8ca63b58 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55ee8ca63cd0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55ee8ca63b98 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55ee8ca63ce8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55ee8ca63c10 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55ee8ca63bf8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55ee8ca63bb8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55ee8ca615a0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55ee8ca61510 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55ee8ca61668 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55ee8ca61728 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55ee8ca617e8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55ee8ca618a8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55ee8ca61968 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55ee8ca61a60 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55ee8ca61ac0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55ee8ca61b50 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55ee8ca61f18 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55ee8ca61f18
| `-ParmVarDecl 0x55ee8ca62028 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55ee8ca626e8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55ee8ca626e8
  `-ParmVarDecl 0x55ee8ca627f8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9f4e80 prev 0x55ee8c8df3c0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55ee8c9f4fb8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55ee8c9f5048 <col:33, col:39> col:33 public
|-EnumDecl 0x55ee8c9f5070 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55ee8c9f51b0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55ee8c9f5190 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55ee8c9f5170 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55ee8c9f5130 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55ee8c9f5150 <col:26> 'int' 16
| `-EnumConstantDecl 0x55ee8c9f5280 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55ee8c9f5260 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55ee8c9f5240 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55ee8c9f5200 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55ee8c9f5220 <col:47> 'int' 31
|-EnumDecl 0x55ee8c9f52d0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55ee8c9f5410 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55ee8c9f5530 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55ee8c9f53f0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55ee8c9f53d0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55ee8c9f5390 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55ee8c9f53b0 <col:29> 'int' 15
| `-EnumConstantDecl 0x55ee8c9f54e0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55ee8c9f5548 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c9f54c0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55ee8c9f54a0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55ee8c9f5460 <col:51> 'int' 1
|         `-IntegerLiteral 0x55ee8c9f5480 <col:54> 'int' 10
|-CXXConstructorDecl 0x55ee8c9f5718 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55ee8c9f5570 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55ee8c9f55f0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55ee8c9f5870 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55ee8c9f57e0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55ee8c9f5968 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55ee8c9f5968
|-CXXMethodDecl 0x55ee8c9f5af8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55ee8c9f8bf8 <col:42, line:100:5>
|   `-ReturnStmt 0x55ee8c9f8be8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c9f8bd0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55ee8c9f8ba0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55ee8c9f7920
|         `-CXXThisExpr 0x55ee8c9f8b90 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ee8c9f5bc0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55ee8c9f8c78 <col:36, line:105:5>
|   `-ReturnStmt 0x55ee8c9f8c68 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c9f8c50 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c9f8c20 <col:16> 'void *const' lvalue ->_thunk 0x55ee8c9f7988
|         `-CXXThisExpr 0x55ee8c9f8c10 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ee8c9f5c80 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55ee8c9f8cf8 <col:37, line:110:5>
|   `-ReturnStmt 0x55ee8c9f8ce8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55ee8c9f8cd0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c9f8ca0 <col:16> 'Element *const' lvalue ->_owner 0x55ee8c9f7a48
|         `-CXXThisExpr 0x55ee8c9f8c90 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ee8c9f5d40 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55ee8c9f5e08 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55ee8c9f5ec8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55ee8c9f5f88 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55ee8c9f8de0 <col:35, line:137:5>
|   `-ReturnStmt 0x55ee8c9f8dd0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55ee8c9f8d98 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55ee8c9f8d68 <col:16, col:24> '<bound member function type>' ->router 0x55ee8c8f1bd0
|         `-ImplicitCastExpr 0x55ee8c9f8db8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55ee8c9f8d50 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55ee8c9f8d20 <col:16> 'Element *const' lvalue ->_owner 0x55ee8c9f7a48
|               `-CXXThisExpr 0x55ee8c9f8d10 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ee8c9f6048 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55ee8c9f6208 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55ee8c9f60f8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55ee8c9f6170 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55ee8c9f6418 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55ee8c9f62c8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55ee8c9f6340 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55ee8c9f64e8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55ee8c9f8ef0 <col:35, line:181:5>
|   `-ReturnStmt 0x55ee8c9f8ee0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55ee8c9f8ec8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55ee8c9f8eb0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55ee8c9f8e80 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55ee8c9f7558
|           `-MemberExpr 0x55ee8c9f8e38 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ee8c9f7678
|             `-MemberExpr 0x55ee8c9f8e08 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55ee8c9f78a8
|               `-CXXThisExpr 0x55ee8c9f8df8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55ee8c9f65a8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55ee8c9f9008 <col:30, line:192:5>
|   `-BinaryOperator 0x55ee8c9f8fe8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55ee8c9f8f90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55ee8c9f7558
|     | `-MemberExpr 0x55ee8c9f8f48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ee8c9f7678
|     |   `-MemberExpr 0x55ee8c9f8f18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ee8c9f78a8
|     |     `-CXXThisExpr 0x55ee8c9f8f08 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55ee8c9f8fd0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55ee8c9f8fc0 <col:32> 'bool' false
|-CXXMethodDecl 0x55ee8c9f6668 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55ee8c9f9358 <col:30, line:206:5>
|   |-BinaryOperator 0x55ee8c9f9100 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55ee8c9f90a8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55ee8c9f7558
|   | | `-MemberExpr 0x55ee8c9f9060 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ee8c9f7678
|   | |   `-MemberExpr 0x55ee8c9f9030 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ee8c9f78a8
|   | |     `-CXXThisExpr 0x55ee8c9f9020 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c9f90e8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55ee8c9f90d8 <col:32> 'bool' true
|   |-CallExpr 0x55ee8c9f91a0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55ee8c9f9188 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ee8c9f9168 <col:9> 'void ()' lvalue Function 0x55ee8c9dc9c0 'click_fence' 'void ()'
|   `-IfStmt 0x55ee8c9f9340 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55ee8c9f9280 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55ee8c9f9250 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55ee8c9f9200 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55ee8c9f7cb8
|     | |   `-MemberExpr 0x55ee8c9f91d0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55ee8c9f7d30
|     | |     `-CXXThisExpr 0x55ee8c9f91c0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55ee8c9f9268 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55ee8c9f9230 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55ee8c9f9300 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55ee8c9f92b0 <col:13> '<bound member function type>' ->complete_schedule 0x55ee8c9f8730
|       | `-CXXThisExpr 0x55ee8c9f92a0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55ee8c9f9328 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55ee8c9f92e0 <col:31> 'int' 0
|-CXXMethodDecl 0x55ee8c9f6728 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55ee8c9f9480 <col:35, line:240:5>
|   `-BinaryOperator 0x55ee8c9f9460 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55ee8c9f9408 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55ee8c9f7558
|     | `-MemberExpr 0x55ee8c9f93c0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ee8c9f7678
|     |   `-MemberExpr 0x55ee8c9f9390 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ee8c9f78a8
|     |     `-CXXThisExpr 0x55ee8c9f9380 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55ee8c9f9448 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55ee8c9f9438 <col:32> 'bool' true
|-CXXMethodDecl 0x55ee8c9f67e8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55ee8c9f9698 <col:37, line:253:5>
|   |-BinaryOperator 0x55ee8c9f9578 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55ee8c9f9520 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55ee8c9f7558
|   | | `-MemberExpr 0x55ee8c9f94d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ee8c9f7678
|   | |   `-MemberExpr 0x55ee8c9f94a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ee8c9f78a8
|   | |     `-CXXThisExpr 0x55ee8c9f9498 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c9f9560 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55ee8c9f9550 <col:32> 'bool' false
|   `-BinaryOperator 0x55ee8c9f9678 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55ee8c9f9620 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55ee8c9f75b8
|     | `-MemberExpr 0x55ee8c9f95d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ee8c9f7678
|     |   `-MemberExpr 0x55ee8c9f95a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ee8c9f78a8
|     |     `-CXXThisExpr 0x55ee8c9f9598 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55ee8c9f9660 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55ee8c9f9650 <col:41> 'bool' true
|-CXXMethodDecl 0x55ee8c9f68a8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55ee8c9f9818 <col:37, line:264:5>
|   |-BinaryOperator 0x55ee8c9f9798 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55ee8c9f9740 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55ee8c9f75b8
|   | | `-MemberExpr 0x55ee8c9f96f8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55ee8c9f7678
|   | |   `-MemberExpr 0x55ee8c9f96c8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55ee8c9f78a8
|   | |     `-CXXThisExpr 0x55ee8c9f96b8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c9f9780 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55ee8c9f9770 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55ee8c9f97f8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55ee8c9f97c8 <col:9> '<bound member function type>' ->reschedule 0x55ee8c9f6668
|       `-CXXThisExpr 0x55ee8c9f97b8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55ee8c9f69f0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55ee8c9f6960 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55ee8c9f6ac0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55ee8c9f6c08 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55ee8c9f6b78 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55ee8c9f6d58 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55ee8c9f6cc8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55ee8c9f6e20 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55ee8c9f6ee0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55ee8c9f6f80 <col:53> "" ""
|-CXXMethodDecl 0x55ee8c9f7018 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55ee8c9f70b8 <col:47> "" ""
|-AccessSpecDecl 0x55ee8c9f7128 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55ee8c9f7168 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55ee8c9f71d0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55ee8c9f7220 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55ee8c9f7338 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55ee8c9f73c8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55ee8c9f74f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55ee8c9f7558 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55ee8c9f75b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55ee8ca6c588 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55ee8ca6c660 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55ee8ca6c660
| | |-CXXConstructorDecl 0x55ee8ca6c918 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55ee8ca6c918
| | | `-ParmVarDecl 0x55ee8ca6ca28 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55ee8ca6cac8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55ee8ca6cac8
| |   `-ParmVarDecl 0x55ee8ca6cbd8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55ee8c9f7678 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55ee8c9f76d8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55ee8c9f7678 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55ee8c9f74f8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55ee8c9f7730 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55ee8c9f7678 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55ee8c9f7558 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55ee8c9f7788 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55ee8c9f7678 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55ee8c9f75b8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55ee8c9f77e0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55ee8ca6c498 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55ee8ca6cdf8 <col:11>
| |-CXXConstructorDecl 0x55ee8ca6c768 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55ee8ca6c768
| | `-ParmVarDecl 0x55ee8ca6c878 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55ee8ca6cc78 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55ee8ca6cc78
|   `-ParmVarDecl 0x55ee8ca6cd88 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55ee8c9f78a8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55ee8c9f7920 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55ee8c9f7988 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55ee8c9f79e8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55ee8c9f7a48 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55ee8c9f7a98 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55ee8c9f7bb8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55ee8c9f7c58 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55ee8c9f7cb8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55ee8ca621c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55ee8ca621c8
| | `-ParmVarDecl 0x55ee8ca622d8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55ee8ca62378 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55ee8ca62378
| | `-ParmVarDecl 0x55ee8ca62488 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55ee8ca624f8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55ee8ca624f8
| |-CXXMethodDecl 0x55ee8ca62d78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55ee8ca62d78
| | `-ParmVarDecl 0x55ee8ca62e88 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55ee8ca62ef8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55ee8ca62ef8
| | `-ParmVarDecl 0x55ee8ca63008 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55ee8ca6ce58 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55ee8ca6cf30 <col:11>
|-FieldDecl 0x55ee8c9f7d30 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55ee8c9f7e78 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55ee8c9f7db8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55ee8c9f8028 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55ee8c9f7f38 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55ee8c9f80f0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55ee8c9f81b0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55ee8c9f8270 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55ee8c9f9928 <col:41, line:355:5>
|   `-ReturnStmt 0x55ee8c9f9918 <line:354:9, col:38>
|     `-BinaryOperator 0x55ee8c9f98f8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55ee8c9f98c8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55ee8c9f9878 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55ee8c9f7cb8
|       |   `-MemberExpr 0x55ee8c9f9848 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55ee8c9f7d30
|       |     `-CXXThisExpr 0x55ee8c9f9838 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55ee8c9f98e0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55ee8c9f98a8 <col:38> 'int' 0
|-CXXMethodDecl 0x55ee8c9f8330 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55ee8c9f8470 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55ee8c9f83e0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55ee8c9f85e8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55ee8c9f8528 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55ee8c9f8730 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55ee8c9f86a0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55ee8c9f87f8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55ee8c9f89c0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55ee8c9f88a8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55ee8c9f8928 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55ee8c9f8ac0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55ee8c9f8b50 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9e5be8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55ee8c9e5d18 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55ee8c9e6808 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.20 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9e2488 prev 0x55ee8c8df470 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55ee8c9e2580 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55ee8c9e2610 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55ee8c9e2670 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55ee8c9e2718 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55ee8c9e2838 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55ee8c9e29d8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55ee8c9e2918 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55ee8c9e2c28 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55ee8c9e2a98 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55ee8c9e2b18 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55ee8c9e2db8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55ee8c9e2cf0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55ee8c9e2f38 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55ee8c9e2e78 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55ee8c9e30e8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55ee8c9e3028 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55ee8c9e31e0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55ee8c9e69e0 <col:21, line:58:5>
|   `-IfStmt 0x55ee8c9e69c8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55ee8c9e6930 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55ee8c9e6900 <col:6> '<bound member function type>' ->scheduled 0x55ee8c9e3a38
|     |   `-ImplicitCastExpr 0x55ee8c9e6950 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55ee8c9e68f0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55ee8c9e69a8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55ee8c9e6978 <col:6> '<bound member function type>' ->unschedule 0x55ee8c9e5090
|         `-CXXThisExpr 0x55ee8c9e6968 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55ee8c9e32e0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55ee8c9e6b80 <col:26, line:65:5>
|   |-BinaryOperator 0x55ee8c9e6aa0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55ee8c9e6a38 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55ee8c9e5d18
|   | | `-MemberExpr 0x55ee8c9e6a08 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55ee8c9e5dd8
|   | |   `-CXXThisExpr 0x55ee8c9e69f8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c9e6a88 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ee8c9e6a68 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55ee8c9e6238 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55ee8c9e6b60 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55ee8c9e6ad0 <col:2> 'void *' lvalue ->_thunk 0x55ee8c9e5e58
|     | `-CXXThisExpr 0x55ee8c9e6ac0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55ee8c9e6b38 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55ee8c9e6b00 <col:20> 'int' 1
|-CXXMethodDecl 0x55ee8c9e3420 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55ee8c9e3390 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55ee8c9e6ce0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55ee8c9e6bd0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55ee8c9e6ba0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55ee8c9e3390 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55ee8c9e6cc0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55ee8c9e6c90 <col:2> '<bound member function type>' ->assign 0x55ee8c9e32e0
|       `-CXXThisExpr 0x55ee8c9e6c80 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55ee8c9e35f0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55ee8c9e34d8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55ee8c9e3558 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55ee8c9e6e60 <col:58, line:79:5>
|   |-BinaryOperator 0x55ee8c9e6da8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55ee8c9e6d40 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55ee8c9e5d18
|   | | `-MemberExpr 0x55ee8c9e6d10 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55ee8c9e5dd8
|   | |   `-CXXThisExpr 0x55ee8c9e6d00 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c9e6d90 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ee8c9e6d70 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55ee8c9e34d8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55ee8c9e6e40 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55ee8c9e6dd8 <col:2> 'void *' lvalue ->_thunk 0x55ee8c9e5e58
|     | `-CXXThisExpr 0x55ee8c9e6dc8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55ee8c9e6e28 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55ee8c9e6e08 <col:11> 'void *' lvalue ParmVar 0x55ee8c9e3558 'user_data' 'void *'
|-CXXMethodDecl 0x55ee8c9e3740 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55ee8c9e36b0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55ee8c9e6ff8 <col:35, line:87:5>
|   |-BinaryOperator 0x55ee8c9e6f28 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55ee8c9e6ec0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55ee8c9e5d18
|   | | `-MemberExpr 0x55ee8c9e6e90 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55ee8c9e5dd8
|   | |   `-CXXThisExpr 0x55ee8c9e6e80 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c9e6f10 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ee8c9e6ef0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55ee8c9e6410 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55ee8c9e6fd8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55ee8c9e6f58 <col:2> 'void *' lvalue ->_thunk 0x55ee8c9e5e58
|     | `-CXXThisExpr 0x55ee8c9e6f48 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55ee8c9e6fc0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55ee8c9e6fa8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55ee8c9e6f88 <col:11> 'Element *' lvalue ParmVar 0x55ee8c9e36b0 'element' 'Element *'
|-CXXMethodDecl 0x55ee8c9e3888 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55ee8c9e37f8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55ee8c9e7190 <col:29, line:94:5>
|   |-BinaryOperator 0x55ee8c9e70c0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55ee8c9e7058 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55ee8c9e5d18
|   | | `-MemberExpr 0x55ee8c9e7028 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55ee8c9e5dd8
|   | |   `-CXXThisExpr 0x55ee8c9e7018 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55ee8c9e70a8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ee8c9e7088 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55ee8c9e65e8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55ee8c9e7170 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55ee8c9e70f0 <col:2> 'void *' lvalue ->_thunk 0x55ee8c9e5e58
|     | `-CXXThisExpr 0x55ee8c9e70e0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55ee8c9e7158 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55ee8c9e7140 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55ee8c9e7120 <col:11> 'Task *' lvalue ParmVar 0x55ee8c9e37f8 'task' 'Task *'
|-CXXMethodDecl 0x55ee8c9e3978 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55ee8c9e7270 <col:37, line:100:5>
|   `-ReturnStmt 0x55ee8c9e7260 <line:99:2, col:19>
|     `-BinaryOperator 0x55ee8c9e7240 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55ee8c9e7210 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55ee8c9e71c0 <col:9> 'Element *const' lvalue ->_owner 0x55ee8c9e5eb8
|       |   `-CXXThisExpr 0x55ee8c9e71b0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55ee8c9e7228 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55ee8c9e71f0 <col:19> 'int' 0
|-CXXMethodDecl 0x55ee8c9e3a38 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55ee8c9e7330 <col:35, line:105:5>
|   `-ReturnStmt 0x55ee8c9e7320 <line:104:2, col:23>
|     `-BinaryOperator 0x55ee8c9e7300 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55ee8c9e72e8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55ee8c9e7298 <col:9> 'const int' lvalue ->_schedpos1 0x55ee8c9e5b38
|       |   `-CXXThisExpr 0x55ee8c9e7288 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55ee8c9e72c8 <col:23> 'int' 0
|-CXXMethodDecl 0x55ee8c9e3af8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55ee8c9e7398 <col:51, line:118:5>
|   `-ReturnStmt 0x55ee8c9e7388 <line:117:2, col:9>
|     `-MemberExpr 0x55ee8c9e7358 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|       `-CXXThisExpr 0x55ee8c9e7348 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ee8c9e3bb8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55ee8c9e78f0 <col:37, line:136:5>
|   `-IfStmt 0x55ee8c9e78c8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55ee8c9e7458 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55ee8c9e7440 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55ee8c9e7420 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55ee8c9e73f0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55ee8c871548
|     |       `-MemberExpr 0x55ee8c9e73c0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|     |         `-CXXThisExpr 0x55ee8c9e73b0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55ee8c9e7838 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55ee8c9e7820 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55ee8c9e77f0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55ee8c9e77d8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55ee8c9e77a0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55ee8c9e7788 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55ee8c9e7768 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ee8c89fd20 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55ee8c9e7708 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55ee8c9e76f0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55ee8c9e7618 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55ee8c9e7600 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55ee8c9e75e0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ee8c89f9e0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55ee8c9e7580 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55ee8c9e7480 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|     |         |     |   `-CXXThisExpr 0x55ee8c9e7470 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55ee8c9e75c8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55ee8c9e75b0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55ee8c9e7560 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55ee8c9e7548 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55ee8c9e74e8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55ee8c893040 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55ee8c9e7750 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55ee8c9e7738 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55ee8c9e76d0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55ee8c9e76b8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55ee8c9e7688 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55ee8c6ee590 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55ee8c9e78b8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55ee8c9e7888 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55ee8c9e7858 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|           `-CXXThisExpr 0x55ee8c9e7848 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ee8c9e3c78 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55ee8c9e79d8 <col:35, line:141:5>
|   `-ReturnStmt 0x55ee8c9e79c8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55ee8c9e7990 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55ee8c9e7960 <col:9, col:17> '<bound member function type>' ->router 0x55ee8c8f1bd0
|         `-ImplicitCastExpr 0x55ee8c9e79b0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55ee8c9e7948 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55ee8c9e7918 <col:9> 'Element *const' lvalue ->_owner 0x55ee8c9e5eb8
|               `-CXXThisExpr 0x55ee8c9e7908 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ee8c9e3d38 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55ee8c9e7a58 <col:37, line:146:5>
|   `-ReturnStmt 0x55ee8c9e7a48 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c9e7a30 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c9e7a00 <col:9> 'Element *const' lvalue ->_owner 0x55ee8c9e5eb8
|         `-CXXThisExpr 0x55ee8c9e79f0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ee8c9e3df8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55ee8c9e7ad8 <col:41, line:151:5>
|   `-ReturnStmt 0x55ee8c9e7ac8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55ee8c9e7ab0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55ee8c9e7a80 <col:9> 'RouterThread *const' lvalue ->_thread 0x55ee8c9e5f18
|         `-CXXThisExpr 0x55ee8c9e7a70 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55ee8c9e3ec0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55ee8c9e40b8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55ee8c9e3f70 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55ee8c9e3fe8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55ee8c9e67f8 <col:50> 'bool' false
|-CXXMethodDecl 0x55ee8c9e4238 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55ee8c9e4178 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55ee8c9e4380 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55ee8c9e42f0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c9e44c8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55ee8c9e4438 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c9e4610 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55ee8c9e4580 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c9e4758 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55ee8c9e46c8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c9e4820 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55ee8c9e7c40 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55ee8c9e7c28 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55ee8c9e7bd0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55ee8c9e7b00 <col:2> '<bound member function type>' ->schedule_at_steady 0x55ee8c9e4380
|       | `-CXXThisExpr 0x55ee8c9e7af0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ee8c9e7c10 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ee8c9e7bf8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55ee8c9e7bb0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55ee8c9e7b98 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55ee8c9e7b68 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55ee8c6ee590 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55ee8c9e4960 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55ee8c9e48d0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c9e4aa8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ee8c9e4a18 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c9e7dc8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55ee8c9e7db0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55ee8c9e7d58 <col:2, col:40> 'void'
|       |-MemberExpr 0x55ee8c9e7c68 <col:2> '<bound member function type>' ->schedule_after 0x55ee8c9e4960
|       | `-CXXThisExpr 0x55ee8c9e7c58 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ee8c9e7d98 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ee8c9e7d80 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55ee8c9e7d18 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55ee8c9e7ce8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55ee8c9e7ca8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c9e4a18 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55ee8c9e7d00 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55ee8c9e7cc8 <col:38> 'int' 0
|-CXXMethodDecl 0x55ee8c9e4bf0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ee8c9e4b60 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c9e8038 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55ee8c9e8020 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55ee8c9e7fc8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55ee8c9e7df0 <col:2> '<bound member function type>' ->schedule_after 0x55ee8c9e4960
|       | `-CXXThisExpr 0x55ee8c9e7de0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ee8c9e8008 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ee8c9e7ff0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55ee8c9e7f70 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55ee8c9e7f58 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55ee8c9e7ec8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55ee8c873338 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55ee8c9e7fb0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55ee8c9e7f98 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55ee8c9e7ea8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c9e4b60 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c9e4d38 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55ee8c9e4ca8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55ee8c9e8218 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55ee8c9e8200 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55ee8c9e81a8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55ee8c9e8060 <col:2> '<bound member function type>' ->schedule_at_steady 0x55ee8c9e4380
|       | `-CXXThisExpr 0x55ee8c9e8050 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ee8c9e81e8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ee8c9e81d0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55ee8c9e8170 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55ee8c9e8158 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55ee8c9e8138 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ee8c89f9e0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55ee8c9e8108 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55ee8c9e80f0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55ee8c9e80a0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|             |     `-CXXThisExpr 0x55ee8c9e8090 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55ee8c9e80d0 <col:33> 'const Timestamp' lvalue ParmVar 0x55ee8c9e4ca8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55ee8c9e4e80 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ee8c9e4df0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c9e84f0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55ee8c9e84d8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55ee8c9e8480 <col:2, col:79> 'void'
|       |-MemberExpr 0x55ee8c9e8240 <col:2> '<bound member function type>' ->schedule_at_steady 0x55ee8c9e4380
|       | `-CXXThisExpr 0x55ee8c9e8230 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ee8c9e84c0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ee8c9e84a8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55ee8c9e8440 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55ee8c9e8378 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55ee8c9e8360 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55ee8c9e82f0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55ee8c9e82c0 <col:31, col:41> '<bound member function type>' .sec 0x55ee8c6f0088
|             | |     `-ImplicitCastExpr 0x55ee8c9e8310 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55ee8c9e8290 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|             | |         `-CXXThisExpr 0x55ee8c9e8280 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55ee8c9e8348 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55ee8c9e8328 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c9e4df0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55ee8c9e8408 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55ee8c9e83d8 <col:60, col:70> '<bound member function type>' .subsec 0x55ee8c6f0780
|                 `-ImplicitCastExpr 0x55ee8c9e8428 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55ee8c9e83a8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|                     `-CXXThisExpr 0x55ee8c9e8398 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55ee8c9e4fc8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ee8c9e4f38 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55ee8c9e8828 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55ee8c9e8810 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55ee8c9e87b8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55ee8c9e8518 <col:2> '<bound member function type>' ->schedule_at_steady 0x55ee8c9e4380
|       | `-CXXThisExpr 0x55ee8c9e8508 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ee8c9e87f8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55ee8c9e87e0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55ee8c9e8780 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55ee8c9e8768 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55ee8c9e8748 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55ee8c89f9e0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55ee8c9e86e8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55ee8c9e86d0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55ee8c9e8558 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|             |     `-CXXThisExpr 0x55ee8c9e8548 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55ee8c9e8730 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55ee8c9e8718 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55ee8c9e8678 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55ee8c9e8660 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55ee8c9e8630 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55ee8c873338 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55ee8c9e86b8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55ee8c9e86a0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55ee8c9e8610 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55ee8c9e4f38 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55ee8c9e5090 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55ee8c9e5150 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55ee8c9e8cf0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55ee8c9e8880 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55ee8c9e8850 <col:2> '<bound member function type>' ->unschedule 0x55ee8c9e5090
|   |   `-CXXThisExpr 0x55ee8c9e8840 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55ee8c9e8cd8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55ee8c9e8ca0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55ee8c9e8c88 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8c9e8938 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55ee8c587408 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55ee8c9e88b0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55ee8c9e5b98
|       | `-CXXThisExpr 0x55ee8c9e88a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55ee8c9e8920 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55ee8c9e88f0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55ee8c9e5210 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55ee8c9e9048 <col:42, line:310:5>
|   |-IfStmt 0x55ee8c9e8e90 <line:306:2, line:307:23>
|   | |-CallExpr 0x55ee8c9e8dc0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55ee8c9e8da8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55ee8c9e8d48 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55ee8c8914b0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55ee8c9e8e80 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55ee8c9e8e68 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55ee8c9e8e38 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55ee8c9e8e20 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55ee8c9e8df0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55ee8c9e9038 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55ee8c9e9020 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55ee8c9e8ff0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c9e8fd8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55ee8c9e8f98 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55ee8c9e8f80 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55ee8c9e8f50 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55ee8c873650 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55ee8c9e8fc0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55ee8c9e8f30 <col:30> 'int' 500
|-CXXMethodDecl 0x55ee8c9e5350 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ee8c9e52c0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c9e53f8 <col:69> "" ""
|-CXXMethodDecl 0x55ee8c9e5508 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ee8c9e5478 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c9e55b0 <col:70> "" ""
|-CXXMethodDecl 0x55ee8c9e56c0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ee8c9e5630 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c9e5768 <col:71> "" ""
|-CXXMethodDecl 0x55ee8c9e5878 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55ee8c9e57e8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55ee8c9e5920 <col:72> "" ""
|-EnumDecl 0x55ee8c9e5990 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55ee8c9e5a90 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55ee8c9e5ae0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55ee8c9e5a70 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55ee8c9e5a50 <col:25> 'int' 1
|-AccessSpecDecl 0x55ee8c9e5af8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55ee8c9e5b38 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55ee8c9e5b98 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55ee8c9e5be8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55ee8c9e5d18 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55ee8c9e6808 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55ee8c9e5dd8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55ee8c9e5e58 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55ee8c9e5eb8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55ee8c9e5f18 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55ee8c9e6068 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55ee8c9e5f78 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55ee8c9e6238 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55ee8c9e6120 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55ee8c9e61a0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55ee8c9e6410 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55ee8c9e62f8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55ee8c9e6378 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55ee8c9e65e8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55ee8c9e64d0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55ee8c9e6550 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55ee8c9e67b8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c9fe3a0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55ee8cb593b8 <line:167:18>
|-CXXRecordDecl 0x55ee8cb59478 prev 0x55ee8c9fe3a0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55ee8cb59588 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class String>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class String * _ptr
        24 |   class String _slot
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class StringArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class String> (empty)
         0 |   class StringArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9abda8 <../dummy_inc/click/args.hh:1345:1, line:1349:1> line:1345:7 referenced class StringArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c9abec8 <col:1, col:7> col:7 implicit class StringArg
|-AccessSpecDecl 0x55ee8c9abf58 <col:19, col:25> col:19 public
|-CXXMethodDecl 0x55ee8c9ac150 <line:1346:5, line:1348:5> line:1346:17 used parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x55ee8c9abf90 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55ee8c9ac008 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x55ee8c9ac080 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55ee8c9ac220 <col:79> 'const ArgContext' lvalue Var 0x55ee8c98fce8 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55ee8c9ac3c0 <col:91, line:1348:5>
|   `-ReturnStmt 0x55ee8c9ac3b0 <line:1347:9, col:41>
|     `-CallExpr 0x55ee8c9ac360 <col:16, col:41> 'bool'
|       |-ImplicitCastExpr 0x55ee8c9ac348 <col:16> 'bool (*)(const String &, String *, String *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55ee8c9ac300 <col:16> 'bool (const String &, String *, String *)' lvalue Function 0x55ee8c9abcf0 'cp_string' 'bool (const String &, String *, String *)'
|       |-DeclRefExpr 0x55ee8c9ac288 <col:26> 'const String' lvalue ParmVar 0x55ee8c9abf90 'str' 'const String &'
|       |-UnaryOperator 0x55ee8c9ac2c8 <col:31, col:32> 'String *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55ee8c9ac2a8 <col:32> 'String' lvalue ParmVar 0x55ee8c9ac008 'result' 'String &'
|       `-ImplicitCastExpr 0x55ee8c9ac398 <col:40> 'String *' <NullToPointer>
|         `-IntegerLiteral 0x55ee8c9ac2e0 <col:40> 'int' 0
|-CXXConstructorDecl 0x55ee8cb62008 <line:1345:7> col:7 implicit constexpr StringArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55ee8cb620e0 <col:7> col:7 implicit ~StringArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55ee8cb62218 <col:7> col:7 implicit constexpr StringArg 'void (const StringArg &)' inline default trivial noexcept-unevaluated 0x55ee8cb62218
| `-ParmVarDecl 0x55ee8cb62328 <col:7> col:7 'const StringArg &'
`-CXXConstructorDecl 0x55ee8cb623c8 <col:7> col:7 implicit used constexpr StringArg 'void (StringArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55ee8cb624d8 <col:7> col:7 'StringArg &&'
  `-CompoundStmt 0x55ee8cb63130 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.StringArg = type { i8 }
  NonVirtualBaseLLVMType:%class.StringArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c9ac400 <../dummy_inc/click/args.hh:1351:1, col:58> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'StringArg'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55ee8c9ac658 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55ee8cb61f18 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55ee8cb62548 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<String> &)' inline default trivial noexcept-unevaluated 0x55ee8cb62548
| `-ParmVarDecl 0x55ee8cb62658 <col:19> col:19 'const DefaultArg<String> &'
|-CXXConstructorDecl 0x55ee8cb626f8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<String> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8cb62808 <col:19> col:19 used 'DefaultArg<String> &&'
| |-CXXCtorInitializer 'StringArg'
| | `-CXXConstructExpr 0x55ee8cb63140 <col:19> 'StringArg' 'void (StringArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55ee8cb63110 <col:19> 'StringArg' xvalue <UncheckedDerivedToBase (StringArg)>
| |     `-CXXStaticCastExpr 0x55ee8cb630e0 <col:19> 'DefaultArg<String>' xvalue static_cast<struct DefaultArg<class String> &&> <NoOp>
| |       `-DeclRefExpr 0x55ee8cb630b0 <col:19> 'DefaultArg<String>' lvalue ParmVar 0x55ee8cb62808 '' 'DefaultArg<String> &&'
| `-CompoundStmt 0x55ee8cb631b0 <col:19>
`-CXXDestructorDecl 0x55ee8cb628a8 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8cb63e78 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55ee8cb64278 prev 0x55ee8cb63e78 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x55ee8cb64470 <line:852:9, line:854:9> line:852:9 used SlotT 'void (String *)'
| |-ParmVarDecl 0x55ee8cb64378 <col:15, col:18> col:18 used ptr 'String *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x55ee8cb653b8 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x55ee8cb645f0 '_ptr' 'String *'
| | `-ImplicitCastExpr 0x55ee8cb65378 <line:853:20> 'String *' <LValueToRValue>
| |   `-DeclRefExpr 0x55ee8cb65338 <col:20> 'String *' lvalue ParmVar 0x55ee8cb64378 'ptr' 'String *'
| |-CXXCtorInitializer Field 0x55ee8cb64650 '_slot' 'String':'String'
| | `-CXXConstructExpr 0x55ee8cb65418 <line:852:9> 'String':'String' 'void ()'
| `-CompoundStmt 0x55ee8c98fb10 <line:853:25, line:854:9>
|-CXXMethodDecl 0x55ee8cb64530 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x55ee8c969d50 Slot::store 'void ()' ]
| `-CompoundStmt 0x55ee8cb65b58 <col:22, line:857:9>
|   `-CallExpr 0x55ee8cb65b10 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x55ee8cb65af8 <col:13> 'void (*)(String &, const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55ee8cb65a78 <col:13> 'void (String &, const String &)' lvalue Function 0x55ee8cb65958 'assign_consume' 'void (String &, const String &)' (FunctionTemplate 0x55ee8c63f6e8 'assign_consume')
|     |-UnaryOperator 0x55ee8cb655a8 <col:28, col:29> 'String':'String' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x55ee8cb65590 <col:29> 'String *' <LValueToRValue>
|     |   `-MemberExpr 0x55ee8cb65560 <col:29> 'String *' lvalue ->_ptr 0x55ee8cb645f0
|     |     `-CXXThisExpr 0x55ee8cb65550 <col:29> 'Args::SlotT<String> *' implicit this
|     `-ImplicitCastExpr 0x55ee8cb65b40 <col:35> 'const String':'const String' lvalue <NoOp>
|       `-MemberExpr 0x55ee8cb655d0 <col:35> 'String':'String' lvalue ->_slot 0x55ee8cb64650
|         `-CXXThisExpr 0x55ee8cb655c0 <col:35> 'Args::SlotT<String> *' implicit this
|-FieldDecl 0x55ee8cb645f0 <line:858:9, col:12> col:12 referenced _ptr 'String *'
|-FieldDecl 0x55ee8cb64650 <line:859:9, col:11> col:11 referenced _slot 'String':'String'
|-CXXConstructorDecl 0x55ee8cb646c8 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x55ee8cb646c8
| `-ParmVarDecl 0x55ee8cb647d8 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXConstructorDecl 0x55ee8cb64878 <col:12> col:12 implicit SlotT 'void (Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x55ee8cb64878
| `-ParmVarDecl 0x55ee8cb64988 <col:12> col:12 'Args::SlotT<String> &&'
|-CXXMethodDecl 0x55ee8cb64a28 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x55ee8cb64a28
| `-ParmVarDecl 0x55ee8cb64b38 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXMethodDecl 0x55ee8cb64ba8 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x55ee8cb64ba8
| `-ParmVarDecl 0x55ee8cb64cb8 <col:12> col:12 'Args::SlotT<String> &&'
`-CXXDestructorDecl 0x55ee8cb64d40 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x55ee8c969c50 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x55ee8cb65480 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55ee8c9a7ac0 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55ee8c9a7bd8 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x55ee8c9a7c68 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55ee8c9a7ea8 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x55ee8c9a7ca0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55ee8c9a7d20 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x55ee8c9a7d98 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55ee8c9a80c0 <col:81> 'const ArgContext' lvalue Var 0x55ee8c98fce8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55ee8c9a8000 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x55ee8c9a7f70 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x55ee8c9a8218 <col:35, line:1261:5>
|   `-ReturnStmt 0x55ee8c9a8208 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x55ee8c9a81f0 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x55ee8c9a81c0 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55ee8c9a81a8 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x55ee8c9a8180 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x55ee8c9a8160 <col:16, col:24> 'String' (CXXTemporary 0x55ee8c9a8160)
|               `-CXXConstructExpr 0x55ee8c9a8128 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x55ee8c9a8110 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55ee8c9a80f0 <col:23> 'bool' lvalue ParmVar 0x55ee8c9a7f70 'x' 'bool'
|-CXXConstructorDecl 0x55ee8cb6d7e8 <line:1257:7> col:7 implicit constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55ee8cb6d8c0 <col:7> col:7 implicit ~BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55ee8cb6d9f8 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x55ee8cb6d9f8
| `-ParmVarDecl 0x55ee8cb6db08 <col:7> col:7 'const BoolArg &'
`-CXXConstructorDecl 0x55ee8cb6dba8 <col:7> col:7 implicit used constexpr BoolArg 'void (BoolArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55ee8cb6dcb8 <col:7> col:7 'BoolArg &&'
  `-CompoundStmt 0x55ee8cb6e910 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55ee8c9a8258 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x55ee8c9a84b8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55ee8cb6d6f8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55ee8cb6dd28 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x55ee8cb6dd28
| `-ParmVarDecl 0x55ee8cb6de38 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x55ee8cb6ded8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55ee8cb6dfe8 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x55ee8cb6e920 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55ee8cb6e8f0 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x55ee8cb6e8c0 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x55ee8cb6e890 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x55ee8cb6dfe8 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x55ee8cb6e990 <col:19>
`-CXXDestructorDecl 0x55ee8cb6e088 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.21 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.21 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
