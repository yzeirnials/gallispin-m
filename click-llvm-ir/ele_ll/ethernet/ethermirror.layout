
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec8e0918 prev 0x5606ec8d80b8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5606ec8e0a10 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5606ec8e0aa0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5606ec8e0b18 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5606ec8e0bd8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5606ec8e0ca0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5606ec8e0e18 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5606ec8e0d50 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5606ec8e0ec0 <col:24>
| `-OptimizeNoneAttr 0x5606ec8e0f18 <col:34>
|-CXXMethodDecl 0x5606ec8e0f60 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5606ec8e1218 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5606ec8e1010 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5606ec8e1088 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5606ec8e1108 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5606ec8e12d0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5606ec8e1308 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5606ec8e1370 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5606ec8e13f8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5606ec8e1718 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5606ec8e14b0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5606ec8e1528 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5606ec8e15a0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5606ec8e1620 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5606ec8e1830 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5606ec8e91a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5606ec8e91a8
| `-ParmVarDecl 0x5606ec8e92b8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5606ec8e9358 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5606ec8e9358
| `-ParmVarDecl 0x5606ec8e9468 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5606ec8ef648 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec8d3930 prev 0x5606ec8d36b0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5606ec8d3a28 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5606ec8d3ab8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5606ec8d3b18 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5606ec8d3c08 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5606ec8d3d08 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5606ec8d3ed8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5606ec8d3d88 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5606ec8d3e00 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5606ec8d4068 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5606ec8d3fa0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5606ec8d4110 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5606ec8d4248 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5606ec8d4180 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5606ec8d43e8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5606ec8d4328 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5606ec8d4588 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5606ec8d44c8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5606ec8d4630 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5606ec8d4730 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5606ec8d4810 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8d4710 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5606ec8d46f0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5606ec8d47c0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5606ec8d4828 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec8d47a0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5606ec8d4780 <col:44> 'int' 2
|-CXXMethodDecl 0x5606ec8d4970 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5606ec8d4858 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5606ec8d48d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5606ec8d4ac8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5606ec8d4a38 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5606ec8d4d08 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5606ec8d4b88 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5606ec8d4c00 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5606ec8d4db8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8d4e10 <col:30>
|-CXXMethodDecl 0x5606ec8d4f18 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5606ec8d4e50 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5606ec8d4fc0 <col:20>
| `-OptimizeNoneAttr 0x5606ec8d5018 <col:30>
|-CXXMethodDecl 0x5606ec8d5068 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5606ec8d5130 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5606ec8d5248 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5606ec8d52d0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5606ec8d5358 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5606ec8d53e0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x5606ec8d5468 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5606ec8d54f8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5606ec8d55b8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5606ec8d5640 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5606ec8d56c8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5606ec8d5750 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5606ec8d57d8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5606ec8d5860 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5606ec8d58f0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5606ec8d59b0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5606ec8d5a40 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5606ec8d5b90 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5606ec8d5af8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5606ec8d5d20 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5606ec8d5c50 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5606ec8d5fd0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5606ec8d5dd8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5606ec8d5e58 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5606ec8d5ed8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5606ec8d6088 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5606ec8d6190 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5606ec8d6420 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8d6170 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5606ec8d6150 <col:33> 'int' 0
| |-EnumConstantDecl 0x5606ec8d6220 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5606ec8d6438 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8d6200 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5606ec8d61e0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5606ec8d62b0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5606ec8d6450 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8d6290 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5606ec8d6270 <col:38> 'int' 90
| |-EnumConstantDecl 0x5606ec8d6340 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5606ec8d6468 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8d6320 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5606ec8d6300 <col:35> 'int' 100
| `-EnumConstantDecl 0x5606ec8d63d0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5606ec8d6480 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec8d63b0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5606ec8d6390 <col:32> 'int' 2000
|-CXXMethodDecl 0x5606ec8d64c0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5606ec8d6900 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5606ec8d6770 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5606ec8d67e8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5606ec8d69d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5606ec8d6b50 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5606ec8d6a80 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5606ec8d6d58 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5606ec8d6c08 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5606ec8d6c80 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5606ec8d6e58 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5606ec8d6ef8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5606ec8d6fc0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5606ec8d7050 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5606ec8d7280 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8d7030 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5606ec8d7010 <col:36> 'int' EnumConstant 0x5606ec8d6fc0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5606ec8d70a0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5606ec8d70f0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5606ec8d7140 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5606ec8d7190 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5606ec8d71e0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5606ec8d7230 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5606ec8d7368 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5606ec8d72a8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5606ec8d7430 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5606ec8d74f0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5606ec8d75b0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5606ec8d7670 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5606ec8d7788 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5606ec8d7850 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5606ec8d79d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5606ec8d7900 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5606ec8d7af8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5606ec8d7cf8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5606ec8d7ba8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5606ec8d7c28 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5606ec8e5648 <col:54, line:127:5>
|   |-ParenExpr 0x5606ec8e54f8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5606ec8e54c8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8e51b8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5606ec8e5190 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5606ec8e5178 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5606ec8e5160 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5606ec8e5130 <col:31> 'Router *' lvalue ->_router 0x5606ec8e3010
|   |   |         `-CXXThisExpr 0x5606ec8e5120 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5606ec8e5218 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8e51f8 <col:48> 'int' 0
|   |   `-CallExpr 0x5606ec8e5428 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8e5410 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8e53f0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8e5468 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8e5288 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5606ec8e5480 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8e52a8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5606ec8e5498 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8e52e0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5606ec8e54b0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8e53d8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8e53c0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8e5378 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5606ec8e5590 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5606ec8e5528 <col:9> 'Router *' lvalue ->_router 0x5606ec8e3010
|   | | `-CXXThisExpr 0x5606ec8e5518 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5606ec8e5578 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5606ec8e5558 <col:19> 'Router *' lvalue ParmVar 0x5606ec8d7ba8 'r' 'Router *'
|   `-BinaryOperator 0x5606ec8e5628 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5606ec8e55c0 <col:9> 'int' lvalue ->_eindex 0x5606ec8e3078
|     | `-CXXThisExpr 0x5606ec8e55b0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5606ec8e5610 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5606ec8e55f0 <col:19> 'int' lvalue ParmVar 0x5606ec8d7c28 'eindex' 'int'
|-CXXMethodDecl 0x5606ec8d7e80 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5606ec8d7db8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5606ec8d7f50 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5606ec8d8018 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5606ec8d80b8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5606ec8d8308 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5606ec8d8180 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5606ec8d8200 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5606ec8d83b8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8d8410 <col:30>
|-CXXMethodDecl 0x5606ec8d8518 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5606ec8d8450 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5606ec8d85c0 <col:20>
| `-OptimizeNoneAttr 0x5606ec8d8618 <col:30>
|-CXXMethodDecl 0x5606ec8d86e8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5606ec8d8658 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5606ec8d8790 <col:20>
| `-OptimizeNoneAttr 0x5606ec8d87e8 <col:30>
|-CXXMethodDecl 0x5606ec8d8978 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5606ec8d8820 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5606ec8d88a0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5606ec8d8b08 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5606ec8d8a40 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5606ec8d8c58 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5606ec8d8bc8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5606ec8d8da8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5606ec8d8d18 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5606ec8d8ef8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5606ec8d8e68 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5606ec8d91b8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5606ec8d8fb0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5606ec8d9030 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5606ec8d90d8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5606ec8d9290 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5606ec8d9350 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5606ec8d9620 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5606ec8d94d0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5606ec8d9548 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5606ec8d9748 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5606ec8d9920 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5606ec8d9800 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5606ec8d9880 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5606ec8d9b08 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5606ec8d99e8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5606ec8d9a68 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5606ec8d9e78 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5606ec8d9bc8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5606ec8d9c40 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5606ec8d9cc0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5606ec8e4c30 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5606ec8e4c10 <col:106> 'int' 0
| `-ParmVarDecl 0x5606ec8d9d38 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5606ec8e4c68 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5606ec8e4c48 <col:126> 'int' 0
|-CXXMethodDecl 0x5606ec8da218 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5606ec8d9f48 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5606ec8d9fe0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5606ec8da060 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5606ec8da0d8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5606ec8e4ca0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5606ec8e4c80 <col:114> 'int' 0
|-CXXMethodDecl 0x5606ec8da5a8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5606ec8da2f0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5606ec8da368 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5606ec8da3e8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5606ec8e4cb8 <col:96> 'int' 0
| `-ParmVarDecl 0x5606ec8da460 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5606ec8e4cf8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5606ec8e4cd8 <col:116> 'int' 0
|-CXXMethodDecl 0x5606ec8da928 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5606ec8da678 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5606ec8da6f0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5606ec8da770 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5606ec8e4d30 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5606ec8e4d10 <col:109> 'int' 0
| `-ParmVarDecl 0x5606ec8da7e8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5606ec8e4d68 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5606ec8e4d48 <col:129> 'int' 0
|-CXXMethodDecl 0x5606ec8daca8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5606ec8da9f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5606ec8daa70 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5606ec8daaf0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5606ec8dab68 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5606ec8e4da0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5606ec8e4d80 <col:117> 'int' 0
|-CXXMethodDecl 0x5606ec8db038 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5606ec8dad80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8dadf8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5606ec8dae78 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5606ec8e4db8 <col:99> 'int' 0
| `-ParmVarDecl 0x5606ec8daef0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5606ec8e4df8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5606ec8e4dd8 <col:119> 'int' 0
|-CXXMethodDecl 0x5606ec8db458 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5606ec8db108 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5606ec8db188 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5606ec8db200 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5606ec8db280 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5606ec8e4e30 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5606ec8e4e10 <col:108> 'int' 0
| `-ParmVarDecl 0x5606ec8db300 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5606ec8e4e68 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5606ec8e4e48 <col:141> 'int' 0
|-CXXMethodDecl 0x5606ec8db878 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5606ec8db530 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5606ec8db5b0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5606ec8db628 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5606ec8db6a8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5606ec8db728 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5606ec8e4e80 <col:121> 'int' 0
|-CXXMethodDecl 0x5606ec8dbca8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5606ec8db958 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5606ec8db9d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5606ec8dba50 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5606ec8dbad0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5606ec8e4ea0 <col:98> 'int' 0
| `-ParmVarDecl 0x5606ec8dbb50 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5606ec8e4ec0 <col:123> 'int' 0
|-CXXMethodDecl 0x5606ec8dbf70 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5606ec8dbd80 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5606ec8dbe00 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5606ec8dbe80 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5606ec8e4ee0 <col:80> 'int' 0
|-EnumDecl 0x5606ec8dc028 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5606ec8dc130 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5606ec8dc3c0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8dc110 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5606ec8dc0f0 <col:42> 'int' 1
| |-EnumConstantDecl 0x5606ec8dc1c0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5606ec8dc3d8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8dc1a0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5606ec8dc180 <col:40> 'int' 2
| |-EnumConstantDecl 0x5606ec8dc250 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5606ec8dc3f0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8dc230 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5606ec8dc210 <col:44> 'int' 4
| |-EnumConstantDecl 0x5606ec8dc2e0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5606ec8dc408 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8dc2c0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5606ec8dc2a0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5606ec8dc370 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5606ec8dc420 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec8dc350 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5606ec8dc330 <col:34> 'int' 6
|-CXXMethodDecl 0x5606ec8dc6d8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5606ec8dc448 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5606ec8dc4e8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5606ec8dc568 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5606ec8dc5e0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5606ec8e4f98 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5606ec8e4f80 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5606ec8e4f68 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5606ec8e4f48 <col:98, col:105> 'String' (CXXTemporary 0x5606ec8e4f48)
|           `-CXXTemporaryObjectExpr 0x5606ec8e4f10 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5606ec8dc978 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5606ec8dc7a8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5606ec8dc820 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5606ec8dc898 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5606ec8e5048 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5606ec8e5030 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5606ec8e5018 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5606ec8e4ff8 <col:94, col:101> 'String' (CXXTemporary 0x5606ec8e4ff8)
| |         `-CXXTemporaryObjectExpr 0x5606ec8e4fc0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5606ec8e5830 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5606ec8e57a8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5606ec8e5778 <col:9> '<bound member function type>' ->add_task_handlers 0x5606ec8dc6d8
|     | `-CXXThisExpr 0x5606ec8e5768 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5606ec8e57e8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5606ec8e56e8 <col:27> 'Task *' lvalue ParmVar 0x5606ec8dc7a8 'task' 'Task *'
|     |-ImplicitCastExpr 0x5606ec8e5800 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5606ec8e5708 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5606ec8dc820 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5606ec8e5818 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5606ec8e5728 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5606ec8dc370 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5606ec8e5748 <col:62> 'const String' lvalue ParmVar 0x5606ec8dc898 'prefix' 'const String &'
|-CXXMethodDecl 0x5606ec8dcb88 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5606ec8dca40 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5606ec8dcab8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5606ec8e50f8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5606ec8e50e0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5606ec8e50c8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5606ec8e50a8 <col:70, col:77> 'String' (CXXTemporary 0x5606ec8e50a8)
| |         `-CXXTemporaryObjectExpr 0x5606ec8e5070 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5606ec8e5a08 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5606ec8e5980 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5606ec8e5950 <col:9> '<bound member function type>' ->add_task_handlers 0x5606ec8dc6d8
|     | `-CXXThisExpr 0x5606ec8e5940 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5606ec8e59c0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5606ec8e58c0 <col:27> 'Task *' lvalue ParmVar 0x5606ec8dca40 'task' 'Task *'
|     |-ImplicitCastExpr 0x5606ec8e59d8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5606ec8e58e0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5606ec8e59f0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5606ec8e5900 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5606ec8dc370 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5606ec8e5920 <col:57> 'const String' lvalue ParmVar 0x5606ec8dcab8 'prefix' 'const String &'
|-CXXMethodDecl 0x5606ec8dce68 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5606ec8dcc50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8dccd0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8dcd48 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5606ec8dd118 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5606ec8dcf38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8dcfb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8dd038 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5606ec8dd408 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5606ec8dd1e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8dd268 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8dd2e0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5606ec8dd6b8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5606ec8dd4d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8dd558 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8dd5d8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5606ec8dd968 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5606ec8dd788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8dd808 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8dd888 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5606ec8ddc18 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5606ec8dda38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8ddab8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8ddb30 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5606ec8ddec8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5606ec8ddce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8ddd68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8ddde8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5606ec8de1d8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5606ec8ddff0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8de070 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8de0f0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5606ec8de4b8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5606ec8de2a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8de328 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8de3d0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5606ec8de798 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5606ec8de588 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8de608 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8de6b0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5606ec8dea00 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5606ec8de868 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5606ec8de8e8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5606ec8de960 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5606ec8deca8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5606ec8dead0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5606ec8deb50 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5606ec8debc8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5606ec8def58 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5606ec8ded78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8dedf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8dee78 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5606ec8df208 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5606ec8df028 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8df0a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8df120 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5606ec8df4b8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5606ec8df2d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8df358 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8df3d0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5606ec8df788 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5606ec8df588 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8df608 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5606ec8df6a8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5606ec8dfab8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5606ec8df858 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5606ec8df8d8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5606ec8df950 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5606ec8df9c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5606ec8e5110 <col:93> 'bool' false
|-CXXMethodDecl 0x5606ec8dfca0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5606ec8dfb88 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5606ec8dfc08 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5606ec8dfe78 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5606ec8dfd60 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5606ec8dfde0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5606ec8e0158 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5606ec8dff38 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5606ec8dffb0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5606ec8e0030 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5606ec8e00a8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5606ec8e0448 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5606ec8e0228 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5606ec8e02a0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5606ec8e0320 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5606ec8e0398 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5606ec8e0680 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5606ec8e0520 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5606ec8e05a0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5606ec8e0868 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5606ec8e0748 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5606ec8e07c8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5606ec8e0918 prev 0x5606ec8d80b8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5606ec8e0a10 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5606ec8e0aa0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5606ec8e0b18 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5606ec8e0bd8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5606ec8e0ca0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5606ec8e0e18 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5606ec8e0d50 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5606ec8e0ec0 <col:24>
| | `-OptimizeNoneAttr 0x5606ec8e0f18 <col:34>
| |-CXXMethodDecl 0x5606ec8e0f60 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5606ec8e1218 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5606ec8e1010 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5606ec8e1088 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5606ec8e1108 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5606ec8e12d0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5606ec8e1308 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5606ec8e1370 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5606ec8e13f8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5606ec8e1718 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5606ec8e14b0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5606ec8e1528 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5606ec8e15a0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5606ec8e1620 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5606ec8e1830 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5606ec8e91a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5606ec8e91a8
| | `-ParmVarDecl 0x5606ec8e92b8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5606ec8e9358 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5606ec8e9358
| | `-ParmVarDecl 0x5606ec8e9468 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5606ec8ef648 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5606ec8e18a8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5606ec8e1948 <col:38> "" ""
|-CXXMethodDecl 0x5606ec8e19d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5606ec8e1a78 <col:44> "" ""
|-AccessSpecDecl 0x5606ec8e1ae8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5606ec8e1b10 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5606ec8e1c10 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5606ec8e1c60 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec8e1bf0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5606ec8e1bd0 <col:27> 'int' 4
|-FieldDecl 0x5606ec8e1d18 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5606ec8e1ec8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5606ec8e1f80 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5606ec8e3010 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5606ec8e3078 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5606ec8e31c8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5606ec8e3108 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5606ec8e3378 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5606ec8e3288 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5606ec8e3558 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5606ec8e3438 <col:20> col:23 'int'
| `-ParmVarDecl 0x5606ec8e34b8 <col:25> col:28 'int'
|-CXXMethodDecl 0x5606ec8e3800 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5606ec8e3620 <col:23> col:26 'int'
| |-ParmVarDecl 0x5606ec8e36a0 <col:28> col:31 'int'
| `-ParmVarDecl 0x5606ec8e3718 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5606ec8e38b8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5606ec8e3980 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5606ec8e39d0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5606ec8e3a20 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5606ec8e3c00 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5606ec8e3ab0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5606ec8e3b28 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5606ec8e3ea8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5606ec8e3cc8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5606ec8e3d48 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5606ec8e3dc0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5606ec8e40c8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5606ec8e3f78 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5606ec8e3ff8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5606ec8e4400 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5606ec8e4188 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5606ec8e4208 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5606ec8e4280 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5606ec8e4300 <col:57> col:60 'int'
|-CXXMethodDecl 0x5606ec8e45e8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5606ec8e44d0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5606ec8e4550 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5606ec8e4738 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5606ec8e46a8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5606ec8e4ab8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5606ec8e47f8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5606ec8e4878 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5606ec8e48f0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5606ec8e4970 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5606ec8e4bd0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class EtherMirror
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec8ec318 <../elements/ethernet/ethermirror.hh:17:1, line:27:1> line:17:7 class EtherMirror definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5606ec8ec478 <col:1, col:7> col:7 implicit referenced class EtherMirror
|-AccessSpecDecl 0x5606ec8ec508 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x5606ec8ec590 <line:19:3, col:15> col:3 EtherMirror 'void ()'
|-CXXDestructorDecl 0x5606ec8ec680 <line:20:3, col:16> col:3 ~EtherMirror 'void ()' noexcept-unevaluated 0x5606ec8ec680
| `-Overrides: [ 0x5606ec8d3c08 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x5606ec8ec7b0 <line:22:3, col:58> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x5606ec8d5068 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5606ec8ece08 <col:34, col:58>
|   `-ReturnStmt 0x5606ec8ecdf8 <col:36, col:43>
|     `-ImplicitCastExpr 0x5606ec8ecde0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5606ec8ecdb8 <col:43> 'const char [12]' lvalue "EtherMirror"
|-CXXMethodDecl 0x5606ec8ec878 <line:23:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x5606ec8d5130 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5606ec8ece68 <col:34, col:54>
|   `-ReturnStmt 0x5606ec8ece58 <col:36, col:43>
|     `-ImplicitCastExpr 0x5606ec8ece40 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5606ec8ece20 <col:43> 'const char []' lvalue Var 0x5606ec8d53e0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x5606ec8ec9b8 <line:25:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x5606ec8d4248 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x5606ec8ec928 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x5606ec8eca88 <line:17:7> col:7 implicit EtherMirror 'void (const EtherMirror &)' inline default_delete noexcept-unevaluated 0x5606ec8eca88
| `-ParmVarDecl 0x5606ec8ecb98 <col:7> col:7 'const EtherMirror &'
`-CXXMethodDecl 0x5606ec8ecc38 <col:7> col:7 implicit operator= 'EtherMirror &(const EtherMirror &)' inline default_delete noexcept-unevaluated 0x5606ec8ecc38
  `-ParmVarDecl 0x5606ec8ecd48 <col:7> col:7 'const EtherMirror &'

Layout: <CGRecordLayout
  LLVMType:%class.EtherMirror = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.EtherMirror.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec6923e0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5606ec6924f8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5606ec692588 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5606ec692658 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5606ec692740 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5606ec692958 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5606ec692800 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec692b08 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5606ec692a10 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5606ec692c50 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5606ec692bc0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5606ec692d98 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5606ec692d08 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec692ee0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5606ec692e50 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec692fa8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5606ec6930f0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5606ec693060 <col:28> col:31 'int'
|-CXXMethodDecl 0x5606ec6931b8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5606ec693300 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5606ec693270 <col:28> col:31 'int'
|-CXXMethodDecl 0x5606ec693478 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5606ec6933b8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec6935c0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5606ec693530 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec693688 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5606ec693848 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5606ec693738 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5606ec6937b0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec693a98 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5606ec693908 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5606ec693980 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5606ec693b48 <col:86> "" ""
|-CXXMethodDecl 0x5606ec693db8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5606ec693c28 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5606ec693ca0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec693f68 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5606ec693e78 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5606ec694118 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5606ec694020 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5606ec6943e8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5606ec6941d0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5606ec694248 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5606ec6942c0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec6946c8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5606ec6944b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5606ec694528 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5606ec6945a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5606ec694780 <col:115> "" ""
|-AccessSpecDecl 0x5606ec6947f0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5606ec694828 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec695d40 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5606ec695d40
| `-ParmVarDecl 0x5606ec695e48 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5606ec695ee8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5606ec695ee8
| `-ParmVarDecl 0x5606ec695ff8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5606ec6cb628 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5606ec8bd420 <col:7>
|-CXXConstructorDecl 0x5606ec6cb700 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5606ec6cb700
| `-ParmVarDecl 0x5606ec6cb818 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5606ec6cb888 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5606ec6cb888
| `-ParmVarDecl 0x5606ec6cb998 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5606ec8bfe20 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec8abfc8 prev 0x5606ec8a11d0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5606ec8ac0c0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5606ec8ac1b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5606ec8ac2d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5606ec8ac458 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5606ec8ac5d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5606ec8ac758 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5606ec8bd588 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5606ec8bddf8 <col:11>
|-CXXDestructorDecl 0x5606ec8bd660 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5606ec8bd798 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5606ec8bd798
| `-ParmVarDecl 0x5606ec8bd8a8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5606ec8bd948 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5606ec8bd948
| `-ParmVarDecl 0x5606ec8bda58 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5606ec8c0818 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5606ec8c0928 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5606ec8c0ba8 <col:11>
|   `-ReturnStmt 0x5606ec8c0b98 <col:11>
|     `-UnaryOperator 0x5606ec8c0b80 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5606ec8c0b70 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5606ec8c0998 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5606ec8c0998
  `-ParmVarDecl 0x5606ec8c0aa8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec8ac7c0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5606ec8ac8d8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5606ec8ac978 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5606ec8ac9e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5606ec8aca48 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5606ec8acab0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5606ec8acb10 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5606ec8acbd0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5606ec8acc30 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5606ec8acc90 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5606ec8bd498 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5606ec8ac978 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5606ec8bde08 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5606ec8bde60 <col:12>
|-CXXConstructorDecl 0x5606ec8bdac8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5606ec8bdac8
| `-ParmVarDecl 0x5606ec8bdbd8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5606ec8bdc78 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5606ec8bdc78
| `-ParmVarDecl 0x5606ec8bdd88 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5606ec8bff00 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec89a8e0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5606ec89a9f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5606ec89aa88 <col:16, col:22> col:16 public
|-EnumDecl 0x5606ec89aab0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5606ec89abb0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5606ec89ac90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec89ab90 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5606ec89ab70 <col:21> 'int' 28
| `-EnumConstantDecl 0x5606ec89ac40 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5606ec89aca8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec89ac20 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5606ec89ac00 <col:22> 'int' 64
|-CXXMethodDecl 0x5606ec89afe8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5606ec89acd0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5606ec89ad50 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5606ec89adc8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5606ec89ae40 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5606ec89b0a8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89b2a8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5606ec89b120 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5606ec89b198 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5606ec89b358 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89b4b8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5606ec89b3c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5606ec89b560 <col:72> warn_unused_result ""
|-TypedefDecl 0x5606ec89b8c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5606ec89b850 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5606ec89b7f0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5606ec89b7b0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5606ec3742d0 'void'
|       |-PointerType 0x5606ec61ac80 'unsigned char *'
|       | `-BuiltinType 0x5606ec3743d0 'unsigned char'
|       |-TypedefType 0x5606ec4171f0 'size_t' sugar
|       | |-Typedef 0x5606ec3e4b20 'size_t'
|       | `-BuiltinType 0x5606ec374430 'unsigned long'
|       `-PointerType 0x5606ec374ad0 'void *'
|         `-BuiltinType 0x5606ec3742d0 'void'
|-CXXMethodDecl 0x5606ec89bd38 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5606ec89b930 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5606ec89b9a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5606ec89ba40 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5606ec89bac0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5606ec8b6430 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5606ec8b6418 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5606ec8b63e0 <col:58> 'int' 0
| |-ParmVarDecl 0x5606ec89bb40 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5606ec8b6458 <col:76> 'int' 0
| |-ParmVarDecl 0x5606ec89bbc0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5606ec8b6478 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5606ec89be08 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89be88 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5606ec89bf48 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5606ec89bfe8 <col:20>
| `-OptimizeNoneAttr 0x5606ec89c040 <col:30>
|-CXXMethodDecl 0x5606ec89c0b8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5606ec89c158 <col:20>
| `-OptimizeNoneAttr 0x5606ec89c1b0 <col:30>
|-CXXMethodDecl 0x5606ec89c228 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5606ec89c2c8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89c378 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5606ec89c418 <col:20>
| |-OptimizeNoneAttr 0x5606ec89c470 <col:30>
| `-WarnUnusedResultAttr 0x5606ec89c498 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89c4f0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5606ec89c590 <col:20>
| `-OptimizeNoneAttr 0x5606ec89c5e8 <col:30>
|-CXXMethodDecl 0x5606ec89c638 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5606ec89c6d8 <col:20>
| `-OptimizeNoneAttr 0x5606ec89c730 <col:30>
|-CXXMethodDecl 0x5606ec89c778 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5606ec89c818 <col:20>
| `-OptimizeNoneAttr 0x5606ec89c870 <col:30>
|-CXXMethodDecl 0x5606ec89c8b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5606ec89c978 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5606ec89ca40 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5606ec89cb08 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5606ec89cbc8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5606ec89cce8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5606ec8b6540 <col:54, line:99:5>
|   `-ReturnStmt 0x5606ec8b6530 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5606ec8b6518 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5606ec8b64e8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5606ec8acfc8
|         `-CXXThisExpr 0x5606ec8b64d8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5606ec89ce88 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5606ec89cd98 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5606ec8b65f0 <col:67, line:103:5>
|   `-BinaryOperator 0x5606ec8b65d0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5606ec8b6568 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5606ec8acfc8
|     | `-CXXThisExpr 0x5606ec8b6558 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5606ec8b65b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5606ec8b6598 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5606ec89cd98 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5606ec89cf80 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5606ec8b6670 <col:33, line:107:5>
|   `-ReturnStmt 0x5606ec8b6660 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5606ec8b6648 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5606ec8b6618 <col:16> 'void *' lvalue ->_destructor_argument 0x5606ec8ad030
|         `-CXXThisExpr 0x5606ec8b6608 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5606ec89d040 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5606ec8b6ca0 <col:25, line:113:5>
|   |-ParenExpr 0x5606ec8b69e8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5606ec8b69b8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8b6728 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5606ec8b6700 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5606ec8b66c8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5606ec8b6698 <col:24> '<bound member function type>' ->shared 0x5606ec89c0b8
|   |   |       `-ImplicitCastExpr 0x5606ec8b66e8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5606ec8b6688 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5606ec8b6788 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8b6768 <col:42> 'int' 0
|   |   `-CallExpr 0x5606ec8b6918 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8b6900 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8b68e0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8b6958 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b67f8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5606ec8b6970 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b6820 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8b6988 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8b6858 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5606ec8b69a0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8b68c8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8b68b0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8b6878 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5606ec8b6be8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5606ec8b6a18 <col:2> 'unsigned char *' lvalue ->_head 0x5606ec8acdd0
|   | | `-CXXThisExpr 0x5606ec8b6a08 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5606ec8b6bd0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5606ec8b6bb0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5606ec8b6a58 <col:10> 'unsigned char *' lvalue ->_data 0x5606ec8ace38
|   |     | `-CXXThisExpr 0x5606ec8b6a48 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5606ec8b6b98 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5606ec8b6b78 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5606ec8b6a98 <col:18> 'unsigned char *' lvalue ->_tail 0x5606ec8acea0
|   |         | `-CXXThisExpr 0x5606ec8b6a88 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5606ec8b6b60 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5606ec8b6b40 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5606ec8b6ad8 <col:26> 'unsigned char *' lvalue ->_end 0x5606ec8acf08
|   |             | `-CXXThisExpr 0x5606ec8b6ac8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5606ec8b6b28 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5606ec8b6b08 <col:33> 'int' 0
|   `-BinaryOperator 0x5606ec8b6c80 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5606ec8b6c18 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5606ec8acfc8
|     | `-CXXThisExpr 0x5606ec8b6c08 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5606ec8b6c68 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5606ec8b6c48 <col:16> 'int' 0
|-CXXMethodDecl 0x5606ec89d180 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5606ec89d0f0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5606ec89d228 <col:20>
| |-OptimizeNoneAttr 0x5606ec89d280 <col:30>
| `-WarnUnusedResultAttr 0x5606ec89d2a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89d378 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5606ec89d2e8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5606ec89d420 <col:20>
| |-OptimizeNoneAttr 0x5606ec89d478 <col:30>
| `-WarnUnusedResultAttr 0x5606ec89d4a0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89d5d8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5606ec89d4e0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5606ec89d680 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89d780 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5606ec89d6f0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5606ec89d828 <col:20>
| `-OptimizeNoneAttr 0x5606ec89d880 <col:30>
|-CXXMethodDecl 0x5606ec89d948 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5606ec89d8b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5606ec89d9f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89daf0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5606ec89da60 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5606ec89db98 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89dc98 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5606ec89dc08 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5606ec89dd40 <col:20>
| `-OptimizeNoneAttr 0x5606ec89dd98 <col:30>
|-CXXMethodDecl 0x5606ec89df28 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5606ec89ddd8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5606ec89de50 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5606ec8b6498 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5606ec89dfd8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5606ec89e1d8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5606ec89e050 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5606ec89e0c8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec89e3e8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5606ec89e298 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5606ec89e310 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec89e5f8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5606ec89e4a8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5606ec89e528 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5606ec8b64a8 <col:39> 'int' 0
|-CXXMethodDecl 0x5606ec89e6c8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5606ec89e790 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5606ec89e858 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5606ec89e918 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5606ec89e9e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5606ec89eb28 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5606ec89ea98 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5606ec89ecf8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5606ec89ebe8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5606ec89ec60 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec89edc8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5606ec89ee88 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5606ec89ef28 <col:20>
| `-OptimizeNoneAttr 0x5606ec89ef80 <col:30>
|-CXXMethodDecl 0x5606ec89efd0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5606ec89f070 <col:20>
| `-OptimizeNoneAttr 0x5606ec89f0c8 <col:30>
|-CXXMethodDecl 0x5606ec89f118 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5606ec89f1d8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5606ec89f2a0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5606ec89f340 <col:20>
| `-OptimizeNoneAttr 0x5606ec89f398 <col:30>
|-CXXMethodDecl 0x5606ec89f4e8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5606ec89f3d8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5606ec89f450 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec89f638 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5606ec89f5a8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec89f710 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5606ec89f7d0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5606ec89f870 <col:20>
| `-OptimizeNoneAttr 0x5606ec89f8c8 <col:30>
|-CXXMethodDecl 0x5606ec89f918 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5606ec89f9b8 <col:20>
| `-OptimizeNoneAttr 0x5606ec89fa10 <col:30>
|-CXXMethodDecl 0x5606ec89fa60 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5606ec89fb28 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5606ec89fbc8 <col:20>
| `-OptimizeNoneAttr 0x5606ec89fc20 <col:30>
|-CXXMethodDecl 0x5606ec89fc68 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5606ec89fd88 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5606ec89fef8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5606ec89fe38 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5606ec89ffe8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5606ec8a0088 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a00e0 <col:30>
|-CXXMethodDecl 0x5606ec8a0130 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5606ec8a01f0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5606ec8a0428 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5606ec8a02a0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5606ec8a0318 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5606ec8a04d8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a0530 <col:30>
|-CXXMethodDecl 0x5606ec8a05d8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5606ec8a0678 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a06d0 <col:30>
|-CXXMethodDecl 0x5606ec8a0720 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5606ec8a07c0 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a0818 <col:30>
|-CXXMethodDecl 0x5606ec8a0860 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5606ec8a0900 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a0958 <col:30>
|-CXXMethodDecl 0x5606ec8a0a58 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5606ec8a0990 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5606ec8a0b00 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a0b58 <col:30>
|-CXXMethodDecl 0x5606ec8a0d18 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5606ec8a0b90 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5606ec8a0c08 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5606ec8a0dc8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a0e20 <col:30>
|-CXXMethodDecl 0x5606ec8a0ec8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5606ec8a0fe8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5606ec8a1108 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5606ec8a11a8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5606ec8a11d0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5606ec8a12f8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5606ec8a1398 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a13f0 <col:30>
|-CXXMethodDecl 0x5606ec8a1498 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5606ec8a1538 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a1590 <col:30>
|-AccessSpecDecl 0x5606ec8a15b8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5606ec8a15e0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5606ec8a16e0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5606ec8a1730 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec8a16c0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5606ec8a16a0 <col:14> 'int' 48
|-CXXMethodDecl 0x5606ec8a1798 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5606ec8a1838 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a1890 <col:30>
|-CXXMethodDecl 0x5606ec8a1908 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5606ec8a19a8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a1a00 <col:30>
|-CXXMethodDecl 0x5606ec8a1ac8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5606ec8a1a38 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5606ec8a1c68 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5606ec8a1e08 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5606ec8a1d18 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5606ec8a1eb0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5606ec8a1fb0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5606ec8a2360 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a1f90 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5606ec8a1f70 <col:9> 'int' 0
| |-EnumConstantDecl 0x5606ec8a2040 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5606ec8a2378 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a2020 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5606ec8a2000 <col:14> 'int' 1
| |-EnumConstantDecl 0x5606ec8a20d0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5606ec8a2390 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a20b0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5606ec8a2090 <col:14> 'int' 2
| |-EnumConstantDecl 0x5606ec8a2160 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5606ec8a23a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a2140 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5606ec8a2120 <col:14> 'int' 3
| |-EnumConstantDecl 0x5606ec8a21f0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5606ec8a23c0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a21d0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5606ec8a21b0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5606ec8a2280 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5606ec8a23d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a2260 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5606ec8a2240 <col:13> 'int' 5
| `-EnumConstantDecl 0x5606ec8a2310 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5606ec8a23f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec8a22f0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5606ec8a22d0 <col:14> 'int' 6
|-CXXMethodDecl 0x5606ec8a2458 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5606ec8a24f8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a2550 <col:30>
|-CXXMethodDecl 0x5606ec8a2648 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5606ec8a2588 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5606ec8a26f0 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a2748 <col:30>
|-CXXMethodDecl 0x5606ec8a27b8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5606ec8a28e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5606ec8a2a58 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5606ec8a2990 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5606ec8a2b20 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5606ec8a2be8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5606ec8a2d28 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5606ec8a2c98 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5606ec8a2dd0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5606ec8a2ed0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5606ec8a30d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a2eb0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5606ec8a2e90 <col:23> 'int' 0
| |-EnumConstantDecl 0x5606ec8a2f60 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5606ec8a30e8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a2f40 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5606ec8a2f20 <col:45> 'int' 4
| |-EnumConstantDecl 0x5606ec8a2ff0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5606ec8a3100 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a2fd0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5606ec8a2fb0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5606ec8a3080 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5606ec8a3118 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec8a3060 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5606ec8a3040 <col:47> 'int' 16
|-CXXMethodDecl 0x5606ec8a3178 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5606ec8a32e8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5606ec8a3228 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5606ec8a3390 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a33e8 <col:30>
|-CXXMethodDecl 0x5606ec8a3438 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5606ec8b6dc0 <col:18, col:36>
|   `-ReturnStmt 0x5606ec8b6db0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5606ec8b6d98 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5606ec8b6d78 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5606ec8b6d48 <col:27> '<bound member function type>' ->xanno 0x5606ec8a1498
|           `-CXXThisExpr 0x5606ec8b6d38 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5606ec8a3530 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5606ec8b6ed0 <col:30, col:48>
|   `-ReturnStmt 0x5606ec8b6ec0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5606ec8b6ea8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5606ec8b6e88 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5606ec8b6e58 <col:39> '<bound member function type>' ->xanno 0x5606ec8a12f8
|           `-CXXThisExpr 0x5606ec8b6e48 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5606ec8a3618 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5606ec8b7068 <col:24, col:50>
|   `-ReturnStmt 0x5606ec8b7058 <col:26, col:47>
|     `-UnaryOperator 0x5606ec8b7040 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5606ec8b7020 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5606ec8b7008 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5606ec8b6fb8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5606ec8ac2d8
|         |   `-CXXMemberCallExpr 0x5606ec8b6f98 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5606ec8b6f68 <col:34> '<bound member function type>' ->xanno 0x5606ec8a1498
|         |       `-CXXThisExpr 0x5606ec8b6f58 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5606ec8b6fe8 <col:46> 'int' 0
|-CXXMethodDecl 0x5606ec8a3720 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5606ec8b7238 <col:36, col:62>
|   `-ReturnStmt 0x5606ec8b7228 <col:38, col:59>
|     `-UnaryOperator 0x5606ec8b7210 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5606ec8b71f0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5606ec8b71d8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5606ec8b7150 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5606ec8ac2d8
|         |   `-CXXMemberCallExpr 0x5606ec8b7130 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5606ec8b7100 <col:46> '<bound member function type>' ->xanno 0x5606ec8a12f8
|         |       `-CXXThisExpr 0x5606ec8b70f0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5606ec8b7180 <col:58> 'int' 0
|-CXXMethodDecl 0x5606ec8a3838 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5606ec8b73d0 <col:26, col:53>
|   `-ReturnStmt 0x5606ec8b73c0 <col:28, col:50>
|     `-UnaryOperator 0x5606ec8b73a8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5606ec8b7388 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5606ec8b7370 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5606ec8b7320 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5606ec8ac5d8
|         |   `-CXXMemberCallExpr 0x5606ec8b7300 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5606ec8b72d0 <col:36> '<bound member function type>' ->xanno 0x5606ec8a1498
|         |       `-CXXThisExpr 0x5606ec8b72c0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5606ec8b7350 <col:49> 'int' 0
|-CXXMethodDecl 0x5606ec8a3958 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5606ec8b75a8 <col:38, col:65>
|   `-ReturnStmt 0x5606ec8b7598 <col:40, col:62>
|     `-UnaryOperator 0x5606ec8b7580 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5606ec8b7560 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5606ec8b7548 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5606ec8b74b8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5606ec8ac5d8
|         |   `-CXXMemberCallExpr 0x5606ec8b7498 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5606ec8b7468 <col:48> '<bound member function type>' ->xanno 0x5606ec8a12f8
|         |       `-CXXThisExpr 0x5606ec8b7458 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5606ec8b74e8 <col:61> 'int' 0
|-CXXMethodDecl 0x5606ec8a3b08 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5606ec8a3a10 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5606ec8b7c78 <col:34, line:463:5>
|   |-ParenExpr 0x5606ec8b7ac0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5606ec8b7a90 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8b76f8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8b76c8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8b7618 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8b7600 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8b75c0 <col:23> 'int' lvalue ParmVar 0x5606ec8a3a10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8b75e0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8b76a8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8b7678 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8b7638 <col:33> 'int' lvalue ParmVar 0x5606ec8a3a10 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5606ec8b7690 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5606ec8b7658 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5606ec8b7758 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8b7738 <col:56> 'int' 0
|   |   `-CallExpr 0x5606ec8b79f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8b79d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8b79b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8b7a30 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b7848 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5606ec8b7a48 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b7878 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8b7a60 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8b78b0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5606ec8b7a78 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8b79a0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8b7988 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8b7948 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5606ec8b7c68 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5606ec8b7c50 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5606ec8b7c30 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5606ec8b7c00 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5606ec8b7bb0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5606ec8ac2d8
|         |   `-CXXMemberCallExpr 0x5606ec8b7b90 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5606ec8b7b60 <col:9> '<bound member function type>' ->xanno 0x5606ec8a12f8
|         |       `-CXXThisExpr 0x5606ec8b7b50 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5606ec8b7c18 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5606ec8b7be0 <col:21> 'int' lvalue ParmVar 0x5606ec8a3a10 'i' 'int'
|-CXXMethodDecl 0x5606ec8a3d58 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5606ec8a3bc8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5606ec8a3c40 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5606ec8b8308 <col:40, line:472:5>
|   |-ParenExpr 0x5606ec8b8120 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5606ec8b80f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8b7dd0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8b7da0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8b7cf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8b7cd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8b7c98 <col:23> 'int' lvalue ParmVar 0x5606ec8a3bc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8b7cb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8b7d80 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8b7d50 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8b7d10 <col:33> 'int' lvalue ParmVar 0x5606ec8a3bc8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5606ec8b7d68 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5606ec8b7d30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5606ec8b7e30 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8b7e10 <col:56> 'int' 0
|   |   `-CallExpr 0x5606ec8b8050 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8b8038 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8b8018 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8b8090 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b7ea0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5606ec8b80a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b7ed0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8b80c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8b7f08 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5606ec8b80d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8b8000 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8b7fe8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8b7fa8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5606ec8b82e8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5606ec8b8290 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5606ec8b8260 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5606ec8b8210 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5606ec8ac2d8
|     | |   `-CXXMemberCallExpr 0x5606ec8b81f0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5606ec8b81c0 <col:2> '<bound member function type>' ->xanno 0x5606ec8a1498
|     | |       `-CXXThisExpr 0x5606ec8b81b0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5606ec8b8278 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5606ec8b8240 <col:14> 'int' lvalue ParmVar 0x5606ec8a3bc8 'i' 'int'
|     `-ImplicitCastExpr 0x5606ec8b82d0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5606ec8b82b0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5606ec8a3c40 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5606ec8a3f18 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5606ec8a3e20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5606ec8b8a88 <col:36, line:485:5>
|   |-ParenExpr 0x5606ec8b87f0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8b87c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8b84a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8b8470 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8b8380 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8b8368 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8b8328 <col:23> 'int' lvalue ParmVar 0x5606ec8a3e20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8b8348 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8b8450 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8b8438 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8b83a0 <col:33> 'int' lvalue ParmVar 0x5606ec8a3e20 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8b8418 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8b8400 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8b83c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8b83e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5606ec8b8500 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8b84e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8b8720 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8b8708 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8b86e8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8b8760 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b8570 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5606ec8b8778 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b85a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8b8790 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8b85e0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5606ec8b87a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8b86d0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8b86b8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8b8678 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5606ec8b8a78 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5606ec8b8a60 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5606ec8b8a48 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5606ec8b8a18 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5606ec8b89b8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5606ec8b8988 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5606ec8b8900 <col:61, col:70> 'char const[48]' lvalue ->c 0x5606ec8ac1b0
|             |   `-CXXMemberCallExpr 0x5606ec8b88e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5606ec8b88b0 <col:61> '<bound member function type>' ->xanno 0x5606ec8a12f8
|             |       `-CXXThisExpr 0x5606ec8b88a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5606ec8b89a0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5606ec8b8930 <col:74> 'int' lvalue ParmVar 0x5606ec8a3e20 'i' 'int'
|-CXXMethodDecl 0x5606ec8a4168 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5606ec8a3fd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5606ec8a4050 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5606ec8b91d8 <col:42, line:500:5>
|   |-ParenExpr 0x5606ec8b8f70 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8b8f40 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8b8c20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8b8bf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8b8b00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8b8ae8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8b8aa8 <col:23> 'int' lvalue ParmVar 0x5606ec8a3fd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8b8ac8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8b8bd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8b8bb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8b8b20 <col:33> 'int' lvalue ParmVar 0x5606ec8a3fd8 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8b8b98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8b8b80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8b8b40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8b8b60 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5606ec8b8c80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8b8c60 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8b8ea0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8b8e88 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8b8e68 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8b8ee0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b8cf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5606ec8b8ef8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b8d28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8b8f10 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8b8d60 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5606ec8b8f28 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8b8e50 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8b8e38 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8b8df8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5606ec8b91b8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5606ec8b9168 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5606ec8b9138 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5606ec8b90e0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5606ec8b90b0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5606ec8b9060 <col:48, col:57> 'char [48]' lvalue ->c 0x5606ec8ac1b0
|     |     |   `-CXXMemberCallExpr 0x5606ec8b9040 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5606ec8b9010 <col:48> '<bound member function type>' ->xanno 0x5606ec8a1498
|     |     |       `-CXXThisExpr 0x5606ec8b9000 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5606ec8b90c8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5606ec8b9090 <col:61> 'int' lvalue ParmVar 0x5606ec8a3fd8 'i' 'int'
|     `-ImplicitCastExpr 0x5606ec8b91a0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5606ec8b9180 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5606ec8a4050 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5606ec8a4328 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5606ec8a4230 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5606ec8b9938 <col:35, line:513:5>
|   |-ParenExpr 0x5606ec8b9648 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8b9618 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8b9370 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8b9340 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8b9250 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8b9238 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8b91f8 <col:23> 'int' lvalue ParmVar 0x5606ec8a4230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8b9218 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8b9320 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8b9308 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8b9270 <col:33> 'int' lvalue ParmVar 0x5606ec8a4230 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8b92e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8b92d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8b9290 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8b92b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5606ec8b93d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8b93b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8b9578 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8b9560 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8b9540 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8b95b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b9440 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5606ec8b95d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b9478 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8b95e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8b94b0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5606ec8b9600 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8b9528 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8b9510 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8b94d0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5606ec8b9928 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5606ec8b9910 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5606ec8b98f8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5606ec8b98c8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5606ec8b9840 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5606ec8b9810 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5606ec8b97c0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5606ec8ac1b0
|             |   `-CXXMemberCallExpr 0x5606ec8b97a0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5606ec8b9770 <col:60> '<bound member function type>' ->xanno 0x5606ec8a12f8
|             |       `-CXXThisExpr 0x5606ec8b9760 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5606ec8b9828 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5606ec8b97f0 <col:73> 'int' lvalue ParmVar 0x5606ec8a4230 'i' 'int'
|-CXXMethodDecl 0x5606ec8a4578 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5606ec8a43e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5606ec8a4460 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5606ec8ba058 <col:41, line:528:5>
|   |-ParenExpr 0x5606ec8b9de0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8b9db0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8b9ad0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8b9aa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8b99b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8b9998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8b9958 <col:23> 'int' lvalue ParmVar 0x5606ec8a43e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8b9978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8b9a80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8b9a68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8b99d0 <col:33> 'int' lvalue ParmVar 0x5606ec8a43e8 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8b9a48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8b9a30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8b99f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8b9a10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5606ec8b9b30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8b9b10 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8b9d10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8b9cf8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8b9cd8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8b9d50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b9ba0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5606ec8b9d68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8b9bd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8b9d80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8b9c10 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5606ec8b9d98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8b9cc0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8b9ca8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8b9c68 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5606ec8ba038 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5606ec8b9fe8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5606ec8b9fb8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5606ec8b9f60 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5606ec8b9f20 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5606ec8b9ed0 <col:47, col:56> 'char [48]' lvalue ->c 0x5606ec8ac1b0
|     |     |   `-CXXMemberCallExpr 0x5606ec8b9eb0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5606ec8b9e80 <col:47> '<bound member function type>' ->xanno 0x5606ec8a1498
|     |     |       `-CXXThisExpr 0x5606ec8b9e70 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5606ec8b9f38 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5606ec8b9f00 <col:60> 'int' lvalue ParmVar 0x5606ec8a43e8 'i' 'int'
|     `-ImplicitCastExpr 0x5606ec8ba020 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5606ec8ba000 <col:65> 'int16_t':'short' lvalue ParmVar 0x5606ec8a4460 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5606ec8a4738 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5606ec8a4640 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5606ec8ba728 <col:36, line:541:5>
|   |-ParenExpr 0x5606ec8ba4c8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8ba498 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8ba1f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8ba1c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8ba0d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8ba0b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8ba078 <col:23> 'int' lvalue ParmVar 0x5606ec8a4640 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8ba098 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8ba1a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8ba188 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8ba0f0 <col:33> 'int' lvalue ParmVar 0x5606ec8a4640 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8ba168 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8ba150 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8ba110 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8ba130 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5606ec8ba250 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8ba230 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8ba3f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8ba3e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8ba3c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8ba438 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8ba2c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5606ec8ba450 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8ba2f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8ba468 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8ba330 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5606ec8ba480 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8ba3a8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8ba390 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8ba350 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5606ec8ba718 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5606ec8ba700 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5606ec8ba6e8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5606ec8ba6b8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5606ec8ba660 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5606ec8ba630 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5606ec8ba5e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5606ec8ac1b0
|             |   `-CXXMemberCallExpr 0x5606ec8ba5c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5606ec8ba590 <col:61> '<bound member function type>' ->xanno 0x5606ec8a12f8
|             |       `-CXXThisExpr 0x5606ec8ba580 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5606ec8ba648 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5606ec8ba610 <col:74> 'int' lvalue ParmVar 0x5606ec8a4640 'i' 'int'
|-CXXMethodDecl 0x5606ec8a4908 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5606ec8a47f8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5606ec8a4870 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5606ec8a49b8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8a4a10 <col:30>
|-CXXMethodDecl 0x5606ec8a4b48 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5606ec8a4a50 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5606ec8badf8 <col:35, line:562:5>
|   |-ParenExpr 0x5606ec8bab98 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8bab68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8ba8c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8ba890 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8ba7a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8ba788 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8ba748 <col:23> 'int' lvalue ParmVar 0x5606ec8a4a50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8ba768 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8ba870 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8ba858 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8ba7c0 <col:33> 'int' lvalue ParmVar 0x5606ec8a4a50 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8ba838 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8ba820 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8ba7e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8ba800 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5606ec8ba920 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8ba900 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8baac8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8baab0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8baa90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8bab08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8ba990 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5606ec8bab20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8ba9c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8bab38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8baa00 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5606ec8bab50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8baa78 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8baa60 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8baa20 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5606ec8bade8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5606ec8badd0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5606ec8badb8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5606ec8bad88 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5606ec8bad30 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5606ec8bad00 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5606ec8bacb0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5606ec8ac1b0
|             |   `-CXXMemberCallExpr 0x5606ec8bac90 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5606ec8bac60 <col:60> '<bound member function type>' ->xanno 0x5606ec8a12f8
|             |       `-CXXThisExpr 0x5606ec8bac50 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5606ec8bad18 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5606ec8bace0 <col:73> 'int' lvalue ParmVar 0x5606ec8a4a50 'i' 'int'
|-CXXMethodDecl 0x5606ec8a4d58 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5606ec8a4c08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5606ec8a4c80 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5606ec8bb4d8 <col:41, line:577:5>
|   |-ParenExpr 0x5606ec8bb268 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8bb238 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8baf90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8baf60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8bae70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8bae58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8bae18 <col:23> 'int' lvalue ParmVar 0x5606ec8a4c08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8bae38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8baf40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8baf28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8bae90 <col:33> 'int' lvalue ParmVar 0x5606ec8a4c08 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8baf08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8baef0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8baeb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8baed0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5606ec8baff0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8bafd0 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8bb198 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8bb180 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8bb160 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8bb1d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bb060 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5606ec8bb1f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bb098 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8bb208 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8bb0d0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5606ec8bb220 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8bb148 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8bb130 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8bb0f0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5606ec8bb4b8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5606ec8bb468 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5606ec8bb438 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5606ec8bb3d8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5606ec8bb3a8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5606ec8bb358 <col:47, col:56> 'char [48]' lvalue ->c 0x5606ec8ac1b0
|     |     |   `-CXXMemberCallExpr 0x5606ec8bb338 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5606ec8bb308 <col:47> '<bound member function type>' ->xanno 0x5606ec8a1498
|     |     |       `-CXXThisExpr 0x5606ec8bb2f8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5606ec8bb3c0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5606ec8bb388 <col:60> 'int' lvalue ParmVar 0x5606ec8a4c08 'i' 'int'
|     `-ImplicitCastExpr 0x5606ec8bb4a0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5606ec8bb480 <col:65> 'int32_t':'int' lvalue ParmVar 0x5606ec8a4c80 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5606ec8a4f18 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5606ec8a4e20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5606ec8bbc08 <col:36, line:591:5>
|   |-ParenExpr 0x5606ec8bb948 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8bb918 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8bb670 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8bb640 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8bb550 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8bb538 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8bb4f8 <col:23> 'int' lvalue ParmVar 0x5606ec8a4e20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8bb518 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8bb620 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8bb608 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8bb570 <col:33> 'int' lvalue ParmVar 0x5606ec8a4e20 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8bb5e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8bb5d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8bb590 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8bb5b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5606ec8bb6d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8bb6b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8bb878 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8bb860 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8bb840 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8bb8b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bb740 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5606ec8bb8d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bb778 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8bb8e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8bb7b0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5606ec8bb900 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8bb828 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8bb810 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8bb7d0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5606ec8bbbf8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5606ec8bbbe0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5606ec8bbbc8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5606ec8bbb98 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5606ec8bbb10 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5606ec8bbae0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5606ec8bba90 <col:61, col:70> 'char const[48]' lvalue ->c 0x5606ec8ac1b0
|             |   `-CXXMemberCallExpr 0x5606ec8bba70 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5606ec8bba40 <col:61> '<bound member function type>' ->xanno 0x5606ec8a12f8
|             |       `-CXXThisExpr 0x5606ec8bba30 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5606ec8bbaf8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5606ec8bbac0 <col:74> 'int' lvalue ParmVar 0x5606ec8a4e20 'i' 'int'
|-CXXMethodDecl 0x5606ec8a5168 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5606ec8a4fd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5606ec8a5050 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5606ec8bc2e8 <col:42, line:606:5>
|   |-ParenExpr 0x5606ec8bc078 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5606ec8bc048 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8bbda0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8bbd70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8bbc80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8bbc68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8bbc28 <col:23> 'int' lvalue ParmVar 0x5606ec8a4fd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8bbc48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8bbd50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5606ec8bbd38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8bbca0 <col:33> 'int' lvalue ParmVar 0x5606ec8a4fd8 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8bbd18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8bbd00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8bbcc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5606ec8bbce0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5606ec8bbe00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8bbde0 <col:60> 'int' 0
|   |   `-CallExpr 0x5606ec8bbfa8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8bbf90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8bbf70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8bbfe8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bbe70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5606ec8bc000 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bbea8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8bc018 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8bbee0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5606ec8bc030 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8bbf58 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8bbf40 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8bbf00 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5606ec8bc2c8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5606ec8bc278 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5606ec8bc248 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5606ec8bc1e8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5606ec8bc1b8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5606ec8bc168 <col:48, col:57> 'char [48]' lvalue ->c 0x5606ec8ac1b0
|     |     |   `-CXXMemberCallExpr 0x5606ec8bc148 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5606ec8bc118 <col:48> '<bound member function type>' ->xanno 0x5606ec8a1498
|     |     |       `-CXXThisExpr 0x5606ec8bc108 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5606ec8bc1d0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5606ec8bc198 <col:61> 'int' lvalue ParmVar 0x5606ec8a4fd8 'i' 'int'
|     `-ImplicitCastExpr 0x5606ec8bc2b0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5606ec8bc290 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5606ec8a5050 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5606ec8a5300 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5606ec8a5230 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5606ec8bcb58 <col:33, line:620:5>
|   |-ParenExpr 0x5606ec8bc8d0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5606ec8bc8a0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8bc4f0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8bc4c0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8bc360 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8bc348 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8bc308 <col:23> 'int' lvalue ParmVar 0x5606ec8a5230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8bc328 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8bc4a0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5606ec8bc488 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8bc380 <col:33> 'int' lvalue ParmVar 0x5606ec8a5230 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8bc468 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8bc450 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8bc3a0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5606ec8bc428 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5606ec8bc410 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5606ec8bc3d8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5606ec8bc550 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8bc530 <col:79> 'int' 0
|   |   `-CallExpr 0x5606ec8bc800 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8bc7e8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8bc7c8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8bc840 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bc638 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5606ec8bc858 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bc680 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8bc870 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8bc6b8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5606ec8bc888 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8bc7b0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8bc798 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8bc758 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5606ec8bcb48 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5606ec8bcb30 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5606ec8bcb18 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5606ec8bcae8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5606ec8bca60 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5606ec8bca30 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5606ec8bc9e0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5606ec8ac1b0
|             |   `-CXXMemberCallExpr 0x5606ec8bc9c0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5606ec8bc990 <col:67> '<bound member function type>' ->xanno 0x5606ec8a12f8
|             |       `-CXXThisExpr 0x5606ec8bc980 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5606ec8bca48 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5606ec8bca10 <col:80> 'int' lvalue ParmVar 0x5606ec8a5230 'i' 'int'
|-CXXMethodDecl 0x5606ec8a5518 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5606ec8a53c0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5606ec8a5440 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5606ec8bd380 <col:45, line:635:5>
|   |-ParenExpr 0x5606ec8bd0c8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5606ec8bd098 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5606ec8bcd60 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5606ec8bcd30 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5606ec8bcbd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5606ec8bcbb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5606ec8bcb78 <col:23> 'int' lvalue ParmVar 0x5606ec8a53c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5606ec8bcb98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5606ec8bcd10 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5606ec8bccf8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5606ec8bcbf0 <col:33> 'int' lvalue ParmVar 0x5606ec8a53c0 'i' 'int'
|   |   |     `-BinaryOperator 0x5606ec8bccd8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5606ec8bccc0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5606ec8bcc10 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5606ec8a16e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5606ec8bcc98 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5606ec8bcc80 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5606ec8bcc48 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5606ec8bcdc0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5606ec8bcda0 <col:79> 'int' 0
|   |   `-CallExpr 0x5606ec8bcff8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5606ec8bcfe0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5606ec8bcfc0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5606ec8bd038 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bce30 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5606ec8bd050 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5606ec8bce78 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5606ec8bd068 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5606ec8bceb0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5606ec8bd080 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5606ec8bcfa8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5606ec8bcf90 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5606ec8bcf48 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5606ec8bd360 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5606ec8bd2c8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5606ec8bd298 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5606ec8bd238 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5606ec8bd208 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5606ec8bd1b8 <col:54, col:63> 'char [48]' lvalue ->c 0x5606ec8ac1b0
|     |     |   `-CXXMemberCallExpr 0x5606ec8bd198 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5606ec8bd168 <col:54> '<bound member function type>' ->xanno 0x5606ec8a1498
|     |     |       `-CXXThisExpr 0x5606ec8bd158 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5606ec8bd220 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5606ec8bd1e8 <col:67> 'int' lvalue ParmVar 0x5606ec8a53c0 'i' 'int'
|     `-CXXConstCastExpr 0x5606ec8bd330 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5606ec8bd318 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5606ec8bd2e0 <col:91> 'const void *' lvalue ParmVar 0x5606ec8a5440 'x' 'const void *'
|-CXXMethodDecl 0x5606ec8a55e8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5606ec8bd408 <col:34, line:640:5>
|   `-ReturnStmt 0x5606ec8bd3f8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5606ec8bd3e0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5606ec8bd3b0 <col:16> 'Packet *' lvalue ->_data_packet 0x5606ec8acd68
|         `-CXXThisExpr 0x5606ec8bd3a0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5606ec8a5728 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5606ec8a5698 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5606ec8b64c8 <col:46> 'bool' true
|-CXXMethodDecl 0x5606ec8a58a8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5606ec8a57e0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5606ec8a5950 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5606ec8a6100 <line:660:22> "" ""
| |-EnumConstantDecl 0x5606ec8a5a50 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a6170 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5a30 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5606ec8a5a10 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5606ec89abb0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5606ec8a5ae0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a6188 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5ac0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5606ec8a5aa0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5606ec89ac40 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5606ec8a5b70 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a61a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5b50 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5606ec8a5b30 <col:21> 'int' 0
| |-EnumConstantDecl 0x5606ec8a5c00 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a61b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5be0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5606ec8a5bc0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5606ec8a5c90 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a61d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5c70 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5606ec8a5c50 <col:21> 'int' 16
| |-EnumConstantDecl 0x5606ec8a5d20 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a61e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5d00 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5606ec8a5ce0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5606ec8a5db0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a6200 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5d90 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5606ec8a5d70 <col:19> 'int' EnumConstant 0x5606ec8a5c00 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5606ec8a5e40 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a6218 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5e20 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5606ec8a5e00 <col:19> 'int' EnumConstant 0x5606ec8a5d20 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5606ec8a5f10 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a6230 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5ef0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5606ec8a5ed0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5606ec8a5e90 <col:23> 'int' EnumConstant 0x5606ec8a5e40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5606ec8a5eb0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5606ec8a5fe0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5606ec8a6248 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5606ec8a5fc0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5606ec8a5fa0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5606ec8a5f60 <col:23> 'int' EnumConstant 0x5606ec8a5e40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5606ec8a5f80 <col:40> 'int' 4
| `-EnumConstantDecl 0x5606ec8a60b0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5606ec8a6260 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec8a6090 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5606ec8a6070 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5606ec8a6030 <col:23> 'int' EnumConstant 0x5606ec8a5e40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5606ec8a6050 <col:40> 'int' 8
|-CXXMethodDecl 0x5606ec8a62a0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5606ec8a6340 <col:68> "" ""
|-CXXMethodDecl 0x5606ec8a63d8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5606ec8a6478 <col:45> "" ""
|-CXXMethodDecl 0x5606ec8a6510 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5606ec8a65b0 <col:57> "" ""
|-CXXMethodDecl 0x5606ec8a6648 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5606ec8a66e8 <col:45> "" ""
|-CXXMethodDecl 0x5606ec8a6780 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5606ec8a6820 <col:57> "" ""
|-CXXMethodDecl 0x5606ec8a68b0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5606ec8a6950 <col:51> "" ""
|-CXXMethodDecl 0x5606ec8a69e0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5606ec8a6a80 <col:63> "" ""
|-CXXMethodDecl 0x5606ec8a6b10 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5606ec8a6bb0 <col:53> "" ""
|-CXXMethodDecl 0x5606ec8a6c40 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5606ec8a6ce0 <col:65> "" ""
|-CXXMethodDecl 0x5606ec8a6df8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5606ec8a6d68 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5606ec8a6ea0 <col:61> "" ""
|-CXXMethodDecl 0x5606ec8a7038 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5606ec8a6f28 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5606ec8a6fa0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5606ec8a70e8 <col:67> "" ""
|-CXXMethodDecl 0x5606ec8a7200 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5606ec8a7170 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5606ec8a72a8 <col:63> "" ""
|-CXXMethodDecl 0x5606ec8a7440 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5606ec8a7330 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5606ec8a73a8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5606ec8a74f0 <col:69> "" ""
|-CXXMethodDecl 0x5606ec8a7608 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5606ec8a7578 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5606ec8a76b0 <col:63> "" ""
|-CXXMethodDecl 0x5606ec8a9d88 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5606ec8a9c78 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5606ec8a9cf0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5606ec8a9e38 <col:69> "" ""
|-CXXMethodDecl 0x5606ec8a9f50 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5606ec8a9ec0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5606ec8a9ff8 <col:62> "" ""
|-CXXMethodDecl 0x5606ec8aa190 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5606ec8aa080 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5606ec8aa0f8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5606ec8aa240 <col:68> "" ""
|-CXXMethodDecl 0x5606ec8aa358 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5606ec8aa2c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5606ec8aa400 <col:63> "" ""
|-CXXMethodDecl 0x5606ec8aa598 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5606ec8aa488 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5606ec8aa500 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5606ec8aa648 <col:69> "" ""
|-CXXMethodDecl 0x5606ec8aa6d8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5606ec8aa778 <col:64> "" ""
|-CXXMethodDecl 0x5606ec8aa808 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5606ec8aa8a8 <col:52> "" ""
|-CXXMethodDecl 0x5606ec8aa938 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5606ec8aa9d8 <col:67> "" ""
|-CXXMethodDecl 0x5606ec8aaa68 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5606ec8aab08 <col:55> "" ""
|-CXXMethodDecl 0x5606ec8aac20 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5606ec8aab90 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5606ec8aacc8 <col:58> "" ""
|-CXXMethodDecl 0x5606ec8aae60 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5606ec8aad50 <col:33> col:36 'int'
| |-ParmVarDecl 0x5606ec8aadc8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5606ec8aaf10 <col:62> "" ""
|-CXXMethodDecl 0x5606ec8ab028 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5606ec8aaf98 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5606ec8ab0d0 <col:58> "" ""
|-CXXMethodDecl 0x5606ec8ab268 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5606ec8ab158 <col:33> col:36 'int'
| |-ParmVarDecl 0x5606ec8ab1d0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5606ec8ab318 <col:62> "" ""
|-CXXMethodDecl 0x5606ec8ab430 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5606ec8ab3a0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5606ec8ab4d8 <col:60> "" ""
|-CXXMethodDecl 0x5606ec8ab670 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5606ec8ab560 <col:34> col:37 'int'
| |-ParmVarDecl 0x5606ec8ab5d8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5606ec8ab720 <col:64> "" ""
|-CXXMethodDecl 0x5606ec8ab838 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5606ec8ab7a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5606ec8ab8e0 <col:58> "" ""
|-CXXMethodDecl 0x5606ec8aba78 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5606ec8ab968 <col:33> col:36 'int'
| |-ParmVarDecl 0x5606ec8ab9e0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5606ec8abb28 <col:62> "" ""
|-CXXMethodDecl 0x5606ec8abc40 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5606ec8abbb0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5606ec8abce8 <col:59> "" ""
|-CXXMethodDecl 0x5606ec8abe80 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5606ec8abd70 <col:33> col:36 'int'
| |-ParmVarDecl 0x5606ec8abde8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5606ec8abf30 <col:63> "" ""
|-AccessSpecDecl 0x5606ec8abfa0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5606ec8abfc8 prev 0x5606ec8a11d0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5606ec8ac0c0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5606ec8ac1b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5606ec8ac2d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5606ec8ac458 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5606ec8ac5d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5606ec8ac758 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5606ec8bd588 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5606ec8bddf8 <col:11>
| |-CXXDestructorDecl 0x5606ec8bd660 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5606ec8bd798 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5606ec8bd798
| | `-ParmVarDecl 0x5606ec8bd8a8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5606ec8bd948 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5606ec8bd948
| | `-ParmVarDecl 0x5606ec8bda58 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5606ec8c0818 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5606ec8c0928 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5606ec8c0ba8 <col:11>
| |   `-ReturnStmt 0x5606ec8c0b98 <col:11>
| |     `-UnaryOperator 0x5606ec8c0b80 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5606ec8c0b70 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5606ec8c0998 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5606ec8c0998
|   `-ParmVarDecl 0x5606ec8c0aa8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5606ec8ac7c0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5606ec8ac8d8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5606ec8ac978 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5606ec8ac9e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5606ec8aca48 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5606ec8acab0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5606ec8acb10 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5606ec8acbd0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5606ec8acc30 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5606ec8acc90 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5606ec8bd498 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5606ec8ac978 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5606ec8bde08 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5606ec8bde60 <col:12>
| |-CXXConstructorDecl 0x5606ec8bdac8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5606ec8bdac8
| | `-ParmVarDecl 0x5606ec8bdbd8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5606ec8bdc78 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5606ec8bdc78
| | `-ParmVarDecl 0x5606ec8bdd88 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5606ec8bff00 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5606ec8acd08 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5606ec8acd68 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5606ec8acdd0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5606ec8ace38 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5606ec8acea0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5606ec8acf08 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5606ec8acf68 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5606ec8acfc8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5606ec8ad030 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5606ec8ad0b8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5606ec8acd08 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5606ec8bd430 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5606ec8acf68 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5606ec8bde70 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5606ec8bded0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5606ec8ad258 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5606ec8ad198 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5606ec8ad350 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5606ec8ad538 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5606ec8ad440 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5606ec8ad808 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5606ec8ad5f0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5606ec8ad668 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5606ec8ad6e0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec8ada28 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5606ec8ad8d8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5606ec8ad950 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5606ec8b6008 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5606ec8adae8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5606ec8adb60 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5606ec8adbd8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5606ec8b6160 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5606ec8b60d0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec8b62a8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5606ec8b6218 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5606ec8b63a0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec8bdf70 prev 0x5606ec89a830 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x5606ec8be0a8 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x5606ec8be138 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x5606ec8be1e0 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x5606ec8be280 <col:20>
| `-OptimizeNoneAttr 0x5606ec8be2d8 <col:30>
|-CXXMethodDecl 0x5606ec8be328 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x5606ec8be3c8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8be420 <col:30>
|-CXXMethodDecl 0x5606ec8be470 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5606ec8be538 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5606ec8be600 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5606ec8be718 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x5606ec8be7e0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x5606ec8be880 <col:20>
| `-OptimizeNoneAttr 0x5606ec8be8d8 <col:30>
|-CXXMethodDecl 0x5606ec8be948 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x5606ec8be9e8 <col:20>
| `-OptimizeNoneAttr 0x5606ec8bea40 <col:30>
|-CXXMethodDecl 0x5606ec8beae8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x5606ec8beb88 <col:20>
| `-OptimizeNoneAttr 0x5606ec8bebe0 <col:30>
|-CXXMethodDecl 0x5606ec8bec30 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5606ec8bed48 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x5606ec8bee68 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x5606ec8bef88 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x5606ec8bf050 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x5606ec8bf0f0 <col:62> "" ""
|-AccessSpecDecl 0x5606ec8bf160 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x5606ec8bf1c0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x5606ec8bfdb8 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x5606ec8bffe0 <col:29, col:31>
|-CXXMethodDecl 0x5606ec8bf288 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x5606ec8bf3c8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x5606ec8bf338 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x5606ec8bf4c0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x5606ec8bfff0 <col:23, col:25>
|-CXXMethodDecl 0x5606ec8bf678 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x5606ec8bf5b0 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x5606ec8bf948 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5606ec8bf730 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5606ec8bf7a8 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5606ec8bf820 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5606ec8bfad8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x5606ec8bfa10 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x5606ec8bfbd0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x5606ec8bfc38 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x5606ec8bfc38
  `-ParmVarDecl 0x5606ec8bfd48 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ether
         0 |   uint8_t [6] ether_dhost
         6 |   uint8_t [6] ether_shost
        12 |   uint16_t ether_type
           | [sizeof=14, dsize=14, align=1,
           |  nvsize=14, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec8ece80 prev 0x5606ec89a380 <../dummy_inc/clicknet/ether.h:17:1, line:21:1> line:17:8 referenced struct click_ether definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-PackedAttr 0x5606ec8ed248 <line:21:18>
|-CXXRecordDecl 0x5606ec8ecf78 <line:17:1, col:8> col:8 implicit struct click_ether
|-FieldDecl 0x5606ec8ed0e8 <line:18:5, col:26> col:13 referenced ether_dhost 'uint8_t [6]'
|-FieldDecl 0x5606ec8ed198 <line:19:5, col:26> col:13 referenced ether_shost 'uint8_t [6]'
`-FieldDecl 0x5606ec8ed1f8 <line:20:5, col:14> col:14 ether_type 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  NonVirtualBaseLLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec6a77d0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5606ec6a78e8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5606ec6a7988 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5606ec6a79e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5606ec6a7a48 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5606ec6a7af8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec6a7e00 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5606ec6a7f18 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5606ec6a7fc0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5606ec6a8028 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5606ec6a80b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5606ec6ae150 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5606ec6ae588 <col:12>
|-CXXConstructorDecl 0x5606ec6ae258 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5606ec6ae368 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5606ec6a7fc0 'data' 'const char *'
| | `-ImplicitCastExpr 0x5606ec6b0b10 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5606ec6b0ae0 <col:12> 'const char *const' lvalue .data 0x5606ec6a7fc0
| |     `-DeclRefExpr 0x5606ec6b0ac0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6ae368 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5606ec6a8028 'length' 'int'
| | `-ImplicitCastExpr 0x5606ec6b0ba0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5606ec6b0b70 <col:12> 'const int' lvalue .length 0x5606ec6a8028
| |     `-DeclRefExpr 0x5606ec6b0b50 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6ae368 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5606ec6a80b8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5606ec6b0c30 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5606ec6b0c00 <col:12> 'String::memo_t *const' lvalue .memo 0x5606ec6a80b8
| |     `-DeclRefExpr 0x5606ec6b0be0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6ae368 '' 'const String::rep_t &'
| `-CompoundStmt 0x5606ec6b0c88 <col:12>
|-CXXConstructorDecl 0x5606ec6ae408 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5606ec6ae408
| `-ParmVarDecl 0x5606ec6ae518 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5606ec6b3a70 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5606ec6bf488 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5606ec6bf598 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5606ec6bfab0 <col:12>
|   |-BinaryOperator 0x5606ec6bf8c8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5606ec6bf880 <col:12> 'const char *' lvalue ->data 0x5606ec6a7fc0
|   | | `-CXXThisExpr 0x5606ec6bf870 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5606ec6bf8b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5606ec6bf840 <col:12> 'const char *const' lvalue .data 0x5606ec6a7fc0
|   |     `-DeclRefExpr 0x5606ec6bf820 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6bf598 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5606ec6bf990 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5606ec6bf948 <col:12> 'int' lvalue ->length 0x5606ec6a8028
|   | | `-CXXThisExpr 0x5606ec6bf938 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5606ec6bf978 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5606ec6bf908 <col:12> 'const int' lvalue .length 0x5606ec6a8028
|   |     `-DeclRefExpr 0x5606ec6bf8e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6bf598 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5606ec6bfa58 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5606ec6bfa10 <col:12> 'String::memo_t *' lvalue ->memo 0x5606ec6a80b8
|   | | `-CXXThisExpr 0x5606ec6bfa00 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5606ec6bfa40 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5606ec6bf9d0 <col:12> 'String::memo_t *const' lvalue .memo 0x5606ec6a80b8
|   |     `-DeclRefExpr 0x5606ec6bf9b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6bf598 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5606ec6bfaa0 <col:12>
|     `-UnaryOperator 0x5606ec6bfa88 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5606ec6bfa78 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5606ec6bf608 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5606ec6bf608
  `-ParmVarDecl 0x5606ec6bf718 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5606ec69ed40 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5606ec69ee58 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5606ec69eee8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5606ec69ef28 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5606ec374dc0 'const char *'
|   `-QualType 0x5606ec374311 'const char' const
|     `-BuiltinType 0x5606ec374310 'char'
|-TypedefDecl 0x5606ec69efb0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5606ec69ef80 'String::const_iterator' sugar
|   |-Typedef 0x5606ec69ef28 'const_iterator'
|   `-PointerType 0x5606ec374dc0 'const char *'
|     `-QualType 0x5606ec374311 'const char' const
|       `-BuiltinType 0x5606ec374310 'char'
|-TypedefDecl 0x5606ec69f120 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5606ec69f090 'int (String::*)() const'
|   |-RecordType 0x5606ec69edd0 'String'
|   | `-CXXRecord 0x5606ec69ed40 'String'
|   `-ParenType 0x5606ec69f030 'int () const' sugar
|     `-FunctionProtoType 0x5606ec672bc0 'int () const' const cdecl
|       `-BuiltinType 0x5606ec374370 'int'
|-TypedefDecl 0x5606ec69f188 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5606ec4c77a0 'int64_t' sugar
|   |-Typedef 0x5606ec3dd2d0 'int64_t'
|   `-TypedefType 0x5606ec3b64d0 '__int64_t' sugar
|     |-Typedef 0x5606ec3b60a8 '__int64_t'
|     `-BuiltinType 0x5606ec374390 'long'
|-TypedefDecl 0x5606ec69f1f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5606ec4c76c0 'uint64_t' sugar
|   |-Typedef 0x5606ec3dd470 'uint64_t'
|   `-TypedefType 0x5606ec3b6560 '__uint64_t' sugar
|     |-Typedef 0x5606ec3b6118 '__uint64_t'
|     `-BuiltinType 0x5606ec374430 'unsigned long'
|-TypedefDecl 0x5606ec69f280 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5606ec69f250 'String::intmax_t' sugar
|   |-Typedef 0x5606ec69f188 'intmax_t'
|   `-TypedefType 0x5606ec4c77a0 'int64_t' sugar
|     |-Typedef 0x5606ec3dd2d0 'int64_t'
|     `-TypedefType 0x5606ec3b64d0 '__int64_t' sugar
|       |-Typedef 0x5606ec3b60a8 '__int64_t'
|       `-BuiltinType 0x5606ec374390 'long'
|-TypedefDecl 0x5606ec69f310 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5606ec69f2e0 'String::uintmax_t' sugar
|   |-Typedef 0x5606ec69f1f0 'uintmax_t'
|   `-TypedefType 0x5606ec4c76c0 'uint64_t' sugar
|     |-Typedef 0x5606ec3dd470 'uint64_t'
|     `-TypedefType 0x5606ec3b6560 '__uint64_t' sugar
|       |-Typedef 0x5606ec3b6118 '__uint64_t'
|       `-BuiltinType 0x5606ec374430 'unsigned long'
|-CXXConstructorDecl 0x5606ec69f3d0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5606ec69f578 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5606ec69f4b8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5606ec69f728 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5606ec69f668 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5606ec69f880 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5606ec69f7f0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5606ec69fa98 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5606ec69f948 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5606ec69f9c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5606ec69fcb8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5606ec69fb68 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5606ec69fbe8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5606ec69fed8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5606ec69fd88 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5606ec69fe08 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5606ec6a00f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5606ec69ffa8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5606ec6a0028 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5606ec6a0288 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5606ec6a01c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5606ec6a0408 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5606ec6a0348 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5606ec6a0598 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5606ec6a04d0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5606ec6a06f0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5606ec6a0660 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5606ec6a0848 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5606ec6a07b8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5606ec6a09a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5606ec6a0910 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5606ec6a0b28 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5606ec6a0a68 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5606ec6a0cb8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5606ec6a0bf0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5606ec6a0e48 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5606ec6a0d80 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5606ec6a0fd8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5606ec6a0f10 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5606ec6a10d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5606ec6a11f8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5606ec6a1378 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5606ec6a12b0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5606ec6a14c8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5606ec6a1438 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5606ec6a1580 <col:63> "" ""
|-CXXMethodDecl 0x5606ec6a16c8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5606ec6a1608 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5606ec6a18d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5606ec6a1788 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5606ec6a1808 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5606ec6a1af8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5606ec6a19a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5606ec6a1a20 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5606ec6a1dd8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5606ec6a1bb8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5606ec6a1c38 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5606ec6adc20 <col:55> 'int' 10
| `-ParmVarDecl 0x5606ec6a1cb0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5606ec6adc40 <col:76> 'bool' true
|-CXXMethodDecl 0x5606ec6a20b8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5606ec6a1ea0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5606ec6a1f20 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5606ec6adc50 <col:56> 'int' 10
| `-ParmVarDecl 0x5606ec6a1f98 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5606ec6adc70 <col:77> 'bool' true
|-CXXMethodDecl 0x5606ec6a21c0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5606ec6a2288 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5606ec6a2350 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5606ec6a23f0 <col:20>
| `-OptimizeNoneAttr 0x5606ec6a2448 <col:30>
|-CXXConversionDecl 0x5606ec6a2538 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5606ec6a2608 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5606ec6a26c8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5606ec6a27b8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5606ec6a2878 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5606ec6a29f8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5606ec6a2930 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5606ec6a2b48 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5606ec6a2ab8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5606ec6a2c38 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5606ec6a2cf8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5606ec6a2f48 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5606ec6a2db0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5606ec6a2e30 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5606ec6a31a8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5606ec6a3010 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5606ec6a3090 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5606ec6a3278 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5606ec6a3488 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5606ec6a3330 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5606ec6a33b0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5606ec6a36a8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5606ec6a3550 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5606ec6a35d0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5606ec6a3838 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5606ec6a3770 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5606ec6a3928 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5606ec6a3a98 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5606ec6a39d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5606ec6a3ca8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5606ec6a3b58 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5606ec6a3bd8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5606ec6a3ec0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5606ec6a3d68 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5606ec6a3de0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5606ec6a4050 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5606ec6a3f80 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5606ec6a4270 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5606ec6a4110 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5606ec6a4190 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5606ec6a43c0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5606ec6a4330 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5606ec6a4598 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5606ec6a4480 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5606ec6a4500 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5606ec6a46e8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5606ec6a4658 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5606ec6a4900 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5606ec6a47a0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5606ec6a4820 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5606ec6adc80 <col:39> 'int' 0
|-CXXMethodDecl 0x5606ec6a4b20 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5606ec6a49c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5606ec6a4a40 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5606ec6adca0 <col:48> 'int' 0
|-CXXMethodDecl 0x5606ec6a4d00 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5606ec6a4be0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5606ec6a4c60 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5606ec6adcc0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5606ec6a4dd0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5606ec6a4e90 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5606ec6a4f50 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5606ec6a5010 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5606ec6a50d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5606ec6a5278 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5606ec6a5180 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5606ec6a53f8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5606ec6a5330 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5606ec6a55d0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5606ec6a54b8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5606ec6a5748 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5606ec6a5688 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5606ec6a5890 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5606ec6a5800 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5606ec6a59e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5606ec6a5950 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5606ec6a5bb8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5606ec6a5aa0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5606ec6a5b20 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5606ec6a5d98 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5606ec6a5c80 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5606ec6a5d00 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5606ec6a5ee8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5606ec6a5e58 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5606ec6a60f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5606ec6a5fa8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5606ec6a6028 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5606ec6a6258 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5606ec6a61c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5606ec6a63b0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5606ec6a6318 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5606ec6a6458 <col:57> "" ""
|-CXXMethodDecl 0x5606ec6a6568 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5606ec6a64d8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5606ec6a66b8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5606ec6a6628 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5606ec6a6838 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5606ec6a6770 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5606ec6a6900 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5606ec6a69c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5606ec6a6a80 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5606ec6a6b20 <col:49> "" ""
|-CXXMethodDecl 0x5606ec6a6bb0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5606ec6a6c70 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5606ec6a6d60 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5606ec6a6e28 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5606ec6a6ee8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5606ec6a6fa8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5606ec6a70a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5606ec6a7168 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5606ec6a7230 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5606ec6a7408 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5606ec6a72e8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5606ec6a7368 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5606ec6a7630 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5606ec6a74d0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5606ec6a7550 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5606ec6a7740 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5606ec6a77a8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5606ec6a77d0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5606ec6a78e8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5606ec6a7988 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5606ec6a79e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5606ec6a7a48 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5606ec6a7af8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5606ec6a7b60 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5606ec6a7d98 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5606ec6a7de8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec6a7d78 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5606ec6a7c88 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5606ec6a7c30 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5606ec6a7c70 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5606ec6a7c50 <col:32> 'int' 8
|-CXXRecordDecl 0x5606ec6a7e00 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5606ec6a7f18 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5606ec6a7fc0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5606ec6a8028 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5606ec6a80b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5606ec6ae150 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5606ec6ae588 <col:12>
| |-CXXConstructorDecl 0x5606ec6ae258 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5606ec6ae368 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5606ec6a7fc0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5606ec6b0b10 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5606ec6b0ae0 <col:12> 'const char *const' lvalue .data 0x5606ec6a7fc0
| | |     `-DeclRefExpr 0x5606ec6b0ac0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6ae368 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5606ec6a8028 'length' 'int'
| | | `-ImplicitCastExpr 0x5606ec6b0ba0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5606ec6b0b70 <col:12> 'const int' lvalue .length 0x5606ec6a8028
| | |     `-DeclRefExpr 0x5606ec6b0b50 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6ae368 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5606ec6a80b8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5606ec6b0c30 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5606ec6b0c00 <col:12> 'String::memo_t *const' lvalue .memo 0x5606ec6a80b8
| | |     `-DeclRefExpr 0x5606ec6b0be0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6ae368 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5606ec6b0c88 <col:12>
| |-CXXConstructorDecl 0x5606ec6ae408 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5606ec6ae408
| | `-ParmVarDecl 0x5606ec6ae518 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5606ec6b3a70 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5606ec6bf488 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5606ec6bf598 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5606ec6bfab0 <col:12>
| |   |-BinaryOperator 0x5606ec6bf8c8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5606ec6bf880 <col:12> 'const char *' lvalue ->data 0x5606ec6a7fc0
| |   | | `-CXXThisExpr 0x5606ec6bf870 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5606ec6bf8b0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5606ec6bf840 <col:12> 'const char *const' lvalue .data 0x5606ec6a7fc0
| |   |     `-DeclRefExpr 0x5606ec6bf820 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6bf598 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5606ec6bf990 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5606ec6bf948 <col:12> 'int' lvalue ->length 0x5606ec6a8028
| |   | | `-CXXThisExpr 0x5606ec6bf938 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5606ec6bf978 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5606ec6bf908 <col:12> 'const int' lvalue .length 0x5606ec6a8028
| |   |     `-DeclRefExpr 0x5606ec6bf8e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6bf598 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5606ec6bfa58 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5606ec6bfa10 <col:12> 'String::memo_t *' lvalue ->memo 0x5606ec6a80b8
| |   | | `-CXXThisExpr 0x5606ec6bfa00 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5606ec6bfa40 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5606ec6bf9d0 <col:12> 'String::memo_t *const' lvalue .memo 0x5606ec6a80b8
| |   |     `-DeclRefExpr 0x5606ec6bf9b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5606ec6bf598 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5606ec6bfaa0 <col:12>
| |     `-UnaryOperator 0x5606ec6bfa88 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5606ec6bfa78 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5606ec6bf608 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5606ec6bf608
|   `-ParmVarDecl 0x5606ec6bf718 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5606ec6a8130 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5606ec6a8378 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5606ec6a8198 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5606ec6a8218 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5606ec6a8290 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5606ec6ae110 <col:79, line:261:5>
|   |-BinaryOperator 0x5606ec6add88 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5606ec6add20 <col:2, col:5> 'const char *' lvalue .data 0x5606ec6a7fc0
|   | | `-MemberExpr 0x5606ec6adcf0 <col:2> 'String::rep_t' lvalue ->_r 0x5606ec6a8130
|   | |   `-CXXThisExpr 0x5606ec6adce0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5606ec6add70 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5606ec6add50 <col:12> 'const char *' lvalue ParmVar 0x5606ec6a8198 'data' 'const char *'
|   |-BinaryOperator 0x5606ec6ade50 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5606ec6adde8 <col:2, col:5> 'int' lvalue .length 0x5606ec6a8028
|   | | `-MemberExpr 0x5606ec6addb8 <col:2> 'String::rep_t' lvalue ->_r 0x5606ec6a8130
|   | |   `-CXXThisExpr 0x5606ec6adda8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5606ec6ade38 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5606ec6ade18 <col:14> 'int' lvalue ParmVar 0x5606ec6a8218 'length' 'int'
|   `-IfStmt 0x5606ec6ae0f8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5606ec6adf70 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5606ec6adf58 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5606ec6adf38 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5606ec6adf18 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5606ec6adeb0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5606ec6a80b8
|     |       | `-MemberExpr 0x5606ec6ade80 <col:7> 'String::rep_t' lvalue ->_r 0x5606ec6a8130
|     |       |   `-CXXThisExpr 0x5606ec6ade70 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5606ec6adf00 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5606ec6adee0 <col:17> 'String::memo_t *' lvalue ParmVar 0x5606ec6a8290 'memo' 'String::memo_t *'
|     `-CallExpr 0x5606ec6ae0d0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5606ec6ae0b8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5606ec6adfc0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5606ec696da8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5606ec6ae028 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5606ec6a7988
|         `-ImplicitCastExpr 0x5606ec6ae010 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5606ec6adff0 <col:27> 'String::memo_t *' lvalue ParmVar 0x5606ec6a8290 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5606ec6a8628 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5606ec6a8448 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5606ec6a84c8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5606ec6a8540 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5606ec6a8130 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5606ec6ae598 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5606ec6ae728 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5606ec6ae690 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5606ec6ae600 <col:2> '<bound member function type>' ->assign_memo 0x5606ec6a8378
|     | `-ImplicitCastExpr 0x5606ec6ae6c8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5606ec6ae5f0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5606ec6ae6e0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5606ec6ae630 <col:14> 'const char *' lvalue ParmVar 0x5606ec6a8448 'data' 'const char *'
|     |-ImplicitCastExpr 0x5606ec6ae6f8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5606ec6ae650 <col:20> 'int' lvalue ParmVar 0x5606ec6a84c8 'length' 'int'
|     `-ImplicitCastExpr 0x5606ec6ae710 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5606ec6ae670 <col:28> 'String::memo_t *' lvalue ParmVar 0x5606ec6a8540 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5606ec6a87b8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5606ec6a86f8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5606ec6ae980 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5606ec6ae900 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5606ec6ae750 <col:2> '<bound member function type>' ->assign_memo 0x5606ec6a8378
|     | `-CXXThisExpr 0x5606ec6ae740 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5606ec6ae938 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5606ec6ae7d0 <col:14, col:19> 'const char *' lvalue .data 0x5606ec6a7fc0
|     |   `-MemberExpr 0x5606ec6ae7a0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5606ec6a8130
|     |     `-DeclRefExpr 0x5606ec6ae780 <col:14> 'const String' lvalue ParmVar 0x5606ec6a86f8 'x' 'const String &'
|     |-ImplicitCastExpr 0x5606ec6ae950 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5606ec6ae850 <col:25, col:30> 'int' lvalue .length 0x5606ec6a8028
|     |   `-MemberExpr 0x5606ec6ae820 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5606ec6a8130
|     |     `-DeclRefExpr 0x5606ec6ae800 <col:25> 'const String' lvalue ParmVar 0x5606ec6a86f8 'x' 'const String &'
|     `-ImplicitCastExpr 0x5606ec6ae968 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5606ec6ae8d0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5606ec6a80b8
|         `-MemberExpr 0x5606ec6ae8a0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5606ec6a8130
|           `-DeclRefExpr 0x5606ec6ae880 <col:38> 'const String' lvalue ParmVar 0x5606ec6a86f8 'x' 'const String &'
|-CXXMethodDecl 0x5606ec6a8880 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5606ec6af340 <col:31, line:278:5>
|   `-IfStmt 0x5606ec6af328 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5606ec6aea20 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5606ec6aea08 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5606ec6ae9d8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5606ec6a80b8
|     |     `-MemberExpr 0x5606ec6ae9a8 <col:6> 'String::rep_t' lvalue ->_r 0x5606ec6a8130
|     |       `-CXXThisExpr 0x5606ec6ae998 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5606ec6af300 <col:15, line:277:2>
|       |-ParenExpr 0x5606ec6aeed0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5606ec6aeea0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5606ec6aeb30 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5606ec6aeb18 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5606ec6aeb00 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5606ec6aeac0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5606ec6a7988
|       |   |       `-ImplicitCastExpr 0x5606ec6aeaa8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5606ec6aea78 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5606ec6a80b8
|       |   |           `-MemberExpr 0x5606ec6aea48 <col:27> 'String::rep_t' lvalue ->_r 0x5606ec6a8130
|       |   |             `-CXXThisExpr 0x5606ec6aea38 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5606ec6aeb90 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5606ec6aeb70 <col:54> 'int' 0
|       |   `-CallExpr 0x5606ec6aee00 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5606ec6aede8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5606ec6aed68 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5606ec40e000 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5606ec6aee40 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5606ec6aec78 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5606ec6aee58 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5606ec6aeca8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5606ec6aee70 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5606ec6aece0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5606ec6aee88 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5606ec6aed50 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5606ec6aed38 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5606ec6aed00 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5606ec6af220 <line:274:6, line:275:22>
|       | |-CallExpr 0x5606ec6af0e0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5606ec6af0c8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5606ec6af040 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5606ec6981f0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5606ec6af010 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5606ec6a7988
|       | |   `-ImplicitCastExpr 0x5606ec6aeff8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5606ec6aefc8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5606ec6a80b8
|       | |       `-MemberExpr 0x5606ec6aef98 <col:40> 'String::rep_t' lvalue ->_r 0x5606ec6a8130
|       | |         `-CXXThisExpr 0x5606ec6aef88 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5606ec6af1e0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5606ec6af1c8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5606ec6af108 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5606ec6ad060 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5606ec6af208 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5606ec6af168 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5606ec6a80b8
|       |       `-MemberExpr 0x5606ec6af138 <col:15> 'String::rep_t' lvalue ->_r 0x5606ec6a8130
|       |         `-CXXThisExpr 0x5606ec6af128 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5606ec6af2e0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5606ec6af278 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5606ec6a80b8
|         | `-MemberExpr 0x5606ec6af248 <col:6> 'String::rep_t' lvalue ->_r 0x5606ec6a8130
|         |   `-CXXThisExpr 0x5606ec6af238 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5606ec6af2c8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5606ec6af2a8 <col:16> 'int' 0
|-CXXMethodDecl 0x5606ec6a8b18 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5606ec6a8938 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5606ec6a89b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5606ec6a8a30 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5606ec6a8bf0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5606ec6a8e40 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5606ec6a8ca8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5606ec6a8d28 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5606ec6a8da0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5606ec6a9028 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5606ec6a8f10 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5606ec6a8f90 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5606ec6a9128 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5606ec6af418 <col:41, line:286:5>
|   `-ReturnStmt 0x5606ec6af408 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5606ec6af3d8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5606ec6af3a0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5606ec6af388 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5606ec6af368 <col:46> 'int' 1
|-CXXMethodDecl 0x5606ec6a93c8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5606ec6a91e0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5606ec6a9260 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5606ec6a92e0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5606ec6ad060 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5606ec6a9490 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5606ec6ad130 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5606ec6ad300 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5606ec6ad1e8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5606ec6ad268 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5606ec6ad3c0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5606ec6ad488 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5606ec6ad588 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5606ec6ad600 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5606ec6ad678 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5606ec6ad6e0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5606ec6ad7e0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5606ec6ad830 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5606ec6ad7c0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5606ec6ad7a0 <col:22> 'int' 14
|-CXXMethodDecl 0x5606ec6ada48 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5606ec6ad860 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5606ec6ad8e0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5606ec6ad960 <col:43> col:46 'int'
|-FriendDecl 0x5606ec6adb50 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5606ec6adbe0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
