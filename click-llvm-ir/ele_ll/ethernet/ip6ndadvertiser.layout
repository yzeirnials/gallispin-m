
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2)
         0 |   uint32_t ip6_un1_flow
         4 |   uint16_t ip6_un1_plen
         6 |   uint8_t ip6_un1_nxt
         7 |   uint8_t ip6_un1_hlim
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2)
     0:0-3 |   unsigned int ip6_un3_fc
     0:4-7 |   unsigned int ip6_un3_v
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5)
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |     uint32_t ip6_un1_flow
         4 |     uint16_t ip6_un1_plen
         6 |     uint8_t ip6_un1_nxt
         7 |     uint8_t ip6_un1_hlim
         0 |   uint8_t ip6_un2_vfc
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |     unsigned int ip6_un3_fc
     0:4-7 |     unsigned int ip6_un3_v
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IP6Address
         0 |   struct in6_addr _addr
         0 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |       uint8_t [16] __u6_addr8
         0 |       uint16_t [8] __u6_addr16
         0 |       uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class EtherAddress
         0 |   uint16_t [3] _data
           | [sizeof=6, dsize=6, align=1,
           |  nvsize=6, nvalign=1]

*** Dumping AST Record Layout
         0 | struct IP6NDAdvertiser::Entry
         0 |   class IP6Address dst
         0 |     struct in6_addr _addr
         0 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |         uint8_t [16] __u6_addr8
         0 |         uint16_t [8] __u6_addr16
         0 |         uint32_t [4] __u6_addr32
        16 |   class IP6Address mask
        16 |     struct in6_addr _addr
        16 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        16 |         uint8_t [16] __u6_addr8
        16 |         uint16_t [8] __u6_addr16
        16 |         uint32_t [4] __u6_addr32
        32 |   class EtherAddress ena
        32 |     uint16_t [3] _data
           | [sizeof=40, dsize=38, align=4,
           |  nvsize=38, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d98a8a8 prev 0x55557d982048 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557d98a9a0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55557d98aa30 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55557d98aaa8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55557d98ab68 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55557d98ac30 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55557d98ada8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55557d98ace0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55557d98ae50 <col:24>
| `-OptimizeNoneAttr 0x55557d98aea8 <col:34>
|-CXXMethodDecl 0x55557d98aef0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55557d98b1a8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55557d98afa0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55557d98b018 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55557d98b098 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55557d98b260 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55557d98b298 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55557d98b300 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55557d98b388 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55557d98b6a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55557d98b440 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55557d98b4b8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55557d98b530 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55557d98b5b0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55557d98b7c0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55557d993138 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55557d993138
| `-ParmVarDecl 0x55557d993248 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55557d9932e8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55557d9932e8
| `-ParmVarDecl 0x55557d9933f8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55557da9afc8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d97d8c0 prev 0x55557d97d640 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55557d97d9b8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55557d97da48 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55557d97daa8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55557d97db98 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55557d97dc98 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55557d97de68 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55557d97dd18 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55557d97dd90 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55557d97dff8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55557d97df30 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55557d97e0a0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55557d97e1d8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55557d97e110 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55557d97e378 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55557d97e2b8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55557d97e518 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55557d97e458 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55557d97e5c0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55557d97e6c0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55557d97e7a0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d97e6a0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55557d97e680 <col:26> 'int' 1
| `-EnumConstantDecl 0x55557d97e750 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55557d97e7b8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d97e730 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55557d97e710 <col:44> 'int' 2
|-CXXMethodDecl 0x55557d97e900 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55557d97e7e8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55557d97e868 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55557d97ea58 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55557d97e9c8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55557d97ec98 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55557d97eb18 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55557d97eb90 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55557d97ed48 <col:20>
| `-OptimizeNoneAttr 0x55557d97eda0 <col:30>
|-CXXMethodDecl 0x55557d97eea8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55557d97ede0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55557d97ef50 <col:20>
| `-OptimizeNoneAttr 0x55557d97efa8 <col:30>
|-CXXMethodDecl 0x55557d97eff8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55557d97f0c0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55557d97f1d8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55557d97f260 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55557d97f2e8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55557d97f370 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55557d97f3f8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55557d97f488 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55557d97f548 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55557d97f5d0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55557d97f658 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55557d97f6e0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55557d97f768 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55557d97f7f0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55557d97f880 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55557d97f940 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55557d97f9d0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55557d97fb20 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55557d97fa88 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55557d97fcb0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55557d97fbe0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55557d97ff60 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55557d97fd68 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55557d97fde8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55557d97fe68 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55557d980018 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55557d980120 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55557d9803b0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d980100 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55557d9800e0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55557d9801b0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55557d9803c8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d980190 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55557d980170 <col:32> 'int' 20
| |-EnumConstantDecl 0x55557d980240 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55557d9803e0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d980220 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55557d980200 <col:38> 'int' 90
| |-EnumConstantDecl 0x55557d9802d0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55557d9803f8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d9802b0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55557d980290 <col:35> 'int' 100
| `-EnumConstantDecl 0x55557d980360 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55557d980410 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d980340 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55557d980320 <col:32> 'int' 2000
|-CXXMethodDecl 0x55557d980450 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55557d980890 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55557d980700 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55557d980778 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55557d980960 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55557d980ae0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55557d980a10 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55557d980ce8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55557d980b98 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55557d980c10 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55557d980de8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55557d980e88 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55557d980f50 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55557d980fe0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55557d981210 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d980fc0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55557d980fa0 <col:36> 'int' EnumConstant 0x55557d980f50 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55557d981030 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55557d981080 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55557d9810d0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55557d981120 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55557d981170 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55557d9811c0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55557d9812f8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55557d981238 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55557d9813c0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55557d981480 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55557d981540 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55557d981600 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55557d981718 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55557d9817e0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55557d981960 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55557d981890 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55557d981a88 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55557d981c88 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55557d981b38 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55557d981bb8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55557d98f5d8 <col:54, line:127:5>
|   |-ParenExpr 0x55557d98f488 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55557d98f458 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55557d98f148 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55557d98f120 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55557d98f108 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55557d98f0f0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55557d98f0c0 <col:31> 'Router *' lvalue ->_router 0x55557d98cfa0
|   |   |         `-CXXThisExpr 0x55557d98f0b0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55557d98f1a8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d98f188 <col:48> 'int' 0
|   |   `-CallExpr 0x55557d98f3b8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55557d98f3a0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d98f380 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d98f3f8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d98f218 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55557d98f410 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d98f238 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55557d98f428 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d98f270 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55557d98f440 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d98f368 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d98f350 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d98f308 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55557d98f520 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55557d98f4b8 <col:9> 'Router *' lvalue ->_router 0x55557d98cfa0
|   | | `-CXXThisExpr 0x55557d98f4a8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55557d98f508 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55557d98f4e8 <col:19> 'Router *' lvalue ParmVar 0x55557d981b38 'r' 'Router *'
|   `-BinaryOperator 0x55557d98f5b8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55557d98f550 <col:9> 'int' lvalue ->_eindex 0x55557d98d008
|     | `-CXXThisExpr 0x55557d98f540 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55557d98f5a0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55557d98f580 <col:19> 'int' lvalue ParmVar 0x55557d981bb8 'eindex' 'int'
|-CXXMethodDecl 0x55557d981e10 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55557d981d48 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55557d981ee0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55557d981fa8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55557d982048 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55557d982298 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55557d982110 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55557d982190 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55557d982348 <col:20>
| `-OptimizeNoneAttr 0x55557d9823a0 <col:30>
|-CXXMethodDecl 0x55557d9824a8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55557d9823e0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55557d982550 <col:20>
| `-OptimizeNoneAttr 0x55557d9825a8 <col:30>
|-CXXMethodDecl 0x55557d982678 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55557d9825e8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55557d982720 <col:20>
| `-OptimizeNoneAttr 0x55557d982778 <col:30>
|-CXXMethodDecl 0x55557d982908 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55557d9827b0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55557d982830 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55557d982a98 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55557d9829d0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55557d982be8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55557d982b58 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55557d982d38 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55557d982ca8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55557d982e88 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55557d982df8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55557d983148 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55557d982f40 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55557d982fc0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55557d983068 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55557d983220 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55557d9832e0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55557d9835b0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55557d983460 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55557d9834d8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55557d9836d8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55557d9838b0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55557d983790 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55557d983810 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55557d983a98 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55557d983978 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55557d9839f8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55557d983e08 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55557d983b58 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55557d983bd0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55557d983c50 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55557d98ebc0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55557d98eba0 <col:106> 'int' 0
| `-ParmVarDecl 0x55557d983cc8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55557d98ebf8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55557d98ebd8 <col:126> 'int' 0
|-CXXMethodDecl 0x55557d9841a8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55557d983ed8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55557d983f70 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55557d983ff0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55557d984068 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55557d98ec30 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55557d98ec10 <col:114> 'int' 0
|-CXXMethodDecl 0x55557d984538 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55557d984280 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55557d9842f8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55557d984378 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55557d98ec48 <col:96> 'int' 0
| `-ParmVarDecl 0x55557d9843f0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55557d98ec88 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55557d98ec68 <col:116> 'int' 0
|-CXXMethodDecl 0x55557d9848b8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55557d984608 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55557d984680 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55557d984700 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55557d98ecc0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55557d98eca0 <col:109> 'int' 0
| `-ParmVarDecl 0x55557d984778 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55557d98ecf8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55557d98ecd8 <col:129> 'int' 0
|-CXXMethodDecl 0x55557d984c38 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55557d984988 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55557d984a00 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55557d984a80 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55557d984af8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55557d98ed30 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55557d98ed10 <col:117> 'int' 0
|-CXXMethodDecl 0x55557d984fc8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55557d984d10 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d984d88 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55557d984e08 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55557d98ed48 <col:99> 'int' 0
| `-ParmVarDecl 0x55557d984e80 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55557d98ed88 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55557d98ed68 <col:119> 'int' 0
|-CXXMethodDecl 0x55557d9853e8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55557d985098 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55557d985118 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55557d985190 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55557d985210 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55557d98edc0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55557d98eda0 <col:108> 'int' 0
| `-ParmVarDecl 0x55557d985290 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55557d98edf8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55557d98edd8 <col:141> 'int' 0
|-CXXMethodDecl 0x55557d985808 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55557d9854c0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55557d985540 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55557d9855b8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55557d985638 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55557d9856b8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55557d98ee10 <col:121> 'int' 0
|-CXXMethodDecl 0x55557d985c38 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55557d9858e8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55557d985968 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55557d9859e0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55557d985a60 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55557d98ee30 <col:98> 'int' 0
| `-ParmVarDecl 0x55557d985ae0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55557d98ee50 <col:123> 'int' 0
|-CXXMethodDecl 0x55557d985f00 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55557d985d10 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55557d985d90 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55557d985e10 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55557d98ee70 <col:80> 'int' 0
|-EnumDecl 0x55557d985fb8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55557d9860c0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55557d986350 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d9860a0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55557d986080 <col:42> 'int' 1
| |-EnumConstantDecl 0x55557d986150 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55557d986368 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d986130 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55557d986110 <col:40> 'int' 2
| |-EnumConstantDecl 0x55557d9861e0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55557d986380 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d9861c0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55557d9861a0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55557d986270 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55557d986398 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d986250 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55557d986230 <col:36> 'int' 7
| `-EnumConstantDecl 0x55557d986300 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55557d9863b0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d9862e0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55557d9862c0 <col:34> 'int' 6
|-CXXMethodDecl 0x55557d986668 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55557d9863d8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55557d986478 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55557d9864f8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55557d986570 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55557d98ef28 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55557d98ef10 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55557d98eef8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55557d98eed8 <col:98, col:105> 'String' (CXXTemporary 0x55557d98eed8)
|           `-CXXTemporaryObjectExpr 0x55557d98eea0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55557d986908 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55557d986738 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55557d9867b0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55557d986828 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55557d98efd8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55557d98efc0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55557d98efa8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55557d98ef88 <col:94, col:101> 'String' (CXXTemporary 0x55557d98ef88)
| |         `-CXXTemporaryObjectExpr 0x55557d98ef50 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55557d98f7c0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55557d98f738 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55557d98f708 <col:9> '<bound member function type>' ->add_task_handlers 0x55557d986668
|     | `-CXXThisExpr 0x55557d98f6f8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55557d98f778 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55557d98f678 <col:27> 'Task *' lvalue ParmVar 0x55557d986738 'task' 'Task *'
|     |-ImplicitCastExpr 0x55557d98f790 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55557d98f698 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55557d9867b0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55557d98f7a8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55557d98f6b8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55557d986300 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55557d98f6d8 <col:62> 'const String' lvalue ParmVar 0x55557d986828 'prefix' 'const String &'
|-CXXMethodDecl 0x55557d986b18 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55557d9869d0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55557d986a48 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55557d98f088 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55557d98f070 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55557d98f058 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55557d98f038 <col:70, col:77> 'String' (CXXTemporary 0x55557d98f038)
| |         `-CXXTemporaryObjectExpr 0x55557d98f000 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55557d98f998 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55557d98f910 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55557d98f8e0 <col:9> '<bound member function type>' ->add_task_handlers 0x55557d986668
|     | `-CXXThisExpr 0x55557d98f8d0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55557d98f950 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55557d98f850 <col:27> 'Task *' lvalue ParmVar 0x55557d9869d0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55557d98f968 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55557d98f870 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55557d98f980 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55557d98f890 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55557d986300 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55557d98f8b0 <col:57> 'const String' lvalue ParmVar 0x55557d986a48 'prefix' 'const String &'
|-CXXMethodDecl 0x55557d986df8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55557d986be0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d986c60 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d986cd8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55557d9870a8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55557d986ec8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d986f48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d986fc8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55557d987398 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55557d987178 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d9871f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d987270 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55557d987648 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55557d987468 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d9874e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d987568 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55557d9878f8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55557d987718 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d987798 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d987818 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55557d987ba8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55557d9879c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d987a48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d987ac0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55557d987e58 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55557d987c78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d987cf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d987d78 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55557d988168 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55557d987f80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d988000 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d988080 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55557d988448 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55557d988238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d9882b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d988360 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55557d988728 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55557d988518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d988598 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d988640 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55557d988990 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55557d9887f8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55557d988878 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55557d9888f0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55557d988c38 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55557d988a60 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55557d988ae0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55557d988b58 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55557d988ee8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55557d988d08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d988d88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d988e08 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55557d989198 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55557d988fb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d989038 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d9890b0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55557d989448 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55557d989268 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d9892e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d989360 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55557d989718 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55557d989518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d989598 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55557d989638 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55557d989a48 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55557d9897e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55557d989868 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55557d9898e0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55557d989958 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55557d98f0a0 <col:93> 'bool' false
|-CXXMethodDecl 0x55557d989c30 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55557d989b18 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55557d989b98 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55557d989e08 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55557d989cf0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55557d989d70 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55557d98a0e8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55557d989ec8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55557d989f40 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55557d989fc0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55557d98a038 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55557d98a3d8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55557d98a1b8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55557d98a230 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55557d98a2b0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55557d98a328 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55557d98a610 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55557d98a4b0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55557d98a530 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55557d98a7f8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55557d98a6d8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55557d98a758 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55557d98a8a8 prev 0x55557d982048 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55557d98a9a0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55557d98aa30 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55557d98aaa8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55557d98ab68 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55557d98ac30 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55557d98ada8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55557d98ace0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55557d98ae50 <col:24>
| | `-OptimizeNoneAttr 0x55557d98aea8 <col:34>
| |-CXXMethodDecl 0x55557d98aef0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55557d98b1a8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55557d98afa0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55557d98b018 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55557d98b098 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55557d98b260 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55557d98b298 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55557d98b300 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55557d98b388 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55557d98b6a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55557d98b440 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55557d98b4b8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55557d98b530 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55557d98b5b0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55557d98b7c0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55557d993138 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55557d993138
| | `-ParmVarDecl 0x55557d993248 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55557d9932e8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55557d9932e8
| | `-ParmVarDecl 0x55557d9933f8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55557da9afc8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55557d98b838 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55557d98b8d8 <col:38> "" ""
|-CXXMethodDecl 0x55557d98b968 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55557d98ba08 <col:44> "" ""
|-AccessSpecDecl 0x55557d98ba78 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55557d98baa0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55557d98bba0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55557d98bbf0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d98bb80 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55557d98bb60 <col:27> 'int' 4
|-FieldDecl 0x55557d98bca8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55557d98be58 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55557d98bf10 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55557d98cfa0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55557d98d008 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55557d98d158 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55557d98d098 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55557d98d308 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55557d98d218 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55557d98d4e8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55557d98d3c8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55557d98d448 <col:25> col:28 'int'
|-CXXMethodDecl 0x55557d98d790 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55557d98d5b0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55557d98d630 <col:28> col:31 'int'
| `-ParmVarDecl 0x55557d98d6a8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55557d98d848 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55557d98d910 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55557d98d960 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55557d98d9b0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55557d98db90 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55557d98da40 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55557d98dab8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55557d98de38 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55557d98dc58 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55557d98dcd8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55557d98dd50 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55557d98e058 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55557d98df08 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55557d98df88 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55557d98e390 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55557d98e118 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55557d98e198 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55557d98e210 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55557d98e290 <col:57> col:60 'int'
|-CXXMethodDecl 0x55557d98e578 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55557d98e460 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55557d98e4e0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55557d98e6c8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55557d98e638 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55557d98ea48 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55557d98e788 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55557d98e808 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55557d98e880 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55557d98e900 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55557d98eb60 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<40> >
         0 |   vector_memory<class sized_array_memory<40> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct IP6NDAdvertiser::Entry>
         0 |   class vector_memory<class sized_array_memory<40> > vm_
         0 |     vector_memory<class sized_array_memory<40> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IP6NDAdvertiser
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Vector<struct IP6NDAdvertiser::Entry> _v
       112 |     class vector_memory<class sized_array_memory<40> > vm_
       112 |       vector_memory<class sized_array_memory<40> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55557d9cb080 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<40>'
|-CXXRecordDecl 0x55557d9cb258 prev 0x55557d9cb080 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55557d9cb2e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55557d9cb310 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55557d41b3b0 'int'
|-TypedefDecl 0x55557d9ccee0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<40>::type':'char_array<40>'
| `-ElaboratedType 0x55557d9cce90 'typename sized_array_memory<40>::type' sugar
|   `-TypedefType 0x55557d9cb7c0 'sized_array_memory<40>::type' sugar
|     |-Typedef 0x55557d9cb6c0 'type'
|     `-TemplateSpecializationType 0x55557d9cb650 'char_array<40UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55557d9cb530 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 40
|       |   `-SubstNonTypeTemplateParmExpr 0x55557d9cb510 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55557d9cb4f0 <col:24> 'unsigned long' 40
|       `-RecordType 0x55557d9cb630 'char_array<40>'
|         `-ClassTemplateSpecialization 0x55557d9cb550 'char_array'
|-TypedefDecl 0x55557d9ccf98 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<40> >::type *'
| `-PointerType 0x55557d9ccf60 'vector_memory<sized_array_memory<40> >::type *'
|   `-TypedefType 0x55557d9ccf40 'vector_memory<sized_array_memory<40> >::type' sugar
|     |-Typedef 0x55557d9ccee0 'type'
|     `-ElaboratedType 0x55557d9cce90 'typename sized_array_memory<40>::type' sugar
|       `-TypedefType 0x55557d9cb7c0 'sized_array_memory<40>::type' sugar
|         |-Typedef 0x55557d9cb6c0 'type'
|         `-TemplateSpecializationType 0x55557d9cb650 'char_array<40UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55557d9cb530 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 40
|           |   `-SubstNonTypeTemplateParmExpr 0x55557d9cb510 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55557d9cb4f0 <col:24> 'unsigned long' 40
|           `-RecordType 0x55557d9cb630 'char_array<40>'
|             `-ClassTemplateSpecialization 0x55557d9cb550 'char_array'
|-CXXMethodDecl 0x55557d9cd118 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<40> >::type *) const' inline
| `-ParmVarDecl 0x55557d9cd028 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXConstructorDecl 0x55557d9cd208 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55557d9cd2e8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55557d9cd5b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<40> > &)'
| `-ParmVarDecl 0x55557d9cd4c0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<40> > &'
|-CXXMethodDecl 0x55557d9cd7f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<40> >::type *)'
| |-ParmVarDecl 0x55557d9cd670 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55557d9cd6e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55557d9cd9c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<40> >::type *)'
| |-ParmVarDecl 0x55557d9cd8b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55557d9cd930 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55557d9cdb28 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<40> >::iterator ()'
|-CXXMethodDecl 0x55557d9cdbf8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<40> >::iterator ()'
|-CXXMethodDecl 0x55557d9cde48 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<40> >::iterator (vector_memory<sized_array_memory<40> >::iterator, const vector_memory<sized_array_memory<40> >::type *)'
| |-ParmVarDecl 0x55557d9cdcb8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<40> >::iterator':'vector_memory<sized_array_memory<40> >::type *'
| `-ParmVarDecl 0x55557d9cdd30 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55557d9ce0a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<40> >::iterator (vector_memory<sized_array_memory<40> >::iterator, vector_memory<sized_array_memory<40> >::iterator)'
| |-ParmVarDecl 0x55557d9cdf18 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<40> >::iterator':'vector_memory<sized_array_memory<40> >::type *'
| `-ParmVarDecl 0x55557d9cdf90 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<40> >::iterator':'vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55557d9ce268 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<40> >::type *)' inline
| `-ParmVarDecl 0x55557d9ce178 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55557d9ce428 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<40> >::type *)' inline
| `-ParmVarDecl 0x55557d9ce330 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55557d9ce560 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55557d9ce610 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55557d9ce848 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<40> >::type *)'
| |-ParmVarDecl 0x55557d9ce6c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55557d9ce738 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55557d9ceae8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<40> > &)'
| `-ParmVarDecl 0x55557d9ce9f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<40> > &'
|-FieldDecl 0x55557d9cebb0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<40> >::type *'
|-FieldDecl 0x55557d9cec00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55557d9cec50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55557d9c9830 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IP6NDAdvertiser::Entry'
|-CXXRecordDecl 0x55557d9c9a38 prev 0x55557d9c9830 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55557d9caff0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Entry>::type':'sized_array_memory<40>'
| `-ElaboratedType 0x55557d9cafa0 'typename array_memory<Entry>::type' sugar
|   `-TypedefType 0x55557d9caf80 'conditional<true, sized_array_memory<40>, typed_array_memory<IP6NDAdvertiser::Entry> >::type' sugar
|     |-Typedef 0x55557d9cae30 'type'
|     `-SubstTemplateTypeParmType 0x55557d9cac50 'sized_array_memory<40>' sugar
|       |-TemplateTypeParmType 0x55557d6e1ba0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d6e1b48 'T'
|       `-RecordType 0x55557d9ca7a0 'sized_array_memory<40>'
|         `-ClassTemplateSpecialization 0x55557d9ca6c0 'sized_array_memory'
|-FieldDecl 0x55557d9ceca0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IP6NDAdvertiser::Entry>::array_memory_type>':'vector_memory<sized_array_memory<40> >' mutable
|-AccessSpecDecl 0x55557d9cecf0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55557d9ced28 <line:118:5, col:15> col:15 value_type 'IP6NDAdvertiser::Entry':'IP6NDAdvertiser::Entry'
| `-SubstTemplateTypeParmType 0x55557d9c9ad0 'IP6NDAdvertiser::Entry' sugar
|   |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55557d719838 'T'
|   `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|     `-CXXRecord 0x55557d9c9540 'Entry'
|-TypedefDecl 0x55557d9cede8 <line:119:5, col:16> col:16 reference 'IP6NDAdvertiser::Entry &'
| `-LValueReferenceType 0x55557d9cedb0 'IP6NDAdvertiser::Entry &'
|   `-SubstTemplateTypeParmType 0x55557d9c9ad0 'IP6NDAdvertiser::Entry' sugar
|     |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55557d719838 'T'
|     `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|       `-CXXRecord 0x55557d9c9540 'Entry'
|-TypedefDecl 0x55557d9ceea8 <line:120:5, col:22> col:22 const_reference 'const IP6NDAdvertiser::Entry &'
| `-LValueReferenceType 0x55557d9cee70 'const IP6NDAdvertiser::Entry &'
|   `-QualType 0x55557d9c9ad1 'const IP6NDAdvertiser::Entry' const
|     `-SubstTemplateTypeParmType 0x55557d9c9ad0 'IP6NDAdvertiser::Entry' sugar
|       |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d719838 'T'
|       `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|         `-CXXRecord 0x55557d9c9540 'Entry'
|-TypedefDecl 0x55557d9cef68 <line:121:5, col:16> col:16 pointer 'IP6NDAdvertiser::Entry *'
| `-PointerType 0x55557d9cef30 'IP6NDAdvertiser::Entry *'
|   `-SubstTemplateTypeParmType 0x55557d9c9ad0 'IP6NDAdvertiser::Entry' sugar
|     |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55557d719838 'T'
|     `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|       `-CXXRecord 0x55557d9c9540 'Entry'
|-TypedefDecl 0x55557d9cf028 <line:122:5, col:22> col:22 const_pointer 'const IP6NDAdvertiser::Entry *'
| `-PointerType 0x55557d9ceff0 'const IP6NDAdvertiser::Entry *'
|   `-QualType 0x55557d9c9ad1 'const IP6NDAdvertiser::Entry' const
|     `-SubstTemplateTypeParmType 0x55557d9c9ad0 'IP6NDAdvertiser::Entry' sugar
|       |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d719838 'T'
|       `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|         `-CXXRecord 0x55557d9c9540 'Entry'
|-TypedefDecl 0x55557d9cfe90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Entry>::type':'const IP6NDAdvertiser::Entry &'
| `-ElaboratedType 0x55557d9cfe40 'typename fast_argument<Entry>::type' sugar
|   `-TypedefType 0x55557d9cfe20 'fast_argument<IP6NDAdvertiser::Entry, true>::type' sugar
|     |-Typedef 0x55557d9cfd58 'type'
|     `-LValueReferenceType 0x55557d9cfd20 'const IP6NDAdvertiser::Entry &'
|       `-QualType 0x55557d9cfac1 'const IP6NDAdvertiser::Entry' const
|         `-SubstTemplateTypeParmType 0x55557d9cfac0 'IP6NDAdvertiser::Entry' sugar
|           |-TemplateTypeParmType 0x55557d6ec270 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55557d6ec218 'T'
|           `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|             `-CXXRecord 0x55557d9c9540 'Entry'
|-TypedefDecl 0x55557d9cfef8 <line:126:5, col:22> col:22 const_access_type 'const IP6NDAdvertiser::Entry &'
| `-LValueReferenceType 0x55557d9cee70 'const IP6NDAdvertiser::Entry &'
|   `-QualType 0x55557d9c9ad1 'const IP6NDAdvertiser::Entry' const
|     `-SubstTemplateTypeParmType 0x55557d9c9ad0 'IP6NDAdvertiser::Entry' sugar
|       |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d719838 'T'
|       `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|         `-CXXRecord 0x55557d9c9540 'Entry'
|-TypedefDecl 0x55557d9cff50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55557d41b3b0 'int'
|-TypedefDecl 0x55557d9cffb8 <line:130:5, col:16> col:16 iterator 'IP6NDAdvertiser::Entry *'
| `-PointerType 0x55557d9cef30 'IP6NDAdvertiser::Entry *'
|   `-SubstTemplateTypeParmType 0x55557d9c9ad0 'IP6NDAdvertiser::Entry' sugar
|     |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55557d719838 'T'
|     `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|       `-CXXRecord 0x55557d9c9540 'Entry'
|-TypedefDecl 0x55557d9d0020 <line:131:5, col:22> col:22 const_iterator 'const IP6NDAdvertiser::Entry *'
| `-PointerType 0x55557d9ceff0 'const IP6NDAdvertiser::Entry *'
|   `-QualType 0x55557d9c9ad1 'const IP6NDAdvertiser::Entry' const
|     `-SubstTemplateTypeParmType 0x55557d9c9ad0 'IP6NDAdvertiser::Entry' sugar
|       |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d719838 'T'
|       `-RecordType 0x55557d9c95d0 'IP6NDAdvertiser::Entry'
|         `-CXXRecord 0x55557d9c9540 'Entry'
|-EnumDecl 0x55557d9d0078 <line:134:5> col:5
| `-EnumConstantDecl 0x55557d9d0170 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IP6NDAdvertiser::Entry>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55557d9d0150 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55557d71af18 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55557d71aef0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55557d71aed0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55557d9d01f8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55557d9d0488 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IP6NDAdvertiser::Entry>::value_argument_type)' inline
| |-ParmVarDecl 0x55557d9d02b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55557d9d0350 <col:41, col:61> col:61 v 'Vector<IP6NDAdvertiser::Entry>::value_argument_type':'const IP6NDAdvertiser::Entry &'
|-CXXConstructorDecl 0x55557d9d0748 <line:139:5, col:37> col:12 Vector 'void (const Vector<IP6NDAdvertiser::Entry> &)' inline
| `-ParmVarDecl 0x55557d9d0630 <col:19, col:36> col:36 x 'const Vector<IP6NDAdvertiser::Entry> &'
|-CXXConstructorDecl 0x55557d9d0a08 <line:141:5, col:32> col:12 Vector 'void (Vector<IP6NDAdvertiser::Entry> &&)' inline
| `-ParmVarDecl 0x55557d9d08f0 <col:19, col:31> col:31 x 'Vector<IP6NDAdvertiser::Entry> &&'
|-CXXMethodDecl 0x55557d9d0d50 <line:144:5, col:51> col:23 operator= 'Vector<IP6NDAdvertiser::Entry> &(const Vector<IP6NDAdvertiser::Entry> &)' inline
| `-ParmVarDecl 0x55557d9d0c30 <col:33, col:50> col:50 x 'const Vector<IP6NDAdvertiser::Entry> &'
|-CXXMethodDecl 0x55557d9d1060 <line:146:5, col:46> col:23 operator= 'Vector<IP6NDAdvertiser::Entry> &(Vector<IP6NDAdvertiser::Entry> &&)' inline
| `-ParmVarDecl 0x55557d9d0f40 <col:33, col:45> col:45 x 'Vector<IP6NDAdvertiser::Entry> &&'
|-CXXMethodDecl 0x55557d9d1350 <line:148:5, col:70> col:23 assign 'Vector<IP6NDAdvertiser::Entry> &(Vector::size_type, Vector<IP6NDAdvertiser::Entry>::value_argument_type)' inline
| |-ParmVarDecl 0x55557d9d1198 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55557d9d1210 <col:43, col:69> col:63 v 'Vector<IP6NDAdvertiser::Entry>::value_argument_type':'const IP6NDAdvertiser::Entry &'
|-CXXMethodDecl 0x55557d9d14a8 <line:150:5, col:55> col:49 begin 'Vector<IP6NDAdvertiser::Entry>::iterator ()'
| |-NoInlineAttr 0x55557d9d1588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557d9d15e0 <col:30> Inherited
|-CXXMethodDecl 0x55557d9d1628 <line:151:5, col:53> col:49 end 'Vector<IP6NDAdvertiser::Entry>::iterator ()'
| |-NoInlineAttr 0x55557d9d16d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557d9d1730 <col:30> Inherited
|-CXXMethodDecl 0x55557d9d17f8 <line:152:5, col:63> col:55 begin 'Vector<IP6NDAdvertiser::Entry>::const_iterator () const'
| |-NoInlineAttr 0x55557d9d18a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557d9d1900 <col:30> Inherited
|-CXXMethodDecl 0x55557d9d1948 <line:153:5, col:61> col:55 end 'Vector<IP6NDAdvertiser::Entry>::const_iterator () const'
| |-NoInlineAttr 0x55557d9d19f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557d9d1a50 <col:30> Inherited
|-CXXMethodDecl 0x55557d9d1a98 <line:154:5, col:64> col:55 cbegin 'Vector<IP6NDAdvertiser::Entry>::const_iterator () const'
| |-NoInlineAttr 0x55557d9d1b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557d9d1ba0 <col:30> Inherited
|-CXXMethodDecl 0x55557d9d1be8 <line:155:5, col:62> col:55 cend 'Vector<IP6NDAdvertiser::Entry>::const_iterator () const'
| |-NoInlineAttr 0x55557d9d1c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557d9d1cf0 <col:30> Inherited
|-CXXMethodDecl 0x55557d9d1d18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55557d9d1dc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55557d9d1e78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55557d9d2038 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IP6NDAdvertiser::Entry>::value_argument_type)' inline
| |-ParmVarDecl 0x55557d9d1f28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55557d9d1fa0 <col:37, col:63> col:57 v 'Vector<IP6NDAdvertiser::Entry>::value_argument_type':'const IP6NDAdvertiser::Entry &'
|-CXXMethodDecl 0x55557d9d2188 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55557d9d20f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557d9d2338 <line:163:5, col:65> col:43 operator[] 'IP6NDAdvertiser::Entry &(Vector::size_type)'
| |-ParmVarDecl 0x55557d9d2240 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55557d9d23f0 <col:20>
| `-OptimizeNoneAttr 0x55557d9d2448 <col:30>
|-CXXMethodDecl 0x55557d9d2568 <line:164:5, col:73> col:49 operator[] 'const IP6NDAdvertiser::Entry &(Vector::size_type) const'
| |-ParmVarDecl 0x55557d9d2470 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55557d9d2620 <col:20>
| `-OptimizeNoneAttr 0x55557d9d2678 <col:30>
|-CXXMethodDecl 0x55557d9d2730 <line:165:5, col:29> col:15 at 'IP6NDAdvertiser::Entry &(Vector::size_type)' inline
| `-ParmVarDecl 0x55557d9d26a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557d9d2878 <line:166:5, col:37> col:21 at 'const IP6NDAdvertiser::Entry &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55557d9d27e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557d9d29a8 <line:167:5, col:21> col:15 front 'IP6NDAdvertiser::Entry &()' inline
|-CXXMethodDecl 0x55557d9d2ad8 <line:168:5, col:29> col:21 front 'const IP6NDAdvertiser::Entry &() const' inline
|-CXXMethodDecl 0x55557d9d2ba8 <line:169:5, col:20> col:15 back 'IP6NDAdvertiser::Entry &()' inline
|-CXXMethodDecl 0x55557d9d2c78 <line:170:5, col:28> col:21 back 'const IP6NDAdvertiser::Entry &() const' inline
|-CXXMethodDecl 0x55557d9d2db8 <line:172:5, col:39> col:15 unchecked_at 'IP6NDAdvertiser::Entry &(Vector::size_type)' inline
| `-ParmVarDecl 0x55557d9d2d28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557d9d2f00 <line:173:5, col:47> col:21 unchecked_at 'const IP6NDAdvertiser::Entry &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55557d9d2e70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557d9d3048 <line:174:5, col:59> col:15 at_u 'IP6NDAdvertiser::Entry &(Vector::size_type)' inline
| |-ParmVarDecl 0x55557d9d2fb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55557d9d3100 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55557d9d3200 <line:175:5, col:71> col:21 at_u 'const IP6NDAdvertiser::Entry &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55557d9d3170 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55557d9d32b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55557d9d3378 <line:177:5, col:20> col:15 data 'IP6NDAdvertiser::Entry *()' inline
|-CXXMethodDecl 0x55557d9d3478 <line:178:5, col:28> col:21 data 'const IP6NDAdvertiser::Entry *() const' inline
|-CXXMethodDecl 0x55557d9d3628 <line:180:5, col:48> col:17 push_back 'void (Vector<IP6NDAdvertiser::Entry>::value_argument_type)' inline
| `-ParmVarDecl 0x55557d9d3538 <col:27, col:47> col:47 v 'Vector<IP6NDAdvertiser::Entry>::value_argument_type':'const IP6NDAdvertiser::Entry &'
|-FunctionTemplateDecl 0x55557d9d3e18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55557d9d36e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IP6NDAdvertiser::Entry>':'fast_argument<IP6NDAdvertiser::Entry, true>'
| `-CXXMethodDecl 0x55557d9d3d78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IP6NDAdvertiser::Entry &&)' inline
|   `-ParmVarDecl 0x55557d9d3c78 <col:58, col:62> col:62 v 'IP6NDAdvertiser::Entry &&'
|-CXXMethodDecl 0x55557d9d3ef8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55557d9d4048 <line:186:5, col:49> col:17 push_front 'void (Vector<IP6NDAdvertiser::Entry>::value_argument_type)' inline
| `-ParmVarDecl 0x55557d9d3fb8 <col:28, col:48> col:48 v 'Vector<IP6NDAdvertiser::Entry>::value_argument_type':'const IP6NDAdvertiser::Entry &'
|-CXXMethodDecl 0x55557d9d4100 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55557d9d4348 <line:189:5, col:62> col:21 insert 'Vector<IP6NDAdvertiser::Entry>::iterator (Vector<IP6NDAdvertiser::Entry>::iterator, Vector<IP6NDAdvertiser::Entry>::value_argument_type)' inline
| |-ParmVarDecl 0x55557d9d41c0 <col:28, col:37> col:37 it 'Vector<IP6NDAdvertiser::Entry>::iterator':'IP6NDAdvertiser::Entry *'
| `-ParmVarDecl 0x55557d9d4238 <col:41, col:61> col:61 v 'Vector<IP6NDAdvertiser::Entry>::value_argument_type':'const IP6NDAdvertiser::Entry &'
|-CXXMethodDecl 0x55557d9d4508 <line:190:5, col:38> col:21 erase 'Vector<IP6NDAdvertiser::Entry>::iterator (Vector<IP6NDAdvertiser::Entry>::iterator)' inline
| `-ParmVarDecl 0x55557d9d4418 <col:27, col:36> col:36 it 'Vector<IP6NDAdvertiser::Entry>::iterator':'IP6NDAdvertiser::Entry *'
|-CXXMethodDecl 0x55557d9d4758 <line:191:5, col:49> col:21 erase 'Vector<IP6NDAdvertiser::Entry>::iterator (Vector<IP6NDAdvertiser::Entry>::iterator, Vector<IP6NDAdvertiser::Entry>::iterator)' inline
| |-ParmVarDecl 0x55557d9d45d0 <col:27, col:36> col:36 a 'Vector<IP6NDAdvertiser::Entry>::iterator':'IP6NDAdvertiser::Entry *'
| `-ParmVarDecl 0x55557d9d4648 <col:39, col:48> col:48 b 'Vector<IP6NDAdvertiser::Entry>::iterator':'IP6NDAdvertiser::Entry *'
|-CXXMethodDecl 0x55557d9d4818 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55557d9d4a78 <line:195:5, col:34> col:17 swap 'void (Vector<IP6NDAdvertiser::Entry> &)' inline
| `-ParmVarDecl 0x55557d9d4980 <col:22, col:33> col:33 x 'Vector<IP6NDAdvertiser::Entry> &'
`-CXXDestructorDecl 0x55557d9d4b48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55557da9afb8 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d9c7bc0 <../elements/ethernet/ip6ndadvertiser.hh:39:1, line:76:1> line:39:7 class IP6NDAdvertiser definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55557d9c7d18 <col:1, col:7> col:7 implicit referenced class IP6NDAdvertiser
|-AccessSpecDecl 0x55557d9c7da8 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x55557d9c7e30 <line:41:3, col:19> col:3 IP6NDAdvertiser 'void ()'
|-CXXDestructorDecl 0x55557d9c7f20 <line:42:3, col:20> col:3 ~IP6NDAdvertiser 'void ()' noexcept-unevaluated 0x55557d9c7f20
| `-Overrides: [ 0x55557d97db98 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55557d9c8050 <line:44:3, col:62> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55557d97eff8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55557d9d52c8 <col:34, col:62>
|   `-ReturnStmt 0x55557d9d52b8 <col:36, col:43>
|     `-ImplicitCastExpr 0x55557d9d52a0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55557d9d5278 <col:43> 'const char [16]' lvalue "IP6NDAdvertiser"
|-CXXMethodDecl 0x55557d9c8118 <line:45:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55557d97f0c0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55557d9d5328 <col:34, col:54>
|   `-ReturnStmt 0x55557d9d5318 <col:36, col:43>
|     `-ImplicitCastExpr 0x55557d9d5300 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55557d9d52e0 <col:43> 'const char []' lvalue Var 0x55557d97f370 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x55557d9c83f0 <line:46:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55557d980890 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55557d9c82a0 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55557d9c8318 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55557d9c8540 <line:48:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55557d97e1d8 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55557d9c84b0 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x55557d9c8c78 <line:52:3, line:54:47> line:52:11 make_response 'Packet *(unsigned char *, unsigned char *, unsigned char *, unsigned char *, unsigned char *, unsigned char *)'
| |-ParmVarDecl 0x55557d9c86c0 <col:25, col:44> col:39 dha 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x55557d9c8790 <col:47, col:66> col:61 sha 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x55557d9c8890 <line:53:25, col:45> col:39 dpa 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x55557d9c8960 <col:48, col:68> col:62 spa 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x55557d9c8a30 <line:54:4, col:24> col:18 tpa 'unsigned char *':'unsigned char *'
| `-ParmVarDecl 0x55557d9c8b00 <col:27, col:46> col:41 tha 'unsigned char *':'unsigned char *'
|-CXXMethodDecl 0x55557d9c9248 <line:59:3, line:61:25> line:59:11 make_response2 'Packet *(unsigned char *, unsigned char *, unsigned char *, unsigned char *, unsigned char *)'
| |-ParmVarDecl 0x55557d9c8db0 <col:26, col:45> col:40 dha 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x55557d9c8e80 <col:48, col:67> col:62 sha 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x55557d9c8f50 <line:60:25, col:45> col:39 dpa 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x55557d9c9020 <col:48, col:68> col:62 spa 'unsigned char *':'unsigned char *'
| `-ParmVarDecl 0x55557d9c90f0 <line:61:4, col:24> col:18 tpa 'unsigned char *':'unsigned char *'
|-CXXMethodDecl 0x55557d9c9468 <line:63:3, col:51> col:8 lookup 'bool (const IP6Address &, EtherAddress &) const'
| |-ParmVarDecl 0x55557d9c9320 <col:15, col:32> col:33 'const IP6Address &'
| `-ParmVarDecl 0x55557d9c9398 <col:35, col:48> col:49 'EtherAddress &'
|-AccessSpecDecl 0x55557d9c9518 <line:65:2, col:9> col:2 private
|-CXXRecordDecl 0x55557d9c9540 <line:67:3, line:71:3> line:67:10 referenced struct Entry definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable can_const_default_init
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55557d9c9658 <col:3, col:10> col:10 implicit struct Entry
| |-FieldDecl 0x55557d9c96f8 <line:68:5, col:16> col:16 dst 'IP6Address'
| |-FieldDecl 0x55557d9c9758 <line:69:5, col:16> col:16 mask 'IP6Address'
| `-FieldDecl 0x55557d9c97b8 <line:70:5, col:18> col:18 ena 'EtherAddress'
|-FieldDecl 0x55557d9d4c30 <line:72:3, col:17> col:17 _v 'Vector<IP6NDAdvertiser::Entry>':'Vector<IP6NDAdvertiser::Entry>'
|-CXXMethodDecl 0x55557d9d4e68 <line:74:3, col:83> col:8 add_map 'void (const IP6Address &, const IP6Address &, const EtherAddress &)'
| |-ParmVarDecl 0x55557d9d4c90 <col:16, col:34> col:34 dst 'const IP6Address &'
| |-ParmVarDecl 0x55557d9d4d08 <col:39, col:57> col:57 mask 'const IP6Address &'
| `-ParmVarDecl 0x55557d9d4d80 <col:63, col:82> col:83 'const EtherAddress &'
|-CXXConstructorDecl 0x55557d9d4f48 <line:39:7> col:7 implicit IP6NDAdvertiser 'void (const IP6NDAdvertiser &)' inline default_delete noexcept-unevaluated 0x55557d9d4f48
| `-ParmVarDecl 0x55557d9d5058 <col:7> col:7 'const IP6NDAdvertiser &'
`-CXXMethodDecl 0x55557d9d50f8 <col:7> col:7 implicit operator= 'IP6NDAdvertiser &(const IP6NDAdvertiser &)' inline default_delete noexcept-unevaluated 0x55557d9d50f8
  `-ParmVarDecl 0x55557d9d5208 <col:7> col:7 'const IP6NDAdvertiser &'

Layout: <CGRecordLayout
  LLVMType:%class.IP6NDAdvertiser = type { %class.Element.base, %class.Vector }
  NonVirtualBaseLLVMType:%class.IP6NDAdvertiser = type { %class.Element.base, %class.Vector }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d6bc808 </usr/include/netinet/in.h:214:5, line:219:7> line:214:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55557d6bca28 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
|-FieldDecl 0x55557d6bcb58 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
|-FieldDecl 0x55557d6bcc88 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
|-CXXConstructorDecl 0x55557d902bc8 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55557d9033d8 <col:5>
|-CXXDestructorDecl 0x55557d902ca0 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55557d902da8 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d902eb8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x55557d9b6860 <col:5>
|-CXXConstructorDecl 0x55557d902f58 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d903068 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| `-CompoundStmt 0x55557d9bfc98 <col:5>
|-CXXMethodDecl 0x55557d903b08 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d903c18 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x55557d9c3aa0 <col:5>
|   `-ReturnStmt 0x55557d9c3a90 <col:5>
|     `-UnaryOperator 0x55557d9c3a78 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55557d9c3a68 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
`-CXXMethodDecl 0x55557d903c88 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x55557d903c88
  `-ParmVarDecl 0x55557d903d98 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { [4 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d65afa0 </usr/include/netinet/in.h:212:1, line:225:3> line:212:8 struct in6_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557d6bc778 <col:1, col:8> col:8 implicit struct in6_addr
|-CXXRecordDecl 0x55557d6bc808 <line:214:5, line:219:7> line:214:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55557d6bca28 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
| |-FieldDecl 0x55557d6bcb58 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
| |-FieldDecl 0x55557d6bcc88 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
| |-CXXConstructorDecl 0x55557d902bc8 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55557d9033d8 <col:5>
| |-CXXDestructorDecl 0x55557d902ca0 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55557d902da8 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55557d902eb8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x55557d9b6860 <col:5>
| |-CXXConstructorDecl 0x55557d902f58 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55557d903068 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| | `-CompoundStmt 0x55557d9bfc98 <col:5>
| |-CXXMethodDecl 0x55557d903b08 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55557d903c18 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x55557d9c3aa0 <col:5>
| |   `-ReturnStmt 0x55557d9c3a90 <col:5>
| |     `-UnaryOperator 0x55557d9c3a78 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55557d9c3a68 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
| `-CXXMethodDecl 0x55557d903c88 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x55557d903c88
|   `-ParmVarDecl 0x55557d903d98 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
|-FieldDecl 0x55557d6bcd48 <col:5, line:219:9> col:9 referenced __in6_u 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
|-CXXConstructorDecl 0x55557d902ad8 <line:212:8> col:8 implicit used in6_addr 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55557d6bcd48 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x55557d9033e8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void () noexcept'
| `-CompoundStmt 0x55557d903440 <col:8>
|-CXXConstructorDecl 0x55557d9030d8 <col:8> col:8 implicit used constexpr in6_addr 'void (const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d9031b8 <col:8> col:8 used 'const in6_addr &'
| |-CXXCtorInitializer Field 0x55557d6bcd48 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x55557d9b6870 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept'
| |   `-MemberExpr 0x55557d9b6830 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
| |     `-DeclRefExpr 0x55557d9b6810 <col:8> 'const in6_addr' lvalue ParmVar 0x55557d9031b8 '' 'const in6_addr &'
| `-CompoundStmt 0x55557d9b68d0 <col:8>
|-CXXConstructorDecl 0x55557d903258 <col:8> col:8 implicit used constexpr in6_addr 'void (in6_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d903368 <col:8> col:8 used 'in6_addr &&'
| |-CXXCtorInitializer Field 0x55557d6bcd48 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x55557d9bfca8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept'
| |   `-MemberExpr 0x55557d9bfc68 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' xvalue .__in6_u 0x55557d6bcd48
| |     `-CXXStaticCastExpr 0x55557d9bfc38 <col:8> 'in6_addr' xvalue static_cast<struct in6_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55557d9bfc08 <col:8> 'in6_addr' lvalue ParmVar 0x55557d903368 '' 'in6_addr &&'
| `-CompoundStmt 0x55557d9bfd08 <col:8>
|-CXXMethodDecl 0x55557d903e08 <col:8> col:8 implicit used constexpr operator= 'in6_addr &(const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d903f18 <col:8> col:8 used 'const in6_addr &'
| `-CompoundStmt 0x55557d9c3b18 <col:8>
|   |-CXXMemberCallExpr 0x55557d9c3ab8 <col:8> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue
|   | |-MemberExpr 0x55557d9c39f8 <col:8> '<bound member function type>' .operator= 0x55557d903b08
|   | | `-MemberExpr 0x55557d9c3908 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue ->__in6_u 0x55557d6bcd48
|   | |   `-CXXThisExpr 0x55557d9c38f8 <col:8> 'in6_addr *' this
|   | `-MemberExpr 0x55557d9c39c8 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|   |   `-DeclRefExpr 0x55557d9c39a8 <col:8> 'const in6_addr' lvalue ParmVar 0x55557d903f18 '' 'const in6_addr &'
|   `-ReturnStmt 0x55557d9c3b08 <col:8>
|     `-UnaryOperator 0x55557d9c3af0 <col:8> 'in6_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55557d9c3ae0 <col:8> 'in6_addr *' this
|-CXXMethodDecl 0x55557d903f88 <col:8> col:8 implicit constexpr operator= 'in6_addr &(in6_addr &&)' inline default trivial noexcept-unevaluated 0x55557d903f88
| `-ParmVarDecl 0x55557d904098 <col:8> col:8 'in6_addr &&'
`-CXXDestructorDecl 0x55557d904438 <col:8> col:8 implicit ~in6_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in6_addr = type { %union.anon }
  NonVirtualBaseLLVMType:%struct.in6_addr = type { %union.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d8ff3c0 prev 0x55557d944710 <../dummy_inc/click/ip6address.hh:14:1, line:175:1> line:14:7 referenced class IP6Address definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557d8ff4b8 <col:1, col:7> col:7 implicit referenced class IP6Address
|-AccessSpecDecl 0x55557d8ff548 <col:20, col:26> col:20 public
|-TypedefDecl 0x55557d8ff580 <line:16:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55557d5711a0 'uninitialized_type'
|   `-CXXRecord 0x55557d571108 'uninitialized_type'
|-CXXConstructorDecl 0x55557d8ff640 <line:19:5, line:21:5> line:19:12 used IP6Address 'void ()' inline
| |-CXXCtorInitializer Field 0x55557d902a58 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x55557d903450 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x55557d903670 <col:25, line:21:5>
|   `-CallExpr 0x55557d903620 <line:20:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x55557d903608 <col:2> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55557d9035e8 <col:2> 'void *(void *, int, size_t) throw()' lvalue Function 0x55557d67c258 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55557d903658 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x55557d903530 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x55557d903500 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58
|     |     `-CXXThisExpr 0x55557d9034f0 <col:10> 'IP6Address *' implicit this
|     |-IntegerLiteral 0x55557d903548 <col:17> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55557d9035c8 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x55557d9035a8 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x55557d903578 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55557d903568 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x55557d8ff790 <line:24:5, line:26:5> line:24:21 IP6Address 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x55557d8ff700 <col:32, col:53> col:53 used x 'const unsigned char *'
| |-CXXCtorInitializer Field 0x55557d902a58 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x55557d903688 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x55557d9038d8 <col:56, line:26:5>
|   `-CallExpr 0x55557d903858 <line:25:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x55557d903840 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55557d903820 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55557d67af18 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x55557d903890 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x55557d903768 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x55557d903738 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58
|     |     `-CXXThisExpr 0x55557d903728 <col:10> 'IP6Address *' implicit this
|     |-ImplicitCastExpr 0x55557d9038c0 <col:17> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x55557d9038a8 <col:17> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x55557d903780 <col:17> 'const unsigned char *' lvalue ParmVar 0x55557d8ff700 'x' 'const unsigned char *'
|     `-UnaryExprOrTypeTraitExpr 0x55557d903800 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x55557d9037e0 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x55557d9037b0 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55557d9037a0 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x55557d8ff8e0 <line:31:5, line:33:5> line:31:21 IP6Address 'void (IPAddress)' inline
| |-ParmVarDecl 0x55557d8ff850 <col:32, col:42> col:42 used x 'IPAddress'
| |-CXXCtorInitializer Field 0x55557d902a58 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x55557d9038f0 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x55557d9b6750 <col:45, line:33:5>
|   `-ExprWithCleanups 0x55557d9b6738 <line:32:2, col:10> 'IP6Address' lvalue
|     `-CXXOperatorCallExpr 0x55557d9b6700 <col:2, col:10> 'IP6Address' lvalue
|       |-ImplicitCastExpr 0x55557d9b66e8 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55557d9b6668 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x55557d9023f8 'operator=' 'IP6Address &(const struct in_addr &)'
|       |-UnaryOperator 0x55557d903958 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|       | `-CXXThisExpr 0x55557d903948 <col:3> 'IP6Address *' this
|       `-MaterializeTemporaryExpr 0x55557d9b6650 <col:10> 'const struct in_addr':'const in_addr' lvalue
|         `-ImplicitCastExpr 0x55557d9b6638 <col:10> 'const struct in_addr':'const in_addr' <NoOp>
|           `-ImplicitCastExpr 0x55557d9b6620 <col:10> 'struct in_addr':'in_addr' <UserDefinedConversion>
|             `-CXXMemberCallExpr 0x55557d9b6600 <col:10> 'struct in_addr':'in_addr'
|               `-MemberExpr 0x55557d9b65d0 <col:10> '<bound member function type>' .operator in_addr 0x55557d77ff80
|                 `-ImplicitCastExpr 0x55557d9b65b8 <col:10> 'const IPAddress' lvalue <NoOp>
|                   `-DeclRefExpr 0x55557d903970 <col:10> 'IPAddress' lvalue ParmVar 0x55557d8ff850 'x' 'IPAddress'
|-CXXConstructorDecl 0x55557d8ffa30 <line:36:5, col:40> col:14 IP6Address 'void (const String &)'
| `-ParmVarDecl 0x55557d8ff9a0 <col:25, col:39> col:39 x 'const String &'
|-CXXConstructorDecl 0x55557d8ffc58 <line:39:5, line:41:5> line:39:21 IP6Address 'void (const struct in6_addr &)' inline
| |-ParmVarDecl 0x55557d8ffb60 <col:32, col:55> col:55 used x 'const struct in6_addr &'
| |-CXXCtorInitializer Field 0x55557d902a58 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x55557d9b68e0 <line:40:4, col:11> 'struct in6_addr':'in6_addr' 'void (const in6_addr &) noexcept'
| |   `-DeclRefExpr 0x55557d9b6768 <col:10> 'const struct in6_addr':'const in6_addr' lvalue ParmVar 0x55557d8ffb60 'x' 'const struct in6_addr &'
| `-CompoundStmt 0x55557d9b6940 <col:13, line:41:5>
|-CXXConstructorDecl 0x55557d8ffe28 <line:44:5, line:46:5> line:44:21 IP6Address 'void (const struct in_addr &)' inline
| |-ParmVarDecl 0x55557d8ffd60 <col:32, col:54> col:54 used x 'const struct in_addr &'
| |-CXXCtorInitializer Field 0x55557d902a58 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x55557d9b6950 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x55557d9b6a60 <col:57, line:46:5>
|   `-CXXOperatorCallExpr 0x55557d9b6a28 <line:45:2, col:10> 'IP6Address' lvalue
|     |-ImplicitCastExpr 0x55557d9b6a10 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55557d9b69f0 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x55557d9023f8 'operator=' 'IP6Address &(const struct in_addr &)'
|     |-UnaryOperator 0x55557d9b69b8 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|     | `-CXXThisExpr 0x55557d9b69a8 <col:3> 'IP6Address *' this
|     `-DeclRefExpr 0x55557d9b69d0 <col:10> 'const struct in_addr':'const in_addr' lvalue ParmVar 0x55557d8ffd60 'x' 'const struct in_addr &'
|-CXXConstructorDecl 0x55557d8fff78 <line:49:5, line:51:5> line:49:12 used IP6Address 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55557d8ffee8 <col:23, col:49> col:49 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x55557d902a58 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x55557d9b6a78 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x55557d9b6b28 <col:57, line:51:5>
|   `-CStyleCastExpr 0x55557d9b6b00 <line:50:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55557d9b6ad0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55557d8ffee8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55557d900108 <line:62:5, col:49> col:23 make_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x55557d900040 <col:35, col:39> col:39 prefix_len 'int'
|-CXXMethodDecl 0x55557d900258 <line:69:5, col:58> col:23 make_inverted_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x55557d9001c8 <col:44, col:48> col:48 prefix_len 'int'
|-TypedefDecl 0x55557d900408 <line:71:5, col:61> col:36 referenced unspecified_bool_type 'uint32_t (IP6Address::*)() const'
| `-MemberPointerType 0x55557d900380 'uint32_t (IP6Address::*)() const'
|   |-RecordType 0x55557d9447a0 'IP6Address'
|   | `-CXXRecord 0x55557d8ff3c0 'IP6Address'
|   `-ParenType 0x55557d900320 'uint32_t () const' sugar
|     `-FunctionProtoType 0x55557d73c5a0 'uint32_t () const' const cdecl
|       `-TypedefType 0x55557d571490 'uint32_t' sugar
|         |-Typedef 0x55557d4843d8 'uint32_t'
|         `-TypedefType 0x55557d45d480 '__uint32_t' sugar
|           |-Typedef 0x55557d45d078 '__uint32_t'
|           `-BuiltinType 0x55557d41b450 'unsigned int'
|-CXXConversionDecl 0x55557d900548 <line:72:5, col:45> col:12 operator unsigned int (IP6Address::*)() const 'IP6Address::unspecified_bool_type () const' inline
|-CXXConversionDecl 0x55557d9006d0 <line:74:5, col:62> col:5 operator const in6_addr & 'const struct in6_addr &() const'
| `-CompoundStmt 0x55557d9b6b90 <col:46, col:62>
|   `-ReturnStmt 0x55557d9b6b80 <col:48, col:55>
|     `-MemberExpr 0x55557d9b6b50 <col:55> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x55557d902a58
|       `-CXXThisExpr 0x55557d9b6b40 <col:55> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x55557d9008c0 <line:75:5, col:50> col:5 operator in6_addr & 'struct in6_addr &()'
| `-CompoundStmt 0x55557d9b6bf8 <col:34, col:50>
|   `-ReturnStmt 0x55557d9b6be8 <col:36, col:43>
|     `-MemberExpr 0x55557d9b6bb8 <col:43> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58
|       `-CXXThisExpr 0x55557d9b6ba8 <col:43> 'IP6Address *' implicit this
|-CXXMethodDecl 0x55557d9009c0 <line:76:5, col:61> col:28 in6_addr 'const struct in6_addr &() const'
| `-CompoundStmt 0x55557d9b6c60 <col:45, col:61>
|   `-ReturnStmt 0x55557d9b6c50 <col:47, col:54>
|     `-MemberExpr 0x55557d9b6c20 <col:54> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x55557d902a58
|       `-CXXThisExpr 0x55557d9b6c10 <col:54> 'const IP6Address *' implicit this
|-CXXMethodDecl 0x55557d900a98 <line:77:5, col:49> col:22 in6_addr 'struct in6_addr &()'
| `-CompoundStmt 0x55557d9b6cc8 <col:33, col:49>
|   `-ReturnStmt 0x55557d9b6cb8 <col:35, col:42>
|     `-MemberExpr 0x55557d9b6c88 <col:42> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58
|       `-CXXThisExpr 0x55557d9b6c78 <col:42> 'IP6Address *' implicit this
|-CXXMethodDecl 0x55557d900b60 <line:79:5, col:66> col:20 data 'unsigned char *()'
| `-CompoundStmt 0x55557d9b6e00 <col:27, col:66>
|   `-ReturnStmt 0x55557d9b6df0 <col:29, col:63>
|     `-UnaryOperator 0x55557d9b6dd8 <col:36, col:63> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55557d9b6db8 <col:37, col:63> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55557d9b6da0 <col:37, col:51> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55557d9b6d50 <col:37, col:51> 'uint8_t [16]' lvalue .__u6_addr8 0x55557d6bca28
|         |   `-MemberExpr 0x55557d9b6d20 <col:37, col:43> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|         |     `-MemberExpr 0x55557d9b6cf0 <col:37> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58
|         |       `-CXXThisExpr 0x55557d9b6ce0 <col:37> 'IP6Address *' implicit this
|         `-IntegerLiteral 0x55557d9b6d80 <col:62> 'int' 0
|-CXXMethodDecl 0x55557d900c28 <line:80:5, col:78> col:26 used data 'const unsigned char *() const'
| `-CompoundStmt 0x55557d9b6f78 <col:39, col:78>
|   `-ReturnStmt 0x55557d9b6f68 <col:41, col:75>
|     `-UnaryOperator 0x55557d9b6f50 <col:48, col:75> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55557d9b6f30 <col:49, col:75> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55557d9b6f18 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55557d9b6e88 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x55557d6bca28
|         |   `-MemberExpr 0x55557d9b6e58 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|         |     `-MemberExpr 0x55557d9b6e28 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x55557d902a58
|         |       `-CXXThisExpr 0x55557d9b6e18 <col:49> 'const IP6Address *' implicit this
|         `-IntegerLiteral 0x55557d9b6eb8 <col:74> 'int' 0
|-CXXMethodDecl 0x55557d900d48 <line:81:5, col:75> col:15 used data16 'uint16_t *()'
| `-CompoundStmt 0x55557d9b70e8 <col:24, col:75>
|   `-ReturnStmt 0x55557d9b70d8 <col:26, col:72>
|     `-CStyleCastExpr 0x55557d9b70b0 <col:33, col:72> 'uint16_t *' <BitCast>
|       `-UnaryOperator 0x55557d9b7088 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x55557d9b7068 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x55557d9b7050 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55557d9b7000 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x55557d6bca28
|           |   `-MemberExpr 0x55557d9b6fd0 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|           |     `-MemberExpr 0x55557d9b6fa0 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58
|           |       `-CXXThisExpr 0x55557d9b6f90 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x55557d9b7030 <col:71> 'int' 0
|-CXXMethodDecl 0x55557d900e08 <line:82:5, col:87> col:21 data16 'const uint16_t *() const'
| `-CompoundStmt 0x55557d9b7270 <col:36, col:87>
|   `-ReturnStmt 0x55557d9b7260 <col:38, col:84>
|     `-ImplicitCastExpr 0x55557d9b7248 <col:45, col:84> 'const uint16_t *' <NoOp>
|       `-CStyleCastExpr 0x55557d9b7220 <col:45, col:84> 'uint16_t *' <BitCast>
|         `-UnaryOperator 0x55557d9b71f8 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x55557d9b71d8 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x55557d9b71c0 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55557d9b7170 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x55557d6bca28
|             |   `-MemberExpr 0x55557d9b7140 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|             |     `-MemberExpr 0x55557d9b7110 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x55557d902a58
|             |       `-CXXThisExpr 0x55557d9b7100 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x55557d9b71a0 <col:83> 'int' 0
|-CXXMethodDecl 0x55557d900ec8 <line:83:5, col:75> col:15 used data32 'uint32_t *()'
| `-CompoundStmt 0x55557d9b73e0 <col:24, col:75>
|   `-ReturnStmt 0x55557d9b73d0 <col:26, col:72>
|     `-CStyleCastExpr 0x55557d9b73a8 <col:33, col:72> 'uint32_t *' <BitCast>
|       `-UnaryOperator 0x55557d9b7380 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x55557d9b7360 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x55557d9b7348 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55557d9b72f8 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x55557d6bca28
|           |   `-MemberExpr 0x55557d9b72c8 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|           |     `-MemberExpr 0x55557d9b7298 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58
|           |       `-CXXThisExpr 0x55557d9b7288 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x55557d9b7328 <col:71> 'int' 0
|-CXXMethodDecl 0x55557d900f88 <line:84:5, col:87> col:21 used data32 'const uint32_t *() const'
| `-CompoundStmt 0x55557d9b7568 <col:36, col:87>
|   `-ReturnStmt 0x55557d9b7558 <col:38, col:84>
|     `-ImplicitCastExpr 0x55557d9b7540 <col:45, col:84> 'const uint32_t *' <NoOp>
|       `-CStyleCastExpr 0x55557d9b7518 <col:45, col:84> 'uint32_t *' <BitCast>
|         `-UnaryOperator 0x55557d9b74f0 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x55557d9b74d0 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x55557d9b74b8 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55557d9b7468 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x55557d6bca28
|             |   `-MemberExpr 0x55557d9b7438 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|             |     `-MemberExpr 0x55557d9b7408 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x55557d902a58
|             |       `-CXXThisExpr 0x55557d9b73f8 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x55557d9b7498 <col:83> 'int' 0
|-CXXMethodDecl 0x55557d901048 <line:86:5, col:32> col:21 used hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d901110 <line:88:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55557d901338 <line:89:5, col:80> col:17 matches_prefix 'bool (const IP6Address &, const IP6Address &) const' inline
| |-ParmVarDecl 0x55557d9011e8 <col:32, col:50> col:50 addr 'const IP6Address &'
| `-ParmVarDecl 0x55557d901260 <col:56, col:74> col:74 mask 'const IP6Address &'
|-CXXMethodDecl 0x55557d9014b8 <line:90:5, col:54> col:17 mask_as_specific 'bool (const IP6Address &) const' inline
| `-ParmVarDecl 0x55557d9013f8 <col:34, col:51> col:52 'const IP6Address &'
|-CXXMethodDecl 0x55557d901580 <line:97:5, line:99:5> line:97:10 has_ether_address 'bool () const'
| `-CompoundStmt 0x55557d9b7880 <col:36, line:99:5>
|   `-ReturnStmt 0x55557d9b7870 <line:98:2, col:81>
|     `-BinaryOperator 0x55557d9b7850 <col:9, col:81> 'bool' '&&'
|       |-BinaryOperator 0x55557d9b76c8 <col:9, col:41> 'bool' '=='
|       | |-ImplicitCastExpr 0x55557d9b76b0 <col:9, col:36> 'int' <IntegralCast>
|       | | `-ImplicitCastExpr 0x55557d9b7698 <col:9, col:36> 'uint8_t':'unsigned char' <LValueToRValue>
|       | |   `-ArraySubscriptExpr 0x55557d9b7658 <col:9, col:36> 'const uint8_t':'const unsigned char' lvalue
|       | |     |-ImplicitCastExpr 0x55557d9b7640 <col:9, col:23> 'const uint8_t *' <ArrayToPointerDecay>
|       | |     | `-MemberExpr 0x55557d9b75f0 <col:9, col:23> 'uint8_t const[16]' lvalue .__u6_addr8 0x55557d6bca28
|       | |     |   `-MemberExpr 0x55557d9b75c0 <col:9, col:15> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|       | |     |     `-MemberExpr 0x55557d9b7590 <col:9> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x55557d902a58
|       | |     |       `-CXXThisExpr 0x55557d9b7580 <col:9> 'const IP6Address *' implicit this
|       | |     `-IntegerLiteral 0x55557d9b7620 <col:34> 'int' 11
|       | `-IntegerLiteral 0x55557d9b7678 <col:41> 'int' 255
|       `-BinaryOperator 0x55557d9b7830 <col:49, col:81> 'bool' '=='
|         |-ImplicitCastExpr 0x55557d9b7818 <col:49, col:76> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55557d9b7800 <col:49, col:76> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55557d9b77c0 <col:49, col:76> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55557d9b77a8 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55557d9b7758 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x55557d6bca28
|         |     |   `-MemberExpr 0x55557d9b7728 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|         |     |     `-MemberExpr 0x55557d9b76f8 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x55557d902a58
|         |     |       `-CXXThisExpr 0x55557d9b76e8 <col:49> 'const IP6Address *' implicit this
|         |     `-IntegerLiteral 0x55557d9b7788 <col:74> 'int' 12
|         `-IntegerLiteral 0x55557d9b77e0 <col:81> 'int' 254
|-CXXMethodDecl 0x55557d9016f8 <line:104:5, col:41> col:10 ether_address 'bool (EtherAddress &) const'
| `-ParmVarDecl 0x55557d901630 <col:24, col:38> col:38 x 'EtherAddress &'
|-CXXMethodDecl 0x55557d9017c0 <line:111:5, line:114:5> line:111:17 is_ip4_compatible 'bool () const' inline
| `-CompoundStmt 0x55557d9b7d68 <col:43, line:114:5>
|   `-ReturnStmt 0x55557d9b7d58 <line:112:2, line:113:24>
|     `-BinaryOperator 0x55557d9b7d38 <line:112:9, line:113:24> 'bool' '&&'
|       |-BinaryOperator 0x55557d9b7b98 <line:112:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x55557d9b79f8 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x55557d9b79c8 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x55557d9b7988 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x55557d9b7948 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x55557d9b7918 <col:9> '<bound member function type>' ->data32 0x55557d900f88
|       | | |   |   `-CXXThisExpr 0x55557d9b7908 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x55557d9b7968 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x55557d9b79e0 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x55557d9b79a8 <col:24> 'int' 0
|       | `-BinaryOperator 0x55557d9b7b78 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55557d9b7b48 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x55557d9b7b08 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x55557d9b7ac8 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x55557d9b7a98 <col:29> '<bound member function type>' ->data32 0x55557d900f88
|       |   |   |   `-CXXThisExpr 0x55557d9b7a88 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x55557d9b7ae8 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x55557d9b7b60 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x55557d9b7b28 <col:44> 'int' 0
|       `-BinaryOperator 0x55557d9b7d18 <line:113:9, col:24> 'bool' '=='
|         |-ImplicitCastExpr 0x55557d9b7ce8 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x55557d9b7ca8 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x55557d9b7c68 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x55557d9b7c38 <col:9> '<bound member function type>' ->data32 0x55557d900f88
|         |   |   `-CXXThisExpr 0x55557d9b7c28 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x55557d9b7c88 <col:18> 'int' 2
|         `-ImplicitCastExpr 0x55557d9b7d00 <col:24> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x55557d9b7cc8 <col:24> 'int' 0
|-CXXMethodDecl 0x55557d901880 <line:120:5, line:123:5> line:120:17 is_ip4_mapped 'bool () const' inline
| `-CompoundStmt 0x55557d9b82e0 <col:39, line:123:5>
|   `-ReturnStmt 0x55557d9b82d0 <line:121:2, line:122:41>
|     `-BinaryOperator 0x55557d9b82b0 <line:121:9, line:122:41> 'bool' '&&'
|       |-BinaryOperator 0x55557d9b8080 <line:121:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x55557d9b7ee0 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x55557d9b7eb0 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x55557d9b7e70 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x55557d9b7e30 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x55557d9b7e00 <col:9> '<bound member function type>' ->data32 0x55557d900f88
|       | | |   |   `-CXXThisExpr 0x55557d9b7df0 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x55557d9b7e50 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x55557d9b7ec8 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x55557d9b7e90 <col:24> 'int' 0
|       | `-BinaryOperator 0x55557d9b8060 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55557d9b8030 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x55557d9b7ff0 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x55557d9b7fb0 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x55557d9b7f80 <col:29> '<bound member function type>' ->data32 0x55557d900f88
|       |   |   |   `-CXXThisExpr 0x55557d9b7f70 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x55557d9b7fd0 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x55557d9b8048 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x55557d9b8010 <col:44> 'int' 0
|       `-BinaryOperator 0x55557d9b8290 <line:122:9, col:41> 'bool' '=='
|         |-ImplicitCastExpr 0x55557d9b8278 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x55557d9b8190 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x55557d9b8150 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x55557d9b8120 <col:9> '<bound member function type>' ->data32 0x55557d900f88
|         |   |   `-CXXThisExpr 0x55557d9b8110 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x55557d9b8170 <col:18> 'int' 2
|         `-CallExpr 0x55557d9b8250 <col:24, col:41> 'uint32_t':'unsigned int'
|           |-ImplicitCastExpr 0x55557d9b8238 <col:24> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x55557d9b8218 <col:24> 'uint32_t (uint32_t) throw()' lvalue Function 0x55557d6c0bb8 'htonl' 'uint32_t (uint32_t) throw()'
|           `-IntegerLiteral 0x55557d9b81f8 <col:30> 'unsigned int' 65535
|-CXXMethodDecl 0x55557d901940 <line:129:5, line:131:5> line:129:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55557d9b8470 <col:38, line:131:5>
|   `-ReturnStmt 0x55557d9b8460 <line:130:9, col:47>
|     `-BinaryOperator 0x55557d9b8440 <col:16, col:47> 'bool' '=='
|       |-ImplicitCastExpr 0x55557d9b8428 <col:16, col:42> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x55557d9b8410 <col:16, col:42> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55557d9b83d0 <col:16, col:42> 'const uint8_t':'const unsigned char' lvalue
|       |     |-ImplicitCastExpr 0x55557d9b83b8 <col:16, col:30> 'const uint8_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55557d9b8368 <col:16, col:30> 'uint8_t const[16]' lvalue .__u6_addr8 0x55557d6bca28
|       |     |   `-MemberExpr 0x55557d9b8338 <col:16, col:22> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x55557d6bcd48
|       |     |     `-MemberExpr 0x55557d9b8308 <col:16> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x55557d902a58
|       |     |       `-CXXThisExpr 0x55557d9b82f8 <col:16> 'const IP6Address *' implicit this
|       |     `-IntegerLiteral 0x55557d9b8398 <col:41> 'int' 0
|       `-IntegerLiteral 0x55557d9b83f0 <col:47> 'int' 255
|-CXXMethodDecl 0x55557d901a00 <line:137:5, line:139:5> line:137:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55557d9b8848 <col:39, line:139:5>
|   `-ReturnStmt 0x55557d9b8838 <line:138:9, col:67>
|     `-BinaryOperator 0x55557d9b8818 <col:16, col:67> 'bool' '&&'
|       |-BinaryOperator 0x55557d9b8678 <col:16, col:47> 'bool' '=='
|       | |-ImplicitCastExpr 0x55557d9b8660 <col:16, col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | `-ArraySubscriptExpr 0x55557d9b8578 <col:16, col:26> 'const uint32_t':'const unsigned int' lvalue
|       | |   |-CXXMemberCallExpr 0x55557d9b8538 <col:16, col:23> 'const uint32_t *'
|       | |   | `-MemberExpr 0x55557d9b8508 <col:16> '<bound member function type>' ->data32 0x55557d900f88
|       | |   |   `-CXXThisExpr 0x55557d9b84f8 <col:16> 'const IP6Address *' implicit this
|       | |   `-IntegerLiteral 0x55557d9b8558 <col:25> 'int' 0
|       | `-CallExpr 0x55557d9b8638 <col:31, col:47> 'uint32_t':'unsigned int'
|       |   |-ImplicitCastExpr 0x55557d9b8620 <col:31> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55557d9b8600 <col:31> 'uint32_t (uint32_t) throw()' lvalue Function 0x55557d6c0bb8 'htonl' 'uint32_t (uint32_t) throw()'
|       |   `-IntegerLiteral 0x55557d9b85e0 <col:37> 'unsigned int' 4269801472
|       `-BinaryOperator 0x55557d9b87f8 <col:52, col:67> 'bool' '=='
|         |-ImplicitCastExpr 0x55557d9b87c8 <col:52, col:62> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x55557d9b8788 <col:52, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x55557d9b8748 <col:52, col:59> 'const uint32_t *'
|         |   | `-MemberExpr 0x55557d9b8718 <col:52> '<bound member function type>' ->data32 0x55557d900f88
|         |   |   `-CXXThisExpr 0x55557d9b8708 <col:52> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x55557d9b8768 <col:61> 'int' 1
|         `-ImplicitCastExpr 0x55557d9b87e0 <col:67> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x55557d9b87a8 <col:67> 'int' 0
|-CXXMethodDecl 0x55557d901ac0 <line:145:5, col:29> col:15 ip4_address 'IPAddress () const'
|-CXXMethodDecl 0x55557d901c68 <line:154:5, col:53> col:24 operator&= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x55557d901b70 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x55557d901e28 <line:155:5, col:58> col:24 operator&= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x55557d901d38 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x55557d901f70 <line:156:5, col:53> col:24 operator|= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x55557d901ee0 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x55557d9020d0 <line:157:5, col:58> col:24 operator|= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x55557d902040 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x55557d902230 <line:159:5, col:57> col:24 operator= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x55557d9021a0 <col:34, col:56> col:57 'const struct in6_addr &'
|-CXXMethodDecl 0x55557d9023f8 <line:160:5, col:56> col:24 used operator= 'IP6Address &(const struct in_addr &)' inline
| `-ParmVarDecl 0x55557d902300 <col:34, col:55> col:56 'const struct in_addr &'
|-CXXMethodDecl 0x55557d902578 <line:162:5, col:35> col:10 used unparse 'void (StringAccum &) const'
| `-ParmVarDecl 0x55557d9024b0 <col:18, col:31> col:31 sa 'StringAccum &'
|-CXXMethodDecl 0x55557d902640 <line:163:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55557d902700 <line:164:5, col:31> col:12 unparse_expanded 'String () const'
|-CXXMethodDecl 0x55557d9027c0 <line:166:5, col:42> col:12 s 'String () const'
| `-CompoundStmt 0x55557d9b89c8 <col:22, col:42>
|   `-ReturnStmt 0x55557d9b89b8 <col:24, col:39>
|     `-ExprWithCleanups 0x55557d9b89a0 <col:31, col:39> 'String'
|       `-CXXConstructExpr 0x55557d9b8970 <col:31, col:39> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55557d9b8958 <col:31, col:39> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55557d9b8938 <col:31, col:39> 'String' (CXXTemporary 0x55557d9b8938)
|             `-CXXMemberCallExpr 0x55557d9b8910 <col:31, col:39> 'String'
|               `-MemberExpr 0x55557d9b88e0 <col:31> '<bound member function type>' ->unparse 0x55557d902640
|                 `-CXXThisExpr 0x55557d9b88d0 <col:31> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x55557d902890 <line:167:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55557d902938 <col:51> "" ""
|-TypedefDecl 0x55557d9029b8 <line:169:5, col:31> col:31 parameter_type 'const IP6Address &'
| `-LValueReferenceType 0x55557d9011b0 'const IP6Address &'
|   `-QualType 0x55557d9447a1 'const IP6Address' const
|     `-RecordType 0x55557d9447a0 'IP6Address'
|       `-CXXRecord 0x55557d8ff3c0 'IP6Address'
|-AccessSpecDecl 0x55557d902a10 <line:171:3, col:10> col:3 private
|-FieldDecl 0x55557d902a58 <line:173:5, col:21> col:21 referenced _addr 'struct in6_addr':'in6_addr'
|-CXXMethodDecl 0x55557d903990 <line:14:7> col:7 implicit used operator= 'IP6Address &(const IP6Address &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d903a68 <col:7> col:7 used 'const IP6Address &'
| `-CompoundStmt 0x55557da9c2f0 <col:7>
|   |-CXXMemberCallExpr 0x55557da9c290 <col:7> 'in6_addr' lvalue
|   | |-MemberExpr 0x55557da9c248 <col:7> '<bound member function type>' .operator= 0x55557d903e08
|   | | `-MemberExpr 0x55557da9c158 <col:7> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x55557d902a58
|   | |   `-CXXThisExpr 0x55557da9c148 <col:7> 'IP6Address *' this
|   | `-MemberExpr 0x55557da9c218 <col:7> 'const struct in6_addr':'const in6_addr' lvalue ._addr 0x55557d902a58
|   |   `-DeclRefExpr 0x55557da9c1f8 <col:7> 'const IP6Address' lvalue ParmVar 0x55557d903a68 '' 'const IP6Address &'
|   `-ReturnStmt 0x55557da9c2e0 <col:7>
|     `-UnaryOperator 0x55557da9c2c8 <col:7> 'IP6Address' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55557da9c2b8 <col:7> 'IP6Address *' this
|-CXXMethodDecl 0x55557d904138 <col:7> col:7 implicit operator= 'IP6Address &(IP6Address &&)' inline default trivial noexcept-unevaluated 0x55557d904138
| `-ParmVarDecl 0x55557d904248 <col:7> col:7 'IP6Address &&'
|-CXXConstructorDecl 0x55557d9042b8 <col:7> col:7 implicit constexpr IP6Address 'void (const IP6Address &)' inline default trivial noexcept-unevaluated 0x55557d9042b8
| `-ParmVarDecl 0x55557d9043c8 <col:7> col:7 'const IP6Address &'
|-CXXConstructorDecl 0x55557d904520 <col:7> col:7 implicit used constexpr IP6Address 'void (IP6Address &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d904638 <col:7> col:7 used 'IP6Address &&'
| |-CXXCtorInitializer Field 0x55557d902a58 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x55557d9bfd18 <col:7> 'struct in6_addr':'in6_addr' 'void (in6_addr &&) noexcept'
| |   `-MemberExpr 0x55557d9bfbc0 <col:7> 'struct in6_addr':'in6_addr' xvalue ._addr 0x55557d902a58
| |     `-CXXStaticCastExpr 0x55557d9bfb90 <col:7> 'IP6Address' xvalue static_cast<class IP6Address &&> <NoOp>
| |       `-DeclRefExpr 0x55557d9bfb60 <col:7> 'IP6Address' lvalue ParmVar 0x55557d904638 '' 'IP6Address &&'
| `-CompoundStmt 0x55557d9bfd78 <col:7>
`-CXXDestructorDecl 0x55557d9bf9c8 <col:7> col:7 implicit referenced ~IP6Address 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IP6Address = type { %struct.in6_addr }
  NonVirtualBaseLLVMType:%class.IP6Address = type { %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d9962a8 prev 0x55557d97d810 <../dummy_inc/click/etheraddress.hh:9:1, line:148:1> line:9:7 referenced class EtherAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-PackedAttr 0x55557d997d18 <line:148:18>
|-CXXRecordDecl 0x55557d9963a0 <line:9:1, col:7> col:7 implicit referenced class EtherAddress
|-AccessSpecDecl 0x55557d996430 <col:22, col:28> col:22 public
|-TypedefDecl 0x55557d996468 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55557d5711a0 'uninitialized_type'
|   `-CXXRecord 0x55557d571108 'uninitialized_type'
|-CXXConstructorDecl 0x55557d9964f8 <line:14:5, line:16:5> line:14:12 used EtherAddress 'void ()' inline
| `-CompoundStmt 0x55557d998018 <col:27, line:16:5>
|   `-BinaryOperator 0x55557d997ff8 <line:15:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x55557d997e00 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x55557d997de8 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55557d997d98 <col:2> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|     | |   `-CXXThisExpr 0x55557d997d88 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x55557d997dc8 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x55557d997fe0 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x55557d997fc0 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x55557d997e98 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x55557d997e80 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x55557d997e30 <col:13> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|         | |   `-CXXThisExpr 0x55557d997e20 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x55557d997e60 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x55557d997fa8 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x55557d997f88 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x55557d997f30 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x55557d997f18 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x55557d997ec8 <col:24> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|             | |   `-CXXThisExpr 0x55557d997eb8 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x55557d997ef8 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x55557d997f70 <col:35> 'uint16_t':'unsigned short' <IntegralCast>
|               `-IntegerLiteral 0x55557d997f50 <col:35> 'int' 0
|-CXXConstructorDecl 0x55557d996648 <line:22:5, line:24:5> line:22:21 EtherAddress 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x55557d9965b8 <col:34, col:55> col:55 used data 'const unsigned char *'
| `-CompoundStmt 0x55557d9981e0 <col:61, line:24:5>
|   `-CallExpr 0x55557d998130 <line:23:2, col:23> 'void *'
|     |-ImplicitCastExpr 0x55557d998118 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55557d9980f8 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55557d67af18 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x55557d998180 <col:9> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x55557d998168 <col:9> 'uint16_t *' <ArrayToPointerDecay>
|     |   `-MemberExpr 0x55557d998088 <col:9> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|     |     `-CXXThisExpr 0x55557d998078 <col:9> 'EtherAddress *' implicit this
|     |-ImplicitCastExpr 0x55557d9981b0 <col:16> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x55557d998198 <col:16> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x55557d9980b8 <col:16> 'const unsigned char *' lvalue ParmVar 0x55557d9965b8 'data' 'const unsigned char *'
|     `-ImplicitCastExpr 0x55557d9981c8 <col:22> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x55557d9980d8 <col:22> 'int' 6
|-CXXConstructorDecl 0x55557d996798 <line:27:5, line:29:5> line:27:12 EtherAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55557d996708 <col:25, col:51> col:51 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55557d998250 <col:59, line:29:5>
|   `-CStyleCastExpr 0x55557d998228 <line:28:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55557d9981f8 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55557d996708 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55557d996898 <line:32:5, line:34:5> line:32:25 used make_broadcast 'EtherAddress ()' static
| `-CompoundStmt 0x55557d998998 <col:42, line:34:5>
|   `-ReturnStmt 0x55557d998988 <line:33:2, col:28>
|     `-ExprWithCleanups 0x55557d998970 <col:9, col:28> 'EtherAddress'
|       `-CXXConstructExpr 0x55557d998940 <col:9, col:28> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55557d998778 <col:9, col:28> 'EtherAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55557d9986f0 <col:9, col:28> 'EtherAddress' functional cast to class EtherAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55557d9985e0 <col:9, col:28> 'EtherAddress' 'void (uint16_t)'
|               `-ImplicitCastExpr 0x55557d9985c8 <col:22> 'uint16_t':'unsigned short' <IntegralCast>
|                 `-IntegerLiteral 0x55557d998278 <col:22> 'int' 65535
|-CXXMethodDecl 0x55557d996958 <line:36:5, col:70> col:32 broadcast 'EtherAddress ()' static inline
| `-DeprecatedAttr 0x55557d9969f8 <col:59> "" ""
|-TypedefDecl 0x55557d996b78 <line:39:5, col:59> col:34 referenced unspecified_bool_type 'bool (EtherAddress::*)() const'
| `-MemberPointerType 0x55557d996af0 'bool (EtherAddress::*)() const'
|   |-RecordType 0x55557d97d8a0 'EtherAddress'
|   | `-CXXRecord 0x55557d9962a8 'EtherAddress'
|   `-ParenType 0x55557d996a90 'bool () const' sugar
|     `-FunctionProtoType 0x55557d4c3f20 'bool () const' const cdecl
|       `-BuiltinType 0x55557d41b330 'bool'
|-CXXConversionDecl 0x55557d996cb8 <line:41:5, line:43:5> line:41:12 operator bool (EtherAddress::*)() const 'EtherAddress::unspecified_bool_type () const' inline
| `-CompoundStmt 0x55557d998d78 <col:51, line:43:5>
|   `-ReturnStmt 0x55557d998d68 <line:42:2, col:70>
|     `-ConditionalOperator 0x55557d998d38 <col:9, col:70> 'bool (EtherAddress::*)() const'
|       |-BinaryOperator 0x55557d998c60 <col:9, col:40> 'bool' '||'
|       | |-BinaryOperator 0x55557d998b78 <col:9, col:28> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55557d998b30 <col:9, col:16> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55557d998b18 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x55557d998a60 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x55557d998a48 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x55557d9989c0 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|       | | |     |   `-CXXThisExpr 0x55557d9989b0 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x55557d9989f0 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x55557d998b60 <col:21, col:28> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55557d998b48 <col:21, col:28> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x55557d998af8 <col:21, col:28> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x55557d998ae0 <col:21> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x55557d998a90 <col:21> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|       | |       |   `-CXXThisExpr 0x55557d998a80 <col:21> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x55557d998ac0 <col:27> 'int' 1
|       | `-ImplicitCastExpr 0x55557d998c48 <col:33, col:40> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55557d998c30 <col:33, col:40> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x55557d998c10 <col:33, col:40> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x55557d998bf8 <col:33> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x55557d998ba8 <col:33> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|       |       |   `-CXXThisExpr 0x55557d998b98 <col:33> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x55557d998bd8 <col:39> 'int' 2
|       |-UnaryOperator 0x55557d998ce8 <col:44, col:59> 'bool (EtherAddress::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55557d998cb8 <col:45, col:59> 'bool () const' CXXMethod 0x55557d996d88 'is_group' 'bool () const'
|       `-ImplicitCastExpr 0x55557d998d20 <col:70> 'bool (EtherAddress::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55557d998d00 <col:70> 'int' 0
|-CXXMethodDecl 0x55557d996d88 <line:49:5, line:51:5> line:49:17 used is_group 'bool () const' inline
| `-CompoundStmt 0x55557d998f38 <col:34, line:51:5>
|   `-ReturnStmt 0x55557d998f28 <line:50:2, col:21>
|     `-ImplicitCastExpr 0x55557d998f10 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55557d998ef0 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x55557d998ed8 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55557d998ec0 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55557d998e80 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x55557d998e40 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x55557d998e10 <col:9> '<bound member function type>' ->data 0x55557d997220
|         |     |   `-CXXThisExpr 0x55557d998e00 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x55557d998e60 <col:16> 'int' 0
|         `-IntegerLiteral 0x55557d998ea0 <col:21> 'int' 1
|-CXXMethodDecl 0x55557d996e48 <line:57:5, line:59:5> line:57:17 is_local 'bool () const' inline
| `-CompoundStmt 0x55557d9990f8 <col:34, line:59:5>
|   `-ReturnStmt 0x55557d9990e8 <line:58:2, col:21>
|     `-ImplicitCastExpr 0x55557d9990d0 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55557d9990b0 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x55557d999098 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55557d999080 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55557d999040 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x55557d999000 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x55557d998fd0 <col:9> '<bound member function type>' ->data 0x55557d997220
|         |     |   `-CXXThisExpr 0x55557d998fc0 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x55557d999020 <col:16> 'int' 0
|         `-IntegerLiteral 0x55557d999060 <col:21> 'int' 2
|-CXXMethodDecl 0x55557d996f08 <line:64:5, line:66:5> line:64:17 used is_broadcast 'bool () const' inline
| `-CompoundStmt 0x55557d9993f8 <col:38, line:66:5>
|   `-ReturnStmt 0x55557d9993e8 <line:65:2, col:43>
|     `-BinaryOperator 0x55557d9993c8 <col:9, col:43> 'bool' '=='
|       |-BinaryOperator 0x55557d999388 <col:9, col:38> 'int' '+'
|       | |-BinaryOperator 0x55557d9992a0 <col:9, col:27> 'int' '+'
|       | | |-ImplicitCastExpr 0x55557d999258 <col:9, col:16> 'int' <IntegralCast>
|       | | | `-ImplicitCastExpr 0x55557d999240 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x55557d999188 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x55557d999170 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x55557d999120 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|       | | |     |   `-CXXThisExpr 0x55557d999110 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x55557d999150 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x55557d999288 <col:20, col:27> 'int' <IntegralCast>
|       | |   `-ImplicitCastExpr 0x55557d999270 <col:20, col:27> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x55557d999220 <col:20, col:27> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x55557d999208 <col:20> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x55557d9991b8 <col:20> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|       | |       |   `-CXXThisExpr 0x55557d9991a8 <col:20> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x55557d9991e8 <col:26> 'int' 1
|       | `-ImplicitCastExpr 0x55557d999370 <col:31, col:38> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x55557d999358 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x55557d999338 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x55557d999320 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x55557d9992d0 <col:31> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|       |       |   `-CXXThisExpr 0x55557d9992c0 <col:31> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x55557d999300 <col:37> 'int' 2
|       `-IntegerLiteral 0x55557d9993a8 <col:43> 'int' 196605
|-CXXMethodDecl 0x55557d997088 <line:69:5, line:75:5> line:69:24 is_broadcast 'bool (const unsigned char *)' static inline
| |-ParmVarDecl 0x55557d996fc0 <col:37, col:58> col:58 used data 'const unsigned char *'
| `-CompoundStmt 0x55557d999548 <col:64, line:75:5>
|   `-ReturnStmt 0x55557d999538 <line:71:2, col:68>
|     `-CXXMemberCallExpr 0x55557d999518 <col:9, col:68> 'bool'
|       `-MemberExpr 0x55557d9994e8 <col:9, col:55> '<bound member function type>' ->is_broadcast 0x55557d996f08
|         `-CXXReinterpretCastExpr 0x55557d999458 <col:9, col:52> 'const EtherAddress *' reinterpret_cast<const class EtherAddress *> <BitCast>
|           `-ImplicitCastExpr 0x55557d999440 <col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x55557d999410 <col:48> 'const unsigned char *' lvalue ParmVar 0x55557d996fc0 'data' 'const unsigned char *'
|-CXXMethodDecl 0x55557d997158 <line:78:5, line:80:5> line:78:27 data 'unsigned char *()' inline
| `-CompoundStmt 0x55557d999610 <col:34, line:80:5>
|   `-ReturnStmt 0x55557d999600 <line:79:2, col:48>
|     `-CXXReinterpretCastExpr 0x55557d9995d0 <col:9, col:48> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x55557d9995b8 <col:43> 'uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x55557d999570 <col:43> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|           `-CXXThisExpr 0x55557d999560 <col:43> 'EtherAddress *' implicit this
|-CXXMethodDecl 0x55557d997220 <line:83:5, line:85:5> line:83:33 used data 'const unsigned char *() const' inline
| `-CompoundStmt 0x55557d9996d8 <col:46, line:85:5>
|   `-ReturnStmt 0x55557d9996c8 <line:84:2, col:54>
|     `-CXXReinterpretCastExpr 0x55557d999698 <col:9, col:54> 'const unsigned char *' reinterpret_cast<const unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x55557d999680 <col:49> 'const uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x55557d999638 <col:49> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|           `-CXXThisExpr 0x55557d999628 <col:49> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55557d997368 <line:89:5, line:91:5> line:89:28 used sdata 'const uint16_t *() const' inline
| `-CompoundStmt 0x55557d999758 <col:42, line:91:5>
|   `-ReturnStmt 0x55557d999748 <line:90:2, col:9>
|     `-ImplicitCastExpr 0x55557d999730 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       `-MemberExpr 0x55557d999700 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|         `-CXXThisExpr 0x55557d9996f0 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55557d997458 <line:94:5, line:97:5> line:94:19 hashcode 'size_t () const' inline
| `-CompoundStmt 0x55557d999b68 <col:36, line:97:5>
|   `-ReturnStmt 0x55557d999b58 <line:95:2, line:96:31>
|     `-BinaryOperator 0x55557d999b38 <line:95:9, line:96:31> 'unsigned long' '^'
|       |-ParenExpr 0x55557d9999b8 <line:95:9, col:46> 'unsigned long'
|       | `-BinaryOperator 0x55557d999998 <col:10, col:45> 'unsigned long' '|'
|       |   |-ImplicitCastExpr 0x55557d999980 <col:10, col:17> 'unsigned long' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55557d999968 <col:10, col:17> 'uint16_t':'unsigned short' <LValueToRValue>
|       |   |   `-ArraySubscriptExpr 0x55557d9997e8 <col:10, col:17> 'const uint16_t':'const unsigned short' lvalue
|       |   |     |-ImplicitCastExpr 0x55557d9997d0 <col:10> 'const uint16_t *' <ArrayToPointerDecay>
|       |   |     | `-MemberExpr 0x55557d999780 <col:10> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|       |   |     |   `-CXXThisExpr 0x55557d999770 <col:10> 'const EtherAddress *' implicit this
|       |   |     `-IntegerLiteral 0x55557d9997b0 <col:16> 'int' 2
|       |   `-ParenExpr 0x55557d999948 <col:21, col:45> 'size_t':'unsigned long'
|       |     `-BinaryOperator 0x55557d999928 <col:22, col:43> 'size_t':'unsigned long' '<<'
|       |       |-CStyleCastExpr 0x55557d9998e0 <col:22, col:38> 'size_t':'unsigned long' <NoOp>
|       |       | `-ImplicitCastExpr 0x55557d9998c8 <col:31, col:38> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|       |       |   `-ImplicitCastExpr 0x55557d9998b0 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|       |       |     `-ArraySubscriptExpr 0x55557d999880 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |       |-ImplicitCastExpr 0x55557d999868 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       |       | `-MemberExpr 0x55557d999818 <col:31> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|       |       |       |   `-CXXThisExpr 0x55557d999808 <col:31> 'const EtherAddress *' implicit this
|       |       |       `-IntegerLiteral 0x55557d999848 <col:37> 'int' 1
|       |       `-IntegerLiteral 0x55557d999908 <col:43> 'int' 16
|       `-ParenExpr 0x55557d999b18 <line:96:8, col:31> 'size_t':'unsigned long'
|         `-BinaryOperator 0x55557d999af8 <col:9, col:30> 'size_t':'unsigned long' '<<'
|           |-CStyleCastExpr 0x55557d999ab0 <col:9, col:25> 'size_t':'unsigned long' <NoOp>
|           | `-ImplicitCastExpr 0x55557d999a98 <col:18, col:25> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           |   `-ImplicitCastExpr 0x55557d999a80 <col:18, col:25> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|           |     `-ArraySubscriptExpr 0x55557d999a50 <col:18, col:25> 'const uint16_t':'const unsigned short' lvalue
|           |       |-ImplicitCastExpr 0x55557d999a38 <col:18> 'const uint16_t *' <ArrayToPointerDecay>
|           |       | `-MemberExpr 0x55557d9999e8 <col:18> 'uint16_t const[3]' lvalue ->_data 0x55557d997b18
|           |       |   `-CXXThisExpr 0x55557d9999d8 <col:18> 'const EtherAddress *' implicit this
|           |       `-IntegerLiteral 0x55557d999a18 <col:24> 'int' 0
|           `-IntegerLiteral 0x55557d999ad8 <col:30> 'int' 9
|-CXXMethodDecl 0x55557d997518 <line:109:5, line:111:5> line:109:19 used unparse 'String () const' inline
| `-CompoundStmt 0x55557d999c78 <col:35, line:111:5>
|   `-ReturnStmt 0x55557d999c68 <line:110:2, col:22>
|     `-ExprWithCleanups 0x55557d999c50 <col:9, col:22> 'String'
|       `-CXXConstructExpr 0x55557d999c20 <col:9, col:22> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55557d999c08 <col:9, col:22> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55557d999be8 <col:9, col:22> 'String' (CXXTemporary 0x55557d999be8)
|             `-CXXMemberCallExpr 0x55557d999bc0 <col:9, col:22> 'String'
|               `-MemberExpr 0x55557d999b90 <col:9> '<bound member function type>' ->unparse_dash 0x55557d997698
|                 `-CXXThisExpr 0x55557d999b80 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55557d9975d8 <line:118:5, col:28> col:12 unparse_colon 'String () const'
|-CXXMethodDecl 0x55557d997698 <line:126:5, col:27> col:12 used unparse_dash 'String () const'
|-CXXMethodDecl 0x55557d997758 <line:131:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55557d9977f8 <col:44> "" ""
|-CXXConversionDecl 0x55557d997898 <line:136:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55557d997940 <col:51> "" ""
|-TypedefDecl 0x55557d9979f8 <line:138:5, col:33> col:33 parameter_type 'const EtherAddress &'
| `-LValueReferenceType 0x55557d9979c0 'const EtherAddress &'
|   `-QualType 0x55557d97d8a1 'const EtherAddress' const
|     `-RecordType 0x55557d97d8a0 'EtherAddress'
|       `-CXXRecord 0x55557d9962a8 'EtherAddress'
|-AccessSpecDecl 0x55557d997a50 <line:140:2, col:9> col:2 private
|-FieldDecl 0x55557d997b18 <line:142:5, col:21> col:14 referenced _data 'uint16_t [3]'
|-CXXConstructorDecl 0x55557d997c68 <line:144:5, line:146:5> line:144:5 used EtherAddress 'void (uint16_t)'
| |-ParmVarDecl 0x55557d997b78 <col:18, col:27> col:27 used m 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55557d999f20 <col:30, line:146:5>
|   `-BinaryOperator 0x55557d999f00 <line:145:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x55557d999d08 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x55557d999cf0 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55557d999ca0 <col:2> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|     | |   `-CXXThisExpr 0x55557d999c90 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x55557d999cd0 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x55557d999ee8 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x55557d999ec8 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x55557d999da0 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x55557d999d88 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x55557d999d38 <col:13> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|         | |   `-CXXThisExpr 0x55557d999d28 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x55557d999d68 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x55557d999eb0 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x55557d999e90 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x55557d999e38 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x55557d999e20 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x55557d999dd0 <col:24> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|             | |   `-CXXThisExpr 0x55557d999dc0 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x55557d999e00 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x55557d999e78 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-DeclRefExpr 0x55557d999e58 <col:35> 'uint16_t':'unsigned short' lvalue ParmVar 0x55557d997b78 'm' 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x55557d998298 <line:9:7> col:7 implicit constexpr EtherAddress 'void (const EtherAddress &)' inline default trivial noexcept-unevaluated 0x55557d998298
| `-ParmVarDecl 0x55557d9983a8 <col:7> col:7 'const EtherAddress &'
|-CXXConstructorDecl 0x55557d998448 <col:7> col:7 implicit used constexpr EtherAddress 'void (EtherAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d998558 <col:7> col:7 used 'EtherAddress &&'
| |-CXXCtorInitializer Field 0x55557d997b18 '_data' 'uint16_t [3]'
| | `-ArrayInitLoopExpr 0x55557d9988e0 <col:7> 'uint16_t [3]'
| |   |-OpaqueValueExpr 0x55557d998868 <col:7> 'uint16_t [3]' xvalue
| |   | `-MemberExpr 0x55557d998820 <col:7> 'uint16_t [3]' xvalue ._data 0x55557d997b18
| |   |   `-CXXStaticCastExpr 0x55557d9987f0 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |   |     `-DeclRefExpr 0x55557d9987c0 <col:7> 'EtherAddress' lvalue ParmVar 0x55557d998558 '' 'EtherAddress &&'
| |   `-ImplicitCastExpr 0x55557d9988c8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |     `-ArraySubscriptExpr 0x55557d9988a8 <col:7> 'uint16_t':'unsigned short' xvalue
| |       |-ImplicitCastExpr 0x55557d998890 <col:7> 'uint16_t *' <ArrayToPointerDecay>
| |       | `-OpaqueValueExpr 0x55557d998868 <col:7> 'uint16_t [3]' xvalue
| |       |   `-MemberExpr 0x55557d998820 <col:7> 'uint16_t [3]' xvalue ._data 0x55557d997b18
| |       |     `-CXXStaticCastExpr 0x55557d9987f0 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |       |       `-DeclRefExpr 0x55557d9987c0 <col:7> 'EtherAddress' lvalue ParmVar 0x55557d998558 '' 'EtherAddress &&'
| |       `-ArrayInitIndexExpr 0x55557d998880 <<invalid sloc>> 'unsigned long'
| `-CompoundStmt 0x55557d998930 <col:7>
|-CXXDestructorDecl 0x55557d998610 <col:7> col:7 implicit referenced ~EtherAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55557da9c508 <col:7> col:7 implicit used operator= 'EtherAddress &(const EtherAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557da9c618 <col:7> col:7 used 'const EtherAddress &'
| `-CompoundStmt 0x55557da9d0d0 <col:7>
|   |-CallExpr 0x55557da9d030 <col:7> 'void *'
|   | |-ImplicitCastExpr 0x55557da9d018 <col:7> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x55557da9cfa8 <col:7> '<builtin fn type>' Function 0x55557da9cd60 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
|   | |-ImplicitCastExpr 0x55557da9d068 <col:7> 'void *' <BitCast>
|   | | `-UnaryOperator 0x55557da9ccb8 <col:7> 'uint16_t (*)[3]' prefix '&' cannot overflow
|   | |   `-MemberExpr 0x55557da9cc30 <col:7> 'uint16_t [3]' lvalue ->_data 0x55557d997b18
|   | |     `-CXXThisExpr 0x55557da9cc20 <col:7> 'EtherAddress *' this
|   | |-ImplicitCastExpr 0x55557da9d080 <col:7> 'const void *' <BitCast>
|   | | `-UnaryOperator 0x55557da9cc08 <col:7> 'uint16_t const (*)[3]' prefix '&' cannot overflow
|   | |   `-MemberExpr 0x55557da9cb80 <col:7> 'uint16_t const[3]' lvalue ._data 0x55557d997b18
|   | |     `-DeclRefExpr 0x55557da9cb60 <col:7> 'const EtherAddress' lvalue ParmVar 0x55557da9c618 '' 'const EtherAddress &'
|   | `-IntegerLiteral 0x55557da9cfc8 <col:7> 'unsigned long' 6
|   `-ReturnStmt 0x55557da9d0c0 <col:7>
|     `-UnaryOperator 0x55557da9d0a8 <col:7> 'EtherAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55557da9d098 <col:7> 'EtherAddress *' this
`-CXXMethodDecl 0x55557da9c688 <col:7> col:7 implicit operator= 'EtherAddress &(EtherAddress &&)' inline default trivial noexcept-unevaluated 0x55557da9c688
  `-ParmVarDecl 0x55557da9c798 <col:7> col:7 'EtherAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddress = type { [3 x i16] }
  NonVirtualBaseLLVMType:%class.EtherAddress = type { [3 x i16] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d9c9540 <../elements/ethernet/ip6ndadvertiser.hh:67:3, line:71:3> line:67:10 referenced struct Entry definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55557d9c9658 <col:3, col:10> col:10 implicit struct Entry
|-FieldDecl 0x55557d9c96f8 <line:68:5, col:16> col:16 referenced dst 'IP6Address'
|-FieldDecl 0x55557d9c9758 <line:69:5, col:16> col:16 referenced mask 'IP6Address'
|-FieldDecl 0x55557d9c97b8 <line:70:5, col:18> col:18 referenced ena 'EtherAddress'
|-CXXConstructorDecl 0x55557da9bb00 <line:67:10> col:10 implicit used Entry 'void () noexcept(false)' inline default
| |-CXXCtorInitializer Field 0x55557d9c96f8 'dst' 'IP6Address'
| | `-CXXConstructExpr 0x55557da9bf00 <col:10> 'IP6Address' 'void ()'
| |-CXXCtorInitializer Field 0x55557d9c9758 'mask' 'IP6Address'
| | `-CXXConstructExpr 0x55557da9bf50 <col:10> 'IP6Address' 'void ()'
| |-CXXCtorInitializer Field 0x55557d9c97b8 'ena' 'EtherAddress'
| | `-CXXConstructExpr 0x55557da9bfa0 <col:10> 'EtherAddress' 'void ()'
| `-CompoundStmt 0x55557da9c008 <col:10>
|-CXXConstructorDecl 0x55557da9bbe0 <col:10> col:10 implicit constexpr Entry 'void (const IP6NDAdvertiser::Entry &)' inline default trivial noexcept-unevaluated 0x55557da9bbe0
| `-ParmVarDecl 0x55557da9bcc8 <col:10> col:10 'const IP6NDAdvertiser::Entry &'
`-CXXConstructorDecl 0x55557da9bd38 <col:10> col:10 implicit constexpr Entry 'void (IP6NDAdvertiser::Entry &&)' inline default trivial noexcept-unevaluated 0x55557da9bd38
  `-ParmVarDecl 0x55557da9be48 <col:10> col:10 'IP6NDAdvertiser::Entry &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.IP6NDAdvertiser::Entry" = type <{ %class.IP6Address, %class.IP6Address, %class.EtherAddress, [2 x i8] }>
  NonVirtualBaseLLVMType:%"struct.IP6NDAdvertiser::Entry.base" = type <{ %class.IP6Address, %class.IP6Address, %class.EtherAddress }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d751760 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55557d751878 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55557d751918 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55557d751978 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55557d7519d8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55557d751a88 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d751d90 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557d751ea8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55557d751f50 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55557d751fb8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55557d752048 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55557d7580e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55557d758518 <col:12>
|-CXXConstructorDecl 0x55557d7581e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d7582f8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55557d751f50 'data' 'const char *'
| | `-ImplicitCastExpr 0x55557d75aaa0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55557d75aa70 <col:12> 'const char *const' lvalue .data 0x55557d751f50
| |     `-DeclRefExpr 0x55557d75aa50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d7582f8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55557d751fb8 'length' 'int'
| | `-ImplicitCastExpr 0x55557d75ab30 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55557d75ab00 <col:12> 'const int' lvalue .length 0x55557d751fb8
| |     `-DeclRefExpr 0x55557d75aae0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d7582f8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55557d752048 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55557d75abc0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55557d75ab90 <col:12> 'String::memo_t *const' lvalue .memo 0x55557d752048
| |     `-DeclRefExpr 0x55557d75ab70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d7582f8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55557d75ac18 <col:12>
|-CXXConstructorDecl 0x55557d758398 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55557d758398
| `-ParmVarDecl 0x55557d7584a8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55557d75da00 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55557d769418 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d769528 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55557d769a40 <col:12>
|   |-BinaryOperator 0x55557d769858 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55557d769810 <col:12> 'const char *' lvalue ->data 0x55557d751f50
|   | | `-CXXThisExpr 0x55557d769800 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55557d769840 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55557d7697d0 <col:12> 'const char *const' lvalue .data 0x55557d751f50
|   |     `-DeclRefExpr 0x55557d7697b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d769528 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55557d769920 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55557d7698d8 <col:12> 'int' lvalue ->length 0x55557d751fb8
|   | | `-CXXThisExpr 0x55557d7698c8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55557d769908 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55557d769898 <col:12> 'const int' lvalue .length 0x55557d751fb8
|   |     `-DeclRefExpr 0x55557d769878 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d769528 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55557d7699e8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55557d7699a0 <col:12> 'String::memo_t *' lvalue ->memo 0x55557d752048
|   | | `-CXXThisExpr 0x55557d769990 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55557d7699d0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55557d769960 <col:12> 'String::memo_t *const' lvalue .memo 0x55557d752048
|   |     `-DeclRefExpr 0x55557d769940 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d769528 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55557d769a30 <col:12>
|     `-UnaryOperator 0x55557d769a18 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55557d769a08 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55557d769598 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55557d769598
  `-ParmVarDecl 0x55557d7696a8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d748cd0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55557d748de8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55557d748e78 <col:16, col:22> col:16 public
|-TypedefDecl 0x55557d748eb8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55557d41be00 'const char *'
|   `-QualType 0x55557d41b351 'const char' const
|     `-BuiltinType 0x55557d41b350 'char'
|-TypedefDecl 0x55557d748f40 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55557d748f10 'String::const_iterator' sugar
|   |-Typedef 0x55557d748eb8 'const_iterator'
|   `-PointerType 0x55557d41be00 'const char *'
|     `-QualType 0x55557d41b351 'const char' const
|       `-BuiltinType 0x55557d41b350 'char'
|-TypedefDecl 0x55557d7490b0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55557d749020 'int (String::*)() const'
|   |-RecordType 0x55557d748d60 'String'
|   | `-CXXRecord 0x55557d748cd0 'String'
|   `-ParenType 0x55557d748fc0 'int () const' sugar
|     `-FunctionProtoType 0x55557d71cb50 'int () const' const cdecl
|       `-BuiltinType 0x55557d41b3b0 'int'
|-TypedefDecl 0x55557d749118 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55557d571730 'int64_t' sugar
|   |-Typedef 0x55557d4842a0 'int64_t'
|   `-TypedefType 0x55557d45d510 '__int64_t' sugar
|     |-Typedef 0x55557d45d0e8 '__int64_t'
|     `-BuiltinType 0x55557d41b3d0 'long'
|-TypedefDecl 0x55557d749180 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55557d571650 'uint64_t' sugar
|   |-Typedef 0x55557d484440 'uint64_t'
|   `-TypedefType 0x55557d45d5a0 '__uint64_t' sugar
|     |-Typedef 0x55557d45d158 '__uint64_t'
|     `-BuiltinType 0x55557d41b470 'unsigned long'
|-TypedefDecl 0x55557d749210 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55557d7491e0 'String::intmax_t' sugar
|   |-Typedef 0x55557d749118 'intmax_t'
|   `-TypedefType 0x55557d571730 'int64_t' sugar
|     |-Typedef 0x55557d4842a0 'int64_t'
|     `-TypedefType 0x55557d45d510 '__int64_t' sugar
|       |-Typedef 0x55557d45d0e8 '__int64_t'
|       `-BuiltinType 0x55557d41b3d0 'long'
|-TypedefDecl 0x55557d7492a0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55557d749270 'String::uintmax_t' sugar
|   |-Typedef 0x55557d749180 'uintmax_t'
|   `-TypedefType 0x55557d571650 'uint64_t' sugar
|     |-Typedef 0x55557d484440 'uint64_t'
|     `-TypedefType 0x55557d45d5a0 '__uint64_t' sugar
|       |-Typedef 0x55557d45d158 '__uint64_t'
|       `-BuiltinType 0x55557d41b470 'unsigned long'
|-CXXConstructorDecl 0x55557d749360 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55557d749508 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55557d749448 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55557d7496b8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55557d7495f8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55557d749810 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55557d749780 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55557d749a28 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55557d7498d8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55557d749958 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55557d749c48 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55557d749af8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55557d749b78 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55557d749e68 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55557d749d18 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55557d749d98 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55557d74a088 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55557d749f38 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55557d749fb8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55557d74a218 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55557d74a150 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55557d74a398 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55557d74a2d8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55557d74a528 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55557d74a460 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55557d74a680 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55557d74a5f0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55557d74a7d8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55557d74a748 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55557d74a930 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55557d74a8a0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55557d74aab8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55557d74a9f8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55557d74ac48 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55557d74ab80 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55557d74add8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55557d74ad10 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55557d74af68 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55557d74aea0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55557d74b060 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55557d74b188 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55557d74b308 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55557d74b240 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55557d74b458 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55557d74b3c8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55557d74b510 <col:63> "" ""
|-CXXMethodDecl 0x55557d74b658 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55557d74b598 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55557d74b868 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55557d74b718 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55557d74b798 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55557d74ba88 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55557d74b930 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55557d74b9b0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55557d74bd68 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55557d74bb48 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55557d74bbc8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55557d757bb0 <col:55> 'int' 10
| `-ParmVarDecl 0x55557d74bc40 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55557d757bd0 <col:76> 'bool' true
|-CXXMethodDecl 0x55557d74c048 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55557d74be30 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55557d74beb0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55557d757be0 <col:56> 'int' 10
| `-ParmVarDecl 0x55557d74bf28 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55557d757c00 <col:77> 'bool' true
|-CXXMethodDecl 0x55557d74c150 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55557d74c218 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55557d74c2e0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55557d74c380 <col:20>
| `-OptimizeNoneAttr 0x55557d74c3d8 <col:30>
|-CXXConversionDecl 0x55557d74c4c8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55557d74c598 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55557d74c658 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55557d74c748 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55557d74c808 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55557d74c988 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55557d74c8c0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55557d74cad8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55557d74ca48 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55557d74cbc8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55557d74cc88 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55557d74ced8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55557d74cd40 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55557d74cdc0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55557d74d138 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55557d74cfa0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55557d74d020 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55557d74d208 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d74d418 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55557d74d2c0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55557d74d340 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55557d74d638 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55557d74d4e0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55557d74d560 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55557d74d7c8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55557d74d700 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55557d74d8b8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55557d74da28 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55557d74d968 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55557d74dc38 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55557d74dae8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55557d74db68 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55557d74de50 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55557d74dcf8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55557d74dd70 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55557d74dfe0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55557d74df10 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55557d74e200 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55557d74e0a0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55557d74e120 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55557d74e350 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55557d74e2c0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55557d74e528 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55557d74e410 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55557d74e490 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55557d74e678 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55557d74e5e8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55557d74e890 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55557d74e730 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55557d74e7b0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55557d757c10 <col:39> 'int' 0
|-CXXMethodDecl 0x55557d74eab0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55557d74e950 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55557d74e9d0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55557d757c30 <col:48> 'int' 0
|-CXXMethodDecl 0x55557d74ec90 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55557d74eb70 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55557d74ebf0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55557d757c50 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55557d74ed60 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55557d74ee20 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55557d74eee0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55557d74efa0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55557d74f060 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55557d74f208 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55557d74f110 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55557d74f388 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55557d74f2c0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55557d74f560 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55557d74f448 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55557d74f6d8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55557d74f618 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55557d74f820 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55557d74f790 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55557d74f970 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55557d74f8e0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55557d74fb48 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55557d74fa30 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55557d74fab0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55557d74fd28 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55557d74fc10 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55557d74fc90 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55557d74fe78 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55557d74fde8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55557d750088 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55557d74ff38 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55557d74ffb8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55557d7501e8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55557d750150 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55557d750340 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55557d7502a8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55557d7503e8 <col:57> "" ""
|-CXXMethodDecl 0x55557d7504f8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55557d750468 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55557d750648 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55557d7505b8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55557d7507c8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55557d750700 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55557d750890 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55557d750950 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55557d750a10 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55557d750ab0 <col:49> "" ""
|-CXXMethodDecl 0x55557d750b40 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55557d750c00 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55557d750cf0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55557d750db8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55557d750e78 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55557d750f38 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55557d751030 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55557d7510f8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55557d7511c0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55557d751398 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55557d751278 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55557d7512f8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55557d7515c0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55557d751460 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55557d7514e0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55557d7516d0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55557d751738 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55557d751760 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55557d751878 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55557d751918 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55557d751978 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55557d7519d8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55557d751a88 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55557d751af0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55557d751d28 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55557d751d78 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d751d08 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55557d751c18 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55557d751bc0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55557d751c00 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55557d751be0 <col:32> 'int' 8
|-CXXRecordDecl 0x55557d751d90 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55557d751ea8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55557d751f50 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55557d751fb8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55557d752048 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55557d7580e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55557d758518 <col:12>
| |-CXXConstructorDecl 0x55557d7581e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55557d7582f8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55557d751f50 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55557d75aaa0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55557d75aa70 <col:12> 'const char *const' lvalue .data 0x55557d751f50
| | |     `-DeclRefExpr 0x55557d75aa50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d7582f8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55557d751fb8 'length' 'int'
| | | `-ImplicitCastExpr 0x55557d75ab30 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55557d75ab00 <col:12> 'const int' lvalue .length 0x55557d751fb8
| | |     `-DeclRefExpr 0x55557d75aae0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d7582f8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55557d752048 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55557d75abc0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55557d75ab90 <col:12> 'String::memo_t *const' lvalue .memo 0x55557d752048
| | |     `-DeclRefExpr 0x55557d75ab70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d7582f8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55557d75ac18 <col:12>
| |-CXXConstructorDecl 0x55557d758398 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55557d758398
| | `-ParmVarDecl 0x55557d7584a8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55557d75da00 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55557d769418 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55557d769528 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55557d769a40 <col:12>
| |   |-BinaryOperator 0x55557d769858 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55557d769810 <col:12> 'const char *' lvalue ->data 0x55557d751f50
| |   | | `-CXXThisExpr 0x55557d769800 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55557d769840 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55557d7697d0 <col:12> 'const char *const' lvalue .data 0x55557d751f50
| |   |     `-DeclRefExpr 0x55557d7697b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d769528 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55557d769920 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55557d7698d8 <col:12> 'int' lvalue ->length 0x55557d751fb8
| |   | | `-CXXThisExpr 0x55557d7698c8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55557d769908 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55557d769898 <col:12> 'const int' lvalue .length 0x55557d751fb8
| |   |     `-DeclRefExpr 0x55557d769878 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d769528 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55557d7699e8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55557d7699a0 <col:12> 'String::memo_t *' lvalue ->memo 0x55557d752048
| |   | | `-CXXThisExpr 0x55557d769990 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55557d7699d0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55557d769960 <col:12> 'String::memo_t *const' lvalue .memo 0x55557d752048
| |   |     `-DeclRefExpr 0x55557d769940 <col:12> 'const String::rep_t' lvalue ParmVar 0x55557d769528 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55557d769a30 <col:12>
| |     `-UnaryOperator 0x55557d769a18 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55557d769a08 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55557d769598 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55557d769598
|   `-ParmVarDecl 0x55557d7696a8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55557d7520c0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55557d752308 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55557d752128 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55557d7521a8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55557d752220 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55557d7580a0 <col:79, line:261:5>
|   |-BinaryOperator 0x55557d757d18 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55557d757cb0 <col:2, col:5> 'const char *' lvalue .data 0x55557d751f50
|   | | `-MemberExpr 0x55557d757c80 <col:2> 'String::rep_t' lvalue ->_r 0x55557d7520c0
|   | |   `-CXXThisExpr 0x55557d757c70 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55557d757d00 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55557d757ce0 <col:12> 'const char *' lvalue ParmVar 0x55557d752128 'data' 'const char *'
|   |-BinaryOperator 0x55557d757de0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55557d757d78 <col:2, col:5> 'int' lvalue .length 0x55557d751fb8
|   | | `-MemberExpr 0x55557d757d48 <col:2> 'String::rep_t' lvalue ->_r 0x55557d7520c0
|   | |   `-CXXThisExpr 0x55557d757d38 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55557d757dc8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55557d757da8 <col:14> 'int' lvalue ParmVar 0x55557d7521a8 'length' 'int'
|   `-IfStmt 0x55557d758088 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55557d757f00 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55557d757ee8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55557d757ec8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55557d757ea8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55557d757e40 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55557d752048
|     |       | `-MemberExpr 0x55557d757e10 <col:7> 'String::rep_t' lvalue ->_r 0x55557d7520c0
|     |       |   `-CXXThisExpr 0x55557d757e00 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55557d757e90 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55557d757e70 <col:17> 'String::memo_t *' lvalue ParmVar 0x55557d752220 'memo' 'String::memo_t *'
|     `-CallExpr 0x55557d758060 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55557d758048 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55557d757f50 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55557d740d38 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55557d757fb8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55557d751918
|         `-ImplicitCastExpr 0x55557d757fa0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55557d757f80 <col:27> 'String::memo_t *' lvalue ParmVar 0x55557d752220 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55557d7525b8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55557d7523d8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55557d752458 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55557d7524d0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55557d7520c0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55557d758528 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55557d7586b8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55557d758620 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55557d758590 <col:2> '<bound member function type>' ->assign_memo 0x55557d752308
|     | `-ImplicitCastExpr 0x55557d758658 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55557d758580 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55557d758670 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55557d7585c0 <col:14> 'const char *' lvalue ParmVar 0x55557d7523d8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55557d758688 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55557d7585e0 <col:20> 'int' lvalue ParmVar 0x55557d752458 'length' 'int'
|     `-ImplicitCastExpr 0x55557d7586a0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55557d758600 <col:28> 'String::memo_t *' lvalue ParmVar 0x55557d7524d0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55557d752748 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55557d752688 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55557d758910 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55557d758890 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55557d7586e0 <col:2> '<bound member function type>' ->assign_memo 0x55557d752308
|     | `-CXXThisExpr 0x55557d7586d0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55557d7588c8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55557d758760 <col:14, col:19> 'const char *' lvalue .data 0x55557d751f50
|     |   `-MemberExpr 0x55557d758730 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55557d7520c0
|     |     `-DeclRefExpr 0x55557d758710 <col:14> 'const String' lvalue ParmVar 0x55557d752688 'x' 'const String &'
|     |-ImplicitCastExpr 0x55557d7588e0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55557d7587e0 <col:25, col:30> 'int' lvalue .length 0x55557d751fb8
|     |   `-MemberExpr 0x55557d7587b0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55557d7520c0
|     |     `-DeclRefExpr 0x55557d758790 <col:25> 'const String' lvalue ParmVar 0x55557d752688 'x' 'const String &'
|     `-ImplicitCastExpr 0x55557d7588f8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55557d758860 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55557d752048
|         `-MemberExpr 0x55557d758830 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55557d7520c0
|           `-DeclRefExpr 0x55557d758810 <col:38> 'const String' lvalue ParmVar 0x55557d752688 'x' 'const String &'
|-CXXMethodDecl 0x55557d752810 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55557d7592d0 <col:31, line:278:5>
|   `-IfStmt 0x55557d7592b8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55557d7589b0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55557d758998 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55557d758968 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55557d752048
|     |     `-MemberExpr 0x55557d758938 <col:6> 'String::rep_t' lvalue ->_r 0x55557d7520c0
|     |       `-CXXThisExpr 0x55557d758928 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55557d759290 <col:15, line:277:2>
|       |-ParenExpr 0x55557d758e60 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55557d758e30 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55557d758ac0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55557d758aa8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55557d758a90 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55557d758a50 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55557d751918
|       |   |       `-ImplicitCastExpr 0x55557d758a38 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55557d758a08 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55557d752048
|       |   |           `-MemberExpr 0x55557d7589d8 <col:27> 'String::rep_t' lvalue ->_r 0x55557d7520c0
|       |   |             `-CXXThisExpr 0x55557d7589c8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55557d758b20 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55557d758b00 <col:54> 'int' 0
|       |   `-CallExpr 0x55557d758d90 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55557d758d78 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55557d758cf8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55557d758dd0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55557d758c08 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55557d758de8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55557d758c38 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55557d758e00 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55557d758c70 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55557d758e18 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55557d758ce0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55557d758cc8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55557d758c90 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55557d7591b0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55557d759070 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55557d759058 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55557d758fd0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55557d742180 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55557d758fa0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55557d751918
|       | |   `-ImplicitCastExpr 0x55557d758f88 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55557d758f58 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55557d752048
|       | |       `-MemberExpr 0x55557d758f28 <col:40> 'String::rep_t' lvalue ->_r 0x55557d7520c0
|       | |         `-CXXThisExpr 0x55557d758f18 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55557d759170 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55557d759158 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55557d759098 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55557d756ff0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55557d759198 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55557d7590f8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55557d752048
|       |       `-MemberExpr 0x55557d7590c8 <col:15> 'String::rep_t' lvalue ->_r 0x55557d7520c0
|       |         `-CXXThisExpr 0x55557d7590b8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55557d759270 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55557d759208 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55557d752048
|         | `-MemberExpr 0x55557d7591d8 <col:6> 'String::rep_t' lvalue ->_r 0x55557d7520c0
|         |   `-CXXThisExpr 0x55557d7591c8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55557d759258 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55557d759238 <col:16> 'int' 0
|-CXXMethodDecl 0x55557d752aa8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55557d7528c8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55557d752948 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55557d7529c0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55557d752b80 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55557d752dd0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55557d752c38 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55557d752cb8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55557d752d30 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55557d752fb8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55557d752ea0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55557d752f20 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55557d7530b8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55557d7593a8 <col:41, line:286:5>
|   `-ReturnStmt 0x55557d759398 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55557d759368 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55557d759330 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55557d759318 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55557d7592f8 <col:46> 'int' 1
|-CXXMethodDecl 0x55557d753358 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55557d753170 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55557d7531f0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55557d753270 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55557d756ff0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55557d753420 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55557d7570c0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55557d757290 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55557d757178 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55557d7571f8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55557d757350 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55557d757418 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55557d757518 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55557d757590 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55557d757608 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55557d757670 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55557d757770 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55557d7577c0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d757750 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55557d757730 <col:22> 'int' 14
|-CXXMethodDecl 0x55557d7579d8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55557d7577f0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55557d757870 <col:38> col:41 'int'
| `-ParmVarDecl 0x55557d7578f0 <col:43> col:46 'int'
|-FriendDecl 0x55557d757ae0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55557d757b70 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55557da0ad80 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55557da0af58 prev 0x55557da0ad80 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55557da0afe8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55557da0b010 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55557d41b3b0 'int'
|-TypedefDecl 0x55557da0c970 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55557da0c920 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55557da0c900 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55557da0b228 'type'
|     `-SubstTemplateTypeParmType 0x55557da0b1f0 'String' sugar
|       |-TemplateTypeParmType 0x55557d70c570 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d70c520 'T'
|       `-RecordType 0x55557d748d60 'String'
|         `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0ca28 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55557da0c9f0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55557da0c9d0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55557da0c970 'type'
|     `-ElaboratedType 0x55557da0c920 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55557da0c900 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55557da0b228 'type'
|         `-SubstTemplateTypeParmType 0x55557da0b1f0 'String' sugar
|           |-TemplateTypeParmType 0x55557d70c570 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55557d70c520 'T'
|           `-RecordType 0x55557d748d60 'String'
|             `-CXXRecord 0x55557d748cd0 'String'
|-CXXMethodDecl 0x55557da0cba8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55557da0cab8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55557da0cc98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55557da0cd78 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55557da0d048 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55557da0cf50 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55557da0d288 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55557da0d100 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55557da0d178 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55557da0d458 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55557da0d348 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55557da0d3c0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55557da0d5b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55557da0d688 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55557da0d8d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55557da0d748 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55557da0d7c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55557da0db38 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55557da0d9a8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55557da0da20 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55557da0dcf8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55557da0dc08 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55557da0deb8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55557da0ddc0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55557da0df70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55557da0e020 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55557da0e258 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55557da0e0d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55557da0e148 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55557da0e4f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55557da0e400 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55557da0e5c0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55557da0e610 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55557da0e660 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55557d980500 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55557da09a28 prev 0x55557d980500 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55557da0acf0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55557da0aca0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55557da0ac80 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55557da0ab30 'type'
|     `-SubstTemplateTypeParmType 0x55557da0a9c0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55557d6e2320 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55557d6e22c8 'F'
|       `-RecordType 0x55557da0a620 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55557da0a540 'typed_array_memory'
|-FieldDecl 0x55557da0e6b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55557da0e700 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55557da0e738 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55557da09ac0 'String' sugar
|   |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55557d719838 'T'
|   `-RecordType 0x55557d748d60 'String'
|     `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0e7c8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55557da0e790 'String &'
|   `-SubstTemplateTypeParmType 0x55557da09ac0 'String' sugar
|     |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55557d719838 'T'
|     `-RecordType 0x55557d748d60 'String'
|       `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0e858 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55557da0e820 'const String &'
|   `-QualType 0x55557da09ac1 'const String' const
|     `-SubstTemplateTypeParmType 0x55557da09ac0 'String' sugar
|       |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d719838 'T'
|       `-RecordType 0x55557d748d60 'String'
|         `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0e8e8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55557da0e8b0 'String *'
|   `-SubstTemplateTypeParmType 0x55557da09ac0 'String' sugar
|     |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55557d719838 'T'
|     `-RecordType 0x55557d748d60 'String'
|       `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0e978 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55557da0e940 'const String *'
|   `-QualType 0x55557da09ac1 'const String' const
|     `-SubstTemplateTypeParmType 0x55557da09ac0 'String' sugar
|       |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d719838 'T'
|       `-RecordType 0x55557d748d60 'String'
|         `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0f600 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55557da0f5b0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55557da0f590 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55557da0f4c8 'type'
|     `-LValueReferenceType 0x55557da0f490 'const String &'
|       `-QualType 0x55557da0f231 'const String' const
|         `-SubstTemplateTypeParmType 0x55557da0f230 'String' sugar
|           |-TemplateTypeParmType 0x55557d6ec270 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55557d6ec218 'T'
|           `-RecordType 0x55557d748d60 'String'
|             `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0f668 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55557da0e820 'const String &'
|   `-QualType 0x55557da09ac1 'const String' const
|     `-SubstTemplateTypeParmType 0x55557da09ac0 'String' sugar
|       |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d719838 'T'
|       `-RecordType 0x55557d748d60 'String'
|         `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0f6c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55557d41b3b0 'int'
|-TypedefDecl 0x55557da0f728 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55557da0e8b0 'String *'
|   `-SubstTemplateTypeParmType 0x55557da09ac0 'String' sugar
|     |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55557d719838 'T'
|     `-RecordType 0x55557d748d60 'String'
|       `-CXXRecord 0x55557d748cd0 'String'
|-TypedefDecl 0x55557da0f790 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55557da0e940 'const String *'
|   `-QualType 0x55557da09ac1 'const String' const
|     `-SubstTemplateTypeParmType 0x55557da09ac0 'String' sugar
|       |-TemplateTypeParmType 0x55557d719890 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55557d719838 'T'
|       `-RecordType 0x55557d748d60 'String'
|         `-CXXRecord 0x55557d748cd0 'String'
|-EnumDecl 0x55557da0f7e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55557da0f8e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55557da0f8c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55557d71af18 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55557d71aef0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55557d71aed0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55557da0f968 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55557da0fbf8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55557da0fa20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55557da0fac0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55557da0fe88 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55557da0fd70 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55557da10148 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55557da10030 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55557da10460 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55557da10340 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55557da10770 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55557da10650 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55557da10a60 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55557da108a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55557da10920 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55557da10b88 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55557da10c38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557da10c90 <col:30> Inherited
|-CXXMethodDecl 0x55557da10cd8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55557da10d88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557da10de0 <col:30> Inherited
|-CXXMethodDecl 0x55557da10ea8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55557da10f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557da10fb0 <col:30> Inherited
|-CXXMethodDecl 0x55557da10ff8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55557da110a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557da11100 <col:30> Inherited
|-CXXMethodDecl 0x55557da11148 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55557da111f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557da11250 <col:30> Inherited
|-CXXMethodDecl 0x55557da11298 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55557da11348 <col:20> Inherited
| `-OptimizeNoneAttr 0x55557da113a0 <col:30> Inherited
|-CXXMethodDecl 0x55557da113c8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55557da11478 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55557da11528 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55557da116e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55557da115d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55557da11650 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55557da11838 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55557da117a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557da119e8 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55557da118f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55557da11aa0 <col:20>
| `-OptimizeNoneAttr 0x55557da11af8 <col:30>
|-CXXMethodDecl 0x55557da11c18 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55557da11b20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55557da11cd0 <col:20>
| `-OptimizeNoneAttr 0x55557da11d28 <col:30>
|-CXXMethodDecl 0x55557da11de0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55557da11d50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557da11f28 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55557da11e98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557da12058 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55557da12158 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55557da12228 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55557da122f8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55557da12438 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55557da123a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557da12580 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55557da124f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55557da126c8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55557da12638 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55557da12780 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55557da12880 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55557da127f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55557da12938 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55557da129f8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55557da12af8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55557da12c78 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55557da12bb8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55557da13408 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55557da12d30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55557da13368 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55557da13268 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55557da134e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55557da13638 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55557da135a8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55557da136f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55557da13938 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55557da137b0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55557da13828 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55557da13ac8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55557da13a08 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55557da13cd8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55557da13b90 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55557da13c08 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55557da13d98 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55557da13ff8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55557da13f00 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55557da140c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55557da9de90 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557da8a538 prev 0x55557da226f8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55557da8a630 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55557da8a6c0 <col:22, col:28> col:22 public
|-EnumDecl 0x55557da8a6e8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55557da8a808 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8a7e8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55557da8a7d0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55557da8a7b0 <col:14> 'int' 999
| |-EnumConstantDecl 0x55557da8a8b0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8a890 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55557da8a878 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55557da8a858 <col:14> 'int' 1
| |-EnumConstantDecl 0x55557da8a940 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8a920 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55557da8a900 <col:17> 'int' 0
| |-EnumConstantDecl 0x55557da8a9d0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8a9b0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55557da8a990 <col:13> 'int' 1
| |-EnumConstantDecl 0x55557da8aa60 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8aa40 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55557da8aa20 <col:16> 'int' 2
| |-EnumConstantDecl 0x55557da8aaf0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8aad0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55557da8aab0 <col:13> 'int' 3
| |-EnumConstantDecl 0x55557da8ab80 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8ab60 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55557da8ab40 <col:15> 'int' 4
| |-EnumConstantDecl 0x55557da8ac10 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8abf0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55557da8abd0 <col:14> 'int' 5
| |-EnumConstantDecl 0x55557da8aca0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55557da8ac80 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55557da8ac60 <col:12> 'int' 6
| `-EnumConstantDecl 0x55557da8ad30 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55557da8ad10 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55557da8acf0 <col:13> 'int' 7
|-VarDecl 0x55557da8ada0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55557da8ae28 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55557da8aeb0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55557da8af38 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55557da8afc0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55557da8b048 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55557da8b0d0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55557da8b158 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55557da8b1e0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55557da8b268 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55557da8b2f0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55557da8b3f0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55557da906d8 '_nerrors' 'int'
| | `-IntegerLiteral 0x55557da90e68 <line:128:13> 'int' 0
| `-CompoundStmt 0x55557da90ed8 <col:16, line:129:5>
|-CXXDestructorDecl 0x55557da8b4e0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55557da90ee8 <col:29, line:132:5>
|-CXXMethodDecl 0x55557da8b698 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55557da8b5d0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55557da8b760 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55557da8b848 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55557da90f40 <col:44, line:161:5>
|   `-ReturnStmt 0x55557da90f30 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55557da90f18 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55557da90ef8 <col:9> 'ErrorHandler *' lvalue Var 0x55557da90738 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55557da8b988 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55557da8b8f8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55557da8ba50 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55557da90fa0 <col:43, line:173:5>
|   `-ReturnStmt 0x55557da90f90 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55557da90f78 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55557da90f58 <col:9> 'ErrorHandler *' lvalue Var 0x55557da907b0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55557da8bb08 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55557da8bb88 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55557da8bc98 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55557da8bc08 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55557da8bde8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55557da8bd58 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55557da8bf40 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55557da8bea8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55557da8c098 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x55557da8c000 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55557da8c1f0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55557da8c158 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55557da8c400 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55557da8c2a8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55557da8c328 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55557da8c5d8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55557da8c4c0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55557da8c540 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55557da8c7f8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55557da8c698 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55557da8c718 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55557da8c9d8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55557da8c8b8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55557da8c938 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55557da8cbb8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55557da8ca98 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55557da8cb18 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55557da8cd40 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55557da8cc78 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55557da8cf10 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55557da8cdf8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55557da8ce70 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55557da911f8 <col:57, line:234:5>
|   `-ReturnStmt 0x55557da911e8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55557da911d0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55557da91178 <col:9, col:41> 'int'
|         |-MemberExpr 0x55557da91148 <col:9> '<bound member function type>' ->xmessage 0x55557da8cd40
|         | `-CXXThisExpr 0x55557da91138 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55557da911b8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55557da911a0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55557da91118 <col:18, col:40> 'String' (CXXTemporary 0x55557da91118)
|               `-CallExpr 0x55557da910e0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55557da910c8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55557da91040 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55557da8ef08 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55557da91060 <col:31> 'const String' lvalue ParmVar 0x55557da8ce70 'str' 'const String &'
|                 `-DeclRefExpr 0x55557da91080 <col:36> 'const String' lvalue ParmVar 0x55557da8cdf8 'anno' 'const String &'
|-CXXMethodDecl 0x55557da8d1f0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55557da8cfd0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55557da8d050 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55557da8d0c8 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55557da914a0 <col:68, line:243:5>
|   `-ReturnStmt 0x55557da91490 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55557da91478 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55557da91418 <col:9, col:41> 'int'
|         |-MemberExpr 0x55557da913e8 <col:9> '<bound member function type>' ->xmessage 0x55557da8cf10
|         | `-CXXThisExpr 0x55557da913d8 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55557da91298 <col:18> 'const String' lvalue ParmVar 0x55557da8cfd0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55557da91460 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55557da91448 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55557da913b8 <col:24, col:40> 'String' (CXXTemporary 0x55557da913b8)
|               `-CXXMemberCallExpr 0x55557da91338 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55557da912c8 <col:24> '<bound member function type>' ->vformat 0x55557da8e3d0
|                 | `-CXXThisExpr 0x55557da912b8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55557da91380 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55557da912f8 <col:32> 'const char *' lvalue ParmVar 0x55557da8d050 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55557da91398 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55557da91318 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55557da8d0c8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55557da8d490 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55557da8d2b8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55557da8d330 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55557da8d3a8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55557da917d8 <col:23, line:254:5>
|   `-ReturnStmt 0x55557da917c8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55557da917b0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55557da91750 <col:9, col:71> 'int'
|         |-MemberExpr 0x55557da91720 <col:9> '<bound member function type>' ->xmessage 0x55557da8cf10
|         | `-CXXThisExpr 0x55557da91710 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55557da91798 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55557da91780 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55557da916d0 <col:18, col:65> 'String' (CXXTemporary 0x55557da916d0)
|         |     `-CallExpr 0x55557da91668 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55557da91650 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55557da91540 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55557da8ef08 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55557da91560 <col:31> 'const String' lvalue ParmVar 0x55557da8d330 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55557da916b0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55557da91698 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55557da91630 <col:37, col:64> 'String' (CXXTemporary 0x55557da91630)
|         |             `-CallExpr 0x55557da91600 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55557da915e8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55557da91580 <col:37> 'String (const String &)' lvalue CXXMethod 0x55557da8f558 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55557da915a0 <col:56> 'const String' lvalue ParmVar 0x55557da8d2b8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55557da916f0 <col:68> 'const String' lvalue ParmVar 0x55557da8d3a8 'str' 'const String &'
|-CXXMethodDecl 0x55557da8d810 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55557da8d558 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55557da8d5d0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55557da8d650 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55557da8d6c8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55557da91a90 <col:34, line:267:5>
|   `-ReturnStmt 0x55557da91a80 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55557da91a68 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55557da91a00 <col:9, col:51> 'int'
|         |-MemberExpr 0x55557da919d0 <col:9> '<bound member function type>' ->xmessage 0x55557da8d490
|         | `-CXXThisExpr 0x55557da919c0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55557da91878 <col:18> 'const String' lvalue ParmVar 0x55557da8d558 'landmark' 'const String &'
|         |-DeclRefExpr 0x55557da91898 <col:28> 'const String' lvalue ParmVar 0x55557da8d5d0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55557da91a50 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55557da91a38 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55557da919a0 <col:34, col:50> 'String' (CXXTemporary 0x55557da919a0)
|               `-CXXMemberCallExpr 0x55557da91938 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55557da918c8 <col:34> '<bound member function type>' ->vformat 0x55557da8e3d0
|                 | `-CXXThisExpr 0x55557da918b8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55557da91968 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55557da918f8 <col:42> 'const char *' lvalue ParmVar 0x55557da8d650 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55557da91980 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55557da91918 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55557da8d6c8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55557da8d920 <line:286:5, line:288:5> line:286:9 used nerrors 'int () const'
| `-CompoundStmt 0x55557da91b10 <col:25, line:288:5>
|   `-ReturnStmt 0x55557da91b00 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55557da91ae8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55557da91ab8 <col:9> 'const int' lvalue ->_nerrors 0x55557da906d8
|         `-CXXThisExpr 0x55557da91aa8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55557da8db30 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55557da8d9d8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55557da8da58 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55557da8de18 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55557da8dbf8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55557da8dc78 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55557da8dcf0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55557da8dfb0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55557da8dee8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55557da8e1f8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55557da8e070 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55557da8e0e8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55557da91d70 <col:58, line:357:5>
|   `-ReturnStmt 0x55557da91d60 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55557da91d48 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55557da91d18 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55557da91d00 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55557da91ce0 <col:9, col:29> 'String' (CXXTemporary 0x55557da91ce0)
|             `-CallExpr 0x55557da91c70 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55557da91c58 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55557da91bd8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55557da8de18 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55557da91b78 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55557da91ca8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55557da91b98 <col:21> 'const char *' lvalue ParmVar 0x55557da8e070 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55557da91cc0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55557da91bb8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55557da8e0e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55557da8e3d0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55557da8e2c0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55557da8e338 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55557da8e528 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55557da8e498 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55557da8e670 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55557da8e5e0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55557da8e910 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55557da8e728 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55557da8e7a8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55557da8e820 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55557da8ea70 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55557da8e9e0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55557da91e88 <col:37, line:441:5>
|   `-IfStmt 0x55557da91e70 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55557da91df8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55557da91dc8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55557da91d88 <col:6> 'int' lvalue ParmVar 0x55557da8e9e0 'level' 'int'
|     | `-ImplicitCastExpr 0x55557da91de0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55557da91da8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55557da8aaf0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55557da91e58 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55557da91e28 <col:8> 'int' lvalue ->_nerrors 0x55557da906d8
|         `-CXXThisExpr 0x55557da91e18 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55557da8eb38 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55557da91f20 <col:26, line:448:5>
|   `-BinaryOperator 0x55557da91f00 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55557da91eb0 <col:2> 'int' lvalue ->_nerrors 0x55557da906d8
|     | `-CXXThisExpr 0x55557da91ea0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55557da91ee0 <col:13> 'int' 0
|-CXXMethodDecl 0x55557da8ed00 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55557da8ebf0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55557da8ec68 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55557da8ef08 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55557da8edc0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55557da8ee38 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55557da8f1b8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55557da8efc8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55557da8f048 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55557da8f0c8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55557da8f270 <col:59> 0 0
|-CXXMethodDecl 0x55557da8f408 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55557da8f2e8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55557da8f368 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55557da92590 <col:70, line:534:5>
|   |-DeclStmt 0x55557da92090 <line:528:2, col:20>
|   | |-VarDecl 0x55557da91f48 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55557da91fb0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55557da91fe8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55557da92050 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55557da92160 <line:529:2, col:23>
|   | `-VarDecl 0x55557da920c0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55557da92148 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55557da92128 <col:18> 'const char *' lvalue ParmVar 0x55557da8f2e8 'begin' 'const char *'
|   |-DoStmt 0x55557da92528 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55557da92458 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55557da92440 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55557da92420 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55557da92178 <col:6> 'const char *' lvalue Var 0x55557da920c0 'x' 'const char *'
|   | |     `-CallExpr 0x55557da92370 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55557da92358 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55557da92310 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55557da90bb0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55557da923d8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55557da923c0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55557da92230 <col:20, col:27> 'String' (CXXTemporary 0x55557da92230)
|   | |       |     `-CXXTemporaryObjectExpr 0x55557da921f8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55557da923f0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55557da92250 <col:30> 'const char *' lvalue Var 0x55557da920c0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55557da92408 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55557da92270 <col:33> 'const char *' lvalue ParmVar 0x55557da8f368 'end' 'const char *'
|   | |       |-UnaryOperator 0x55557da922b0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55557da92290 <col:39> 'String' lvalue Var 0x55557da91f48 'name' 'String'
|   | |       |-UnaryOperator 0x55557da922e8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55557da922c8 <col:46> 'String' lvalue Var 0x55557da91fe8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55557da92300 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55557da92510 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55557da924f8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55557da924d8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55557da924a8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55557d74c4c8
|   |         `-ImplicitCastExpr 0x55557da92490 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55557da92470 <col:11> 'String' lvalue Var 0x55557da91f48 'name' 'String'
|   `-ReturnStmt 0x55557da92580 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55557da92568 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55557da92548 <col:9> 'const char *' lvalue Var 0x55557da920c0 'x' 'const char *'
|-CXXMethodDecl 0x55557da8f558 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55557da8f4c8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55557da92b98 <col:55, line:550:5>
|   `-IfStmt 0x55557da92b70 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55557da927d0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55557da927b8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55557da927a0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55557da92780 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55557da92750 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55557d74c4c8
|     | |       `-DeclRefExpr 0x55557da925f0 <col:6> 'const String' lvalue ParmVar 0x55557da8f4c8 'x' 'const String &'
|     | `-BinaryOperator 0x55557da92730 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55557da92700 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55557da926b0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55557da92698 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55557da92650 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55557d765d00 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55557da92610 <col:11> 'const String' lvalue ParmVar 0x55557da8f4c8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55557da92630 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55557da92718 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55557da926e8 <col:19> 'char' 123
|     |-ReturnStmt 0x55557da92840 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55557da92810 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55557da927f0 <col:13> 'const String' lvalue ParmVar 0x55557da8f4c8 'x' 'const String &'
|     `-IfStmt 0x55557da92b48 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55557da928d8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55557da928c0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55557da928a0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55557da92870 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55557d74c4c8
|       |       `-DeclRefExpr 0x55557da92850 <col:11> 'const String' lvalue ParmVar 0x55557da8f4c8 'x' 'const String &'
|       |-ReturnStmt 0x55557da92a60 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55557da92a48 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55557da92a18 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55557da92a00 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55557da929e0 <col:13, col:29> 'String' (CXXTemporary 0x55557da929e0)
|       |         `-CallExpr 0x55557da92990 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55557da92978 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55557da928f0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55557da8ed00 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55557da929c0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55557da92910 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55557da92930 <col:28> 'const String' lvalue ParmVar 0x55557da8f4c8 'x' 'const String &'
|       `-ReturnStmt 0x55557da92b38 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55557da92b20 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55557da92af0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55557da92ad8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55557da92ab8 <col:13, col:20> 'String' (CXXTemporary 0x55557da92ab8)
|                 `-CXXTemporaryObjectExpr 0x55557da92a80 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55557da8f720 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55557da8f610 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55557da8f688 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55557da90e58 <col:71> 'bool' false
|-CXXRecordDecl 0x55557da8f7d0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55557da8fac8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55557da8fa60 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55557da8fa00 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55557da8f9c0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55557d748d60 'String'
|       | `-CXXRecord 0x55557d748cd0 'String'
|       |-BuiltinType 0x55557d41b3b0 'int'
|       `-DecayedType 0x55557da23740 '__va_list_tag *' sugar
|         |-TypedefType 0x55557da23710 'va_list' sugar
|         | |-Typedef 0x55557d639e10 'va_list'
|         | `-TypedefType 0x55557d639dc0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55557d5719e8 '__gnuc_va_list'
|         |   `-TypedefType 0x55557d571950 '__builtin_va_list' sugar
|         |     |-Typedef 0x55557d45cc18 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55557d45cbc0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55557d41c100 '__va_list_tag'
|         |         `-CXXRecord 0x55557d41c068 '__va_list_tag'
|         `-PointerType 0x55557d63f6b0 '__va_list_tag *'
|           `-RecordType 0x55557d41c100 '__va_list_tag'
|             `-CXXRecord 0x55557d41c068 '__va_list_tag'
|-EnumDecl 0x55557da8fb20 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55557da8fc20 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da90180 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da8fc00 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55557da8fbe0 <col:16> 'int' 1
| |-EnumConstantDecl 0x55557da8fcb0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da90198 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da8fc90 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55557da8fc70 <col:21> 'int' 2
| |-EnumConstantDecl 0x55557da8fd40 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da901b0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da8fd20 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55557da8fd00 <col:22> 'int' 4
| |-EnumConstantDecl 0x55557da8fdd0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da901c8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da8fdb0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55557da8fd90 <col:17> 'int' 8
| |-EnumConstantDecl 0x55557da8fe60 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da901e0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da8fe40 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55557da8fe20 <col:22> 'int' 16
| |-EnumConstantDecl 0x55557da8fef0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da901f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da8fed0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55557da8feb0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55557da8ff80 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da90210 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da8ff60 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55557da8ff40 <col:17> 'int' 64
| |-EnumConstantDecl 0x55557da90010 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da90228 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da8fff0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55557da8ffd0 <col:14> 'int' 128
| |-EnumConstantDecl 0x55557da900a0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55557da90240 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557da90080 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55557da90060 <col:16> 'int' 256
| `-EnumConstantDecl 0x55557da90130 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55557da90258 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557da90110 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55557da900f0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55557da90468 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55557da90280 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55557da90320 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55557da905f0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55557da90528 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55557da90698 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55557da906d8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55557da90738 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55557da907b0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55557da90bb0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55557da90828 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55557da908a8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55557da90928 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55557da909a0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55557da90a18 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55557da90a90 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55557da90cd8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55557da90cd8
| `-ParmVarDecl 0x55557da90de8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55557da92ef8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55557da92ef8
  `-ParmVarDecl 0x55557da93008 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class EtherAddressArg
         0 |   int flags_
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d99b808 <../dummy_inc/click/etheraddress.hh:205:1, line:224:1> line:205:7 referenced class EtherAddressArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557d99b928 <col:1, col:7> col:7 implicit referenced class EtherAddressArg
|-AccessSpecDecl 0x55557d99b9b8 <col:25, col:31> col:25 public
|-TypedefDecl 0x55557d99b9f0 <line:206:5, col:18> col:18 enable_direct_parse 'void'
| `-BuiltinType 0x55557d41b310 'void'
|-CXXConstructorDecl 0x55557d99bb38 <line:207:5, col:53> col:5 used EtherAddressArg 'void (int)'
| |-ParmVarDecl 0x55557d99ba60 <col:21, col:33> col:25 used flags 'int' cinit
| | `-IntegerLiteral 0x55557d99cdc0 <col:33> 'int' 0
| |-CXXCtorInitializer Field 0x55557d99c6f0 'flags_' 'int'
| | `-ImplicitCastExpr 0x55557d99ce60 <col:45> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55557d99ce20 <col:45> 'int' lvalue ParmVar 0x55557d99ba60 'flags' 'int'
| `-CompoundStmt 0x55557d99cea8 <col:52, col:53>
|-CXXMethodDecl 0x55557d99bdf8 <line:208:5, line:210:5> line:208:17 used parse 'bool (const String &, EtherAddress &, const ArgContext &)' inline
| |-ParmVarDecl 0x55557d99bbf8 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55557d99bc98 <col:42, col:56> col:56 used value 'EtherAddress &'
| |-ParmVarDecl 0x55557d99bd10 <col:63, col:88> col:81 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55557d99cde0 <col:88> 'const ArgContext' lvalue Var 0x55557d99b7a0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55557d8fcb38 <col:100, line:210:5>
|   `-ReturnStmt 0x55557d8fcb28 <line:209:9, col:46>
|     `-CallExpr 0x55557d8fcad0 <col:16, col:46> 'bool'
|       |-ImplicitCastExpr 0x55557d8fcab8 <col:16> 'bool (*)(const String &, EtherAddress &, const ArgContext &, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55557d8fca70 <col:16> 'bool (const String &, EtherAddress &, const ArgContext &, int)' lvalue CXXMethod 0x55557d99c9b8 'parse' 'bool (const String &, EtherAddress &, const ArgContext &, int)'
|       |-DeclRefExpr 0x55557d99cf20 <col:22> 'const String' lvalue ParmVar 0x55557d99bbf8 'str' 'const String &'
|       |-DeclRefExpr 0x55557d99cf40 <col:27> 'EtherAddress' lvalue ParmVar 0x55557d99bc98 'value' 'EtherAddress &'
|       |-DeclRefExpr 0x55557d99cf60 <col:34> 'const ArgContext' lvalue ParmVar 0x55557d99bd10 'args' 'const ArgContext &'
|       `-ImplicitCastExpr 0x55557d8fcb10 <col:40> 'int' <LValueToRValue>
|         `-MemberExpr 0x55557d99cf90 <col:40> 'int' lvalue ->flags_ 0x55557d99c6f0
|           `-CXXThisExpr 0x55557d99cf80 <col:40> 'EtherAddressArg *' implicit this
|-CXXMethodDecl 0x55557d99c098 <line:211:5, line:213:5> line:211:17 parse 'bool (const String &, unsigned char *, const ArgContext &)' inline
| |-ParmVarDecl 0x55557d99bec0 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55557d99bf40 <col:42, col:57> col:57 used value 'unsigned char *'
| |-ParmVarDecl 0x55557d99bfb8 <col:64, col:89> col:82 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55557d99ce00 <col:89> 'const ArgContext' lvalue Var 0x55557d99b7a0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55557d8fcd10 <col:101, line:213:5>
|   `-ReturnStmt 0x55557d8fcd00 <line:212:2, col:66>
|     `-CXXMemberCallExpr 0x55557d8fccc8 <col:9, col:66> 'bool'
|       |-MemberExpr 0x55557d8fcc98 <col:9> '<bound member function type>' ->parse 0x55557d99bdf8
|       | `-CXXThisExpr 0x55557d8fcc88 <col:9> 'EtherAddressArg *' implicit this
|       |-DeclRefExpr 0x55557d8fcbb8 <col:15> 'const String' lvalue ParmVar 0x55557d99bec0 'str' 'const String &'
|       |-UnaryOperator 0x55557d8fcc50 <col:20, col:59> 'EtherAddress' lvalue prefix '*' cannot overflow
|       | `-CXXReinterpretCastExpr 0x55557d8fcc20 <col:21, col:59> 'EtherAddress *' reinterpret_cast<class EtherAddress *> <BitCast>
|       |   `-ImplicitCastExpr 0x55557d8fcc08 <col:54> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|       |     `-DeclRefExpr 0x55557d8fcbd8 <col:54> 'unsigned char *' lvalue ParmVar 0x55557d99bf40 'value' 'unsigned char *'
|       `-DeclRefExpr 0x55557d8fcc68 <col:62> 'const ArgContext' lvalue ParmVar 0x55557d99bfb8 'args' 'const ArgContext &'
|-CXXMethodDecl 0x55557d99c358 <line:214:5, line:216:5> line:214:17 used direct_parse 'bool (const String &, EtherAddress &, Args &)' inline
| |-ParmVarDecl 0x55557d99c160 <col:30, col:44> col:44 used str 'const String &'
| |-ParmVarDecl 0x55557d99c1d8 <col:49, col:63> col:63 used value 'EtherAddress &'
| |-ParmVarDecl 0x55557d99c278 <col:70, col:76> col:76 used args 'Args &'
| `-CompoundStmt 0x55557d8fcef8 <col:82, line:216:5>
|   `-ReturnStmt 0x55557d8fcee8 <line:215:9, col:53>
|     `-CallExpr 0x55557d8fce90 <col:16, col:53> 'bool'
|       |-ImplicitCastExpr 0x55557d8fce78 <col:16> 'bool (*)(const String &, EtherAddress &, Args &, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55557d8fce30 <col:16> 'bool (const String &, EtherAddress &, Args &, int)' lvalue CXXMethod 0x55557d99cce8 'direct_parse' 'bool (const String &, EtherAddress &, Args &, int)'
|       |-DeclRefExpr 0x55557d8fcd90 <col:29> 'const String' lvalue ParmVar 0x55557d99c160 'str' 'const String &'
|       |-DeclRefExpr 0x55557d8fcdb0 <col:34> 'EtherAddress' lvalue ParmVar 0x55557d99c1d8 'value' 'EtherAddress &'
|       |-DeclRefExpr 0x55557d8fcdd0 <col:41> 'Args' lvalue ParmVar 0x55557d99c278 'args' 'Args &'
|       `-ImplicitCastExpr 0x55557d8fced0 <col:47> 'int' <LValueToRValue>
|         `-MemberExpr 0x55557d8fce00 <col:47> 'int' lvalue ->flags_ 0x55557d99c6f0
|           `-CXXThisExpr 0x55557d8fcdf0 <col:47> 'EtherAddressArg *' implicit this
|-CXXMethodDecl 0x55557d99c5f8 <line:217:5, line:219:5> line:217:17 direct_parse 'bool (const String &, unsigned char *, Args &)' inline
| |-ParmVarDecl 0x55557d99c420 <col:30, col:44> col:44 used str 'const String &'
| |-ParmVarDecl 0x55557d99c4a0 <col:49, col:64> col:64 used value 'unsigned char *'
| |-ParmVarDecl 0x55557d99c518 <col:71, col:77> col:77 used args 'Args &'
| `-CompoundStmt 0x55557d8fd0d0 <col:83, line:219:5>
|   `-ReturnStmt 0x55557d8fd0c0 <line:218:2, col:73>
|     `-CXXMemberCallExpr 0x55557d8fd088 <col:9, col:73> 'bool'
|       |-MemberExpr 0x55557d8fd058 <col:9> '<bound member function type>' ->direct_parse 0x55557d99c358
|       | `-CXXThisExpr 0x55557d8fd048 <col:9> 'EtherAddressArg *' implicit this
|       |-DeclRefExpr 0x55557d8fcf78 <col:22> 'const String' lvalue ParmVar 0x55557d99c420 'str' 'const String &'
|       |-UnaryOperator 0x55557d8fd010 <col:27, col:66> 'EtherAddress' lvalue prefix '*' cannot overflow
|       | `-CXXReinterpretCastExpr 0x55557d8fcfe0 <col:28, col:66> 'EtherAddress *' reinterpret_cast<class EtherAddress *> <BitCast>
|       |   `-ImplicitCastExpr 0x55557d8fcfc8 <col:61> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|       |     `-DeclRefExpr 0x55557d8fcf98 <col:61> 'unsigned char *' lvalue ParmVar 0x55557d99c4a0 'value' 'unsigned char *'
|       `-DeclRefExpr 0x55557d8fd028 <col:69> 'Args' lvalue ParmVar 0x55557d99c518 'args' 'Args &'
|-AccessSpecDecl 0x55557d99c6b0 <line:220:3, col:10> col:3 private
|-FieldDecl 0x55557d99c6f0 <line:221:5, col:9> col:9 referenced flags_ 'int'
|-CXXMethodDecl 0x55557d99c9b8 <line:222:5, col:96> col:17 used parse 'bool (const String &, EtherAddress &, const ArgContext &, int)' static
| |-ParmVarDecl 0x55557d99c750 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55557d99c7c8 <col:42, col:56> col:56 value 'EtherAddress &'
| |-ParmVarDecl 0x55557d99c840 <col:63, col:81> col:81 args 'const ArgContext &'
| `-ParmVarDecl 0x55557d99c8c0 <col:87, col:91> col:91 flags 'int'
|-CXXMethodDecl 0x55557d99cce8 <line:223:5, col:91> col:17 used direct_parse 'bool (const String &, EtherAddress &, Args &, int)' static
| |-ParmVarDecl 0x55557d99ca88 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55557d99cb00 <col:49, col:63> col:63 value 'EtherAddress &'
| |-ParmVarDecl 0x55557d99cb78 <col:70, col:76> col:76 args 'Args &'
| `-ParmVarDecl 0x55557d99cbf8 <col:82, col:86> col:86 flags 'int'
|-CXXConstructorDecl 0x55557da9ec68 <line:205:7> col:7 implicit constexpr EtherAddressArg 'void (const EtherAddressArg &)' inline default trivial noexcept-unevaluated 0x55557da9ec68
| `-ParmVarDecl 0x55557da9ed78 <col:7> col:7 'const EtherAddressArg &'
|-CXXConstructorDecl 0x55557da9ee18 <col:7> col:7 implicit constexpr EtherAddressArg 'void (EtherAddressArg &&)' inline default trivial noexcept-unevaluated 0x55557da9ee18
| `-ParmVarDecl 0x55557da9ef28 <col:7> col:7 'EtherAddressArg &&'
`-CXXDestructorDecl 0x55557da9eff0 <col:7> col:7 implicit referenced ~EtherAddressArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddressArg = type { i32 }
  NonVirtualBaseLLVMType:%class.EtherAddressArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557da22788 prev 0x55557d99b648 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557da22880 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55557da22910 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55557da22a48 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55557da22948 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55557da23e70 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55557da23e50 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55557da239e8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55557da23f00 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55557da23ec0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55557da22948 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55557da23a50 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55557da23f80 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55557da23f40 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55557da23ab0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55557da23fc0 <col:54> 'bool' false
| `-CompoundStmt 0x55557da240c8 <col:61, line:38:5>
|   `-BinaryOperator 0x55557da240a8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55557da24040 <col:9> 'const Element *' lvalue ->_context 0x55557da23988
|     | `-CXXThisExpr 0x55557da24030 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55557da24090 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55557da24070 <col:20> 'int' 0
|-CXXConstructorDecl 0x55557da22c58 <line:44:5, line:46:5> line:44:5 used ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55557da22b08 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55557da22b80 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55557da23ea8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55557da23e88 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55557da23988 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55557da24120 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55557da240e0 <col:20> 'const Element *' lvalue ParmVar 0x55557da22b08 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55557da239e8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55557da241a0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55557da24160 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55557da22b80 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55557da23a50 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55557da24220 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55557da241e0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55557da23ab0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55557da24260 <col:73> 'bool' false
| `-CompoundStmt 0x55557da242d8 <col:80, line:46:5>
|-CXXMethodDecl 0x55557da22d88 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55557da24350 <col:36, line:51:5>
|   `-ReturnStmt 0x55557da24340 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55557da24328 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55557da242f8 <col:16> 'const Element *const' lvalue ->_context 0x55557da23988
|         `-CXXThisExpr 0x55557da242e8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55557da22e78 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55557da243d0 <col:32, line:57:5>
|   `-ReturnStmt 0x55557da243c0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55557da243a8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55557da24378 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55557da239e8
|         `-CXXThisExpr 0x55557da24368 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55557da22f38 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55557da230c0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55557da22ff0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55557da23210 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55557da23180 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55557da23360 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55557da232d0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55557da23568 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55557da23418 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55557da23490 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55557da23898 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55557da23628 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55557da236a8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55557da23770 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55557da23950 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55557da23988 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55557da239e8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55557da23a50 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55557da23ab0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55557da23b00 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55557da23b00
| `-ParmVarDecl 0x55557da23c18 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55557da23cb8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55557da23cb8
| `-ParmVarDecl 0x55557da23dc8 <col:7> col:7 'const ArgContext &'
|-CXXConstructorDecl 0x55557da9f278 <col:7> col:7 implicit constexpr ArgContext 'void (ArgContext &&)' inline default trivial noexcept-unevaluated 0x55557da9f278
| `-ParmVarDecl 0x55557da9f388 <col:7> col:7 'ArgContext &&'
`-CXXDestructorDecl 0x55557da9f4f0 <col:7> col:7 implicit referenced ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ether
         0 |   uint8_t [6] ether_dhost
         6 |   uint8_t [6] ether_shost
        12 |   uint16_t ether_type
           | [sizeof=14, dsize=14, align=1,
           |  nvsize=14, nvalign=1]

*** Dumping AST Record Layout
         0 | struct click_ip6
         0 |   union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5) ip6_ctlun
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |       uint32_t ip6_un1_flow
         4 |       uint16_t ip6_un1_plen
         6 |       uint8_t ip6_un1_nxt
         7 |       uint8_t ip6_un1_hlim
         0 |     uint8_t ip6_un2_vfc
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |       unsigned int ip6_un3_fc
     0:4-7 |       unsigned int ip6_un3_v
         8 |   struct in6_addr ip6_src
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   struct in6_addr ip6_dst
        24 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        24 |       uint8_t [16] __u6_addr8
        24 |       uint16_t [8] __u6_addr16
        24 |       uint32_t [4] __u6_addr32
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_nd_adv
         0 |   uint8_t type
         1 |   uint8_t code
         2 |   uint16_t checksum
         4 |   uint8_t flags
         5 |   uint8_t [3] reserved
         8 |   uint8_t [16] nd_tpa
        24 |   uint8_t option_type
        25 |   uint8_t option_length
        26 |   uint8_t [6] nd_tha
           | [sizeof=32, dsize=32, align=2,
           |  nvsize=32, nvalign=2]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d73c370 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557d73c488 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55557d73c518 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55557d73c5e8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55557d73c6d0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d73c8e8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55557d73c790 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73ca98 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55557d73c9a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55557d73cbe0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55557d73cb50 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55557d73cd28 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55557d73cc98 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73ce70 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55557d73cde0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73cf38 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55557d73d080 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55557d73cff0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55557d73d148 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55557d73d290 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55557d73d200 <col:28> col:31 'int'
|-CXXMethodDecl 0x55557d73d408 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55557d73d348 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73d550 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55557d73d4c0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73d618 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55557d73d7d8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55557d73d6c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55557d73d740 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73da28 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55557d73d898 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55557d73d910 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55557d73dad8 <col:86> "" ""
|-CXXMethodDecl 0x55557d73dd48 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55557d73dbb8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55557d73dc30 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73def8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55557d73de08 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55557d73e0a8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55557d73dfb0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55557d73e378 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55557d73e160 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55557d73e1d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55557d73e250 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73e658 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55557d73e440 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55557d73e4b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55557d73e530 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55557d73e710 <col:115> "" ""
|-AccessSpecDecl 0x55557d73e780 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55557d73e7b8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d73fcd0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55557d73fcd0
| `-ParmVarDecl 0x55557d73fdd8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55557d73fe78 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55557d73fe78
| `-ParmVarDecl 0x55557d73ff88 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55557d7755b8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55557d9673b0 <col:7>
|-CXXConstructorDecl 0x55557d775690 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55557d775690
| `-ParmVarDecl 0x55557d7757a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55557d775818 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55557d775818
| `-ParmVarDecl 0x55557d775928 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55557d969db0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d955f58 prev 0x55557d94b160 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557d956050 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55557d956140 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55557d956268 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55557d9563e8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55557d956568 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55557d9566e8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55557d967518 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55557d967d88 <col:11>
|-CXXDestructorDecl 0x55557d9675f0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55557d967728 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55557d967728
| `-ParmVarDecl 0x55557d967838 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55557d9678d8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55557d9678d8
| `-ParmVarDecl 0x55557d9679e8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55557d96a7a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55557d96a8b8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55557d96ab38 <col:11>
|   `-ReturnStmt 0x55557d96ab28 <col:11>
|     `-UnaryOperator 0x55557d96ab10 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55557d96ab00 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55557d96a928 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55557d96a928
  `-ParmVarDecl 0x55557d96aa38 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d956750 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55557d956868 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55557d956908 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55557d956970 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55557d9569d8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55557d956a40 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55557d956aa0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55557d956b60 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55557d956bc0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55557d956c20 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55557d967428 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55557d956908 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55557d967d98 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55557d967df0 <col:12>
|-CXXConstructorDecl 0x55557d967a58 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55557d967a58
| `-ParmVarDecl 0x55557d967b68 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55557d967c08 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55557d967c08
| `-ParmVarDecl 0x55557d967d18 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55557d969e90 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d944870 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55557d944988 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55557d944a18 <col:16, col:22> col:16 public
|-EnumDecl 0x55557d944a40 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55557d944b40 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55557d944c20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d944b20 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55557d944b00 <col:21> 'int' 28
| `-EnumConstantDecl 0x55557d944bd0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55557d944c38 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d944bb0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55557d944b90 <col:22> 'int' 64
|-CXXMethodDecl 0x55557d944f78 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55557d944c60 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55557d944ce0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55557d944d58 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55557d944dd0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55557d945038 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55557d945238 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55557d9450b0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55557d945128 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55557d9452e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55557d945448 <line:55:5, col:91> col:35 used make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55557d945358 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55557d9454f0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55557d945850 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55557d9457e0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55557d945780 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55557d945740 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55557d41b310 'void'
|       |-PointerType 0x55557d6c4c10 'unsigned char *'
|       | `-BuiltinType 0x55557d41b410 'unsigned char'
|       |-TypedefType 0x55557d4c11e0 'size_t' sugar
|       | |-Typedef 0x55557d48baf0 'size_t'
|       | `-BuiltinType 0x55557d41b470 'unsigned long'
|       `-PointerType 0x55557d41bb10 'void *'
|         `-BuiltinType 0x55557d41b310 'void'
|-CXXMethodDecl 0x55557d945cc8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55557d9458c0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55557d945938 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55557d9459d0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55557d945a50 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55557d9603c0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55557d9603a8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55557d960370 <col:58> 'int' 0
| |-ParmVarDecl 0x55557d945ad0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55557d9603e8 <col:76> 'int' 0
| |-ParmVarDecl 0x55557d945b50 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55557d960408 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55557d945d98 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55557d945e18 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55557d945ed8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55557d945f78 <col:20>
| `-OptimizeNoneAttr 0x55557d945fd0 <col:30>
|-CXXMethodDecl 0x55557d946048 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55557d9460e8 <col:20>
| `-OptimizeNoneAttr 0x55557d946140 <col:30>
|-CXXMethodDecl 0x55557d9461b8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55557d946258 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55557d946308 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55557d9463a8 <col:20>
| |-OptimizeNoneAttr 0x55557d946400 <col:30>
| `-WarnUnusedResultAttr 0x55557d946428 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55557d946480 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55557d946520 <col:20>
| `-OptimizeNoneAttr 0x55557d946578 <col:30>
|-CXXMethodDecl 0x55557d9465c8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55557d946668 <col:20>
| `-OptimizeNoneAttr 0x55557d9466c0 <col:30>
|-CXXMethodDecl 0x55557d946708 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x55557d9467a8 <col:20>
| `-OptimizeNoneAttr 0x55557d946800 <col:30>
|-CXXMethodDecl 0x55557d946848 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d946908 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d9469d0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55557d946a98 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55557d946b58 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d946c78 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55557d9604d0 <col:54, line:99:5>
|   `-ReturnStmt 0x55557d9604c0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55557d9604a8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55557d960478 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55557d956f58
|         `-CXXThisExpr 0x55557d960468 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55557d946e18 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55557d946d28 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55557d960580 <col:67, line:103:5>
|   `-BinaryOperator 0x55557d960560 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55557d9604f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55557d956f58
|     | `-CXXThisExpr 0x55557d9604e8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55557d960548 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55557d960528 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55557d946d28 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55557d946f10 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55557d960600 <col:33, line:107:5>
|   `-ReturnStmt 0x55557d9605f0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55557d9605d8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55557d9605a8 <col:16> 'void *' lvalue ->_destructor_argument 0x55557d956fc0
|         `-CXXThisExpr 0x55557d960598 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55557d946fd0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55557d960c30 <col:25, line:113:5>
|   |-ParenExpr 0x55557d960978 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55557d960948 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55557d9606b8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55557d960690 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55557d960658 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55557d960628 <col:24> '<bound member function type>' ->shared 0x55557d946048
|   |   |       `-ImplicitCastExpr 0x55557d960678 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55557d960618 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55557d960718 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d9606f8 <col:42> 'int' 0
|   |   `-CallExpr 0x55557d9608a8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55557d960890 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d960870 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d9608e8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d960788 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55557d960900 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d9607b0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d960918 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d9607e8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55557d960930 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d960858 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d960840 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d960808 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55557d960b78 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55557d9609a8 <col:2> 'unsigned char *' lvalue ->_head 0x55557d956d60
|   | | `-CXXThisExpr 0x55557d960998 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55557d960b60 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55557d960b40 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55557d9609e8 <col:10> 'unsigned char *' lvalue ->_data 0x55557d956dc8
|   |     | `-CXXThisExpr 0x55557d9609d8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55557d960b28 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55557d960b08 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55557d960a28 <col:18> 'unsigned char *' lvalue ->_tail 0x55557d956e30
|   |         | `-CXXThisExpr 0x55557d960a18 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55557d960af0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55557d960ad0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55557d960a68 <col:26> 'unsigned char *' lvalue ->_end 0x55557d956e98
|   |             | `-CXXThisExpr 0x55557d960a58 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55557d960ab8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55557d960a98 <col:33> 'int' 0
|   `-BinaryOperator 0x55557d960c10 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55557d960ba8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55557d956f58
|     | `-CXXThisExpr 0x55557d960b98 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55557d960bf8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55557d960bd8 <col:16> 'int' 0
|-CXXMethodDecl 0x55557d947110 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55557d947080 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55557d9471b8 <col:20>
| |-OptimizeNoneAttr 0x55557d947210 <col:30>
| `-WarnUnusedResultAttr 0x55557d947238 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55557d947308 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55557d947278 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55557d9473b0 <col:20>
| |-OptimizeNoneAttr 0x55557d947408 <col:30>
| `-WarnUnusedResultAttr 0x55557d947430 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55557d947568 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55557d947470 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55557d947610 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55557d947710 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55557d947680 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55557d9477b8 <col:20>
| `-OptimizeNoneAttr 0x55557d947810 <col:30>
|-CXXMethodDecl 0x55557d9478d8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55557d947848 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55557d947980 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55557d947a80 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55557d9479f0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55557d947b28 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55557d947c28 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55557d947b98 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55557d947cd0 <col:20>
| `-OptimizeNoneAttr 0x55557d947d28 <col:30>
|-CXXMethodDecl 0x55557d947eb8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55557d947d68 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55557d947de0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55557d960428 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55557d947f68 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55557d948168 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55557d947fe0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55557d948058 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d948378 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55557d948228 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55557d9482a0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d948588 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55557d948438 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55557d9484b8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55557d960438 <col:39> 'int' 0
|-CXXMethodDecl 0x55557d948658 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55557d948720 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55557d9487e8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55557d9488a8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d948970 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55557d948ab8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55557d948a28 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55557d948c88 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55557d948b78 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55557d948bf0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d948d58 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55557d948e18 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55557d948eb8 <col:20>
| `-OptimizeNoneAttr 0x55557d948f10 <col:30>
|-CXXMethodDecl 0x55557d948f60 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55557d949000 <col:20>
| `-OptimizeNoneAttr 0x55557d949058 <col:30>
|-CXXMethodDecl 0x55557d9490a8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55557d949168 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d949230 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55557d9492d0 <col:20>
| `-OptimizeNoneAttr 0x55557d949328 <col:30>
|-CXXMethodDecl 0x55557d949478 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55557d949368 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55557d9493e0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d9495c8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55557d949538 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d9496a0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55557d949760 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55557d949800 <col:20>
| `-OptimizeNoneAttr 0x55557d949858 <col:30>
|-CXXMethodDecl 0x55557d9498a8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55557d949948 <col:20>
| `-OptimizeNoneAttr 0x55557d9499a0 <col:30>
|-CXXMethodDecl 0x55557d9499f0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55557d949ab8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55557d949b58 <col:20>
| `-OptimizeNoneAttr 0x55557d949bb0 <col:30>
|-CXXMethodDecl 0x55557d949bf8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55557d949d18 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55557d949e88 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55557d949dc8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55557d949f78 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55557d94a018 <col:20>
| `-OptimizeNoneAttr 0x55557d94a070 <col:30>
|-CXXMethodDecl 0x55557d94a0c0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55557d94a180 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55557d94a3b8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55557d94a230 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55557d94a2a8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55557d94a468 <col:20>
| `-OptimizeNoneAttr 0x55557d94a4c0 <col:30>
|-CXXMethodDecl 0x55557d94a568 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55557d94a608 <col:20>
| `-OptimizeNoneAttr 0x55557d94a660 <col:30>
|-CXXMethodDecl 0x55557d94a6b0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55557d94a750 <col:20>
| `-OptimizeNoneAttr 0x55557d94a7a8 <col:30>
|-CXXMethodDecl 0x55557d94a7f0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55557d94a890 <col:20>
| `-OptimizeNoneAttr 0x55557d94a8e8 <col:30>
|-CXXMethodDecl 0x55557d94a9e8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55557d94a920 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55557d94aa90 <col:20>
| `-OptimizeNoneAttr 0x55557d94aae8 <col:30>
|-CXXMethodDecl 0x55557d94aca8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55557d94ab20 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55557d94ab98 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55557d94ad58 <col:20>
| `-OptimizeNoneAttr 0x55557d94adb0 <col:30>
|-CXXMethodDecl 0x55557d94ae58 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55557d94af78 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55557d94b098 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55557d94b138 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55557d94b160 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55557d94b288 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55557d94b328 <col:20>
| `-OptimizeNoneAttr 0x55557d94b380 <col:30>
|-CXXMethodDecl 0x55557d94b428 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55557d94b4c8 <col:20>
| `-OptimizeNoneAttr 0x55557d94b520 <col:30>
|-AccessSpecDecl 0x55557d94b548 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55557d94b570 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55557d94b670 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55557d94b6c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d94b650 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55557d94b630 <col:14> 'int' 48
|-CXXMethodDecl 0x55557d94b728 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55557d94b7c8 <col:20>
| `-OptimizeNoneAttr 0x55557d94b820 <col:30>
|-CXXMethodDecl 0x55557d94b898 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55557d94b938 <col:20>
| `-OptimizeNoneAttr 0x55557d94b990 <col:30>
|-CXXMethodDecl 0x55557d94ba58 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55557d94b9c8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55557d94bbf8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55557d94bd98 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55557d94bca8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55557d94be40 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55557d94bf40 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55557d94c2f0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94bf20 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55557d94bf00 <col:9> 'int' 0
| |-EnumConstantDecl 0x55557d94bfd0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55557d94c308 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94bfb0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55557d94bf90 <col:14> 'int' 1
| |-EnumConstantDecl 0x55557d94c060 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55557d94c320 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94c040 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55557d94c020 <col:14> 'int' 2
| |-EnumConstantDecl 0x55557d94c0f0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55557d94c338 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94c0d0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55557d94c0b0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55557d94c180 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55557d94c350 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94c160 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55557d94c140 <col:13> 'int' 4
| |-EnumConstantDecl 0x55557d94c210 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55557d94c368 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94c1f0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55557d94c1d0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55557d94c2a0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55557d94c380 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d94c280 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55557d94c260 <col:14> 'int' 6
|-CXXMethodDecl 0x55557d94c3e8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55557d94c488 <col:20>
| `-OptimizeNoneAttr 0x55557d94c4e0 <col:30>
|-CXXMethodDecl 0x55557d94c5d8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55557d94c518 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55557d94c680 <col:20>
| `-OptimizeNoneAttr 0x55557d94c6d8 <col:30>
|-CXXMethodDecl 0x55557d94c748 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55557d94c870 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55557d94c9e8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55557d94c920 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55557d94cab0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55557d94cb78 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55557d94ccb8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55557d94cc28 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55557d94cd60 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55557d94ce60 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55557d94d060 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94ce40 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55557d94ce20 <col:23> 'int' 0
| |-EnumConstantDecl 0x55557d94cef0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55557d94d078 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94ced0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55557d94ceb0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55557d94cf80 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55557d94d090 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94cf60 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55557d94cf40 <col:24> 'int' 0
| `-EnumConstantDecl 0x55557d94d010 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55557d94d0a8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d94cff0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55557d94cfd0 <col:47> 'int' 16
|-CXXMethodDecl 0x55557d94d108 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55557d94d278 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55557d94d1b8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55557d94d320 <col:20>
| `-OptimizeNoneAttr 0x55557d94d378 <col:30>
|-CXXMethodDecl 0x55557d94d3c8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55557d960d50 <col:18, col:36>
|   `-ReturnStmt 0x55557d960d40 <col:20, col:33>
|     `-ImplicitCastExpr 0x55557d960d28 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55557d960d08 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55557d960cd8 <col:27> '<bound member function type>' ->xanno 0x55557d94b428
|           `-CXXThisExpr 0x55557d960cc8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55557d94d4c0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55557d960e60 <col:30, col:48>
|   `-ReturnStmt 0x55557d960e50 <col:32, col:45>
|     `-ImplicitCastExpr 0x55557d960e38 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55557d960e18 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55557d960de8 <col:39> '<bound member function type>' ->xanno 0x55557d94b288
|           `-CXXThisExpr 0x55557d960dd8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55557d94d5a8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55557d960ff8 <col:24, col:50>
|   `-ReturnStmt 0x55557d960fe8 <col:26, col:47>
|     `-UnaryOperator 0x55557d960fd0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55557d960fb0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55557d960f98 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55557d960f48 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55557d956268
|         |   `-CXXMemberCallExpr 0x55557d960f28 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55557d960ef8 <col:34> '<bound member function type>' ->xanno 0x55557d94b428
|         |       `-CXXThisExpr 0x55557d960ee8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55557d960f78 <col:46> 'int' 0
|-CXXMethodDecl 0x55557d94d6b0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55557d9611c8 <col:36, col:62>
|   `-ReturnStmt 0x55557d9611b8 <col:38, col:59>
|     `-UnaryOperator 0x55557d9611a0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55557d961180 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55557d961168 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55557d9610e0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55557d956268
|         |   `-CXXMemberCallExpr 0x55557d9610c0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55557d961090 <col:46> '<bound member function type>' ->xanno 0x55557d94b288
|         |       `-CXXThisExpr 0x55557d961080 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55557d961110 <col:58> 'int' 0
|-CXXMethodDecl 0x55557d94d7c8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55557d961360 <col:26, col:53>
|   `-ReturnStmt 0x55557d961350 <col:28, col:50>
|     `-UnaryOperator 0x55557d961338 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55557d961318 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55557d961300 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55557d9612b0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55557d956568
|         |   `-CXXMemberCallExpr 0x55557d961290 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55557d961260 <col:36> '<bound member function type>' ->xanno 0x55557d94b428
|         |       `-CXXThisExpr 0x55557d961250 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55557d9612e0 <col:49> 'int' 0
|-CXXMethodDecl 0x55557d94d8e8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55557d961538 <col:38, col:65>
|   `-ReturnStmt 0x55557d961528 <col:40, col:62>
|     `-UnaryOperator 0x55557d961510 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55557d9614f0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55557d9614d8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55557d961448 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55557d956568
|         |   `-CXXMemberCallExpr 0x55557d961428 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55557d9613f8 <col:48> '<bound member function type>' ->xanno 0x55557d94b288
|         |       `-CXXThisExpr 0x55557d9613e8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55557d961478 <col:61> 'int' 0
|-CXXMethodDecl 0x55557d94da98 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55557d94d9a0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55557d961c08 <col:34, line:463:5>
|   |-ParenExpr 0x55557d961a50 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55557d961a20 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55557d961688 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d961658 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d9615a8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d961590 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d961550 <col:23> 'int' lvalue ParmVar 0x55557d94d9a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d961570 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d961638 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d961608 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d9615c8 <col:33> 'int' lvalue ParmVar 0x55557d94d9a0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55557d961620 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55557d9615e8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55557d9616e8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d9616c8 <col:56> 'int' 0
|   |   `-CallExpr 0x55557d961980 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55557d961968 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d961948 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d9619c0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d9617d8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55557d9619d8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d961808 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d9619f0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d961840 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55557d961a08 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d961930 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d961918 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d9618d8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55557d961bf8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55557d961be0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55557d961bc0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55557d961b90 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55557d961b40 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55557d956268
|         |   `-CXXMemberCallExpr 0x55557d961b20 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55557d961af0 <col:9> '<bound member function type>' ->xanno 0x55557d94b288
|         |       `-CXXThisExpr 0x55557d961ae0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55557d961ba8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55557d961b70 <col:21> 'int' lvalue ParmVar 0x55557d94d9a0 'i' 'int'
|-CXXMethodDecl 0x55557d94dce8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55557d94db58 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55557d94dbd0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55557d962298 <col:40, line:472:5>
|   |-ParenExpr 0x55557d9620b0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55557d962080 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55557d961d60 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d961d30 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d961c80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d961c68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d961c28 <col:23> 'int' lvalue ParmVar 0x55557d94db58 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d961c48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d961d10 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d961ce0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d961ca0 <col:33> 'int' lvalue ParmVar 0x55557d94db58 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55557d961cf8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55557d961cc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55557d961dc0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d961da0 <col:56> 'int' 0
|   |   `-CallExpr 0x55557d961fe0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55557d961fc8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d961fa8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d962020 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d961e30 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55557d962038 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d961e60 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d962050 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d961e98 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55557d962068 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d961f90 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d961f78 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d961f38 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55557d962278 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55557d962220 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55557d9621f0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55557d9621a0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55557d956268
|     | |   `-CXXMemberCallExpr 0x55557d962180 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55557d962150 <col:2> '<bound member function type>' ->xanno 0x55557d94b428
|     | |       `-CXXThisExpr 0x55557d962140 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55557d962208 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55557d9621d0 <col:14> 'int' lvalue ParmVar 0x55557d94db58 'i' 'int'
|     `-ImplicitCastExpr 0x55557d962260 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55557d962240 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55557d94dbd0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55557d94dea8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55557d94ddb0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55557d962a18 <col:36, line:485:5>
|   |-ParenExpr 0x55557d962780 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d962750 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d962430 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d962400 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d962310 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d9622f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d9622b8 <col:23> 'int' lvalue ParmVar 0x55557d94ddb0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d9622d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d9623e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d9623c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d962330 <col:33> 'int' lvalue ParmVar 0x55557d94ddb0 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d9623a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d962390 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d962350 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d962370 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55557d962490 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d962470 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d9626b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d962698 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d962678 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d9626f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d962500 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55557d962708 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d962538 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d962720 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d962570 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55557d962738 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d962660 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d962648 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d962608 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55557d962a08 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55557d9629f0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55557d9629d8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55557d9629a8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55557d962948 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55557d962918 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55557d962890 <col:61, col:70> 'char const[48]' lvalue ->c 0x55557d956140
|             |   `-CXXMemberCallExpr 0x55557d962870 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55557d962840 <col:61> '<bound member function type>' ->xanno 0x55557d94b288
|             |       `-CXXThisExpr 0x55557d962830 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55557d962930 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55557d9628c0 <col:74> 'int' lvalue ParmVar 0x55557d94ddb0 'i' 'int'
|-CXXMethodDecl 0x55557d94e0f8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55557d94df68 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55557d94dfe0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55557d963168 <col:42, line:500:5>
|   |-ParenExpr 0x55557d962f00 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d962ed0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d962bb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d962b80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d962a90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d962a78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d962a38 <col:23> 'int' lvalue ParmVar 0x55557d94df68 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d962a58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d962b60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d962b48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d962ab0 <col:33> 'int' lvalue ParmVar 0x55557d94df68 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d962b28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d962b10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d962ad0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d962af0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55557d962c10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d962bf0 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d962e30 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d962e18 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d962df8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d962e70 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d962c80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55557d962e88 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d962cb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d962ea0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d962cf0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55557d962eb8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d962de0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d962dc8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d962d88 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55557d963148 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55557d9630f8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55557d9630c8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55557d963070 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55557d963040 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55557d962ff0 <col:48, col:57> 'char [48]' lvalue ->c 0x55557d956140
|     |     |   `-CXXMemberCallExpr 0x55557d962fd0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55557d962fa0 <col:48> '<bound member function type>' ->xanno 0x55557d94b428
|     |     |       `-CXXThisExpr 0x55557d962f90 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55557d963058 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55557d963020 <col:61> 'int' lvalue ParmVar 0x55557d94df68 'i' 'int'
|     `-ImplicitCastExpr 0x55557d963130 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55557d963110 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55557d94dfe0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55557d94e2b8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55557d94e1c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55557d9638c8 <col:35, line:513:5>
|   |-ParenExpr 0x55557d9635d8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d9635a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d963300 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d9632d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d9631e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d9631c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d963188 <col:23> 'int' lvalue ParmVar 0x55557d94e1c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d9631a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d9632b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d963298 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d963200 <col:33> 'int' lvalue ParmVar 0x55557d94e1c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d963278 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d963260 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d963220 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d963240 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55557d963360 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d963340 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d963508 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d9634f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d9634d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d963548 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d9633d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55557d963560 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d963408 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d963578 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d963440 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55557d963590 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d9634b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d9634a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d963460 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55557d9638b8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55557d9638a0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55557d963888 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55557d963858 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55557d9637d0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55557d9637a0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55557d963750 <col:60, col:69> 'char const[48]' lvalue ->c 0x55557d956140
|             |   `-CXXMemberCallExpr 0x55557d963730 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55557d963700 <col:60> '<bound member function type>' ->xanno 0x55557d94b288
|             |       `-CXXThisExpr 0x55557d9636f0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55557d9637b8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55557d963780 <col:73> 'int' lvalue ParmVar 0x55557d94e1c0 'i' 'int'
|-CXXMethodDecl 0x55557d94e508 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55557d94e378 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55557d94e3f0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55557d963fe8 <col:41, line:528:5>
|   |-ParenExpr 0x55557d963d70 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d963d40 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d963a60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d963a30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d963940 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d963928 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d9638e8 <col:23> 'int' lvalue ParmVar 0x55557d94e378 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d963908 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d963a10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d9639f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d963960 <col:33> 'int' lvalue ParmVar 0x55557d94e378 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d9639d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d9639c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d963980 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d9639a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55557d963ac0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d963aa0 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d963ca0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d963c88 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d963c68 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d963ce0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d963b30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55557d963cf8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d963b68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d963d10 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d963ba0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55557d963d28 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d963c50 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d963c38 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d963bf8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55557d963fc8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55557d963f78 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55557d963f48 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55557d963ef0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55557d963eb0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55557d963e60 <col:47, col:56> 'char [48]' lvalue ->c 0x55557d956140
|     |     |   `-CXXMemberCallExpr 0x55557d963e40 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55557d963e10 <col:47> '<bound member function type>' ->xanno 0x55557d94b428
|     |     |       `-CXXThisExpr 0x55557d963e00 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55557d963ec8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55557d963e90 <col:60> 'int' lvalue ParmVar 0x55557d94e378 'i' 'int'
|     `-ImplicitCastExpr 0x55557d963fb0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55557d963f90 <col:65> 'int16_t':'short' lvalue ParmVar 0x55557d94e3f0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55557d94e6c8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55557d94e5d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55557d9646b8 <col:36, line:541:5>
|   |-ParenExpr 0x55557d964458 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d964428 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d964180 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d964150 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d964060 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d964048 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d964008 <col:23> 'int' lvalue ParmVar 0x55557d94e5d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d964028 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d964130 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d964118 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d964080 <col:33> 'int' lvalue ParmVar 0x55557d94e5d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d9640f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d9640e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d9640a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d9640c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55557d9641e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d9641c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d964388 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d964370 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d964350 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d9643c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d964250 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55557d9643e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d964288 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d9643f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d9642c0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55557d964410 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d964338 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d964320 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d9642e0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55557d9646a8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55557d964690 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55557d964678 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55557d964648 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55557d9645f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55557d9645c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55557d964570 <col:61, col:70> 'char const[48]' lvalue ->c 0x55557d956140
|             |   `-CXXMemberCallExpr 0x55557d964550 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55557d964520 <col:61> '<bound member function type>' ->xanno 0x55557d94b288
|             |       `-CXXThisExpr 0x55557d964510 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55557d9645d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55557d9645a0 <col:74> 'int' lvalue ParmVar 0x55557d94e5d0 'i' 'int'
|-CXXMethodDecl 0x55557d94e898 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55557d94e788 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55557d94e800 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55557d94e948 <col:20>
| `-OptimizeNoneAttr 0x55557d94e9a0 <col:30>
|-CXXMethodDecl 0x55557d94ead8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55557d94e9e0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55557d964d88 <col:35, line:562:5>
|   |-ParenExpr 0x55557d964b28 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d964af8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d964850 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d964820 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d964730 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d964718 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d9646d8 <col:23> 'int' lvalue ParmVar 0x55557d94e9e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d9646f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d964800 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d9647e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d964750 <col:33> 'int' lvalue ParmVar 0x55557d94e9e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d9647c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d9647b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d964770 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d964790 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55557d9648b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d964890 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d964a58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d964a40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d964a20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d964a98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d964920 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55557d964ab0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d964958 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d964ac8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d964990 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55557d964ae0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d964a08 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d9649f0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d9649b0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55557d964d78 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55557d964d60 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55557d964d48 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55557d964d18 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55557d964cc0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55557d964c90 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55557d964c40 <col:60, col:69> 'char const[48]' lvalue ->c 0x55557d956140
|             |   `-CXXMemberCallExpr 0x55557d964c20 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55557d964bf0 <col:60> '<bound member function type>' ->xanno 0x55557d94b288
|             |       `-CXXThisExpr 0x55557d964be0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55557d964ca8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55557d964c70 <col:73> 'int' lvalue ParmVar 0x55557d94e9e0 'i' 'int'
|-CXXMethodDecl 0x55557d94ece8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55557d94eb98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55557d94ec10 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55557d965468 <col:41, line:577:5>
|   |-ParenExpr 0x55557d9651f8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d9651c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d964f20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d964ef0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d964e00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d964de8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d964da8 <col:23> 'int' lvalue ParmVar 0x55557d94eb98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d964dc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d964ed0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d964eb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d964e20 <col:33> 'int' lvalue ParmVar 0x55557d94eb98 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d964e98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d964e80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d964e40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d964e60 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55557d964f80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d964f60 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d965128 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d965110 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d9650f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d965168 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d964ff0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55557d965180 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d965028 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d965198 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d965060 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55557d9651b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d9650d8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d9650c0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d965080 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55557d965448 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55557d9653f8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55557d9653c8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55557d965368 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55557d965338 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55557d9652e8 <col:47, col:56> 'char [48]' lvalue ->c 0x55557d956140
|     |     |   `-CXXMemberCallExpr 0x55557d9652c8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55557d965298 <col:47> '<bound member function type>' ->xanno 0x55557d94b428
|     |     |       `-CXXThisExpr 0x55557d965288 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55557d965350 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55557d965318 <col:60> 'int' lvalue ParmVar 0x55557d94eb98 'i' 'int'
|     `-ImplicitCastExpr 0x55557d965430 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55557d965410 <col:65> 'int32_t':'int' lvalue ParmVar 0x55557d94ec10 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55557d94eea8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55557d94edb0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55557d965b98 <col:36, line:591:5>
|   |-ParenExpr 0x55557d9658d8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d9658a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d965600 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d9655d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d9654e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d9654c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d965488 <col:23> 'int' lvalue ParmVar 0x55557d94edb0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d9654a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d9655b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d965598 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d965500 <col:33> 'int' lvalue ParmVar 0x55557d94edb0 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d965578 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d965560 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d965520 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d965540 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55557d965660 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d965640 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d965808 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d9657f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d9657d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d965848 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d9656d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55557d965860 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d965708 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d965878 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d965740 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55557d965890 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d9657b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d9657a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d965760 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55557d965b88 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55557d965b70 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55557d965b58 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55557d965b28 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55557d965aa0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55557d965a70 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55557d965a20 <col:61, col:70> 'char const[48]' lvalue ->c 0x55557d956140
|             |   `-CXXMemberCallExpr 0x55557d965a00 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55557d9659d0 <col:61> '<bound member function type>' ->xanno 0x55557d94b288
|             |       `-CXXThisExpr 0x55557d9659c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55557d965a88 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55557d965a50 <col:74> 'int' lvalue ParmVar 0x55557d94edb0 'i' 'int'
|-CXXMethodDecl 0x55557d94f0f8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55557d94ef68 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55557d94efe0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55557d966278 <col:42, line:606:5>
|   |-ParenExpr 0x55557d966008 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55557d965fd8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55557d965d30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d965d00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d965c10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d965bf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d965bb8 <col:23> 'int' lvalue ParmVar 0x55557d94ef68 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d965bd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d965ce0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55557d965cc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d965c30 <col:33> 'int' lvalue ParmVar 0x55557d94ef68 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d965ca8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d965c90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d965c50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55557d965c70 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55557d965d90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d965d70 <col:60> 'int' 0
|   |   `-CallExpr 0x55557d965f38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55557d965f20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d965f00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d965f78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d965e00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55557d965f90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d965e38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d965fa8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d965e70 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55557d965fc0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d965ee8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d965ed0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d965e90 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55557d966258 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55557d966208 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55557d9661d8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55557d966178 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55557d966148 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55557d9660f8 <col:48, col:57> 'char [48]' lvalue ->c 0x55557d956140
|     |     |   `-CXXMemberCallExpr 0x55557d9660d8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55557d9660a8 <col:48> '<bound member function type>' ->xanno 0x55557d94b428
|     |     |       `-CXXThisExpr 0x55557d966098 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55557d966160 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55557d966128 <col:61> 'int' lvalue ParmVar 0x55557d94ef68 'i' 'int'
|     `-ImplicitCastExpr 0x55557d966240 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55557d966220 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55557d94efe0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55557d94f290 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55557d94f1c0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55557d966ae8 <col:33, line:620:5>
|   |-ParenExpr 0x55557d966860 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55557d966830 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55557d966480 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d966450 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d9662f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d9662d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d966298 <col:23> 'int' lvalue ParmVar 0x55557d94f1c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d9662b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d966430 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55557d966418 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d966310 <col:33> 'int' lvalue ParmVar 0x55557d94f1c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d9663f8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d9663e0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d966330 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55557d9663b8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55557d9663a0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55557d966368 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55557d9664e0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d9664c0 <col:79> 'int' 0
|   |   `-CallExpr 0x55557d966790 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55557d966778 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d966758 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d9667d0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d9665c8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55557d9667e8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d966610 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d966800 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d966648 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55557d966818 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d966740 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d966728 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d9666e8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55557d966ad8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55557d966ac0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55557d966aa8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55557d966a78 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55557d9669f0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55557d9669c0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55557d966970 <col:67, col:76> 'char const[48]' lvalue ->c 0x55557d956140
|             |   `-CXXMemberCallExpr 0x55557d966950 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55557d966920 <col:67> '<bound member function type>' ->xanno 0x55557d94b288
|             |       `-CXXThisExpr 0x55557d966910 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55557d9669d8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55557d9669a0 <col:80> 'int' lvalue ParmVar 0x55557d94f1c0 'i' 'int'
|-CXXMethodDecl 0x55557d94f4a8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55557d94f350 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55557d94f3d0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55557d967310 <col:45, line:635:5>
|   |-ParenExpr 0x55557d967058 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55557d967028 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55557d966cf0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55557d966cc0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55557d966b60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55557d966b48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55557d966b08 <col:23> 'int' lvalue ParmVar 0x55557d94f350 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55557d966b28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55557d966ca0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55557d966c88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55557d966b80 <col:33> 'int' lvalue ParmVar 0x55557d94f350 'i' 'int'
|   |   |     `-BinaryOperator 0x55557d966c68 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55557d966c50 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55557d966ba0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55557d94b670 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55557d966c28 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55557d966c10 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55557d966bd8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55557d966d50 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55557d966d30 <col:79> 'int' 0
|   |   `-CallExpr 0x55557d966f88 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55557d966f70 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55557d966f50 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55557d4b7fa0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55557d966fc8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d966dc0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55557d966fe0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55557d966e08 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55557d966ff8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55557d966e40 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55557d967010 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55557d966f38 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55557d966f20 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55557d966ed8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55557d9672f0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55557d967258 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55557d967228 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55557d9671c8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55557d967198 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55557d967148 <col:54, col:63> 'char [48]' lvalue ->c 0x55557d956140
|     |     |   `-CXXMemberCallExpr 0x55557d967128 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55557d9670f8 <col:54> '<bound member function type>' ->xanno 0x55557d94b428
|     |     |       `-CXXThisExpr 0x55557d9670e8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55557d9671b0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55557d967178 <col:67> 'int' lvalue ParmVar 0x55557d94f350 'i' 'int'
|     `-CXXConstCastExpr 0x55557d9672c0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55557d9672a8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55557d967270 <col:91> 'const void *' lvalue ParmVar 0x55557d94f3d0 'x' 'const void *'
|-CXXMethodDecl 0x55557d94f578 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55557d967398 <col:34, line:640:5>
|   `-ReturnStmt 0x55557d967388 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55557d967370 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55557d967340 <col:16> 'Packet *' lvalue ->_data_packet 0x55557d956cf8
|         `-CXXThisExpr 0x55557d967330 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55557d94f6b8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55557d94f628 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55557d960458 <col:46> 'bool' true
|-CXXMethodDecl 0x55557d94f838 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55557d94f770 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55557d94f8e0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55557d950090 <line:660:22> "" ""
| |-EnumConstantDecl 0x55557d94f9e0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d950100 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94f9c0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55557d94f9a0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55557d944b40 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55557d94fa70 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d950118 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94fa50 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55557d94fa30 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55557d944bd0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55557d94fb00 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d950130 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94fae0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55557d94fac0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55557d94fb90 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d950148 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94fb70 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55557d94fb50 <col:19> 'int' 16
| |-EnumConstantDecl 0x55557d94fc20 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d950160 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94fc00 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55557d94fbe0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55557d94fcb0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d950178 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94fc90 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55557d94fc70 <col:19> 'int' 32
| |-EnumConstantDecl 0x55557d94fd40 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d950190 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94fd20 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55557d94fd00 <col:19> 'int' EnumConstant 0x55557d94fb90 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55557d94fdd0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d9501a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94fdb0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55557d94fd90 <col:19> 'int' EnumConstant 0x55557d94fcb0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55557d94fea0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d9501c0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94fe80 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55557d94fe60 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55557d94fe20 <col:23> 'int' EnumConstant 0x55557d94fdd0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55557d94fe40 <col:40> 'int' 2
| |-EnumConstantDecl 0x55557d94ff70 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55557d9501d8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55557d94ff50 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55557d94ff30 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55557d94fef0 <col:23> 'int' EnumConstant 0x55557d94fdd0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55557d94ff10 <col:40> 'int' 4
| `-EnumConstantDecl 0x55557d950040 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55557d9501f0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55557d950020 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55557d950000 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55557d94ffc0 <col:23> 'int' EnumConstant 0x55557d94fdd0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55557d94ffe0 <col:40> 'int' 8
|-CXXMethodDecl 0x55557d950230 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55557d9502d0 <col:68> "" ""
|-CXXMethodDecl 0x55557d950368 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55557d950408 <col:45> "" ""
|-CXXMethodDecl 0x55557d9504a0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55557d950540 <col:57> "" ""
|-CXXMethodDecl 0x55557d9505d8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55557d950678 <col:45> "" ""
|-CXXMethodDecl 0x55557d950710 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55557d9507b0 <col:57> "" ""
|-CXXMethodDecl 0x55557d950840 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55557d9508e0 <col:51> "" ""
|-CXXMethodDecl 0x55557d950970 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55557d950a10 <col:63> "" ""
|-CXXMethodDecl 0x55557d950aa0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55557d950b40 <col:53> "" ""
|-CXXMethodDecl 0x55557d950bd0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55557d950c70 <col:65> "" ""
|-CXXMethodDecl 0x55557d950d88 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55557d950cf8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55557d950e30 <col:61> "" ""
|-CXXMethodDecl 0x55557d950fc8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55557d950eb8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55557d950f30 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55557d951078 <col:67> "" ""
|-CXXMethodDecl 0x55557d951190 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55557d951100 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55557d951238 <col:63> "" ""
|-CXXMethodDecl 0x55557d9513d0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55557d9512c0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55557d951338 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55557d951480 <col:69> "" ""
|-CXXMethodDecl 0x55557d951598 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55557d951508 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55557d951640 <col:63> "" ""
|-CXXMethodDecl 0x55557d953d18 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55557d953c08 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55557d953c80 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55557d953dc8 <col:69> "" ""
|-CXXMethodDecl 0x55557d953ee0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55557d953e50 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55557d953f88 <col:62> "" ""
|-CXXMethodDecl 0x55557d954120 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55557d954010 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55557d954088 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55557d9541d0 <col:68> "" ""
|-CXXMethodDecl 0x55557d9542e8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55557d954258 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55557d954390 <col:63> "" ""
|-CXXMethodDecl 0x55557d954528 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55557d954418 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55557d954490 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55557d9545d8 <col:69> "" ""
|-CXXMethodDecl 0x55557d954668 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55557d954708 <col:64> "" ""
|-CXXMethodDecl 0x55557d954798 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55557d954838 <col:52> "" ""
|-CXXMethodDecl 0x55557d9548c8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55557d954968 <col:67> "" ""
|-CXXMethodDecl 0x55557d9549f8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55557d954a98 <col:55> "" ""
|-CXXMethodDecl 0x55557d954bb0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55557d954b20 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55557d954c58 <col:58> "" ""
|-CXXMethodDecl 0x55557d954df0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55557d954ce0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55557d954d58 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55557d954ea0 <col:62> "" ""
|-CXXMethodDecl 0x55557d954fb8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55557d954f28 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55557d955060 <col:58> "" ""
|-CXXMethodDecl 0x55557d9551f8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55557d9550e8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55557d955160 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55557d9552a8 <col:62> "" ""
|-CXXMethodDecl 0x55557d9553c0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55557d955330 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55557d955468 <col:60> "" ""
|-CXXMethodDecl 0x55557d955600 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55557d9554f0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55557d955568 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55557d9556b0 <col:64> "" ""
|-CXXMethodDecl 0x55557d9557c8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55557d955738 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55557d955870 <col:58> "" ""
|-CXXMethodDecl 0x55557d955a08 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55557d9558f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55557d955970 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55557d955ab8 <col:62> "" ""
|-CXXMethodDecl 0x55557d955bd0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55557d955b40 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55557d955c78 <col:59> "" ""
|-CXXMethodDecl 0x55557d955e10 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55557d955d00 <col:33> col:36 'int'
| |-ParmVarDecl 0x55557d955d78 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55557d955ec0 <col:63> "" ""
|-AccessSpecDecl 0x55557d955f30 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55557d955f58 prev 0x55557d94b160 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55557d956050 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55557d956140 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55557d956268 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55557d9563e8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55557d956568 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55557d9566e8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55557d967518 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55557d967d88 <col:11>
| |-CXXDestructorDecl 0x55557d9675f0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55557d967728 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55557d967728
| | `-ParmVarDecl 0x55557d967838 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55557d9678d8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55557d9678d8
| | `-ParmVarDecl 0x55557d9679e8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55557d96a7a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55557d96a8b8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55557d96ab38 <col:11>
| |   `-ReturnStmt 0x55557d96ab28 <col:11>
| |     `-UnaryOperator 0x55557d96ab10 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55557d96ab00 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55557d96a928 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55557d96a928
|   `-ParmVarDecl 0x55557d96aa38 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55557d956750 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55557d956868 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55557d956908 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55557d956970 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55557d9569d8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55557d956a40 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55557d956aa0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55557d956b60 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55557d956bc0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55557d956c20 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55557d967428 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55557d956908 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55557d967d98 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55557d967df0 <col:12>
| |-CXXConstructorDecl 0x55557d967a58 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55557d967a58
| | `-ParmVarDecl 0x55557d967b68 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55557d967c08 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55557d967c08
| | `-ParmVarDecl 0x55557d967d18 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55557d969e90 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55557d956c98 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55557d956cf8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55557d956d60 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55557d956dc8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55557d956e30 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55557d956e98 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55557d956ef8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55557d956f58 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55557d956fc0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55557d957048 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55557d956c98 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55557d9673c0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55557d956ef8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55557d967e00 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55557d967e60 <col:21, line:755:5>
|-CXXConstructorDecl 0x55557d9571e8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55557d957128 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55557d9572e0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55557d9574c8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55557d9573d0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55557d957798 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55557d957580 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55557d9575f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55557d957670 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d9579b8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55557d957868 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55557d9578e0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55557d95ff98 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55557d957a78 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55557d957af0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55557d957b68 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55557d9600f0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55557d960060 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d960238 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55557d9601a8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55557d960330 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d9d5340 prev 0x55557d944310 <../dummy_inc/clicknet/ether.h:17:1, line:21:1> line:17:8 referenced struct click_ether definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-PackedAttr 0x55557d9d56c8 <line:21:18>
|-CXXRecordDecl 0x55557d9d5438 <line:17:1, col:8> col:8 implicit struct click_ether
|-FieldDecl 0x55557d9d5568 <line:18:5, col:26> col:13 referenced ether_dhost 'uint8_t [6]'
|-FieldDecl 0x55557d9d5618 <line:19:5, col:26> col:13 referenced ether_shost 'uint8_t [6]'
`-FieldDecl 0x55557d9d5678 <line:20:5, col:14> col:14 referenced ether_type 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  NonVirtualBaseLLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d8fda58 <../dummy_inc/clicknet/ip6.h:18:2, line:27:2> line:18:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55557d8fdb88 <line:19:6, col:15> col:15 referenced ip6_un1_flow 'uint32_t':'unsigned int'
|-FieldDecl 0x55557d8fdbe8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
|-FieldDecl 0x55557d8fdc48 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
`-FieldDecl 0x55557d8fdca8 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i32, i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i32, i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d8fde30 <../dummy_inc/clicknet/ip6.h:30:2, line:38:2> line:30:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55557d8fdfa0 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| `-ConstantExpr 0x55557d8fdf80 <col:28> 'int' Int: 4
|   `-IntegerLiteral 0x55557d8fdf48 <col:28> 'int' 4
`-FieldDecl 0x55557d8fe048 <line:36:6, col:27> col:15 referenced ip6_un3_v 'unsigned int'
  `-ConstantExpr 0x55557d8fe028 <col:27> 'int' Int: 4
    `-IntegerLiteral 0x55557d8fdff0 <col:27> 'int' 4

Layout: <CGRecordLayout
  LLVMType:%struct.anon.3 = type { i8, [3 x i8] }
  NonVirtualBaseLLVMType:%struct.anon.3 = type { i8, [3 x i8] }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d8fd938 <../dummy_inc/clicknet/ip6.h:17:5, line:39:5> line:17:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55557d8fda58 <line:18:2, line:27:2> line:18:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55557d8fdb88 <line:19:6, col:15> col:15 referenced ip6_un1_flow 'uint32_t':'unsigned int'
| |-FieldDecl 0x55557d8fdbe8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
| |-FieldDecl 0x55557d8fdc48 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| `-FieldDecl 0x55557d8fdca8 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d8fdd68 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
|-FieldDecl 0x55557d8fdde0 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
|-CXXRecordDecl 0x55557d8fde30 <line:30:2, line:38:2> line:30:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55557d8fdfa0 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | `-ConstantExpr 0x55557d8fdf80 <col:28> 'int' Int: 4
| |   `-IntegerLiteral 0x55557d8fdf48 <col:28> 'int' 4
| `-FieldDecl 0x55557d8fe048 <line:36:6, col:27> col:15 referenced ip6_un3_v 'unsigned int'
|   `-ConstantExpr 0x55557d8fe028 <col:27> 'int' Int: 4
|     `-IntegerLiteral 0x55557d8fdff0 <col:27> 'int' 4
`-FieldDecl 0x55557d8fe108 <line:30:2, line:38:4> col:4 referenced ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'

Layout: <CGRecordLayout
  LLVMType:%union.anon.2 = type { %struct.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d8fd7b0 prev 0x55557d944500 <../dummy_inc/clicknet/ip6.h:16:1, line:42:1> line:16:8 referenced struct click_ip6 definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55557d8fd8a8 <col:1, col:8> col:8 implicit struct click_ip6
|-CXXRecordDecl 0x55557d8fd938 <line:17:5, line:39:5> line:17:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55557d8fda58 <line:18:2, line:27:2> line:18:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x55557d8fdb88 <line:19:6, col:15> col:15 referenced ip6_un1_flow 'uint32_t':'unsigned int'
| | |-FieldDecl 0x55557d8fdbe8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
| | |-FieldDecl 0x55557d8fdc48 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| | `-FieldDecl 0x55557d8fdca8 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'
| |-FieldDecl 0x55557d8fdd68 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
| |-FieldDecl 0x55557d8fdde0 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
| |-CXXRecordDecl 0x55557d8fde30 <line:30:2, line:38:2> line:30:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x55557d8fdfa0 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | | `-ConstantExpr 0x55557d8fdf80 <col:28> 'int' Int: 4
| | |   `-IntegerLiteral 0x55557d8fdf48 <col:28> 'int' 4
| | `-FieldDecl 0x55557d8fe048 <line:36:6, col:27> col:15 referenced ip6_un3_v 'unsigned int'
| |   `-ConstantExpr 0x55557d8fe028 <col:27> 'int' Int: 4
| |     `-IntegerLiteral 0x55557d8fdff0 <col:27> 'int' 4
| `-FieldDecl 0x55557d8fe108 <line:30:2, line:38:4> col:4 referenced ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'
|-FieldDecl 0x55557d8fe2b8 <line:17:5, line:39:7> col:7 referenced ip6_ctlun 'union (anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)':'click_ip6::(anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)'
|-FieldDecl 0x55557d8fe340 <line:40:5, col:21> col:21 referenced ip6_src 'struct in6_addr':'in6_addr'
`-FieldDecl 0x55557d8fe3b0 <line:41:5, col:21> col:21 referenced ip6_dst 'struct in6_addr':'in6_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip6 = type { %union.anon.2, %struct.in6_addr, %struct.in6_addr }
  NonVirtualBaseLLVMType:%struct.click_ip6 = type { %union.anon.2, %struct.in6_addr, %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d9dd2b0 <../dummy_inc/clicknet/ether.h:101:1, line:114:1> line:101:8 referenced struct click_nd_adv definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55557d9dd3c8 <col:1, col:8> col:8 implicit struct click_nd_adv
|-FieldDecl 0x55557d9dd468 <line:102:5, col:13> col:13 referenced type 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9dd4c8 <line:103:5, col:13> col:13 referenced code 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9dd528 <line:104:5, col:14> col:14 referenced checksum 'uint16_t':'unsigned short'
|-FieldDecl 0x55557d9dd588 <line:105:5, col:13> col:13 referenced flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9dd6b8 <line:109:5, col:23> col:13 referenced reserved 'uint8_t [3]'
|-FieldDecl 0x55557d9dd768 <line:110:5, col:22> col:13 referenced nd_tpa 'uint8_t [16]'
|-FieldDecl 0x55557d9dd7c8 <line:111:5, col:13> col:13 referenced option_type 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9dd828 <line:112:5, col:13> col:13 referenced option_length 'uint8_t':'unsigned char'
`-FieldDecl 0x55557d9dd8d8 <line:113:5, col:21> col:13 referenced nd_tha 'uint8_t [6]'

Layout: <CGRecordLayout
  LLVMType:%struct.click_nd_adv = type { i8, i8, i16, i8, [3 x i8], [16 x i8], i8, i8, [6 x i8] }
  NonVirtualBaseLLVMType:%struct.click_nd_adv = type { i8, i8, i16, i8, [3 x i8], [16 x i8], i8, i8, [6 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d967f00 prev 0x55557d9447c0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55557d968038 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55557d9680c8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55557d968170 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x55557d968210 <col:20>
| `-OptimizeNoneAttr 0x55557d968268 <col:30>
|-CXXMethodDecl 0x55557d9682b8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55557d968358 <col:20>
| `-OptimizeNoneAttr 0x55557d9683b0 <col:30>
|-CXXMethodDecl 0x55557d968400 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55557d9684c8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55557d968590 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55557d9686a8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55557d968770 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55557d968810 <col:20>
| `-OptimizeNoneAttr 0x55557d968868 <col:30>
|-CXXMethodDecl 0x55557d9688d8 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55557d968978 <col:20>
| `-OptimizeNoneAttr 0x55557d9689d0 <col:30>
|-CXXMethodDecl 0x55557d968a78 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55557d968b18 <col:20>
| `-OptimizeNoneAttr 0x55557d968b70 <col:30>
|-CXXMethodDecl 0x55557d968bc0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55557d968cd8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55557d968df8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55557d968f18 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55557d968fe0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55557d969080 <col:62> "" ""
|-AccessSpecDecl 0x55557d9690f0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55557d969150 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55557d969d48 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55557d969f70 <col:29, col:31>
|-CXXMethodDecl 0x55557d969218 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55557d969358 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55557d9692c8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55557d969450 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55557d969f80 <col:23, col:25>
|-CXXMethodDecl 0x55557d969608 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55557d969540 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55557d9698d8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55557d9696c0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55557d969738 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55557d9697b0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55557d969a68 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55557d9699a0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55557d969b60 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55557d969bc8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55557d969bc8
  `-ParmVarDecl 0x55557d969cd8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_nd_adv2
         0 |   uint8_t type
         1 |   uint8_t code
         2 |   uint16_t checksum
         4 |   uint8_t flags
         5 |   uint8_t [3] reserved
         8 |   uint8_t [16] nd_tpa
           | [sizeof=24, dsize=24, align=2,
           |  nvsize=24, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d9dd940 <../dummy_inc/clicknet/ether.h:118:1, line:128:1> line:118:8 referenced struct click_nd_adv2 definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55557d9dda58 <col:1, col:8> col:8 implicit struct click_nd_adv2
|-FieldDecl 0x55557d9ddaf8 <line:119:5, col:13> col:13 referenced type 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9ddb58 <line:120:5, col:13> col:13 referenced code 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9ddbb8 <line:121:5, col:14> col:14 referenced checksum 'uint16_t':'unsigned short'
|-FieldDecl 0x55557d9ddc18 <line:122:5, col:13> col:13 referenced flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9ddcc8 <line:126:5, col:23> col:13 referenced reserved 'uint8_t [3]'
`-FieldDecl 0x55557d9ddd78 <line:127:5, col:22> col:13 referenced nd_tpa 'uint8_t [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.click_nd_adv2 = type { i8, i8, i16, i8, [3 x i8], [16 x i8] }
  NonVirtualBaseLLVMType:%struct.click_nd_adv2 = type { i8, i8, i16, i8, [3 x i8], [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_nd_sol
         0 |   uint8_t type
         1 |   uint8_t code
         2 |   uint16_t checksum
         4 |   uint32_t reserved
         8 |   uint8_t [16] nd_tpa
        24 |   uint8_t option_type
        25 |   uint8_t option_length
        26 |   uint8_t [6] nd_sha
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55557d9dcd50 <../dummy_inc/clicknet/ether.h:89:1, line:98:1> line:89:8 referenced struct click_nd_sol definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55557d9dce68 <col:1, col:8> col:8 implicit struct click_nd_sol
|-FieldDecl 0x55557d9dcf08 <line:90:5, col:13> col:13 referenced type 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9dcf68 <line:91:5, col:13> col:13 referenced code 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9dcfc8 <line:92:5, col:14> col:14 referenced checksum 'uint16_t':'unsigned short'
|-FieldDecl 0x55557d9dd028 <line:93:5, col:14> col:14 reserved 'uint32_t':'unsigned int'
|-FieldDecl 0x55557d9dd0d8 <line:94:5, col:22> col:13 referenced nd_tpa 'uint8_t [16]'
|-FieldDecl 0x55557d9dd138 <line:95:5, col:13> col:13 option_type 'uint8_t':'unsigned char'
|-FieldDecl 0x55557d9dd198 <line:96:5, col:13> col:13 option_length 'uint8_t':'unsigned char'
`-FieldDecl 0x55557d9dd248 <line:97:5, col:21> col:13 nd_sha 'uint8_t [6]'

Layout: <CGRecordLayout
  LLVMType:%struct.click_nd_sol = type { i8, i8, i16, i32, [16 x i8], i8, i8, [6 x i8] }
  NonVirtualBaseLLVMType:%struct.click_nd_sol = type { i8, i8, i16, i32, [16 x i8], i8, i8, [6 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<40>
         0 |   char [40] x
           | [sizeof=40, dsize=40, align=1,
           |  nvsize=40, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55557d9cb550 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 40
|-PackedAttr 0x55557d9342c8 <line:167:18>
|-CXXRecordDecl 0x55557d934388 prev 0x55557d9cb550 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55557d934498 <line:166:5, col:13> col:10 x 'char [40]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [40 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [40 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
