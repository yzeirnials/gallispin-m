
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class EtherAddress
         0 |   uint16_t [3] _data
           | [sizeof=6, dsize=6, align=1,
           |  nvsize=6, nvalign=1]

*** Dumping AST Record Layout
         0 | class List_member<struct ARPTable::ARPEntry>
         0 |   struct ARPTable::ARPEntry * _next
         8 |   struct ARPTable::ARPEntry * _prev
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct ARPTable::ARPEntry
         0 |   class IPAddress _ip
         0 |     uint32_t _addr
         8 |   struct ARPTable::ARPEntry * _hashnext
        16 |   class EtherAddress _eth
        16 |     uint16_t [3] _data
        22 |   _Bool _known
        23 |   uint8_t _num_polls_since_reply
        24 |   click_jiffies_t _live_at_j
        28 |   click_jiffies_t _polled_at_j
        32 |   class Packet * _head
        40 |   class Packet * _tail
        48 |   uint32_t _entry_packet_count
        56 |   class List_member<struct ARPTable::ARPEntry> _age_link
        56 |     struct ARPTable::ARPEntry * _next
        64 |     struct ARPTable::ARPEntry * _prev
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >
         0 |   struct ARPTable::ARPEntry * _element
         8 |   struct ARPTable::ARPEntry ** _pprev
        16 |   HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >
         0 |   class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > (base)
         0 |     struct ARPTable::ARPEntry * _element
         8 |     struct ARPTable::ARPEntry ** _pprev
        16 |     HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9ec448 prev 0x55974a9e3be8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a9ec540 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55974a9ec5d0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55974a9ec648 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55974a9ec708 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55974a9ec7d0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55974a9ec948 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55974a9ec880 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55974a9ec9f0 <col:24>
| `-OptimizeNoneAttr 0x55974a9eca48 <col:34>
|-CXXMethodDecl 0x55974a9eca90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55974a9ecd48 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55974a9ecb40 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55974a9ecbb8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55974a9ecc38 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55974a9ece00 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55974a9ece38 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55974a9ecea0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55974a9ecf28 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55974a9ed248 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55974a9ecfe0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55974a9ed058 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55974a9ed0d0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55974a9ed150 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55974a9ed360 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55974a9f4cd8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55974a9f4cd8
| `-ParmVarDecl 0x55974a9f4de8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55974a9f4e88 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55974a9f4e88
| `-ParmVarDecl 0x55974a9f4f98 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55974ac4faa0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a79df10 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a79e028 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55974a79e0b8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55974a79e188 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55974a79e270 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a79e488 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55974a79e330 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a79e638 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55974a79e540 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55974a79e780 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55974a79e6f0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55974a79e8c8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55974a79e838 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a79ea10 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55974a79e980 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a79ead8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55974a79ec20 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55974a79eb90 <col:28> col:31 'int'
|-CXXMethodDecl 0x55974a79ece8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55974a79ee30 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55974a79eda0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55974a79efa8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55974a79eee8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a79f0f0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55974a79f060 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a79f1b8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55974a79f378 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55974a79f268 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55974a79f2e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a79f5c8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55974a79f438 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55974a79f4b0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974a79f678 <col:86> "" ""
|-CXXMethodDecl 0x55974a79f8e8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55974a79f758 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55974a79f7d0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a79fa98 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55974a79f9a8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55974a79fc48 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55974a79fb50 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55974a79ff18 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55974a79fd00 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55974a79fd78 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55974a79fdf0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a7a01f8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55974a79ffe0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55974a7a0058 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55974a7a00d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974a7a02b0 <col:115> "" ""
|-AccessSpecDecl 0x55974a7a0320 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55974a7a0358 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a7a1870 <line:52:7> col:7 implicit used constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a7a1978 <col:7> col:7 used 'const atomic_uint32_t &'
| `-CompoundStmt 0x55974ac4fe50 <col:7>
|   |-BinaryOperator 0x55974ac4fdf8 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55974ac4fdb0 <col:7> 'uint32_t':'unsigned int' lvalue ->_val 0x55974a7a0358
|   | | `-CXXThisExpr 0x55974ac4fda0 <col:7> 'atomic_uint32_t *' this
|   | `-ImplicitCastExpr 0x55974ac4fde0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55974ac4fd70 <col:7> 'const uint32_t':'const unsigned int' lvalue ._val 0x55974a7a0358
|   |     `-DeclRefExpr 0x55974ac4fd50 <col:7> 'const atomic_uint32_t' lvalue ParmVar 0x55974a7a1978 '' 'const atomic_uint32_t &'
|   `-ReturnStmt 0x55974ac4fe40 <col:7>
|     `-UnaryOperator 0x55974ac4fe28 <col:7> 'atomic_uint32_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974ac4fe18 <col:7> 'atomic_uint32_t *' this
|-CXXMethodDecl 0x55974a7a1a18 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55974a7a1a18
| `-ParmVarDecl 0x55974a7a1b28 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55974a7d7158 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55974a9c8f50 <col:7>
|-CXXConstructorDecl 0x55974a7d7230 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55974a7d7230
| `-ParmVarDecl 0x55974a7d7348 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55974a7d73b8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55974a7d73b8
| `-ParmVarDecl 0x55974a7d74c8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55974a9cb950 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ab9a270 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55974ab9a448 prev 0x55974ab9a270 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55974ab9a4d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55974ab9a500 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab9c0d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55974ab9c080 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55974ab9a9b0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55974ab9a8b0 'type'
|     `-TemplateSpecializationType 0x55974ab9a840 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55974ab9a720 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55974ab9a700 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55974ab9a6e0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55974ab9a820 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55974ab9a740 'char_array'
|-TypedefDecl 0x55974ab9c188 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55974ab9c150 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55974ab9c130 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55974ab9c0d0 'type'
|     `-ElaboratedType 0x55974ab9c080 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55974ab9a9b0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55974ab9a8b0 'type'
|         `-TemplateSpecializationType 0x55974ab9a840 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55974ab9a720 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55974ab9a700 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55974ab9a6e0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55974ab9a820 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55974ab9a740 'char_array'
|-CXXMethodDecl 0x55974ab9c308 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55974ab9c218 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55974ab9c3f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55974ab9c4d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55974ab9c4d8
|-CXXMethodDecl 0x55974ab9c7a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55974ab9c6b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55974ab9c9e8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55974ab9c860 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab9c8d8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55974ab9cbb8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55974ab9caa8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab9cb20 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55974ab9cd18 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55974ab9cde8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55974ab9d038 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55974ab9cea8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55974ab9cf20 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55974ab9d298 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55974ab9d108 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55974ab9d180 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55974ab9d458 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55974ab9d368 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55974ab9d618 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55974ab9d520 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55974ab9d6d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ab9d780 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ab9d9b8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55974ab9d830 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab9d8a8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55974ab9dc58 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55974ab9db60 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55974ab9dd20 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55974ab9dd70 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55974ab9ddc0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974abf3f88 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55974abfe190 prev 0x55974abf3f88 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974abff1a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55974abff150 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55974abff130 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55974abfefe0 'type'
|     `-SubstTemplateTypeParmType 0x55974ab99e40 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974ab99990 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55974ab998a8 'sized_array_memory'
|-FieldDecl 0x55974abff2a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55974abff2f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974abff328 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55974abfe220 'Element *' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-PointerType 0x55974a9d5990 'Element *'
|     `-RecordType 0x55974a9d5710 'Element'
|       `-CXXRecord 0x55974a9df460 'Element'
|-TypedefDecl 0x55974abff3b8 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55974abff380 'Element *&'
|   `-SubstTemplateTypeParmType 0x55974abfe220 'Element *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a9d5990 'Element *'
|       `-RecordType 0x55974a9d5710 'Element'
|         `-CXXRecord 0x55974a9df460 'Element'
|-TypedefDecl 0x55974abff478 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55974abff440 'Element *const &'
|   `-QualType 0x55974abfe221 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55974abfe220 'Element *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a9d5990 'Element *'
|         `-RecordType 0x55974a9d5710 'Element'
|           `-CXXRecord 0x55974a9df460 'Element'
|-TypedefDecl 0x55974abff508 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55974abff4d0 'Element **'
|   `-SubstTemplateTypeParmType 0x55974abfe220 'Element *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a9d5990 'Element *'
|       `-RecordType 0x55974a9d5710 'Element'
|         `-CXXRecord 0x55974a9df460 'Element'
|-TypedefDecl 0x55974abff5c8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55974abff590 'Element *const *'
|   `-QualType 0x55974abfe221 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55974abfe220 'Element *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a9d5990 'Element *'
|         `-RecordType 0x55974a9d5710 'Element'
|           `-CXXRecord 0x55974a9df460 'Element'
|-TypedefDecl 0x55974ac001a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55974ac00150 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55974ac00130 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55974ac000c0 'type'
|     `-SubstTemplateTypeParmType 0x55974abffe80 'Element *' sugar
|       |-TemplateTypeParmType 0x55974a74e540 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a74e4f0 'T'
|       `-PointerType 0x55974a9d5990 'Element *'
|         `-RecordType 0x55974a9d5710 'Element'
|           `-CXXRecord 0x55974a9df460 'Element'
|-TypedefDecl 0x55974ac00208 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55974abff440 'Element *const &'
|   `-QualType 0x55974abfe221 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55974abfe220 'Element *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a9d5990 'Element *'
|         `-RecordType 0x55974a9d5710 'Element'
|           `-CXXRecord 0x55974a9df460 'Element'
|-TypedefDecl 0x55974ac00260 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ac002c8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55974abff4d0 'Element **'
|   `-SubstTemplateTypeParmType 0x55974abfe220 'Element *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a9d5990 'Element *'
|       `-RecordType 0x55974a9d5710 'Element'
|         `-CXXRecord 0x55974a9df460 'Element'
|-TypedefDecl 0x55974ac00330 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55974abff590 'Element *const *'
|   `-QualType 0x55974abfe221 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55974abfe220 'Element *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a9d5990 'Element *'
|         `-RecordType 0x55974a9d5710 'Element'
|           `-CXXRecord 0x55974a9df460 'Element'
|-EnumDecl 0x55974ac00388 <line:134:5> col:5
| `-EnumConstantDecl 0x55974ac00480 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974ac00460 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974ac00508 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974ac00798 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac005c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac00660 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55974ac00a28 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55974ac00910 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55974ac00ce8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55974ac00bd0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55974ac01000 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55974ac00ee0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55974ac01310 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55974ac011f0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55974ac01600 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac01448 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac014c0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55974ac01758 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55974ac01838 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac01890 <col:30> Inherited
|-CXXMethodDecl 0x55974ac018d8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55974ac01988 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac019e0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac01aa8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55974ac01b58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac01bb0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac01bf8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55974ac01ca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac01d00 <col:30> Inherited
|-CXXMethodDecl 0x55974ac01d48 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55974ac01df8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac01e50 <col:30> Inherited
|-CXXMethodDecl 0x55974ac01e98 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55974ac01f48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac01fa0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac01fc8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac02078 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac02128 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974ac022e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac021d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac02250 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55974ac02438 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac023a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac025e8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55974ac024f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac026a0 <col:20>
| `-OptimizeNoneAttr 0x55974ac026f8 <col:30>
|-CXXMethodDecl 0x55974ac02818 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55974ac02720 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac028d0 <col:20>
| `-OptimizeNoneAttr 0x55974ac02928 <col:30>
|-CXXMethodDecl 0x55974ac029e0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac02950 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac02b28 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac02a98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac02c58 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55974ac02d88 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55974ac02e58 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55974ac02f28 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55974ac03068 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac02fd8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac031b0 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac03120 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac032f8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55974ac03268 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac033b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974ac034b0 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974ac03420 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac03568 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974ac03628 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55974ac03728 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55974ac038a8 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac037e8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55974ac04068 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974ac03960 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55974ac03fc8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55974ac03ec8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55974ac04148 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ac04298 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac04208 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55974ac04350 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974ac04598 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac04410 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55974ac04488 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55974ac04758 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55974ac04668 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55974ac049a8 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55974ac04820 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55974ac04898 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55974ac04a68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ac04cc8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55974ac04bd0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55974ac04d98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974ac04d98

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a7b3300 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55974a7b3418 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55974a7b34b8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55974a7b3518 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55974a7b3578 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55974a7b3628 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a7b3930 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a7b3a48 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55974a7b3af0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55974a7b3b58 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55974a7b3be8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55974a7b9c80 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55974a7ba0b8 <col:12>
|-CXXConstructorDecl 0x55974a7b9d88 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a7b9e98 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55974a7b3af0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55974a7bc640 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55974a7bc610 <col:12> 'const char *const' lvalue .data 0x55974a7b3af0
| |     `-DeclRefExpr 0x55974a7bc5f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7b9e98 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55974a7b3b58 'length' 'int'
| | `-ImplicitCastExpr 0x55974a7bc6d0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55974a7bc6a0 <col:12> 'const int' lvalue .length 0x55974a7b3b58
| |     `-DeclRefExpr 0x55974a7bc680 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7b9e98 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55974a7b3be8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55974a7bc760 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55974a7bc730 <col:12> 'String::memo_t *const' lvalue .memo 0x55974a7b3be8
| |     `-DeclRefExpr 0x55974a7bc710 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7b9e98 '' 'const String::rep_t &'
| `-CompoundStmt 0x55974a7bc7b8 <col:12>
|-CXXConstructorDecl 0x55974a7b9f38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55974a7b9f38
| `-ParmVarDecl 0x55974a7ba048 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55974a7bf5a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55974a7cafb8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a7cb0c8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55974a7cb5e0 <col:12>
|   |-BinaryOperator 0x55974a7cb3f8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55974a7cb3b0 <col:12> 'const char *' lvalue ->data 0x55974a7b3af0
|   | | `-CXXThisExpr 0x55974a7cb3a0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55974a7cb3e0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55974a7cb370 <col:12> 'const char *const' lvalue .data 0x55974a7b3af0
|   |     `-DeclRefExpr 0x55974a7cb350 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7cb0c8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55974a7cb4c0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55974a7cb478 <col:12> 'int' lvalue ->length 0x55974a7b3b58
|   | | `-CXXThisExpr 0x55974a7cb468 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55974a7cb4a8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55974a7cb438 <col:12> 'const int' lvalue .length 0x55974a7b3b58
|   |     `-DeclRefExpr 0x55974a7cb418 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7cb0c8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55974a7cb588 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55974a7cb540 <col:12> 'String::memo_t *' lvalue ->memo 0x55974a7b3be8
|   | | `-CXXThisExpr 0x55974a7cb530 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55974a7cb570 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55974a7cb500 <col:12> 'String::memo_t *const' lvalue .memo 0x55974a7b3be8
|   |     `-DeclRefExpr 0x55974a7cb4e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7cb0c8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55974a7cb5d0 <col:12>
|     `-UnaryOperator 0x55974a7cb5b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974a7cb5a8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55974a7cb138 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55974a7cb138
  `-ParmVarDecl 0x55974a7cb248 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a7aa870 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974a7aa988 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55974a7aaa18 <col:16, col:22> col:16 public
|-TypedefDecl 0x55974a7aaa58 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55974a477fd0 'const char *'
|   `-QualType 0x55974a477521 'const char' const
|     `-BuiltinType 0x55974a477520 'char'
|-TypedefDecl 0x55974a7aaae0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55974a7aaab0 'String::const_iterator' sugar
|   |-Typedef 0x55974a7aaa58 'const_iterator'
|   `-PointerType 0x55974a477fd0 'const char *'
|     `-QualType 0x55974a477521 'const char' const
|       `-BuiltinType 0x55974a477520 'char'
|-TypedefDecl 0x55974a7aac50 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55974a7aabc0 'int (String::*)() const'
|   |-RecordType 0x55974a7aa900 'String'
|   | `-CXXRecord 0x55974a7aa870 'String'
|   `-ParenType 0x55974a7aab60 'int () const' sugar
|     `-FunctionProtoType 0x55974a77e6f0 'int () const' const cdecl
|       `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974a7aacb8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55974a5d32d0 'int64_t' sugar
|   |-Typedef 0x55974a4e0390 'int64_t'
|   `-TypedefType 0x55974a4b9630 '__int64_t' sugar
|     |-Typedef 0x55974a4b9208 '__int64_t'
|     `-BuiltinType 0x55974a4775a0 'long'
|-TypedefDecl 0x55974a7aad20 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55974a5d31f0 'uint64_t' sugar
|   |-Typedef 0x55974a4e0530 'uint64_t'
|   `-TypedefType 0x55974a4b96c0 '__uint64_t' sugar
|     |-Typedef 0x55974a4b9278 '__uint64_t'
|     `-BuiltinType 0x55974a477640 'unsigned long'
|-TypedefDecl 0x55974a7aadb0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55974a7aad80 'String::intmax_t' sugar
|   |-Typedef 0x55974a7aacb8 'intmax_t'
|   `-TypedefType 0x55974a5d32d0 'int64_t' sugar
|     |-Typedef 0x55974a4e0390 'int64_t'
|     `-TypedefType 0x55974a4b9630 '__int64_t' sugar
|       |-Typedef 0x55974a4b9208 '__int64_t'
|       `-BuiltinType 0x55974a4775a0 'long'
|-TypedefDecl 0x55974a7aae40 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55974a7aae10 'String::uintmax_t' sugar
|   |-Typedef 0x55974a7aad20 'uintmax_t'
|   `-TypedefType 0x55974a5d31f0 'uint64_t' sugar
|     |-Typedef 0x55974a4e0530 'uint64_t'
|     `-TypedefType 0x55974a4b96c0 '__uint64_t' sugar
|       |-Typedef 0x55974a4b9278 '__uint64_t'
|       `-BuiltinType 0x55974a477640 'unsigned long'
|-CXXConstructorDecl 0x55974a7aaf00 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55974a7ab0a8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55974a7aafe8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55974a7ab258 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55974a7ab198 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55974a7ab3b0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55974a7ab320 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55974a7ab5c8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55974a7ab478 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55974a7ab4f8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55974a7ab7e8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55974a7ab698 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55974a7ab718 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55974a7aba08 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55974a7ab8b8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55974a7ab938 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55974a7abc28 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55974a7abad8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55974a7abb58 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55974a7abdb8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55974a7abcf0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55974a7abf38 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55974a7abe78 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55974a7ac0c8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55974a7ac000 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55974a7ac220 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55974a7ac190 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55974a7ac378 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55974a7ac2e8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55974a7ac4d0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55974a7ac440 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55974a7ac658 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55974a7ac598 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55974a7ac7e8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55974a7ac720 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55974a7ac978 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55974a7ac8b0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55974a7acb08 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55974a7aca40 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55974a7acc00 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55974a7acd28 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55974a7acea8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55974a7acde0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55974a7acff8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55974a7acf68 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55974a7ad0b0 <col:63> "" ""
|-CXXMethodDecl 0x55974a7ad1f8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55974a7ad138 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55974a7ad408 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55974a7ad2b8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55974a7ad338 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55974a7ad628 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55974a7ad4d0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55974a7ad550 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55974a7ad908 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55974a7ad6e8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55974a7ad768 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55974a7b9750 <col:55> 'int' 10
| `-ParmVarDecl 0x55974a7ad7e0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974a7b9770 <col:76> 'bool' true
|-CXXMethodDecl 0x55974a7adbe8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55974a7ad9d0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55974a7ada50 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55974a7b9780 <col:56> 'int' 10
| `-ParmVarDecl 0x55974a7adac8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974a7b97a0 <col:77> 'bool' true
|-CXXMethodDecl 0x55974a7adcf0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55974a7addb8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55974a7ade80 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55974a7adf20 <col:20>
| `-OptimizeNoneAttr 0x55974a7adf78 <col:30>
|-CXXConversionDecl 0x55974a7ae068 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55974a7ae138 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55974a7ae1f8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55974a7ae2e8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55974a7ae3a8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55974a7ae528 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55974a7ae460 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55974a7ae678 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55974a7ae5e8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55974a7ae768 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55974a7ae828 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55974a7aea78 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55974a7ae8e0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55974a7ae960 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55974a7aecd8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55974a7aeb40 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55974a7aebc0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55974a7aeda8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a7aefb8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55974a7aee60 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55974a7aeee0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55974a7af1d8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55974a7af080 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55974a7af100 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55974a7af368 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55974a7af2a0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55974a7af458 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55974a7af5c8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55974a7af508 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55974a7af7d8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55974a7af688 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55974a7af708 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55974a7af9f0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55974a7af898 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55974a7af910 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55974a7afb80 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55974a7afab0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55974a7afda0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55974a7afc40 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55974a7afcc0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55974a7afef0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55974a7afe60 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55974a7b00c8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55974a7affb0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55974a7b0030 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55974a7b0218 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55974a7b0188 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55974a7b0430 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55974a7b02d0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55974a7b0350 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55974a7b97b0 <col:39> 'int' 0
|-CXXMethodDecl 0x55974a7b0650 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55974a7b04f0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55974a7b0570 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55974a7b97d0 <col:48> 'int' 0
|-CXXMethodDecl 0x55974a7b0830 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55974a7b0710 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55974a7b0790 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55974a7b97f0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55974a7b0900 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55974a7b09c0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55974a7b0a80 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55974a7b0b40 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55974a7b0c00 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55974a7b0da8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55974a7b0cb0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55974a7b0f28 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55974a7b0e60 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55974a7b1100 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55974a7b0fe8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55974a7b1278 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55974a7b11b8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55974a7b13c0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55974a7b1330 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55974a7b1510 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55974a7b1480 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55974a7b16e8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55974a7b15d0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55974a7b1650 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55974a7b18c8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55974a7b17b0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55974a7b1830 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55974a7b1a18 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55974a7b1988 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55974a7b1c28 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55974a7b1ad8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55974a7b1b58 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55974a7b1d88 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55974a7b1cf0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55974a7b1ee0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55974a7b1e48 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55974a7b1f88 <col:57> "" ""
|-CXXMethodDecl 0x55974a7b2098 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55974a7b2008 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55974a7b21e8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55974a7b2158 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55974a7b2368 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55974a7b22a0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55974a7b2430 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55974a7b24f0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55974a7b25b0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55974a7b2650 <col:49> "" ""
|-CXXMethodDecl 0x55974a7b26e0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55974a7b27a0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55974a7b2890 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55974a7b2958 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55974a7b2a18 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55974a7b2ad8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55974a7b2bd0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55974a7b2c98 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55974a7b2d60 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55974a7b2f38 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55974a7b2e18 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55974a7b2e98 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55974a7b3160 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55974a7b3000 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55974a7b3080 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55974a7b3270 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55974a7b32d8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55974a7b3300 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974a7b3418 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55974a7b34b8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55974a7b3518 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55974a7b3578 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55974a7b3628 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55974a7b3690 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55974a7b38c8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55974a7b3918 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a7b38a8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55974a7b37b8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55974a7b3760 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55974a7b37a0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55974a7b3780 <col:32> 'int' 8
|-CXXRecordDecl 0x55974a7b3930 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55974a7b3a48 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55974a7b3af0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55974a7b3b58 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55974a7b3be8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55974a7b9c80 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55974a7ba0b8 <col:12>
| |-CXXConstructorDecl 0x55974a7b9d88 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55974a7b9e98 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55974a7b3af0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55974a7bc640 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55974a7bc610 <col:12> 'const char *const' lvalue .data 0x55974a7b3af0
| | |     `-DeclRefExpr 0x55974a7bc5f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7b9e98 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55974a7b3b58 'length' 'int'
| | | `-ImplicitCastExpr 0x55974a7bc6d0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55974a7bc6a0 <col:12> 'const int' lvalue .length 0x55974a7b3b58
| | |     `-DeclRefExpr 0x55974a7bc680 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7b9e98 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55974a7b3be8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55974a7bc760 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55974a7bc730 <col:12> 'String::memo_t *const' lvalue .memo 0x55974a7b3be8
| | |     `-DeclRefExpr 0x55974a7bc710 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7b9e98 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55974a7bc7b8 <col:12>
| |-CXXConstructorDecl 0x55974a7b9f38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55974a7b9f38
| | `-ParmVarDecl 0x55974a7ba048 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55974a7bf5a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55974a7cafb8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55974a7cb0c8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55974a7cb5e0 <col:12>
| |   |-BinaryOperator 0x55974a7cb3f8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55974a7cb3b0 <col:12> 'const char *' lvalue ->data 0x55974a7b3af0
| |   | | `-CXXThisExpr 0x55974a7cb3a0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55974a7cb3e0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55974a7cb370 <col:12> 'const char *const' lvalue .data 0x55974a7b3af0
| |   |     `-DeclRefExpr 0x55974a7cb350 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7cb0c8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55974a7cb4c0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55974a7cb478 <col:12> 'int' lvalue ->length 0x55974a7b3b58
| |   | | `-CXXThisExpr 0x55974a7cb468 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55974a7cb4a8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55974a7cb438 <col:12> 'const int' lvalue .length 0x55974a7b3b58
| |   |     `-DeclRefExpr 0x55974a7cb418 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7cb0c8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55974a7cb588 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55974a7cb540 <col:12> 'String::memo_t *' lvalue ->memo 0x55974a7b3be8
| |   | | `-CXXThisExpr 0x55974a7cb530 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55974a7cb570 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55974a7cb500 <col:12> 'String::memo_t *const' lvalue .memo 0x55974a7b3be8
| |   |     `-DeclRefExpr 0x55974a7cb4e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55974a7cb0c8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55974a7cb5d0 <col:12>
| |     `-UnaryOperator 0x55974a7cb5b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55974a7cb5a8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55974a7cb138 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55974a7cb138
|   `-ParmVarDecl 0x55974a7cb248 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55974a7b3c60 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55974a7b3ea8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55974a7b3cc8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55974a7b3d48 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55974a7b3dc0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55974a7b9c40 <col:79, line:261:5>
|   |-BinaryOperator 0x55974a7b98b8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55974a7b9850 <col:2, col:5> 'const char *' lvalue .data 0x55974a7b3af0
|   | | `-MemberExpr 0x55974a7b9820 <col:2> 'String::rep_t' lvalue ->_r 0x55974a7b3c60
|   | |   `-CXXThisExpr 0x55974a7b9810 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55974a7b98a0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55974a7b9880 <col:12> 'const char *' lvalue ParmVar 0x55974a7b3cc8 'data' 'const char *'
|   |-BinaryOperator 0x55974a7b9980 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55974a7b9918 <col:2, col:5> 'int' lvalue .length 0x55974a7b3b58
|   | | `-MemberExpr 0x55974a7b98e8 <col:2> 'String::rep_t' lvalue ->_r 0x55974a7b3c60
|   | |   `-CXXThisExpr 0x55974a7b98d8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55974a7b9968 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55974a7b9948 <col:14> 'int' lvalue ParmVar 0x55974a7b3d48 'length' 'int'
|   `-IfStmt 0x55974a7b9c28 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55974a7b9aa0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55974a7b9a88 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55974a7b9a68 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55974a7b9a48 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55974a7b99e0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55974a7b3be8
|     |       | `-MemberExpr 0x55974a7b99b0 <col:7> 'String::rep_t' lvalue ->_r 0x55974a7b3c60
|     |       |   `-CXXThisExpr 0x55974a7b99a0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55974a7b9a30 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55974a7b9a10 <col:17> 'String::memo_t *' lvalue ParmVar 0x55974a7b3dc0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55974a7b9c00 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55974a7b9be8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a7b9af0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55974a7a28d8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55974a7b9b58 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55974a7b34b8
|         `-ImplicitCastExpr 0x55974a7b9b40 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55974a7b9b20 <col:27> 'String::memo_t *' lvalue ParmVar 0x55974a7b3dc0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55974a7b4158 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55974a7b3f78 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55974a7b3ff8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55974a7b4070 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55974a7b3c60 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55974a7ba0c8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55974a7ba258 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55974a7ba1c0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55974a7ba130 <col:2> '<bound member function type>' ->assign_memo 0x55974a7b3ea8
|     | `-ImplicitCastExpr 0x55974a7ba1f8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55974a7ba120 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55974a7ba210 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55974a7ba160 <col:14> 'const char *' lvalue ParmVar 0x55974a7b3f78 'data' 'const char *'
|     |-ImplicitCastExpr 0x55974a7ba228 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55974a7ba180 <col:20> 'int' lvalue ParmVar 0x55974a7b3ff8 'length' 'int'
|     `-ImplicitCastExpr 0x55974a7ba240 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55974a7ba1a0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55974a7b4070 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55974a7b42e8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55974a7b4228 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55974a7ba4b0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55974a7ba430 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55974a7ba280 <col:2> '<bound member function type>' ->assign_memo 0x55974a7b3ea8
|     | `-CXXThisExpr 0x55974a7ba270 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55974a7ba468 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55974a7ba300 <col:14, col:19> 'const char *' lvalue .data 0x55974a7b3af0
|     |   `-MemberExpr 0x55974a7ba2d0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55974a7b3c60
|     |     `-DeclRefExpr 0x55974a7ba2b0 <col:14> 'const String' lvalue ParmVar 0x55974a7b4228 'x' 'const String &'
|     |-ImplicitCastExpr 0x55974a7ba480 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55974a7ba380 <col:25, col:30> 'int' lvalue .length 0x55974a7b3b58
|     |   `-MemberExpr 0x55974a7ba350 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55974a7b3c60
|     |     `-DeclRefExpr 0x55974a7ba330 <col:25> 'const String' lvalue ParmVar 0x55974a7b4228 'x' 'const String &'
|     `-ImplicitCastExpr 0x55974a7ba498 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55974a7ba400 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55974a7b3be8
|         `-MemberExpr 0x55974a7ba3d0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55974a7b3c60
|           `-DeclRefExpr 0x55974a7ba3b0 <col:38> 'const String' lvalue ParmVar 0x55974a7b4228 'x' 'const String &'
|-CXXMethodDecl 0x55974a7b43b0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55974a7bae70 <col:31, line:278:5>
|   `-IfStmt 0x55974a7bae58 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55974a7ba550 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55974a7ba538 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55974a7ba508 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55974a7b3be8
|     |     `-MemberExpr 0x55974a7ba4d8 <col:6> 'String::rep_t' lvalue ->_r 0x55974a7b3c60
|     |       `-CXXThisExpr 0x55974a7ba4c8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55974a7bae30 <col:15, line:277:2>
|       |-ParenExpr 0x55974a7baa00 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55974a7ba9d0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55974a7ba660 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55974a7ba648 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55974a7ba630 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55974a7ba5f0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55974a7b34b8
|       |   |       `-ImplicitCastExpr 0x55974a7ba5d8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55974a7ba5a8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55974a7b3be8
|       |   |           `-MemberExpr 0x55974a7ba578 <col:27> 'String::rep_t' lvalue ->_r 0x55974a7b3c60
|       |   |             `-CXXThisExpr 0x55974a7ba568 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55974a7ba6c0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55974a7ba6a0 <col:54> 'int' 0
|       |   `-CallExpr 0x55974a7ba930 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55974a7ba918 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55974a7ba898 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55974a7ba970 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55974a7ba7a8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55974a7ba988 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55974a7ba7d8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55974a7ba9a0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55974a7ba810 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55974a7ba9b8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55974a7ba880 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55974a7ba868 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55974a7ba830 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55974a7bad50 <line:274:6, line:275:22>
|       | |-CallExpr 0x55974a7bac10 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55974a7babf8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55974a7bab70 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55974a7a3d20 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55974a7bab40 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55974a7b34b8
|       | |   `-ImplicitCastExpr 0x55974a7bab28 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55974a7baaf8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55974a7b3be8
|       | |       `-MemberExpr 0x55974a7baac8 <col:40> 'String::rep_t' lvalue ->_r 0x55974a7b3c60
|       | |         `-CXXThisExpr 0x55974a7baab8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55974a7bad10 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55974a7bacf8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55974a7bac38 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55974a7b8b90 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55974a7bad38 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55974a7bac98 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55974a7b3be8
|       |       `-MemberExpr 0x55974a7bac68 <col:15> 'String::rep_t' lvalue ->_r 0x55974a7b3c60
|       |         `-CXXThisExpr 0x55974a7bac58 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55974a7bae10 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55974a7bada8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55974a7b3be8
|         | `-MemberExpr 0x55974a7bad78 <col:6> 'String::rep_t' lvalue ->_r 0x55974a7b3c60
|         |   `-CXXThisExpr 0x55974a7bad68 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55974a7badf8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55974a7badd8 <col:16> 'int' 0
|-CXXMethodDecl 0x55974a7b4648 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55974a7b4468 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55974a7b44e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55974a7b4560 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55974a7b4720 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55974a7b4970 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55974a7b47d8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55974a7b4858 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55974a7b48d0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55974a7b4b58 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55974a7b4a40 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55974a7b4ac0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55974a7b4c58 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55974a7baf48 <col:41, line:286:5>
|   `-ReturnStmt 0x55974a7baf38 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55974a7baf08 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55974a7baed0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55974a7baeb8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55974a7bae98 <col:46> 'int' 1
|-CXXMethodDecl 0x55974a7b4ef8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55974a7b4d10 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55974a7b4d90 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55974a7b4e10 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55974a7b8b90 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55974a7b4fc0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55974a7b8c60 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55974a7b8e30 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55974a7b8d18 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55974a7b8d98 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55974a7b8ef0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55974a7b8fb8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55974a7b90b8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55974a7b9130 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55974a7b91a8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55974a7b9210 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55974a7b9310 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55974a7b9360 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a7b92f0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55974a7b92d0 <col:22> 'int' 14
|-CXXMethodDecl 0x55974a7b9578 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55974a7b9390 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55974a7b9410 <col:38> col:41 'int'
| `-ParmVarDecl 0x55974a7b9490 <col:43> col:46 'int'
|-FriendDecl 0x55974a7b9680 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55974a7b9710 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aac8570 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55974aac8748 prev 0x55974aac8570 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55974aac87d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55974aac8800 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974aaca160 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55974aaca110 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55974aaca0f0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55974aac8a18 'type'
|     `-SubstTemplateTypeParmType 0x55974aac89e0 'String' sugar
|       |-TemplateTypeParmType 0x55974a76e110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a76e0c0 'T'
|       `-RecordType 0x55974a7aa900 'String'
|         `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aaca218 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55974aaca1e0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55974aaca1c0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55974aaca160 'type'
|     `-ElaboratedType 0x55974aaca110 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55974aaca0f0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55974aac8a18 'type'
|         `-SubstTemplateTypeParmType 0x55974aac89e0 'String' sugar
|           |-TemplateTypeParmType 0x55974a76e110 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55974a76e0c0 'T'
|           `-RecordType 0x55974a7aa900 'String'
|             `-CXXRecord 0x55974a7aa870 'String'
|-CXXMethodDecl 0x55974aaca398 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55974aaca2a8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55974aaca488 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55974aaca568 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55974aaca568
|-CXXMethodDecl 0x55974aaca838 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55974aaca740 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55974aacaa78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55974aaca8f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974aaca968 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55974aacac48 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55974aacab38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974aacabb0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55974aacada8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55974aacae78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55974aacb0c8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55974aacaf38 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55974aacafb0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55974aacb328 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55974aacb198 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55974aacb210 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55974aacb4e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55974aacb3f8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55974aacb6a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55974aacb5b0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55974aacb760 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974aacb810 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974aacba48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55974aacb8c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974aacb938 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55974aacbce8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55974aacbbf0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55974aacbdb0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55974aacbe00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55974aacbe50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974a9e20a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55974aac6fd8 prev 0x55974a9e20a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974aac84e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55974aac8490 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55974aac8470 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55974aac8320 'type'
|     `-SubstTemplateTypeParmType 0x55974aac81b0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55974a743ec0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55974a743e68 'F'
|       `-RecordType 0x55974aac7e10 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55974aac7d30 'typed_array_memory'
|-FieldDecl 0x55974aacbea0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55974aacbef0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974aacbf28 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55974aac7070 'String' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-RecordType 0x55974a7aa900 'String'
|     `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aacbfb8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55974aacbf80 'String &'
|   `-SubstTemplateTypeParmType 0x55974aac7070 'String' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974a7aa900 'String'
|       `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aacc048 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55974aacc010 'const String &'
|   `-QualType 0x55974aac7071 'const String' const
|     `-SubstTemplateTypeParmType 0x55974aac7070 'String' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974a7aa900 'String'
|         `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aacc0d8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55974aacc0a0 'String *'
|   `-SubstTemplateTypeParmType 0x55974aac7070 'String' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974a7aa900 'String'
|       `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aacc168 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55974aacc130 'const String *'
|   `-QualType 0x55974aac7071 'const String' const
|     `-SubstTemplateTypeParmType 0x55974aac7070 'String' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974a7aa900 'String'
|         `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aaccdc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55974aaccd70 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55974aaccd50 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55974aaccc88 'type'
|     `-LValueReferenceType 0x55974aaccc50 'const String &'
|       `-QualType 0x55974aacc9f1 'const String' const
|         `-SubstTemplateTypeParmType 0x55974aacc9f0 'String' sugar
|           |-TemplateTypeParmType 0x55974a74de10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55974a74ddb8 'T'
|           `-RecordType 0x55974a7aa900 'String'
|             `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aacce28 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55974aacc010 'const String &'
|   `-QualType 0x55974aac7071 'const String' const
|     `-SubstTemplateTypeParmType 0x55974aac7070 'String' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974a7aa900 'String'
|         `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aacce80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974aaccee8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55974aacc0a0 'String *'
|   `-SubstTemplateTypeParmType 0x55974aac7070 'String' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974a7aa900 'String'
|       `-CXXRecord 0x55974a7aa870 'String'
|-TypedefDecl 0x55974aaccf50 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55974aacc130 'const String *'
|   `-QualType 0x55974aac7071 'const String' const
|     `-SubstTemplateTypeParmType 0x55974aac7070 'String' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974a7aa900 'String'
|         `-CXXRecord 0x55974a7aa870 'String'
|-EnumDecl 0x55974aaccfa8 <line:134:5> col:5
| `-EnumConstantDecl 0x55974aacd0a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974aacd080 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974aacd128 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974aacd3b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55974aacd1e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974aacd280 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55974aacd648 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55974aacd530 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55974aacd908 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55974aacd7f0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55974aacdc20 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55974aacdb00 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55974aacdf30 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55974aacde10 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55974aace220 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55974aace068 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974aace0e0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55974aace348 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55974aace3f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aace450 <col:30> Inherited
|-CXXMethodDecl 0x55974aace498 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55974aace548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aace5a0 <col:30> Inherited
|-CXXMethodDecl 0x55974aace668 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55974aace718 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aace770 <col:30> Inherited
|-CXXMethodDecl 0x55974aace7b8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55974aace868 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aace8c0 <col:30> Inherited
|-CXXMethodDecl 0x55974aace908 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55974aace9b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aacea10 <col:30> Inherited
|-CXXMethodDecl 0x55974aacea58 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55974aaceb08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aaceb60 <col:30> Inherited
|-CXXMethodDecl 0x55974aaceb88 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974aacec38 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974aacece8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974aaceea8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55974aaced98 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974aacee10 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55974aad1430 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974aad13a0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aad15d8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55974aad14e8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974aad1690 <col:20>
| `-OptimizeNoneAttr 0x55974aad16e8 <col:30>
|-CXXMethodDecl 0x55974aad1808 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55974aad1710 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974aad18c0 <col:20>
| `-OptimizeNoneAttr 0x55974aad1918 <col:30>
|-CXXMethodDecl 0x55974aad19d0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974aad1940 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aad1b18 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974aad1a88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aad1c48 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55974aad1d48 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55974aad1e18 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55974aad1ee8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55974aad2028 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974aad1f98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aad2170 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974aad20e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aad22b8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55974aad2228 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974aad2370 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974aad2470 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974aad23e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974aad2528 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974aad25e8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55974aad26e8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55974aad2868 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55974aad27a8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55974aad3028 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974aad2920 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55974aad2f88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55974aad2e88 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55974aad3108 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974aad3258 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55974aad31c8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55974aad3310 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974aad3558 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55974aad33d0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55974aad3448 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55974aad36e8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55974aad3628 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55974aad38f8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55974aad37b0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55974aad3828 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55974aad39b8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55974aad3c18 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55974aad3b20 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55974aad3ce8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974aad3ce8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ab16380 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55974ab16558 prev 0x55974ab16380 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55974ab165e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55974ab16610 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab181e0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55974ab18190 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55974ab16ac0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55974ab169c0 'type'
|     `-TemplateSpecializationType 0x55974ab16950 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55974ab16830 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55974ab16810 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55974ab167f0 <col:24> 'unsigned long' 4
|       `-RecordType 0x55974ab16930 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55974ab16850 'char_array'
|-TypedefDecl 0x55974ab18298 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55974ab18260 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55974ab18240 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55974ab181e0 'type'
|     `-ElaboratedType 0x55974ab18190 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55974ab16ac0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55974ab169c0 'type'
|         `-TemplateSpecializationType 0x55974ab16950 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55974ab16830 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55974ab16810 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55974ab167f0 <col:24> 'unsigned long' 4
|           `-RecordType 0x55974ab16930 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55974ab16850 'char_array'
|-CXXMethodDecl 0x55974ab18418 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55974ab18328 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55974ab18508 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55974ab185e8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55974ab185e8
|-CXXMethodDecl 0x55974ab188b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55974ab187c0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55974ab18af8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55974ab18970 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab189e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55974ab18cc8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55974ab18bb8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab18c30 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55974ab18e28 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55974ab18ef8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55974ab19148 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55974ab18fb8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55974ab19030 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55974ab193a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55974ab19218 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55974ab19290 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55974ab19568 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55974ab19478 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55974ab19728 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55974ab19630 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55974ab197e0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ab19890 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ab19ac8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55974ab19940 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab199b8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55974ab19d68 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55974ab19c70 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55974ab19e30 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55974ab19e80 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55974ab19ed0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ac050e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55974ac052e8 prev 0x55974ac050e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974ac06360 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55974ac06310 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55974ac062f0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55974ac061a0 'type'
|     `-SubstTemplateTypeParmType 0x55974ab15f50 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974ab0ec40 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55974ab0eb58 'sized_array_memory'
|-FieldDecl 0x55974ac06460 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55974ac064b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974ac064e8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55974ac05380 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-BuiltinType 0x55974a477620 'unsigned int'
|-TypedefDecl 0x55974ac06578 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55974ac06540 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55974ac05380 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-BuiltinType 0x55974a477620 'unsigned int'
|-TypedefDecl 0x55974ac06608 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55974ac065d0 'const unsigned int &'
|   `-QualType 0x55974ac05381 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55974ac05380 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-BuiltinType 0x55974a477620 'unsigned int'
|-TypedefDecl 0x55974ac06698 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55974ac06660 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55974ac05380 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-BuiltinType 0x55974a477620 'unsigned int'
|-TypedefDecl 0x55974ac06728 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55974ac066f0 'const unsigned int *'
|   `-QualType 0x55974ac05381 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55974ac05380 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-BuiltinType 0x55974a477620 'unsigned int'
|-TypedefDecl 0x55974ac07310 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55974ac072c0 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55974ac072a0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55974ac07230 'type'
|     `-SubstTemplateTypeParmType 0x55974ac06ff0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55974a74e540 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a74e4f0 'T'
|       `-BuiltinType 0x55974a477620 'unsigned int'
|-TypedefDecl 0x55974ac07378 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55974ac065d0 'const unsigned int &'
|   `-QualType 0x55974ac05381 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55974ac05380 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-BuiltinType 0x55974a477620 'unsigned int'
|-TypedefDecl 0x55974ac073d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ac07438 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55974ac06660 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55974ac05380 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-BuiltinType 0x55974a477620 'unsigned int'
|-TypedefDecl 0x55974ac074a0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55974ac066f0 'const unsigned int *'
|   `-QualType 0x55974ac05381 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55974ac05380 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-BuiltinType 0x55974a477620 'unsigned int'
|-EnumDecl 0x55974ac074f8 <line:134:5> col:5
| `-EnumConstantDecl 0x55974ac075f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974ac075d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974ac07678 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974ac078c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac07730 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac077d0 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55974ac07b88 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55974ac07a70 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55974ac07e48 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55974ac07d30 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55974ac08190 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55974ac08070 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55974ac084a0 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55974ac08380 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55974ac08790 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac085d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac08650 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55974ac088b8 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55974ac08998 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac089f0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac08a38 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55974ac08ae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac08b40 <col:30> Inherited
|-CXXMethodDecl 0x55974ac08bd8 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55974ac08c88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac08ce0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac08d28 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55974ac08dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac08e30 <col:30> Inherited
|-CXXMethodDecl 0x55974ac08e78 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55974ac08f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac08f80 <col:30> Inherited
|-CXXMethodDecl 0x55974ac08fc8 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55974ac09078 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac090d0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac090f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac091a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac09258 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974ac09418 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac09308 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac09380 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55974ac09568 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac094d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac09718 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55974ac09620 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac097d0 <col:20>
| `-OptimizeNoneAttr 0x55974ac09828 <col:30>
|-CXXMethodDecl 0x55974ac09948 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55974ac09850 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac09a00 <col:20>
| `-OptimizeNoneAttr 0x55974ac09a58 <col:30>
|-CXXMethodDecl 0x55974ac09b10 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac09a80 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac09c58 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac09bc8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac09d88 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55974ac09eb8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55974ac09f88 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55974ac0a058 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55974ac0a198 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac0a108 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac0a2e0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac0a250 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac0a428 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55974ac0a398 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac0a4e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974ac0a5e0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974ac0a550 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac0a698 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974ac0a758 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55974ac0a858 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55974ac0a9d8 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac0a918 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55974ac0b198 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974ac0aa90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55974ac0b0f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55974ac0aff8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55974ac0b278 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ac0b3c8 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac0b338 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55974ac0b480 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974ac0b6c8 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac0b540 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55974ac0b5b8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55974ac0b888 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55974ac0b798 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55974ac0bad8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55974ac0b950 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55974ac0b9c8 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55974ac0bb98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ac0bdf8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55974ac0bd00 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55974ac0bec8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974ac0bec8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ab0df28 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55974ab0e138 prev 0x55974ab0df28 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974ab162f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55974ab162a0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55974ab16280 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55974ab16130 'type'
|     `-SubstTemplateTypeParmType 0x55974ab15f50 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974ab0ec40 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55974ab0eb58 'sized_array_memory'
|-FieldDecl 0x55974ab19f20 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55974ab19f70 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974ab19fa8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55974ab0e1d0 'int' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1a038 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55974ab1a000 'int &'
|   `-SubstTemplateTypeParmType 0x55974ab0e1d0 'int' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1a0c8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55974ab1a090 'const int &'
|   `-QualType 0x55974ab0e1d1 'const int' const
|     `-SubstTemplateTypeParmType 0x55974ab0e1d0 'int' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1a158 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55974ab1a120 'int *'
|   `-SubstTemplateTypeParmType 0x55974ab0e1d0 'int' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1a1e8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55974ab1a1b0 'const int *'
|   `-QualType 0x55974ab0e1d1 'const int' const
|     `-SubstTemplateTypeParmType 0x55974ab0e1d0 'int' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1add0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55974ab1ad80 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55974ab1ad60 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55974ab1acf0 'type'
|     `-SubstTemplateTypeParmType 0x55974ab1aab0 'int' sugar
|       |-TemplateTypeParmType 0x55974a74e540 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a74e4f0 'T'
|       `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1ae38 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55974ab1a090 'const int &'
|   `-QualType 0x55974ab0e1d1 'const int' const
|     `-SubstTemplateTypeParmType 0x55974ab0e1d0 'int' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1ae90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1aef8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55974ab1a120 'int *'
|   `-SubstTemplateTypeParmType 0x55974ab0e1d0 'int' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab1af60 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55974ab1a1b0 'const int *'
|   `-QualType 0x55974ab0e1d1 'const int' const
|     `-SubstTemplateTypeParmType 0x55974ab0e1d0 'int' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-BuiltinType 0x55974a477580 'int'
|-EnumDecl 0x55974ab1afb8 <line:134:5> col:5
| `-EnumConstantDecl 0x55974ab1b0b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974ab1b090 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974ab1b138 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974ab1b388 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab1b1f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ab1b290 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55974ab1b648 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55974ab1b530 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55974ab1b908 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55974ab1b7f0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55974ab1bc50 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55974ab1bb30 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55974ab1bf60 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55974ab1be40 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55974ab1c250 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab1c098 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ab1c110 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55974ab1c378 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55974ab1c458 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab1c4b0 <col:30> Inherited
|-CXXMethodDecl 0x55974ab1c4f8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55974ab1c5a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab1c600 <col:30> Inherited
|-CXXMethodDecl 0x55974ab1c6c8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55974ab1c778 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab1c7d0 <col:30> Inherited
|-CXXMethodDecl 0x55974ab1c818 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55974ab1c8c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab1c920 <col:30> Inherited
|-CXXMethodDecl 0x55974ab1c968 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55974ab1ca18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab1ca70 <col:30> Inherited
|-CXXMethodDecl 0x55974ab1cab8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55974ab1cb68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab1cbc0 <col:30> Inherited
|-CXXMethodDecl 0x55974ab1cbe8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ab1cc98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ab1cd48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974ab1cf08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab1cdf8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ab1ce70 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55974ab1d058 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974ab1cfc8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab1d208 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55974ab1d110 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ab1d2c0 <col:20>
| `-OptimizeNoneAttr 0x55974ab1d318 <col:30>
|-CXXMethodDecl 0x55974ab1d438 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55974ab1d340 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ab1d4f0 <col:20>
| `-OptimizeNoneAttr 0x55974ab1d548 <col:30>
|-CXXMethodDecl 0x55974ab1d600 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ab1d570 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab1d748 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ab1d6b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab1d878 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55974ab1d9a8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55974ab1da78 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55974ab1f100 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55974ab1f240 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ab1f1b0 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab1f388 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ab1f2f8 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab1f4d0 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55974ab1f440 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ab1f588 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974ab1f688 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974ab1f5f8 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ab1f740 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974ab1f7f8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55974ab1f8f8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55974ab1fa78 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ab1f9b8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55974ab20238 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974ab1fb30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55974ab20198 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55974ab20098 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55974ab20318 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ab20468 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ab203d8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55974ab20520 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974ab20768 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab205e0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55974ab20658 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55974ab20928 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55974ab20838 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55974ab20b78 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55974ab209f0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55974ab20a68 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55974ab20c38 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55974ab20e98 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55974ab20da0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55974ab20f68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974ab20f68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ac0c110 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55974ac0c228 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55974ac0c2c8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55974ac0c328 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55974ac0c3c0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55974ac0c3c0
| `-ParmVarDecl 0x55974ac0c4d8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55974ac0c578 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55974ac0c578
| `-ParmVarDecl 0x55974ac0c688 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55974ac0c728 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55974ac0c728
| `-ParmVarDecl 0x55974ac0c838 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55974ac0c8a8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55974ac0c8a8
| `-ParmVarDecl 0x55974ac0c9b8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55974ac0ca40 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55974ac0ca40

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ac0dfd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55974ac0f228 prev 0x55974ac0dfd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55974ac0f2b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55974ac0f2e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ac10ca0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55974ac10c50 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55974ac10c30 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55974ac0f4f8 'type'
|     `-SubstTemplateTypeParmType 0x55974ac0f4c0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55974a76e110 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a76e0c0 'T'
|       `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac10d58 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55974ac10d20 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55974ac10d00 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55974ac10ca0 'type'
|     `-ElaboratedType 0x55974ac10c50 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55974ac10c30 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55974ac0f4f8 'type'
|         `-SubstTemplateTypeParmType 0x55974ac0f4c0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55974a76e110 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55974a76e0c0 'T'
|           `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|             `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-CXXMethodDecl 0x55974ac10ed8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55974ac10de8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55974ac10fc8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55974ac110a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55974ac110a8
|-CXXMethodDecl 0x55974ac11378 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55974ac11280 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55974ac115b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55974ac11430 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ac114a8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55974ac11788 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55974ac11678 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ac116f0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55974ac118e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55974ac119b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55974ac11c08 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55974ac11a78 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55974ac11af0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55974ac11e68 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55974ac11cd8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55974ac11d50 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55974ac12028 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55974ac11f38 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55974ac121e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55974ac120f0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55974ac122a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ac12350 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ac12588 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55974ac12400 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ac12478 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55974ac12828 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55974ac12730 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55974ac128f0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55974ac12940 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55974ac12990 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ac0cb30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55974ac0cd38 prev 0x55974ac0cb30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974ac0df40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55974ac0def0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55974ac0ded0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55974ac0dd80 'type'
|     `-SubstTemplateTypeParmType 0x55974ac0dc10 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55974a743ec0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55974a743e68 'F'
|       `-RecordType 0x55974ac0d870 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55974ac0d790 'typed_array_memory'
|-FieldDecl 0x55974ac129e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55974ac12a30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974ac12a68 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55974ac0cdd0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|     `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac12af8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55974ac12ac0 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55974ac0cdd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|       `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac12b88 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55974ac12b50 'const Router::element_landmark_t &'
|   `-QualType 0x55974ac0cdd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55974ac0cdd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac12c18 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55974ac12be0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55974ac0cdd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|       `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac12ca8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55974ac12c70 'const Router::element_landmark_t *'
|   `-QualType 0x55974ac0cdd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55974ac0cdd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac13900 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55974ac138b0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55974ac13890 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55974ac137c8 'type'
|     `-LValueReferenceType 0x55974ac13790 'const Router::element_landmark_t &'
|       `-QualType 0x55974ac13531 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55974ac13530 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55974a74de10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55974a74ddb8 'T'
|           `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|             `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac13968 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55974ac12b50 'const Router::element_landmark_t &'
|   `-QualType 0x55974ac0cdd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55974ac0cdd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac139c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ac13a28 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55974ac12be0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55974ac0cdd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|       `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-TypedefDecl 0x55974ac13a90 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55974ac12c70 'const Router::element_landmark_t *'
|   `-QualType 0x55974ac0cdd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55974ac0cdd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974ac0c1a0 'Router::element_landmark_t'
|         `-CXXRecord 0x55974ac0c110 'element_landmark_t'
|-EnumDecl 0x55974ac13ae8 <line:134:5> col:5
| `-EnumConstantDecl 0x55974ac13be0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974ac13bc0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974ac13c68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974ac13ef8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac13d20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac13dc0 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55974ac141b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55974ac140a0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55974ac14478 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55974ac14360 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55974ac147c0 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55974ac146a0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55974ac14ad0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55974ac149b0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55974ac14dc0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac14c08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac14c80 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55974ac14ee8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55974ac14fc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac15020 <col:30> Inherited
|-CXXMethodDecl 0x55974ac15068 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55974ac15118 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac15170 <col:30> Inherited
|-CXXMethodDecl 0x55974ac15238 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55974ac152e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac15340 <col:30> Inherited
|-CXXMethodDecl 0x55974ac15388 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55974ac15438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac15490 <col:30> Inherited
|-CXXMethodDecl 0x55974ac154d8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55974ac15588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac155e0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac15628 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55974ac156d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac15730 <col:30> Inherited
|-CXXMethodDecl 0x55974ac15758 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac15808 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac158b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974ac15a78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac15968 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac159e0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55974ac15bc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac15b38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac15d78 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55974ac15c80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac15e30 <col:20>
| `-OptimizeNoneAttr 0x55974ac15e88 <col:30>
|-CXXMethodDecl 0x55974ac15fa8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55974ac15eb0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac16060 <col:20>
| `-OptimizeNoneAttr 0x55974ac160b8 <col:30>
|-CXXMethodDecl 0x55974ac16170 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac160e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac162b8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac16228 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac163e8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55974ac16518 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55974ac165e8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55974ac166b8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55974ac167f8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac16768 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac16940 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac168b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac16a88 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55974ac169f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac16b40 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974ac16c40 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974ac16bb0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac16cf8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974ac16db8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55974ac16eb8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55974ac17038 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac16f78 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55974ac183f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974ac170f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55974ac18358 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55974ac18258 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55974ac184d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ac18628 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac18598 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55974ac186e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974ac18928 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac187a0 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55974ac18818 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55974ac18ab8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55974ac189f8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55974ac18cc8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55974ac18b80 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55974ac18bf8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55974ac18d88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ac18fe8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55974ac18ef0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55974ac190b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974ac190b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ab8c9e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55974ab8cbb8 prev 0x55974ab8c9e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55974ab8cc48 <col:46, col:52> col:46 public
|-TypedefDecl 0x55974ab8cc70 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab901f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55974ab901a0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55974ab8d120 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55974ab8d020 'type'
|     `-TemplateSpecializationType 0x55974ab8cfb0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55974ab8ce90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55974ab8ce70 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55974ab8ce50 <col:24> 'unsigned long' 16
|       `-RecordType 0x55974ab8cf90 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55974ab8ceb0 'char_array'
|-TypedefDecl 0x55974ab902a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55974ab90270 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55974ab90250 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55974ab901f0 'type'
|     `-ElaboratedType 0x55974ab901a0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55974ab8d120 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55974ab8d020 'type'
|         `-TemplateSpecializationType 0x55974ab8cfb0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55974ab8ce90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55974ab8ce70 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55974ab8ce50 <col:24> 'unsigned long' 16
|           `-RecordType 0x55974ab8cf90 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55974ab8ceb0 'char_array'
|-CXXMethodDecl 0x55974ab90428 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55974ab90338 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55974ab90518 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55974ab905f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55974ab905f8
|-CXXMethodDecl 0x55974ab908c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55974ab907d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55974ab90b08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55974ab90980 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab909f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55974ab90cd8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55974ab90bc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab90c40 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55974ab90e38 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55974ab90f08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55974ab91158 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55974ab90fc8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55974ab91040 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55974ab913b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55974ab91228 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55974ab912a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55974ab91578 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55974ab91488 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55974ab91738 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55974ab91640 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55974ab917f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ab918a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ab91ad8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55974ab91950 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974ab919c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55974ab91d78 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55974ab91c80 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55974ab91e40 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55974ab91e90 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55974ab91ee0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ac197d0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55974ac199d8 prev 0x55974ac197d0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974ac1aaa0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55974ac1aa50 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55974ac1aa30 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55974ac1a8e0 'type'
|     `-SubstTemplateTypeParmType 0x55974ab8c5b0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974ab8c100 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55974ab8c018 'sized_array_memory'
|-FieldDecl 0x55974ac1aba0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55974ac1abf0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974ac1ac28 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55974ac19a70 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-RecordType 0x55974abfc7a0 'Router::Connection'
|     `-CXXRecord 0x55974abfc710 'Connection'
|-TypedefDecl 0x55974ac1ace8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55974ac1acb0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55974ac19a70 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974abfc7a0 'Router::Connection'
|       `-CXXRecord 0x55974abfc710 'Connection'
|-TypedefDecl 0x55974ac1ad78 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55974ac1ad40 'const Router::Connection &'
|   `-QualType 0x55974ac19a71 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55974ac19a70 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974abfc7a0 'Router::Connection'
|         `-CXXRecord 0x55974abfc710 'Connection'
|-TypedefDecl 0x55974ac1ae08 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55974ac1add0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55974ac19a70 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974abfc7a0 'Router::Connection'
|       `-CXXRecord 0x55974abfc710 'Connection'
|-TypedefDecl 0x55974ac1ae98 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55974ac1ae60 'const Router::Connection *'
|   `-QualType 0x55974ac19a71 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55974ac19a70 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974abfc7a0 'Router::Connection'
|         `-CXXRecord 0x55974abfc710 'Connection'
|-TypedefDecl 0x55974ac1baf0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55974ac1baa0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55974ac1ba80 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55974ac1b9b8 'type'
|     `-LValueReferenceType 0x55974ac1b980 'const Router::Connection &'
|       `-QualType 0x55974ac1b721 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55974ac1b720 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55974a74de10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55974a74ddb8 'T'
|           `-RecordType 0x55974abfc7a0 'Router::Connection'
|             `-CXXRecord 0x55974abfc710 'Connection'
|-TypedefDecl 0x55974ac1bb58 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55974ac1ad40 'const Router::Connection &'
|   `-QualType 0x55974ac19a71 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55974ac19a70 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974abfc7a0 'Router::Connection'
|         `-CXXRecord 0x55974abfc710 'Connection'
|-TypedefDecl 0x55974ac1bbb0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ac1bc18 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55974ac1add0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55974ac19a70 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974abfc7a0 'Router::Connection'
|       `-CXXRecord 0x55974abfc710 'Connection'
|-TypedefDecl 0x55974ac1bc80 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55974ac1ae60 'const Router::Connection *'
|   `-QualType 0x55974ac19a71 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55974ac19a70 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974abfc7a0 'Router::Connection'
|         `-CXXRecord 0x55974abfc710 'Connection'
|-EnumDecl 0x55974ac1bcd8 <line:134:5> col:5
| `-EnumConstantDecl 0x55974ac1bdd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974ac1bdb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974ac1be58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974ac1c0e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac1bf10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac1bfb0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55974ac1c3a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55974ac1c290 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55974ac1c668 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55974ac1c550 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55974ac1c9b0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55974ac1c890 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55974ac1ccc0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55974ac1cba0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55974ac1cfb0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac1cdf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac1ce70 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55974ac1d108 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55974ac1d1e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac1d240 <col:30> Inherited
|-CXXMethodDecl 0x55974ac1d288 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55974ac1d338 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac1d390 <col:30> Inherited
|-CXXMethodDecl 0x55974ac1d458 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55974ac1d508 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac1d560 <col:30> Inherited
|-CXXMethodDecl 0x55974ac1d5a8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55974ac1d658 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac1d6b0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac1d6f8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55974ac1d7a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac1d800 <col:30> Inherited
|-CXXMethodDecl 0x55974ac1d848 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55974ac1d8f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac1d950 <col:30> Inherited
|-CXXMethodDecl 0x55974ac1d978 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac1da28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac1dad8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974ac1dc98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac1db88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac1dc00 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55974ac1dde8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac1dd58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac1df98 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55974ac1dea0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac1e050 <col:20>
| `-OptimizeNoneAttr 0x55974ac1e0a8 <col:30>
|-CXXMethodDecl 0x55974ac1e1c8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55974ac1e0d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac1e280 <col:20>
| `-OptimizeNoneAttr 0x55974ac1e2d8 <col:30>
|-CXXMethodDecl 0x55974ac1e390 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac1e300 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac1e4d8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac1e448 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac1e608 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55974ac1e738 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55974ac1e808 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55974ac1e8d8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55974ac1ea18 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac1e988 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac1eb60 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac1ead0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac1eca8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55974ac1ec18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac1ed60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974ac1ee60 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974ac1edd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac1ef18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974ac1efd8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55974ac1f0d8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55974ac1f288 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac1f198 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55974ac1fa48 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974ac1f340 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55974ac1f9a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55974ac1f8a8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55974ac1fb28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ac1fc78 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac1fbe8 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55974ac215a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974ac217e8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac21660 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55974ac216d8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55974ac219a8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55974ac218b8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55974ac21bf8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55974ac21a70 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55974ac21ae8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55974ac21cb8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ac21f18 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55974ac21e20 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55974ac21fe8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974ac21fe8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ac3b620 prev 0x55974aade898 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974ac3b718 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55974ac3b7a8 <col:22, col:28> col:22 public
|-EnumDecl 0x55974ac3b7d0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55974ac3b8e8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3b8c8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55974ac3b8b0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55974ac3b890 <col:14> 'int' 999
| |-EnumConstantDecl 0x55974ac3b990 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3b970 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55974ac3b958 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55974ac3b938 <col:14> 'int' 1
| |-EnumConstantDecl 0x55974ac3ba20 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3ba00 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55974ac3b9e0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55974ac3bab0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3ba90 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55974ac3ba70 <col:13> 'int' 1
| |-EnumConstantDecl 0x55974ac3bb40 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3bb20 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55974ac3bb00 <col:16> 'int' 2
| |-EnumConstantDecl 0x55974ac3bbd0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3bbb0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55974ac3bb90 <col:13> 'int' 3
| |-EnumConstantDecl 0x55974ac3bc60 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3bc40 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55974ac3bc20 <col:15> 'int' 4
| |-EnumConstantDecl 0x55974ac3bcf0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3bcd0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55974ac3bcb0 <col:14> 'int' 5
| |-EnumConstantDecl 0x55974ac3bd80 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55974ac3bd60 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55974ac3bd40 <col:12> 'int' 6
| `-EnumConstantDecl 0x55974ac3be10 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55974ac3bdf0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55974ac3bdd0 <col:13> 'int' 7
|-VarDecl 0x55974ac3be80 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55974ac3bf08 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55974ac3bf90 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55974ac3c018 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55974ac3c0a0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55974ac3c128 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55974ac3c1b0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55974ac3c238 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55974ac3c2c0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55974ac3c348 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55974ac3c3d0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55974ac3c4d0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55974ac417f8 '_nerrors' 'int'
| | `-IntegerLiteral 0x55974ac41f88 <line:128:13> 'int' 0
| `-CompoundStmt 0x55974ac41ff8 <col:16, line:129:5>
|-CXXDestructorDecl 0x55974ac3c5c0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55974ac42008 <col:29, line:132:5>
|-CXXMethodDecl 0x55974ac3c778 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55974ac3c6b0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974ac3c840 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55974ac3c928 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55974ac42060 <col:44, line:161:5>
|   `-ReturnStmt 0x55974ac42050 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55974ac42038 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55974ac42018 <col:9> 'ErrorHandler *' lvalue Var 0x55974ac41858 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55974ac3ca68 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55974ac3c9d8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974ac3cb30 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55974ac420c0 <col:43, line:173:5>
|   `-ReturnStmt 0x55974ac420b0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55974ac42098 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55974ac42078 <col:9> 'ErrorHandler *' lvalue Var 0x55974ac418d0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55974ac3cbe8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55974ac3cc68 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55974ac3cd78 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55974ac3cce8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3cec8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55974ac3ce38 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3d020 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55974ac3cf88 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3d178 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55974ac3d0e0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3d2d0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55974ac3d238 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3d4e0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55974ac3d388 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55974ac3d408 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3d6b8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55974ac3d5a0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55974ac3d620 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3d8d8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55974ac3d778 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55974ac3d7f8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3dab8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55974ac3d998 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55974ac3da18 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3dc98 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55974ac3db78 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55974ac3dbf8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3de20 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55974ac3dd58 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55974ac3e030 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55974ac3ded8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55974ac3df50 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55974ac42318 <col:57, line:234:5>
|   `-ReturnStmt 0x55974ac42308 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55974ac422f0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55974ac42298 <col:9, col:41> 'int'
|         |-MemberExpr 0x55974ac42268 <col:9> '<bound member function type>' ->xmessage 0x55974ac3de20
|         | `-CXXThisExpr 0x55974ac42258 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55974ac422d8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55974ac422c0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55974ac42238 <col:18, col:40> 'String' (CXXTemporary 0x55974ac42238)
|               `-CallExpr 0x55974ac42200 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55974ac421e8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55974ac42160 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55974ac40028 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55974ac42180 <col:31> 'const String' lvalue ParmVar 0x55974ac3df50 'str' 'const String &'
|                 `-DeclRefExpr 0x55974ac421a0 <col:36> 'const String' lvalue ParmVar 0x55974ac3ded8 'anno' 'const String &'
|-CXXMethodDecl 0x55974ac3e310 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55974ac3e0f0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55974ac3e170 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55974ac3e1e8 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55974ac425a8 <col:68, line:243:5>
|   `-ReturnStmt 0x55974ac42598 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55974ac42580 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55974ac42520 <col:9, col:41> 'int'
|         |-MemberExpr 0x55974ac424f0 <col:9> '<bound member function type>' ->xmessage 0x55974ac3e030
|         | `-CXXThisExpr 0x55974ac424e0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55974ac423b8 <col:18> 'const String' lvalue ParmVar 0x55974ac3e0f0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55974ac42568 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55974ac42550 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55974ac424c0 <col:24, col:40> 'String' (CXXTemporary 0x55974ac424c0)
|               `-CXXMemberCallExpr 0x55974ac42458 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55974ac423e8 <col:24> '<bound member function type>' ->vformat 0x55974ac3f4f0
|                 | `-CXXThisExpr 0x55974ac423d8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55974ac42488 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55974ac42418 <col:32> 'const char *' lvalue ParmVar 0x55974ac3e170 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55974ac424a0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55974ac42438 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55974ac3e1e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55974ac3e5b0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55974ac3e3d8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55974ac3e450 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55974ac3e4c8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55974ac428e8 <col:23, line:254:5>
|   `-ReturnStmt 0x55974ac428d8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55974ac428c0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55974ac42860 <col:9, col:71> 'int'
|         |-MemberExpr 0x55974ac42830 <col:9> '<bound member function type>' ->xmessage 0x55974ac3e030
|         | `-CXXThisExpr 0x55974ac42820 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55974ac428a8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55974ac42890 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55974ac427e0 <col:18, col:65> 'String' (CXXTemporary 0x55974ac427e0)
|         |     `-CallExpr 0x55974ac42778 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55974ac42760 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55974ac42648 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55974ac40028 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55974ac42668 <col:31> 'const String' lvalue ParmVar 0x55974ac3e450 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55974ac427c0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55974ac427a8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55974ac42740 <col:37, col:64> 'String' (CXXTemporary 0x55974ac42740)
|         |             `-CallExpr 0x55974ac42710 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55974ac426f8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55974ac42688 <col:37> 'String (const String &)' lvalue CXXMethod 0x55974ac40678 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55974ac426a8 <col:56> 'const String' lvalue ParmVar 0x55974ac3e3d8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55974ac42800 <col:68> 'const String' lvalue ParmVar 0x55974ac3e4c8 'str' 'const String &'
|-CXXMethodDecl 0x55974ac3e930 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55974ac3e678 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55974ac3e6f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55974ac3e770 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55974ac3e7e8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55974ac42ba0 <col:34, line:267:5>
|   `-ReturnStmt 0x55974ac42b90 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55974ac42b78 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55974ac42b10 <col:9, col:51> 'int'
|         |-MemberExpr 0x55974ac42ae0 <col:9> '<bound member function type>' ->xmessage 0x55974ac3e5b0
|         | `-CXXThisExpr 0x55974ac42ad0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55974ac42988 <col:18> 'const String' lvalue ParmVar 0x55974ac3e678 'landmark' 'const String &'
|         |-DeclRefExpr 0x55974ac429a8 <col:28> 'const String' lvalue ParmVar 0x55974ac3e6f0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55974ac42b60 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55974ac42b48 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55974ac42ab0 <col:34, col:50> 'String' (CXXTemporary 0x55974ac42ab0)
|               `-CXXMemberCallExpr 0x55974ac42a48 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55974ac429d8 <col:34> '<bound member function type>' ->vformat 0x55974ac3f4f0
|                 | `-CXXThisExpr 0x55974ac429c8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55974ac42a78 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55974ac42a08 <col:42> 'const char *' lvalue ParmVar 0x55974ac3e770 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55974ac42a90 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55974ac42a28 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55974ac3e7e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55974ac3ea40 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55974ac42c20 <col:25, line:288:5>
|   `-ReturnStmt 0x55974ac42c10 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55974ac42bf8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55974ac42bc8 <col:9> 'const int' lvalue ->_nerrors 0x55974ac417f8
|         `-CXXThisExpr 0x55974ac42bb8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55974ac3ec50 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55974ac3eaf8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55974ac3eb78 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3ef38 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55974ac3ed18 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55974ac3ed98 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55974ac3ee10 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55974ac3f0d0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55974ac3f008 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3f318 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55974ac3f190 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55974ac3f208 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55974ac42e80 <col:58, line:357:5>
|   `-ReturnStmt 0x55974ac42e70 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55974ac42e58 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55974ac42e28 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55974ac42e10 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55974ac42df0 <col:9, col:29> 'String' (CXXTemporary 0x55974ac42df0)
|             `-CallExpr 0x55974ac42d80 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55974ac42d68 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55974ac42ce8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55974ac3ef38 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55974ac42c88 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55974ac42db8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55974ac42ca8 <col:21> 'const char *' lvalue ParmVar 0x55974ac3f190 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55974ac42dd0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55974ac42cc8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55974ac3f208 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55974ac3f4f0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55974ac3f3e0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55974ac3f458 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55974ac3f648 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55974ac3f5b8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55974ac3f790 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55974ac3f700 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55974ac3fa30 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55974ac3f848 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55974ac3f8c8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55974ac3f940 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55974ac3fb90 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55974ac3fb00 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55974ac42f98 <col:37, line:441:5>
|   `-IfStmt 0x55974ac42f80 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55974ac42f08 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55974ac42ed8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55974ac42e98 <col:6> 'int' lvalue ParmVar 0x55974ac3fb00 'level' 'int'
|     | `-ImplicitCastExpr 0x55974ac42ef0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55974ac42eb8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55974ac3bbd0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55974ac42f68 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55974ac42f38 <col:8> 'int' lvalue ->_nerrors 0x55974ac417f8
|         `-CXXThisExpr 0x55974ac42f28 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55974ac3fc58 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55974ac43030 <col:26, line:448:5>
|   `-BinaryOperator 0x55974ac43010 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55974ac42fc0 <col:2> 'int' lvalue ->_nerrors 0x55974ac417f8
|     | `-CXXThisExpr 0x55974ac42fb0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55974ac42ff0 <col:13> 'int' 0
|-CXXMethodDecl 0x55974ac3fe20 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55974ac3fd10 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55974ac3fd88 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55974ac40028 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55974ac3fee0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55974ac3ff58 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55974ac402d8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55974ac400e8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55974ac40168 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55974ac401e8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55974ac40390 <col:59> 0 0
|-CXXMethodDecl 0x55974ac40528 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55974ac40408 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55974ac40488 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55974ac436a0 <col:70, line:534:5>
|   |-DeclStmt 0x55974ac431a0 <line:528:2, col:20>
|   | |-VarDecl 0x55974ac43058 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55974ac430c0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55974ac430f8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55974ac43160 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55974ac43270 <line:529:2, col:23>
|   | `-VarDecl 0x55974ac431d0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55974ac43258 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55974ac43238 <col:18> 'const char *' lvalue ParmVar 0x55974ac40408 'begin' 'const char *'
|   |-DoStmt 0x55974ac43638 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55974ac43568 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55974ac43550 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55974ac43530 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55974ac43288 <col:6> 'const char *' lvalue Var 0x55974ac431d0 'x' 'const char *'
|   | |     `-CallExpr 0x55974ac43480 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55974ac43468 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55974ac43420 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55974ac41cd0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55974ac434e8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55974ac434d0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55974ac43340 <col:20, col:27> 'String' (CXXTemporary 0x55974ac43340)
|   | |       |     `-CXXTemporaryObjectExpr 0x55974ac43308 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55974ac43500 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55974ac43360 <col:30> 'const char *' lvalue Var 0x55974ac431d0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55974ac43518 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55974ac43380 <col:33> 'const char *' lvalue ParmVar 0x55974ac40488 'end' 'const char *'
|   | |       |-UnaryOperator 0x55974ac433c0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55974ac433a0 <col:39> 'String' lvalue Var 0x55974ac43058 'name' 'String'
|   | |       |-UnaryOperator 0x55974ac433f8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55974ac433d8 <col:46> 'String' lvalue Var 0x55974ac430f8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55974ac43410 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55974ac43620 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55974ac43608 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55974ac435e8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55974ac435b8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|   |         `-ImplicitCastExpr 0x55974ac435a0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55974ac43580 <col:11> 'String' lvalue Var 0x55974ac43058 'name' 'String'
|   `-ReturnStmt 0x55974ac43690 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55974ac43678 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55974ac43658 <col:9> 'const char *' lvalue Var 0x55974ac431d0 'x' 'const char *'
|-CXXMethodDecl 0x55974ac40678 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55974ac405e8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55974ac43ca8 <col:55, line:550:5>
|   `-IfStmt 0x55974ac43c80 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55974ac438e0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55974ac438c8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55974ac438b0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55974ac43890 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55974ac43860 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|     | |       `-DeclRefExpr 0x55974ac43700 <col:6> 'const String' lvalue ParmVar 0x55974ac405e8 'x' 'const String &'
|     | `-BinaryOperator 0x55974ac43840 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55974ac43810 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55974ac437c0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55974ac437a8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55974ac43760 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55974a7c78a0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55974ac43720 <col:11> 'const String' lvalue ParmVar 0x55974ac405e8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55974ac43740 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55974ac43828 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55974ac437f8 <col:19> 'char' 123
|     |-ReturnStmt 0x55974ac43950 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55974ac43920 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55974ac43900 <col:13> 'const String' lvalue ParmVar 0x55974ac405e8 'x' 'const String &'
|     `-IfStmt 0x55974ac43c58 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55974ac439e8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55974ac439d0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55974ac439b0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55974ac43980 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|       |       `-DeclRefExpr 0x55974ac43960 <col:11> 'const String' lvalue ParmVar 0x55974ac405e8 'x' 'const String &'
|       |-ReturnStmt 0x55974ac43b70 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55974ac43b58 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55974ac43b28 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55974ac43b10 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55974ac43af0 <col:13, col:29> 'String' (CXXTemporary 0x55974ac43af0)
|       |         `-CallExpr 0x55974ac43aa0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55974ac43a88 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55974ac43a00 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55974ac3fe20 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55974ac43ad0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55974ac43a20 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55974ac43a40 <col:28> 'const String' lvalue ParmVar 0x55974ac405e8 'x' 'const String &'
|       `-ReturnStmt 0x55974ac43c48 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55974ac43c30 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55974ac43c00 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55974ac43be8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55974ac43bc8 <col:13, col:20> 'String' (CXXTemporary 0x55974ac43bc8)
|                 `-CXXTemporaryObjectExpr 0x55974ac43b90 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55974ac40840 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55974ac40730 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55974ac407a8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974ac41f78 <col:71> 'bool' false
|-CXXRecordDecl 0x55974ac408f0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55974ac40be8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55974ac40b80 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55974ac40b20 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55974ac40ae0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55974a7aa900 'String'
|       | `-CXXRecord 0x55974a7aa870 'String'
|       |-BuiltinType 0x55974a477580 'int'
|       `-DecayedType 0x55974aadf8e0 '__va_list_tag *' sugar
|         |-TypedefType 0x55974aadf8b0 'va_list' sugar
|         | |-Typedef 0x55974a69b9b0 'va_list'
|         | `-TypedefType 0x55974a69b960 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55974a5d3588 '__gnuc_va_list'
|         |   `-TypedefType 0x55974a5d34f0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55974a4b8d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55974a4b8ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55974a4782d0 '__va_list_tag'
|         |         `-CXXRecord 0x55974a478238 '__va_list_tag'
|         `-PointerType 0x55974a6a1250 '__va_list_tag *'
|           `-RecordType 0x55974a4782d0 '__va_list_tag'
|             `-CXXRecord 0x55974a478238 '__va_list_tag'
|-EnumDecl 0x55974ac40c40 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55974ac40d40 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac412a0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac40d20 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55974ac40d00 <col:16> 'int' 1
| |-EnumConstantDecl 0x55974ac40dd0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac412b8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac40db0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55974ac40d90 <col:21> 'int' 2
| |-EnumConstantDecl 0x55974ac40e60 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac412d0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac40e40 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55974ac40e20 <col:22> 'int' 4
| |-EnumConstantDecl 0x55974ac40ef0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac412e8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac40ed0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55974ac40eb0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55974ac40f80 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac41300 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac40f60 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55974ac40f40 <col:22> 'int' 16
| |-EnumConstantDecl 0x55974ac41010 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac41318 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac40ff0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55974ac40fd0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55974ac410a0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac41330 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac41080 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55974ac41060 <col:17> 'int' 64
| |-EnumConstantDecl 0x55974ac41130 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac41348 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac41110 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55974ac410f0 <col:14> 'int' 128
| |-EnumConstantDecl 0x55974ac411c0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55974ac41360 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ac411a0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55974ac41180 <col:16> 'int' 256
| `-EnumConstantDecl 0x55974ac41250 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55974ac41378 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974ac41230 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55974ac41210 <col:12> 'int' 1024
|-CXXMethodDecl 0x55974ac41588 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55974ac413a0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55974ac41440 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55974ac41710 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55974ac41648 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55974ac417b8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55974ac417f8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55974ac41858 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55974ac418d0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55974ac41cd0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55974ac41948 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55974ac419c8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55974ac41a48 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55974ac41ac0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55974ac41b38 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55974ac41bb0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55974ac41df8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55974ac41df8
| `-ParmVarDecl 0x55974ac41f08 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55974ac44008 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55974ac44008
  `-ParmVarDecl 0x55974ac44118 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9da9c0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55974a9dab10 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55974a9dab90 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55974a9db988 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55974a9db988
| `-ParmVarDecl 0x55974a9dba98 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55974a9dbb38 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55974a9dbb38
| `-ParmVarDecl 0x55974a9dbc48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55974a9dbcb8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55974a9dbcb8
|-CXXMethodDecl 0x55974a9dc588 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55974a9dc588
| `-ParmVarDecl 0x55974a9dc698 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55974a9dc708 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55974a9dc708
| `-ParmVarDecl 0x55974a9dc818 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55974ac3b1b8 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55974ac3b290 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9dacc0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55974a9dade8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55974a9dae70 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55974a9dbde8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55974a9dbde8
| `-ParmVarDecl 0x55974a9dbef8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55974a9dbf98 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55974a9dbf98
| `-ParmVarDecl 0x55974a9dc0a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55974a9dc118 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55974a9dc118
|-CXXMethodDecl 0x55974a9dc8b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55974a9dc8b8
| `-ParmVarDecl 0x55974a9dc9c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55974a9dca38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55974a9dca38
| `-ParmVarDecl 0x55974a9dcb48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55974ac3b2f0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55974ac3b3d0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9d6348 prev 0x55974a9d57e0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55974a9d6440 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55974a9d64d0 <col:17, col:23> col:17 public
|-EnumDecl 0x55974a9d64f8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55974a9d6600 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7350 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d65e0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55974a9d65c0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55974a9d6690 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7368 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6670 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55974a9d6650 <col:12> 'int' 2
| |-EnumConstantDecl 0x55974a9d6720 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7380 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6700 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55974a9d66e0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55974a9d67b0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7398 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6790 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55974a9d6770 <col:16> 'int' 0
| |-EnumConstantDecl 0x55974a9d6840 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d73b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6820 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55974a9d6800 <col:19> 'int' 32
| |-EnumConstantDecl 0x55974a9d68d0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d73c8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d68b0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55974a9d6890 <col:10> 'int' 64
| |-EnumConstantDecl 0x55974a9d6960 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d73e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6940 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55974a9d6920 <col:19> 'int' 128
| |-EnumConstantDecl 0x55974a9d69f0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d73f8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d69d0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55974a9d69b0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55974a9d6a80 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7410 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6a60 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55974a9d6a40 <col:17> 'int' 512
| |-EnumConstantDecl 0x55974a9d6b10 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7428 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6af0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55974a9d6ad0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55974a9d6ba0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7440 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6b80 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55974a9d6b60 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55974a9d6c30 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7458 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6c10 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55974a9d6bf0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55974a9d6cc0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7470 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6ca0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55974a9d6c80 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55974a9d6d50 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d7488 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6d30 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55974a9d6d10 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55974a9d6e20 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55974a9d6e00 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55974a9d6de0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55974a9d6da0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55974a9d6dc0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55974a9d6ef0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55974a9d6ed0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55974a9d6eb0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55974a9d6e70 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55974a9d6e90 <col:27> 'int' 27
| |-EnumConstantDecl 0x55974a9d6f80 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d74a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d6f60 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55974a9d6f40 <col:17> 'int' 28
| |-EnumConstantDecl 0x55974a9d7050 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55974a9d7030 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55974a9d7010 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55974a9d6fd0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55974a9d6ff0 <col:18> 'int' EnumConstant 0x55974a9d6f80 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d70e0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d74b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d70c0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55974a9d70a0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55974a9d7170 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55974a9d74d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d7150 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55974a9d7130 <col:26> 'int' 16
| `-EnumConstantDecl 0x55974a9d7300 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55974a9d74e8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9d72e0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55974a9d72c0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55974a9d7280 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55974a9d7240 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55974a9d7200 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55974a9d71c0 <col:14> 'int' EnumConstant 0x55974a9d6600 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55974a9d71e0 <col:23> 'int' EnumConstant 0x55974a9d6690 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55974a9d7220 <col:33> 'int' EnumConstant 0x55974a9d6720 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55974a9d7260 <col:48> 'int' EnumConstant 0x55974a9d70e0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55974a9d72a0 <col:71> 'int' EnumConstant 0x55974a9d7170 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d7548 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55974a9dcf68 <col:39, line:64:5>
|   `-ReturnStmt 0x55974a9dcf58 <line:63:2, col:9>
|     `-MemberExpr 0x55974a9dcf28 <col:9> 'const String' lvalue ->_name 0x55974a9da970
|       `-CXXThisExpr 0x55974a9dcf18 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55974a9d7608 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55974a9dcfe8 <col:35, line:71:5>
|   `-ReturnStmt 0x55974a9dcfd8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55974a9dcfc0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974a9dcf90 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|         `-CXXThisExpr 0x55974a9dcf80 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55974a9d7758 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55974a9d76c0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55974a9dd168 <col:42, line:77:5>
|   `-ReturnStmt 0x55974a9dd158 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55974a9dd140 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55974a9dd110 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55974a9dd070 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55974a9dd040 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55974a9dd000 <col:9> 'int' lvalue ParmVar 0x55974a9d76c0 'op' 'int'
|         | `-ImplicitCastExpr 0x55974a9dd058 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55974a9dd020 <col:15> 'Handler::Flags' EnumConstant 0x55974a9d6690 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55974a9dd0a0 <col:25> 'void *const' lvalue ->_write_user_data 0x55974a9db020
|         | `-CXXThisExpr 0x55974a9dd090 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55974a9dd0e0 <col:44> 'void *const' lvalue ->_read_user_data 0x55974a9dafb8
|           `-CXXThisExpr 0x55974a9dd0d0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55974a9d7828 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55974a9dd1e8 <col:41, line:82:5>
|   `-ReturnStmt 0x55974a9dd1d8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55974a9dd1c0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55974a9dd190 <col:9> 'void *const' lvalue ->_read_user_data 0x55974a9dafb8
|         `-CXXThisExpr 0x55974a9dd180 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55974a9d78f0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55974a9dd268 <col:42, line:87:5>
|   `-ReturnStmt 0x55974a9dd258 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55974a9dd240 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55974a9dd210 <col:9> 'void *const' lvalue ->_write_user_data 0x55974a9db020
|         `-CXXThisExpr 0x55974a9dd200 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55974a9d79b8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55974a9d7a58 <col:52> "" ""
|-CXXMethodDecl 0x55974a9d7af0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55974a9d7b90 <col:52> "" ""
|-CXXMethodDecl 0x55974a9d7c20 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55974a9dd358 <col:34, line:98:5>
|   `-ReturnStmt 0x55974a9dd348 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55974a9dd330 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55974a9dd310 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55974a9dd2e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55974a9dd290 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|         |   `-CXXThisExpr 0x55974a9dd280 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55974a9dd2f8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55974a9dd2c0 <col:18> 'Handler::Flags' EnumConstant 0x55974a9d6600 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d7ce0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55974a9dd448 <col:36, line:104:5>
|   `-ReturnStmt 0x55974a9dd438 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55974a9dd420 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55974a9dd400 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55974a9dd3d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55974a9dd380 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|         |   `-CXXThisExpr 0x55974a9dd370 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55974a9dd3e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55974a9dd3b0 <col:18> 'Handler::Flags' EnumConstant 0x55974a9d6720 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d7da0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55974a9dd628 <col:38, line:113:5>
|   `-ReturnStmt 0x55974a9dd618 <line:112:2, col:49>
|     `-BinaryOperator 0x55974a9dd5f8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55974a9dd5a0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55974a9dd580 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55974a9dd550 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55974a9dd470 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|       |   |   `-CXXThisExpr 0x55974a9dd460 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55974a9dd568 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55974a9dd530 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55974a9dd510 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55974a9dd4e0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55974a9dd4a0 <col:20> 'Handler::Flags' EnumConstant 0x55974a9d6600 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55974a9dd4f8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55974a9dd4c0 <col:29> 'Handler::Flags' EnumConstant 0x55974a9d6960 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55974a9dd5e0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55974a9dd5c0 <col:49> 'Handler::Flags' EnumConstant 0x55974a9d6600 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d7e60 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55974a9dd718 <col:34, line:118:5>
|   `-ReturnStmt 0x55974a9dd708 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55974a9dd6f0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55974a9dd6d0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55974a9dd6a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55974a9dd650 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|         |   `-CXXThisExpr 0x55974a9dd640 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55974a9dd6b8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55974a9dd680 <col:18> 'Handler::Flags' EnumConstant 0x55974a9d6690 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d7f20 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55974a9dd8f8 <col:39, line:127:5>
|   `-ReturnStmt 0x55974a9dd8e8 <line:126:2, col:51>
|     `-BinaryOperator 0x55974a9dd8c8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55974a9dd870 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55974a9dd850 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55974a9dd820 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55974a9dd740 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|       |   |   `-CXXThisExpr 0x55974a9dd730 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55974a9dd838 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55974a9dd800 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55974a9dd7e0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55974a9dd7b0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55974a9dd770 <col:20> 'Handler::Flags' EnumConstant 0x55974a9d6690 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55974a9dd7c8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55974a9dd790 <col:30> 'Handler::Flags' EnumConstant 0x55974a9d69f0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55974a9dd8b0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55974a9dd890 <col:51> 'Handler::Flags' EnumConstant 0x55974a9d6690 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d7fe0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55974a9dda00 <col:33, line:132:5>
|   `-ReturnStmt 0x55974a9dd9f0 <line:131:2, col:41>
|     `-BinaryOperator 0x55974a9dd9d0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55974a9dd950 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55974a9dd920 <col:9> '<bound member function type>' ->read_visible 0x55974a9d7da0
|       |   `-CXXThisExpr 0x55974a9dd910 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55974a9dd9b0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55974a9dd980 <col:27> '<bound member function type>' ->write_visible 0x55974a9d7f20
|           `-CXXThisExpr 0x55974a9dd970 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55974a9d80a0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55974a9ddb38 <col:51, line:138:5>
|   `-ReturnStmt 0x55974a9ddb28 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55974a9ddb10 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55974a9ddaf0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55974a9ddaa8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55974a9dda78 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55974a9dda28 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|           |   `-CXXThisExpr 0x55974a9dda18 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55974a9dda90 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55974a9dda58 <col:26> 'Handler::Flags' EnumConstant 0x55974a9d6840 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d8160 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55974a9ddc48 <col:50, line:144:5>
|   `-ReturnStmt 0x55974a9ddc38 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55974a9ddc20 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55974a9ddc00 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55974a9ddbe0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55974a9ddbb0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55974a9ddb60 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|           |   `-CXXThisExpr 0x55974a9ddb50 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55974a9ddbc8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55974a9ddb90 <col:26> 'Handler::Flags' EnumConstant 0x55974a9d6840 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d8220 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55974a9ddd38 <col:29, line:166:5>
|   `-ReturnStmt 0x55974a9ddd28 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55974a9ddd10 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55974a9ddcf0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55974a9ddcc0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55974a9ddc70 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|         |   `-CXXThisExpr 0x55974a9ddc60 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55974a9ddcd8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55974a9ddca0 <col:18> 'Handler::Flags' EnumConstant 0x55974a9d68d0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9d84a8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55974a9d82d0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55974a9d8348 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55974a9d83c0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9d86b8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55974a9d8570 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55974a9d85e8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55974a9dce50 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55974a9dce30 <col:62> 'int' 0
| `-CompoundStmt 0x55974a9ddfd8 <col:71, line:188:5>
|   `-ReturnStmt 0x55974a9ddfc8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55974a9ddfb0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55974a9ddf80 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55974a9ddf68 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55974a9ddf48 <col:9, col:36> 'String' (CXXTemporary 0x55974a9ddf48)
|             `-CXXMemberCallExpr 0x55974a9ddea8 <col:9, col:36> 'String'
|               |-MemberExpr 0x55974a9dde78 <col:9> '<bound member function type>' ->call_read 0x55974a9d84a8
|               | `-CXXThisExpr 0x55974a9dde68 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55974a9ddee0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55974a9dddc0 <col:19> 'Element *' lvalue ParmVar 0x55974a9d8570 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55974a9ddf10 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55974a9ddef8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55974a9dde28 <col:22, col:29> 'String' (CXXTemporary 0x55974a9dde28)
|               |     `-CXXTemporaryObjectExpr 0x55974a9dddf0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55974a9ddf28 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55974a9dde48 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55974a9d85e8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9d8950 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55974a9d8778 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55974a9d87f0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55974a9d8868 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9d8ad8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55974a9d8a18 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55974a9d8d08 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55974a9d8b90 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55974a9d8c08 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55974a9d8e08 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55974a9de038 <col:50, line:225:5>
|   `-ReturnStmt 0x55974a9de028 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55974a9de010 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55974a9ddff0 <col:9> 'const Handler *' lvalue Var 0x55974a9db1b0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55974a9d8ea8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55974a9d8fb0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9b50 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d8f90 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55974a9d8f70 <col:11> 'Handler::Flags' EnumConstant 0x55974a9d6600 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9040 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9b68 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9020 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55974a9d9000 <col:12> 'Handler::Flags' EnumConstant 0x55974a9d6690 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d90d0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9b80 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d90b0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55974a9d9090 <col:17> 'Handler::Flags' EnumConstant 0x55974a9d6720 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9160 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9b98 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9140 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55974a9d9120 <col:16> 'Handler::Flags' EnumConstant 0x55974a9d67b0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d91f0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9bb0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d91d0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55974a9d91b0 <col:19> 'Handler::Flags' EnumConstant 0x55974a9d6840 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9280 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9bc8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9260 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55974a9d9240 <col:10> 'Handler::Flags' EnumConstant 0x55974a9d68d0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9310 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9be0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d92f0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55974a9d92d0 <col:19> 'Handler::Flags' EnumConstant 0x55974a9d6960 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d93a0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9bf8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9380 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55974a9d9360 <col:20> 'Handler::Flags' EnumConstant 0x55974a9d69f0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9430 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9c10 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9410 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55974a9d93f0 <col:17> 'Handler::Flags' EnumConstant 0x55974a9d6a80 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d94c0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9c28 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d94a0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55974a9d9480 <col:15> 'Handler::Flags' EnumConstant 0x55974a9d6b10 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9550 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9c40 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9530 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55974a9d9510 <col:11> 'Handler::Flags' EnumConstant 0x55974a9d6ba0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d95e0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9c58 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d95c0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55974a9d95a0 <col:16> 'Handler::Flags' EnumConstant 0x55974a9d6c30 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9670 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9c70 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9650 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55974a9d9630 <col:13> 'Handler::Flags' EnumConstant 0x55974a9d6cc0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9700 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9c88 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d96e0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55974a9d96c0 <col:15> 'Handler::Flags' EnumConstant 0x55974a9d6d50 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9790 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9ca0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9770 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55974a9d9750 <col:20> 'Handler::Flags' EnumConstant 0x55974a9d6e20 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9820 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9cb8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9800 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55974a9d97e0 <col:27> 'Handler::Flags' EnumConstant 0x55974a9d6ef0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d98b0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9cd0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9890 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55974a9d9870 <col:22> 'Handler::Flags' EnumConstant 0x55974a9d6f80 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9940 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9ce8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9920 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55974a9d9900 <col:18> 'Handler::Flags' EnumConstant 0x55974a9d7050 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d99d0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9d00 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d99b0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55974a9d9990 <col:25> 'Handler::Flags' EnumConstant 0x55974a9d70e0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9a60 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55974a9d9d18 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9a40 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55974a9d9a20 <col:26> 'Handler::Flags' EnumConstant 0x55974a9d7170 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55974a9d9b00 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55974a9d9d30 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9d9ae0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55974a9d9ab0 <col:20> 'Handler::Flags' EnumConstant 0x55974a9d7300 'f_special' 'Handler::Flags'
|-EnumDecl 0x55974a9d9d48 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55974a9d9e50 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da3b0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9e30 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55974a9d9e10 <col:12> 'Handler::Flags' EnumConstant 0x55974a9d6600 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9ee0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da3c8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9ec0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55974a9d9ea0 <col:13> 'Handler::Flags' EnumConstant 0x55974a9d6690 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9d9f70 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da3e0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9f50 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55974a9d9f30 <col:15> 'Handler::Flags' EnumConstant 0x55974a9d6720 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9da000 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da3f8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9d9fe0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55974a9d9fc0 <col:8> 'Handler::Flags' EnumConstant 0x55974a9d68d0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9da090 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da410 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9da070 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55974a9da050 <col:9> 'Handler::Flags' EnumConstant 0x55974a9d6ba0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9da120 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da428 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9da100 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55974a9da0e0 <col:14> 'Handler::Flags' EnumConstant 0x55974a9d6c30 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9da1b0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da440 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9da190 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55974a9da170 <col:11> 'Handler::Flags' EnumConstant 0x55974a9d6cc0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9da240 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da458 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9da220 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55974a9da200 <col:13> 'Handler::Flags' EnumConstant 0x55974a9d6d50 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55974a9da2d0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55974a9da470 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9da2b0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55974a9da290 <col:20> 'Handler::Flags' EnumConstant 0x55974a9d6f80 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55974a9da360 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55974a9da488 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9da340 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55974a9da320 <col:16> 'Handler::Flags' EnumConstant 0x55974a9d7050 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55974a9da4a0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55974a9da560 <col:25> "" ""
| |-EnumConstantDecl 0x55974a9da610 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55974a9da6f0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9da5f0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55974a9da5d0 <col:14> 'Handler::Flags' EnumConstant 0x55974a9d67b0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55974a9da6a0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55974a9da708 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9da680 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55974a9da660 <col:17> 'Handler::Flags' EnumConstant 0x55974a9d6840 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55974a9da888 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55974a9da730 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55974a9da7b0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55974a9de6f8 <col:70, line:284:5>
|   |-ParenExpr 0x55974a9de518 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55974a9de4e8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9de218 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9de1e8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55974a9de190 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55974a9de170 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55974a9de140 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55974a9de060 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55974a9db080
|   |   |   |   |   `-CXXThisExpr 0x55974a9de050 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55974a9de158 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55974a9de120 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55974a9de100 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55974a9de0d0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55974a9de090 <col:34> 'Handler::Flags' EnumConstant 0x55974a9d6600 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55974a9de0e8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55974a9de0b0 <col:43> 'Handler::Flags' EnumConstant 0x55974a9d70e0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55974a9de1d0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55974a9de1b0 <col:69> 'Handler::Flags' EnumConstant 0x55974a9d6600 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55974a9de278 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9de258 <col:85> 'int' 0
|   |   `-CallExpr 0x55974a9de448 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55974a9de430 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9de410 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9de488 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9de2e8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55974a9de4a0 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9de338 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55974a9de4b8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9de370 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55974a9de4d0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9de3f8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9de3e0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9de390 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55974a9de6e8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55974a9de6d0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55974a9de6a0 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55974a9de688 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55974a9de668 <col:9, col:38> 'String' (CXXTemporary 0x55974a9de668)
|             `-CallExpr 0x55974a9de600 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55974a9de5e8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55974a9de578 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55974a9dab90
|               |   `-MemberExpr 0x55974a9de548 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55974a9dac58
|               |     `-CXXThisExpr 0x55974a9de538 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55974a9de630 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55974a9de5a8 <col:22> 'Element *' lvalue ParmVar 0x55974a9da730 'e' 'Element *'
|               `-ImplicitCastExpr 0x55974a9de648 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55974a9de5c8 <col:25> 'void *' lvalue ParmVar 0x55974a9da7b0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55974a9da938 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55974a9da970 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55974a9da9c0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55974a9dab10 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55974a9dab90 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55974a9db988 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55974a9db988
| | `-ParmVarDecl 0x55974a9dba98 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55974a9dbb38 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55974a9dbb38
| | `-ParmVarDecl 0x55974a9dbc48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55974a9dbcb8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55974a9dbcb8
| |-CXXMethodDecl 0x55974a9dc588 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55974a9dc588
| | `-ParmVarDecl 0x55974a9dc698 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55974a9dc708 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55974a9dc708
| | `-ParmVarDecl 0x55974a9dc818 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55974ac3b1b8 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55974ac3b290 <col:5>
|-FieldDecl 0x55974a9dac58 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55974a9dacc0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55974a9dade8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55974a9dae70 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55974a9dbde8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55974a9dbde8
| | `-ParmVarDecl 0x55974a9dbef8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55974a9dbf98 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55974a9dbf98
| | `-ParmVarDecl 0x55974a9dc0a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55974a9dc118 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55974a9dc118
| |-CXXMethodDecl 0x55974a9dc8b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55974a9dc8b8
| | `-ParmVarDecl 0x55974a9dc9c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55974a9dca38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55974a9dca38
| | `-ParmVarDecl 0x55974a9dcb48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55974ac3b2f0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55974ac3b3d0 <col:5>
|-FieldDecl 0x55974a9daf38 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55974a9dafb8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55974a9db020 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55974a9db080 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55974a9db0e8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55974a9db150 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55974a9db1b0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55974a9db2d0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55974a9db228 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55974a9dcf00 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55974a9dcee8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55974a9dced0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55974a9dceb0 <col:30, col:37> 'String' (CXXTemporary 0x55974a9dceb0)
|           `-CXXTemporaryObjectExpr 0x55974a9dce78 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55974a9db478 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55974a9db3b8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55974a9db5f8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55974a9db530 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55974a9db7b8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55974a9db7f8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55974a9db7f8
| `-ParmVarDecl 0x55974a9db8d8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55974a9dc228 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55974a9dc228
| `-ParmVarDecl 0x55974a9dc338 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55974a9dc3d8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55974a9dc3d8
| `-ParmVarDecl 0x55974a9dc4e8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55974a9dcbb8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55974a9dcbb8
| `-ParmVarDecl 0x55974a9dccc8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55974a9dcd50 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55974a9dcd50

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ac22b58 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55974ac22d68 prev 0x55974ac22b58 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974ac23d80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55974ac23d30 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55974ac23d10 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55974ac23bc0 'type'
|     `-SubstTemplateTypeParmType 0x55974ab99e40 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974ab99990 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55974ab998a8 'sized_array_memory'
|-FieldDecl 0x55974ac23e80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55974ac23ed0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974ac23f08 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55974ac22e00 'void *' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-PointerType 0x55974a477ce0 'void *'
|     `-BuiltinType 0x55974a4774e0 'void'
|-TypedefDecl 0x55974ac23f98 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55974ac23f60 'void *&'
|   `-SubstTemplateTypeParmType 0x55974ac22e00 'void *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a477ce0 'void *'
|       `-BuiltinType 0x55974a4774e0 'void'
|-TypedefDecl 0x55974ac24058 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55974ac24020 'void *const &'
|   `-QualType 0x55974ac22e01 'void *const' const
|     `-SubstTemplateTypeParmType 0x55974ac22e00 'void *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a477ce0 'void *'
|         `-BuiltinType 0x55974a4774e0 'void'
|-TypedefDecl 0x55974ac240e8 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55974ac240b0 'void **'
|   `-SubstTemplateTypeParmType 0x55974ac22e00 'void *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a477ce0 'void *'
|       `-BuiltinType 0x55974a4774e0 'void'
|-TypedefDecl 0x55974ac24178 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55974ac24140 'void *const *'
|   `-QualType 0x55974ac22e01 'void *const' const
|     `-SubstTemplateTypeParmType 0x55974ac22e00 'void *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a477ce0 'void *'
|         `-BuiltinType 0x55974a4774e0 'void'
|-TypedefDecl 0x55974ac24d60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55974ac24d10 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55974ac24cf0 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55974ac24c80 'type'
|     `-SubstTemplateTypeParmType 0x55974ac24a40 'void *' sugar
|       |-TemplateTypeParmType 0x55974a74e540 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a74e4f0 'T'
|       `-PointerType 0x55974a477ce0 'void *'
|         `-BuiltinType 0x55974a4774e0 'void'
|-TypedefDecl 0x55974ac24dc8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55974ac24020 'void *const &'
|   `-QualType 0x55974ac22e01 'void *const' const
|     `-SubstTemplateTypeParmType 0x55974ac22e00 'void *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a477ce0 'void *'
|         `-BuiltinType 0x55974a4774e0 'void'
|-TypedefDecl 0x55974ac24e20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ac24e88 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55974ac240b0 'void **'
|   `-SubstTemplateTypeParmType 0x55974ac22e00 'void *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a477ce0 'void *'
|       `-BuiltinType 0x55974a4774e0 'void'
|-TypedefDecl 0x55974ac24ef0 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55974ac24140 'void *const *'
|   `-QualType 0x55974ac22e01 'void *const' const
|     `-SubstTemplateTypeParmType 0x55974ac22e00 'void *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a477ce0 'void *'
|         `-BuiltinType 0x55974a4774e0 'void'
|-EnumDecl 0x55974ac24f48 <line:134:5> col:5
| `-EnumConstantDecl 0x55974ac25040 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974ac25020 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974ac250c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974ac25318 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac25180 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac25220 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55974ac255d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55974ac254c0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55974ac25898 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55974ac25780 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55974ac25be0 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55974ac25ac0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55974ac25ef0 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55974ac25dd0 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55974ac261e0 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac26028 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac260a0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55974ac26338 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55974ac26418 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac26470 <col:30> Inherited
|-CXXMethodDecl 0x55974ac264b8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55974ac26568 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac265c0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac26688 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55974ac26738 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac26790 <col:30> Inherited
|-CXXMethodDecl 0x55974ac267d8 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55974ac26888 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac268e0 <col:30> Inherited
|-CXXMethodDecl 0x55974ac26928 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55974ac269d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac26a30 <col:30> Inherited
|-CXXMethodDecl 0x55974ac26a78 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55974ac26b28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ac26b80 <col:30> Inherited
|-CXXMethodDecl 0x55974ac26ba8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac26c58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ac26d08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974ac26ec8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac26db8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ac26e30 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55974ac27018 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac26f88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac271c8 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55974ac270d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac27280 <col:20>
| `-OptimizeNoneAttr 0x55974ac272d8 <col:30>
|-CXXMethodDecl 0x55974ac273f8 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55974ac27300 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ac274b0 <col:20>
| `-OptimizeNoneAttr 0x55974ac27508 <col:30>
|-CXXMethodDecl 0x55974ac275c0 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac27530 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac27708 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac27678 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac27838 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55974ac27968 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55974ac27a38 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55974ac27b08 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55974ac27c48 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ac27bb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac27d90 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ac27d00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ac27ed8 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55974ac27e48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac27f90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974ac28090 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974ac28000 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ac28148 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974ac28208 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55974ac28308 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55974ac28488 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac283c8 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55974ac28c48 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974ac28540 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55974ac28ba8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55974ac28aa8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55974ac28d28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ac28e78 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ac28de8 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55974ac28f30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974ac29178 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ac28ff0 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55974ac29068 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55974ac29338 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55974ac29248 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55974ac2a8e0 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55974ac29400 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55974ac29478 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55974ac2a9a0 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ac2abf8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55974ac2ab00 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55974ac2acc8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974ac2acc8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ac2aec0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55974ac2afd8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55974ac2b068 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55974ac2b170 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55974ac2b1c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974ac2b150 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55974ac2b130 <col:27> 'int' 4096
|-FieldDecl 0x55974ac2b1e8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55974ac2b250 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55974ac2b448 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55974ac2b4d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55974ac2b698 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55974ac2b538 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55974ac2b5b0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55974ac2b1e8 'name' 'String'
| | `-CXXConstructExpr 0x55974ac361b0 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55974ac36170 <col:20> 'const String' lvalue ParmVar 0x55974ac2b538 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55974ac2b250 'nsig' 'int'
| | `-IntegerLiteral 0x55974ac36208 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55974ac2b448 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55974ac362f0 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55974ac2b4d8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55974ac362b0 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55974ac36270 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55974ac2b5b0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55974ac36580 <col:42, line:289:9>
|   `-CallExpr 0x55974ac36530 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55974ac36518 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55974ac364f8 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55974a6dddf8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55974ac36568 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55974ac36440 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55974ac36420 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55974ac36408 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55974ac363b8 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55974ac2b448
|     |     |   `-CXXThisExpr 0x55974ac363a8 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55974ac363e8 <col:25> 'int' 0
|     |-IntegerLiteral 0x55974ac36458 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55974ac364d8 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55974ac364b8 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55974ac36488 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55974ac2b448 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55974ac36478 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55974ac2b778 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55974ac2b778
| `-ParmVarDecl 0x55974ac2b888 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55974ac2b928 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55974ac2b928
| `-ParmVarDecl 0x55974ac2ba38 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55974ac2bad8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55974ac2bad8
| `-ParmVarDecl 0x55974ac2bbe8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55974ac2bc58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55974ac2bc58
| `-ParmVarDecl 0x55974ac2bd68 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55974ac2bdf0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55974ac2bdf0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974abf2490 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974abf25a8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55974abf2638 <col:21, col:27> col:21 public
|-EnumDecl 0x55974abf2660 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55974abf2778 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55974abf2758 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55974abf2740 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55974abf2720 <col:32> 'int' 1
| `-EnumConstantDecl 0x55974abf2820 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55974abf2800 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55974abf27e8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55974abf27c8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55974abf28d0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55974abf2e08 <col:19, col:21>
|-CXXDestructorDecl 0x55974abf29c0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55974abf2e18 <col:28, col:30>
|-CXXMethodDecl 0x55974abf2b80 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55974abf2ab0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55974abf2c88 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55974abf2c88
  `-ParmVarDecl 0x55974abf2d98 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974abf33c0 prev 0x55974a88f290 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55974abf34b8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55974abf3548 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55974abf35b8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55974abf3678 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55974abf3738 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55974abf37f8 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55974abf38b8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55974abf3958 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55974abf3ab8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55974abf3a98 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55974abf3a78 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55974abf3a40 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55974abf3a20 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55974abf3a58 <col:42> 'int' 1
|-CXXMethodDecl 0x55974abf3b58 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55974abf3cc8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55974abf3c08 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55974abf3e10 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55974abf3d80 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55974abf3ed8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55974abf4200 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55974abf42c8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55974abf4448 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55974abf4380 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55974abf4510 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55974abf4718 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55974abf45c0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55974abf4640 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55974abf4870 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55974abf47e0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55974abf49c0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55974abf4930 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55974abf4b10 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55974abf4a80 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55974abf4c60 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55974abf4bd0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55974abf4e30 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55974abf4d20 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55974abf4d98 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55974abf5038 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55974abf4ef0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55974abf4f68 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55974ac2f690 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55974ac2f670 <col:60> 'int' 0
|-CXXMethodDecl 0x55974abf52c8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55974abf50f8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55974abf5170 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55974abf51e8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55974ac2f6c8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55974ac2f6a8 <col:76> 'int' 0
|-CXXMethodDecl 0x55974abf5568 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55974abf5390 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55974abf5408 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55974abf5480 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55974ac2f700 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55974ac2f6e0 <col:84> 'int' 0
|-CXXMethodDecl 0x55974abf58c0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55974abf5630 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55974abf56a8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55974abf5728 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55974abf57c8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55974abf5b70 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55974abf5990 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55974abf5a10 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55974abf5a88 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55974abf5dd8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55974abf5c38 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55974abf5cb8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55974abf5d30 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55974abf62d0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55974abf5ea0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55974abf5f20 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55974abf5fc8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55974abf6180 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55974abf6390 <col:115> "" ""
|-CXXMethodDecl 0x55974abf6750 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55974abf6410 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55974abf6490 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55974abf6508 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55974abf6650 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55974abf6810 <col:113> "" ""
|-CXXMethodDecl 0x55974abf6960 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55974abf6898 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55974abf6b30 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55974abf6a20 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55974abf6a98 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55974abf6d38 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55974abf6bf0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55974abf6c68 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55974abf7138 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55974abf6df8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55974abf6e70 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55974abf6ee8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55974abf6f68 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55974abf6fe0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974ac2f738 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974ac2f718 <col:137> 'int' 0
|-CXXMethodDecl 0x55974abf7548 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55974abf7210 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55974abf7288 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55974abf7300 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55974abf7380 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55974abf73f8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974ac2f770 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974ac2f750 <col:139> 'int' 0
|-CXXMethodDecl 0x55974abf79f8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55974abf7620 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55974abf7698 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55974abf7710 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55974abf7788 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55974abf7808 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55974ac2f7a8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55974ac2f788 <col:133> 'int' 0
| `-ParmVarDecl 0x55974abf7888 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55974ac2f7e0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55974ac2f7c0 <col:160> 'int' 0
|-CXXMethodDecl 0x55974abf7d90 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55974abf7ad8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55974abf7b50 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55974abf7bc8 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55974abf7c40 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974ac2f818 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974ac2f7f8 <col:116> 'int' 0
|-EnumDecl 0x55974abf7e50 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55974abf7f50 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55974abf7fa0 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974abf7f30 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55974abf7f10 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55974abf8120 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55974abf7fc8 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55974abf8040 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55974abf8338 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55974abf81e0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55974abf8260 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55974abf8668 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55974abf83f8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55974abf8550 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55974abf87f0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55974abf8728 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55974abf8970 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55974abf88a8 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55974abf8b80 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55974abf8a28 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55974abf8aa8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55974abf8d08 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55974abf8c40 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55974abf8e28 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55974abf8f18 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55974abf9088 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55974abf8fc8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55974abf9210 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55974abf9140 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55974abf9418 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55974abf92c8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55974abf9348 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55974abf9548 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55974abf9638 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55974abf96f8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55974abf98f8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55974abf97a8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55974abf9820 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55974ac2f8c8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55974ac2f8b0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55974ac2f898 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55974ac2f878 <col:58, col:65> 'String' (CXXTemporary 0x55974ac2f878)
|           `-CXXTemporaryObjectExpr 0x55974ac2f840 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55974abf9ac8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55974abf99b8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55974abf9a30 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55974ac2f978 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55974ac2f960 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55974ac2f948 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55974ac2f928 <col:71, col:78> 'String' (CXXTemporary 0x55974ac2f928)
|           `-CXXTemporaryObjectExpr 0x55974ac2f8f0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55974abf9c98 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55974abf9b88 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55974abf9c00 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55974ac2fa28 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55974ac2fa10 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55974ac2f9f8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55974ac2f9d8 <col:71, col:78> 'String' (CXXTemporary 0x55974ac2f9d8)
|           `-CXXTemporaryObjectExpr 0x55974ac2f9a0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55974abf9e68 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55974abf9d58 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55974abf9dd0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55974ac2fad8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55974ac2fac0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55974ac2faa8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55974ac2fa88 <col:70, col:77> 'String' (CXXTemporary 0x55974ac2fa88)
|           `-CXXTemporaryObjectExpr 0x55974ac2fa50 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55974abf9fe8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55974abf9f28 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55974abfa208 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55974abfa0a0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55974abfa118 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55974abfa308 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55974abfa308
|-CXXMethodDecl 0x55974abfa410 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55974abfa4d0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55974abfa590 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55974abfa650 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55974abfa848 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55974abfa700 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55974abfa778 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55974abfac00 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55974abfa908 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55974abfa980 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55974abfa9f8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55974abfaa70 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55974abfaaf0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55974abfaf60 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55974abface0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55974abfad60 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55974abfade0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55974abfae60 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55974abfb040 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55974abfb180 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55974abfb0f0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55974abfb2d0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55974abfb238 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974abfb4d8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55974abfb388 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55974abfb400 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974abfb628 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55974abfb598 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974abfb770 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55974abfb6e0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55974abfb9b0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55974abfb830 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55974abfb8d8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55974abfbb38 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55974abfba70 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55974abfbbe0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55974abfbcf8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55974abfbda0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55974abfbe08 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55974abfbec0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55974ac2fb00 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55974abfc098 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55974abfbf80 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55974abfc000 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55974abfbda0 'idx' 'int'
| | | `-ImplicitCastExpr 0x55974ac2fb50 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55974ac2fb10 <col:19> 'int' lvalue ParmVar 0x55974abfbf80 'i' 'int'
| | |-CXXCtorInitializer Field 0x55974abfbe08 'port' 'int'
| | | `-ImplicitCastExpr 0x55974ac2fbd0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55974ac2fb90 <col:28> 'int' lvalue ParmVar 0x55974abfc000 'p' 'int'
| | `-CompoundStmt 0x55974ac2fc20 <col:31, line:153:9>
| |-CXXMethodDecl 0x55974abfc278 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55974abfc188 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55974ac2fe20 <col:46, line:157:9>
| |   `-ReturnStmt 0x55974ac2fe10 <line:156:13, col:46>
| |     `-BinaryOperator 0x55974ac2fdf0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55974ac2fcf0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55974ac2fcc0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55974ac2fc40 <col:20> 'const int' lvalue ->idx 0x55974abfbda0
| |       | |   `-CXXThisExpr 0x55974ac2fc30 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55974ac2fcd8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55974ac2fc90 <col:27, col:29> 'const int' lvalue .idx 0x55974abfbda0
| |       |     `-DeclRefExpr 0x55974ac2fc70 <col:27> 'const Router::Port' lvalue ParmVar 0x55974abfc188 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55974ac2fdd0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55974ac2fda0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55974ac2fd20 <col:36> 'const int' lvalue ->port 0x55974abfbe08
| |         |   `-CXXThisExpr 0x55974ac2fd10 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55974ac2fdb8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55974ac2fd70 <col:44, col:46> 'const int' lvalue .port 0x55974abfbe08
| |             `-DeclRefExpr 0x55974ac2fd50 <col:44> 'const Router::Port' lvalue ParmVar 0x55974abfc188 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55974abfc3c0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55974abfc330 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55974ac30028 <col:46, line:160:9>
| |   `-ReturnStmt 0x55974ac30018 <line:159:13, col:46>
| |     `-BinaryOperator 0x55974ac2fff8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55974ac2fef8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55974ac2fec8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55974ac2fe48 <col:20> 'const int' lvalue ->idx 0x55974abfbda0
| |       | |   `-CXXThisExpr 0x55974ac2fe38 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55974ac2fee0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55974ac2fe98 <col:27, col:29> 'const int' lvalue .idx 0x55974abfbda0
| |       |     `-DeclRefExpr 0x55974ac2fe78 <col:27> 'const Router::Port' lvalue ParmVar 0x55974abfc330 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55974ac2ffd8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55974ac2ffa8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55974ac2ff28 <col:36> 'const int' lvalue ->port 0x55974abfbe08
| |         |   `-CXXThisExpr 0x55974ac2ff18 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55974ac2ffc0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55974ac2ff78 <col:44, col:46> 'const int' lvalue .port 0x55974abfbe08
| |             `-DeclRefExpr 0x55974ac2ff58 <col:44> 'const Router::Port' lvalue ParmVar 0x55974abfc330 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55974abfc508 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55974abfc478 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55974ac30350 <col:45, line:163:9>
| |   `-ReturnStmt 0x55974ac30340 <line:162:13, col:65>
| |     `-BinaryOperator 0x55974ac30320 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55974ac30100 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55974ac300d0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55974ac30050 <col:20> 'const int' lvalue ->idx 0x55974abfbda0
| |       | |   `-CXXThisExpr 0x55974ac30040 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55974ac300e8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55974ac300a0 <col:26, col:28> 'const int' lvalue .idx 0x55974abfbda0
| |       |     `-DeclRefExpr 0x55974ac30080 <col:26> 'const Router::Port' lvalue ParmVar 0x55974abfc478 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55974ac30300 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55974ac302e0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55974ac301e0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55974ac301b0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55974ac30130 <col:36> 'const int' lvalue ->idx 0x55974abfbda0
| |           | |   `-CXXThisExpr 0x55974ac30120 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55974ac301c8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55974ac30180 <col:43, col:45> 'const int' lvalue .idx 0x55974abfbda0
| |           |     `-DeclRefExpr 0x55974ac30160 <col:43> 'const Router::Port' lvalue ParmVar 0x55974abfc478 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55974ac302c0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55974ac30290 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55974ac30210 <col:52> 'const int' lvalue ->port 0x55974abfbe08
| |             |   `-CXXThisExpr 0x55974ac30200 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55974ac302a8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55974ac30260 <col:59, col:61> 'const int' lvalue .port 0x55974abfbe08
| |                 `-DeclRefExpr 0x55974ac30240 <col:59> 'const Router::Port' lvalue ParmVar 0x55974abfc478 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55974abfc650 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55974abfc5c0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55974ac30678 <col:46, line:166:9>
| |   `-ReturnStmt 0x55974ac30668 <line:165:13, col:66>
| |     `-BinaryOperator 0x55974ac30648 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55974ac30428 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55974ac303f8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55974ac30378 <col:20> 'const int' lvalue ->idx 0x55974abfbda0
| |       | |   `-CXXThisExpr 0x55974ac30368 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55974ac30410 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55974ac303c8 <col:26, col:28> 'const int' lvalue .idx 0x55974abfbda0
| |       |     `-DeclRefExpr 0x55974ac303a8 <col:26> 'const Router::Port' lvalue ParmVar 0x55974abfc5c0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55974ac30628 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55974ac30608 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55974ac30508 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55974ac304d8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55974ac30458 <col:36> 'const int' lvalue ->idx 0x55974abfbda0
| |           | |   `-CXXThisExpr 0x55974ac30448 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55974ac304f0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55974ac304a8 <col:43, col:45> 'const int' lvalue .idx 0x55974abfbda0
| |           |     `-DeclRefExpr 0x55974ac30488 <col:43> 'const Router::Port' lvalue ParmVar 0x55974abfc5c0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55974ac305e8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55974ac305b8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55974ac30538 <col:52> 'const int' lvalue ->port 0x55974abfbe08
| |             |   `-CXXThisExpr 0x55974ac30528 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55974ac305d0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55974ac30588 <col:60, col:62> 'const int' lvalue .port 0x55974abfbe08
| |                 `-DeclRefExpr 0x55974ac30568 <col:60> 'const Router::Port' lvalue ParmVar 0x55974abfc5c0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55974ac30690 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55974ac30690
| | `-ParmVarDecl 0x55974ac307a8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55974ac30848 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55974ac30848
| | `-ParmVarDecl 0x55974ac30958 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55974ac309f0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55974ac30cc0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55974ac30cc0
| | `-ParmVarDecl 0x55974ac30dc8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55974ac30e38 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55974ac30f48 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55974ac31268 <col:12>
|     |-BinaryOperator 0x55974ac31108 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55974ac310c0 <col:12> 'int' lvalue ->idx 0x55974abfbda0
|     | | `-CXXThisExpr 0x55974ac310b0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55974ac310f0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55974ac31080 <col:12> 'int' xvalue .idx 0x55974abfbda0
|     |     `-CXXStaticCastExpr 0x55974ac31050 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55974ac31020 <col:12> 'Router::Port' lvalue ParmVar 0x55974ac30f48 '' 'Router::Port &&'
|     |-BinaryOperator 0x55974ac31210 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55974ac311c8 <col:12> 'int' lvalue ->port 0x55974abfbe08
|     | | `-CXXThisExpr 0x55974ac311b8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55974ac311f8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55974ac31188 <col:12> 'int' xvalue .port 0x55974abfbe08
|     |     `-CXXStaticCastExpr 0x55974ac31158 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55974ac31128 <col:12> 'Router::Port' lvalue ParmVar 0x55974ac30f48 '' 'Router::Port &&'
|     `-ReturnStmt 0x55974ac31258 <col:12>
|       `-UnaryOperator 0x55974ac31240 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ac31230 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55974abfc710 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974abfc828 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55974abfca18 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55974abfcad0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55974abfca18 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55974ac309c8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55974ac30b00 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55974abfce08 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55974abfcb90 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55974abfcc10 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55974abfcc90 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55974abfcd10 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55974abfca18 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55974ac30b10 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55974ac31548 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55974ac31338 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55974ac31300 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55974ac312e8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55974ac30fd0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55974ac30e38 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55974ac30be0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55974ac30bc8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55974ac30b78 <col:13> 'Router::Port [2]' lvalue ->p 0x55974abfca18
| |   |   | |   `-CXXThisExpr 0x55974ac30b68 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55974ac30ba8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55974ac30fb8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55974ac30c80 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55974ac30c50 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55974ac30c10 <col:25> 'int' lvalue ParmVar 0x55974abfcc90 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55974ac30c68 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55974ac30c30 <col:33> 'int' lvalue ParmVar 0x55974abfcd10 'to_port' 'int'
| |   `-ExprWithCleanups 0x55974ac31530 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55974ac314f8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55974ac314e0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55974ac314c0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55974ac30e38 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55974ac313c8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55974ac313b0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55974ac31360 <col:13> 'Router::Port [2]' lvalue ->p 0x55974abfca18
| |       | |   `-CXXThisExpr 0x55974ac31350 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55974ac31390 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55974ac314a8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55974ac31468 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55974ac31438 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55974ac313f8 <col:25> 'int' lvalue ParmVar 0x55974abfcb90 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55974ac31450 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55974ac31418 <col:35> 'int' lvalue ParmVar 0x55974abfcc10 'from_port' 'int'
| |-CXXMethodDecl 0x55974abfcfd8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55974abfcee8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55974ac31b08 <col:45, line:182:9>
| |   |-ParenExpr 0x55974ac319e8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55974ac319b8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55974ac31688 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55974ac31658 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55974ac315c0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55974ac315a8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55974ac31568 <col:34> 'int' lvalue ParmVar 0x55974abfcee8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55974ac31588 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55974ac31638 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55974ac31620 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55974ac315e0 <col:44> 'int' lvalue ParmVar 0x55974abfcee8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55974ac31600 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55974ac316e8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55974ac316c8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55974ac31918 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55974ac31900 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55974ac318e0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55974ac31958 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55974ac31758 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55974ac31970 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55974ac31780 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55974ac31988 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55974ac317b8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55974ac319a0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55974ac318c8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55974ac318b0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55974ac31858 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55974ac31af8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55974ac31ad8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55974ac31aa8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55974ac31a18 <col:20> 'Router::Port const[2]' lvalue ->p 0x55974abfca18
| |       |   `-CXXThisExpr 0x55974ac31a08 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55974ac31ac0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55974ac31a48 <col:22> 'int' lvalue ParmVar 0x55974abfcee8 'i' 'int'
| |-CXXMethodDecl 0x55974abfd188 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55974abfd098 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55974ac32000 <col:33, line:186:9>
| |   |-ParenExpr 0x55974ac31f20 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55974ac31ef0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55974ac31c48 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55974ac31c18 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55974ac31b80 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55974ac31b68 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55974ac31b28 <col:34> 'int' lvalue ParmVar 0x55974abfd098 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55974ac31b48 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55974ac31bf8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55974ac31be0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55974ac31ba0 <col:44> 'int' lvalue ParmVar 0x55974abfd098 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55974ac31bc0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55974ac31ca8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55974ac31c88 <col:59> 'int' 0
| |   |   `-CallExpr 0x55974ac31e50 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55974ac31e38 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55974ac31e18 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55974ac31e90 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55974ac31d18 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55974ac31ea8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55974ac31d40 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55974ac31ec0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55974ac31d78 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55974ac31ed8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55974ac31e00 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55974ac31de8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55974ac31d98 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55974ac31ff0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55974ac31fd0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55974ac31fa0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55974ac31f50 <col:20> 'Router::Port [2]' lvalue ->p 0x55974abfca18
| |       |   `-CXXThisExpr 0x55974ac31f40 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55974ac31fb8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55974ac31f80 <col:22> 'int' lvalue ParmVar 0x55974abfd098 'i' 'int'
| |-CXXMethodDecl 0x55974abfd328 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55974abfd268 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55974ac32438 <col:52, line:190:9>
| |   `-ReturnStmt 0x55974ac32428 <line:189:13, col:51>
| |     `-BinaryOperator 0x55974ac32408 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55974ac321f0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55974ac321d8 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55974ac32190 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55974abfc278 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55974ac32098 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55974ac32080 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55974ac32030 <col:20> 'Router::Port const[2]' lvalue ->p 0x55974abfca18
| |       | | |   `-CXXThisExpr 0x55974ac32020 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55974ac32060 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55974ac32140 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55974ac32128 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55974ac320d8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55974abfca18
| |       |   |   `-DeclRefExpr 0x55974ac320b8 <col:28> 'const Router::Connection' lvalue ParmVar 0x55974abfd268 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55974ac32108 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55974ac323d0 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55974ac323b8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55974ac32398 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55974abfc278 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55974ac322a0 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55974ac32288 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55974ac32238 <col:38> 'Router::Port const[2]' lvalue ->p 0x55974abfca18
| |         | |   `-CXXThisExpr 0x55974ac32228 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55974ac32268 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55974ac32348 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55974ac32330 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55974ac322e0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55974abfca18
| |           |   `-DeclRefExpr 0x55974ac322c0 <col:46> 'const Router::Connection' lvalue ParmVar 0x55974abfd268 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55974ac32310 <col:50> 'int' 1
| `-CXXMethodDecl 0x55974abfd470 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55974abfd3e0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55974ac36158 <col:51, line:193:9>
|     `-ReturnStmt 0x55974ac36148 <line:192:13, col:69>
|       `-BinaryOperator 0x55974ac36128 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55974ac325c8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55974ac325b0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55974ac32590 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55974abfc508 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55974ac324c8 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55974ac324b0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55974ac32460 <col:20> 'Router::Port const[2]' lvalue ->p 0x55974abfca18
|         | | |   `-CXXThisExpr 0x55974ac32450 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55974ac32490 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55974ac32570 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55974ac32558 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55974ac32508 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55974abfca18
|         |   |   `-DeclRefExpr 0x55974ac324e8 <col:27> 'const Router::Connection' lvalue ParmVar 0x55974abfd3e0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55974ac32538 <col:31> 'int' 0
|         `-ParenExpr 0x55974ac36108 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55974ac360e8 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55974ac327a8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55974ac32790 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55974ac32770 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55974abfc278 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55974ac32678 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55974ac32660 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55974ac32610 <col:38> 'Router::Port const[2]' lvalue ->p 0x55974abfca18
|             | | |   `-CXXThisExpr 0x55974ac32600 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55974ac32640 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55974ac32720 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55974ac32708 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55974ac326b8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55974abfca18
|             |   |   `-DeclRefExpr 0x55974ac32698 <col:46> 'const Router::Connection' lvalue ParmVar 0x55974abfd3e0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55974ac326e8 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55974ac360b0 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55974ac36098 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55974ac36078 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55974abfc508 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55974ac32858 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55974ac32840 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55974ac327f0 <col:56> 'Router::Port const[2]' lvalue ->p 0x55974abfca18
|               | |   `-CXXThisExpr 0x55974ac327e0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55974ac32820 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55974ac36058 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55974ac36040 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55974ac32898 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55974abfca18
|                 |   `-DeclRefExpr 0x55974ac32878 <col:63> 'const Router::Connection' lvalue ParmVar 0x55974abfd3e0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55974ac36020 <col:67> 'int' 1
|-AccessSpecDecl 0x55974abfd530 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55974abfd558 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55974abfd610 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55974abfd6d0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55974abfd720 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55974abfd770 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55974abfd7c0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55974abfd810 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55974abfd860 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55974abfd978 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55974abfd958 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55974abfd940 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55974abfd920 <col:25> 'int' 2
| |-EnumConstantDecl 0x55974abfda20 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55974abfda00 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55974abfd9e8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55974abfd9c8 <col:48> 'int' 1
| |-EnumConstantDecl 0x55974abfdab0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55974abfda90 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55974abfda70 <col:71> 'int' 0
| |-EnumConstantDecl 0x55974abfdb40 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55974abfdb20 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55974abfdb00 <col:30> 'int' 1
| `-EnumConstantDecl 0x55974abfdbd0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55974abfdbb0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55974abfdb90 <col:50> 'int' 2
|-FieldDecl 0x55974abfdc30 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55974abfdc90 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55974abfdcf8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55974abfdd98 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55974abfdd78 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55974abfdd48 <col:30> 'int' 1
|-FieldDecl 0x55974abfde38 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55974abfde18 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55974abfdde8 <col:33> 'int' 1
|-FieldDecl 0x55974abfded8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55974abfdeb8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55974abfde88 <col:32> 'int' 1
|-FieldDecl 0x55974abfdf40 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55974abfdfa0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55974ac04e80 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55974ac04f80 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55974ac05080 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55974ac0bfb0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55974ac0c0c0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55974ac0c110 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55974ac0c228 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55974ac0c2c8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55974ac0c328 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55974ac0c3c0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55974ac0c3c0
| | `-ParmVarDecl 0x55974ac0c4d8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55974ac0c578 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55974ac0c578
| | `-ParmVarDecl 0x55974ac0c688 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55974ac0c728 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55974ac0c728
| | `-ParmVarDecl 0x55974ac0c838 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55974ac0c8a8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55974ac0c8a8
| | `-ParmVarDecl 0x55974ac0c9b8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55974ac0ca40 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55974ac0ca40
|-FieldDecl 0x55974ac191a0 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55974ac19200 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55974ac19310 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55974ac19668 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55974ac19770 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55974ac220d0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55974ac221e0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55974ac222e0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55974ac223f0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55974ac22500 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55974ac22610 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55974ac22720 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55974ac22770 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55974ac22870 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55974ac228c0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974ac22850 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55974ac22830 <col:29> 'int' 256
|-FieldDecl 0x55974ac22920 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55974ac22988 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55974ac229f0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55974ac22af0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55974ac2adb0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55974ac2ae10 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55974ac2ae70 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55974ac2aec0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55974ac2afd8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55974ac2b068 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55974ac2b170 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55974ac2b1c0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55974ac2b150 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55974ac2b130 <col:27> 'int' 4096
| |-FieldDecl 0x55974ac2b1e8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55974ac2b250 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55974ac2b448 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55974ac2b4d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55974ac2b698 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55974ac2b538 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55974ac2b5b0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55974ac2b1e8 'name' 'String'
| | | `-CXXConstructExpr 0x55974ac361b0 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55974ac36170 <col:20> 'const String' lvalue ParmVar 0x55974ac2b538 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55974ac2b250 'nsig' 'int'
| | | `-IntegerLiteral 0x55974ac36208 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55974ac2b448 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55974ac362f0 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55974ac2b4d8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55974ac362b0 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55974ac36270 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55974ac2b5b0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55974ac36580 <col:42, line:289:9>
| |   `-CallExpr 0x55974ac36530 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55974ac36518 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55974ac364f8 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55974a6dddf8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55974ac36568 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55974ac36440 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55974ac36420 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55974ac36408 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55974ac363b8 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55974ac2b448
| |     |     |   `-CXXThisExpr 0x55974ac363a8 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55974ac363e8 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55974ac36458 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55974ac364d8 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55974ac364b8 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55974ac36488 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55974ac2b448 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55974ac36478 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55974ac2b778 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55974ac2b778
| | `-ParmVarDecl 0x55974ac2b888 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55974ac2b928 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55974ac2b928
| | `-ParmVarDecl 0x55974ac2ba38 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55974ac2bad8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55974ac2bad8
| | `-ParmVarDecl 0x55974ac2bbe8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55974ac2bc58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55974ac2bc58
| | `-ParmVarDecl 0x55974ac2bd68 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55974ac2bdf0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55974ac2bdf0
|-FieldDecl 0x55974ac2bee0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55974ac2bf40 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55974ac2bfa0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55974ac2c000 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55974ac2c060 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55974ac2c170 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55974ac2c270 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55974ac2c2d0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55974ac2c418 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55974ac2c358 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55974ac2c5c8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55974ac2c4d8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55974ac2c710 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55974ac2c680 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55974ac2cab8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55974ac2c7c8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55974ac2c840 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55974ac2c8c0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55974ac2c938 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55974ac2c9b0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974ac2faf0 <col:57> 'bool' false
|-CXXMethodDecl 0x55974ac2cc28 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55974ac2cb90 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55974ac2cd78 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55974ac2cce0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55974ac2cec8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55974ac2ce30 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55974ac2d020 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55974ac2cf88 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55974ac2d340 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55974ac2d0d8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55974ac2d150 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55974ac2d1d0 <col:56> col:59 'int'
| `-ParmVarDecl 0x55974ac2d248 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55974ac2d4a8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55974ac2d410 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55974ac2d570 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55974ac2d630 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55974ac2d830 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55974ac2d6e0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55974ac2d758 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55974ac2d900 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55974ac2da48 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55974ac2d9b0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55974ac367c0 <col:42, line:326:5>
|   `-ReturnStmt 0x55974ac367b0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55974ac36798 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55974ac36778 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55974ac36748 <col:16, col:45> '<bound member function type>' .back 0x55974ab1f100
|           `-ArraySubscriptExpr 0x55974ac366c8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55974ac36698 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55974ac365a8 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55974ac19668
|             |   `-CXXThisExpr 0x55974ac36598 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55974ac366b0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55974ac365d8 <col:38> 'bool' lvalue ParmVar 0x55974ac2d9b0 'isout' 'bool'
|-CXXMethodDecl 0x55974ac2dc18 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55974ac2db00 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55974ac2db78 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55974ac2dd70 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55974ac2dcd8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55974ac2e018 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55974ac2de28 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55974ac2dea0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55974ac2df20 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55974ac2e1f0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55974ac2e0e0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55974ac2e158 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55974ac2e378 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55974ac2e2b8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55974ac2e610 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55974ac2e438 <col:23> col:26 'int'
| |-ParmVarDecl 0x55974ac2e4b0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55974ac2e528 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55974ac2e828 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55974ac2e6d8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55974ac2e750 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55974ac2ea38 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55974ac2e8f0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55974ac2e968 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55974ac2ebb8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55974ac2eaf8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55974ac2edb8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55974ac2ec70 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55974ac2ece8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55974ac2ef90 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55974ac2ee78 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55974ac2eef8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55974ac2f270 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55974ac2f050 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55974ac2f0c8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55974ac2f148 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55974ac2f1c0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55974ac2f350 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55974ac2f3b0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55974ac2f630 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55974ac2f530 parent 0x55974a9df460 prev 0x55974a9ef088 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55974ac2f410 <col:36> col:39 'int'
    `-ParmVarDecl 0x55974ac2f490 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9df460 prev 0x55974a9df1e0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974a9df558 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55974a9df5e8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55974a9df648 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55974a9df738 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55974a9df838 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55974a9dfa08 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55974a9df8b8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55974a9df930 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55974a9dfb98 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55974a9dfad0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55974a9dfc40 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55974a9dfd78 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55974a9dfcb0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55974a9dff18 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55974a9dfe58 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55974a9e00b8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55974a9dfff8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55974a9e0160 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55974a9e0260 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55974a9e0340 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e0240 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55974a9e0220 <col:26> 'int' 1
| `-EnumConstantDecl 0x55974a9e02f0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55974a9e0358 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9e02d0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55974a9e02b0 <col:44> 'int' 2
|-CXXMethodDecl 0x55974a9e04a0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55974a9e0388 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55974a9e0408 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55974a9e05f8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55974a9e0568 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55974a9e0838 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55974a9e06b8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55974a9e0730 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55974a9e08e8 <col:20>
| `-OptimizeNoneAttr 0x55974a9e0940 <col:30>
|-CXXMethodDecl 0x55974a9e0a48 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55974a9e0980 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55974a9e0af0 <col:20>
| `-OptimizeNoneAttr 0x55974a9e0b48 <col:30>
|-CXXMethodDecl 0x55974a9e0b98 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55974a9e0c60 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55974a9e0d78 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55974a9e0e00 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55974a9e0e88 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55974a9e0f10 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55974a9e0f98 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55974a9e1028 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55974a9e10e8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55974a9e1170 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55974a9e11f8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55974a9e1280 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55974a9e1308 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55974a9e1390 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55974a9e1420 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55974a9e14e0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55974a9e1570 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55974a9e16c0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55974a9e1628 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55974a9e1850 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55974a9e1780 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55974a9e1b00 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55974a9e1908 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55974a9e1988 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55974a9e1a08 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55974a9e1bb8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55974a9e1cc0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55974a9e1f50 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e1ca0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55974a9e1c80 <col:33> 'int' 0
| |-EnumConstantDecl 0x55974a9e1d50 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55974a9e1f68 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e1d30 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55974a9e1d10 <col:32> 'int' 20
| |-EnumConstantDecl 0x55974a9e1de0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55974a9e1f80 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e1dc0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55974a9e1da0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55974a9e1e70 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55974a9e1f98 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e1e50 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55974a9e1e30 <col:35> 'int' 100
| `-EnumConstantDecl 0x55974a9e1f00 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55974a9e1fb0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9e1ee0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55974a9e1ec0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55974a9e1ff0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55974a9e2430 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55974a9e22a0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55974a9e2318 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9e2500 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55974a9e2680 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55974a9e25b0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9e2888 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55974a9e2738 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55974a9e27b0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9e2988 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55974a9e2a28 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55974a9e2af0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55974a9e2b80 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55974a9e2db0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e2b60 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55974a9e2b40 <col:36> 'int' EnumConstant 0x55974a9e2af0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55974a9e2bd0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55974a9e2c20 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55974a9e2c70 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55974a9e2cc0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55974a9e2d10 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55974a9e2d60 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55974a9e2e98 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55974a9e2dd8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55974a9e2f60 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55974a9e3020 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55974a9e30e0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55974a9e31a0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55974a9e32b8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55974a9e3380 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55974a9e3500 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55974a9e3430 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55974a9e3628 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55974a9e3828 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55974a9e36d8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55974a9e3758 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55974a9f1178 <col:54, line:127:5>
|   |-ParenExpr 0x55974a9f1028 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55974a9f0ff8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9f0ce8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55974a9f0cc0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55974a9f0ca8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55974a9f0c90 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55974a9f0c60 <col:31> 'Router *' lvalue ->_router 0x55974a9eeb40
|   |   |         `-CXXThisExpr 0x55974a9f0c50 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55974a9f0d48 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9f0d28 <col:48> 'int' 0
|   |   `-CallExpr 0x55974a9f0f58 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55974a9f0f40 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9f0f20 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9f0f98 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9f0db8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55974a9f0fb0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9f0dd8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55974a9f0fc8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9f0e10 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55974a9f0fe0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9f0f08 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9f0ef0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9f0ea8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55974a9f10c0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55974a9f1058 <col:9> 'Router *' lvalue ->_router 0x55974a9eeb40
|   | | `-CXXThisExpr 0x55974a9f1048 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55974a9f10a8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55974a9f1088 <col:19> 'Router *' lvalue ParmVar 0x55974a9e36d8 'r' 'Router *'
|   `-BinaryOperator 0x55974a9f1158 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55974a9f10f0 <col:9> 'int' lvalue ->_eindex 0x55974a9eeba8
|     | `-CXXThisExpr 0x55974a9f10e0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55974a9f1140 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55974a9f1120 <col:19> 'int' lvalue ParmVar 0x55974a9e3758 'eindex' 'int'
|-CXXMethodDecl 0x55974a9e39b0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55974a9e38e8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55974a9e3a80 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55974a9e3b48 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55974a9e3be8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55974a9e3e38 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55974a9e3cb0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55974a9e3d30 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55974a9e3ee8 <col:20>
| `-OptimizeNoneAttr 0x55974a9e3f40 <col:30>
|-CXXMethodDecl 0x55974a9e4048 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55974a9e3f80 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55974a9e40f0 <col:20>
| `-OptimizeNoneAttr 0x55974a9e4148 <col:30>
|-CXXMethodDecl 0x55974a9e4218 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55974a9e4188 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55974a9e42c0 <col:20>
| `-OptimizeNoneAttr 0x55974a9e4318 <col:30>
|-CXXMethodDecl 0x55974a9e44a8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55974a9e4350 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55974a9e43d0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55974a9e4638 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55974a9e4570 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55974a9e4788 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55974a9e46f8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55974a9e48d8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55974a9e4848 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55974a9e4a28 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55974a9e4998 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55974a9e4ce8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55974a9e4ae0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55974a9e4b60 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55974a9e4c08 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55974a9e4dc0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55974a9e4e80 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55974a9e5150 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55974a9e5000 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55974a9e5078 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9e5278 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55974a9e5450 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55974a9e5330 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55974a9e53b0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55974a9e5638 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55974a9e5518 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55974a9e5598 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55974a9e59a8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55974a9e56f8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55974a9e5770 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55974a9e57f0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55974a9f0760 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55974a9f0740 <col:106> 'int' 0
| `-ParmVarDecl 0x55974a9e5868 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974a9f0798 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974a9f0778 <col:126> 'int' 0
|-CXXMethodDecl 0x55974a9e5d48 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55974a9e5a78 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55974a9e5b10 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55974a9e5b90 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55974a9e5c08 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974a9f07d0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974a9f07b0 <col:114> 'int' 0
|-CXXMethodDecl 0x55974a9e60d8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55974a9e5e20 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55974a9e5e98 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55974a9e5f18 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55974a9f07e8 <col:96> 'int' 0
| `-ParmVarDecl 0x55974a9e5f90 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974a9f0828 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974a9f0808 <col:116> 'int' 0
|-CXXMethodDecl 0x55974a9e6458 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55974a9e61a8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55974a9e6220 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55974a9e62a0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55974a9f0860 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55974a9f0840 <col:109> 'int' 0
| `-ParmVarDecl 0x55974a9e6318 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974a9f0898 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974a9f0878 <col:129> 'int' 0
|-CXXMethodDecl 0x55974a9e67d8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55974a9e6528 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55974a9e65a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55974a9e6620 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55974a9e6698 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974a9f08d0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974a9f08b0 <col:117> 'int' 0
|-CXXMethodDecl 0x55974a9e6b68 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55974a9e68b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e6928 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55974a9e69a8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55974a9f08e8 <col:99> 'int' 0
| `-ParmVarDecl 0x55974a9e6a20 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55974a9f0928 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55974a9f0908 <col:119> 'int' 0
|-CXXMethodDecl 0x55974a9e6f88 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55974a9e6c38 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55974a9e6cb8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55974a9e6d30 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55974a9e6db0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55974a9f0960 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55974a9f0940 <col:108> 'int' 0
| `-ParmVarDecl 0x55974a9e6e30 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55974a9f0998 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55974a9f0978 <col:141> 'int' 0
|-CXXMethodDecl 0x55974a9e73a8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55974a9e7060 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55974a9e70e0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55974a9e7158 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55974a9e71d8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55974a9e7258 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55974a9f09b0 <col:121> 'int' 0
|-CXXMethodDecl 0x55974a9e77d8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55974a9e7488 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55974a9e7508 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55974a9e7580 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55974a9e7600 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55974a9f09d0 <col:98> 'int' 0
| `-ParmVarDecl 0x55974a9e7680 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55974a9f09f0 <col:123> 'int' 0
|-CXXMethodDecl 0x55974a9e7aa0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55974a9e78b0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55974a9e7930 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55974a9e79b0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55974a9f0a10 <col:80> 'int' 0
|-EnumDecl 0x55974a9e7b58 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55974a9e7c60 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55974a9e7ef0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e7c40 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55974a9e7c20 <col:42> 'int' 1
| |-EnumConstantDecl 0x55974a9e7cf0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55974a9e7f08 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e7cd0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55974a9e7cb0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55974a9e7d80 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55974a9e7f20 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e7d60 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55974a9e7d40 <col:44> 'int' 4
| |-EnumConstantDecl 0x55974a9e7e10 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55974a9e7f38 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9e7df0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55974a9e7dd0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55974a9e7ea0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55974a9e7f50 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9e7e80 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55974a9e7e60 <col:34> 'int' 6
|-CXXMethodDecl 0x55974a9e8208 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55974a9e7f78 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55974a9e8018 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55974a9e8098 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55974a9e8110 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55974a9f0ac8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55974a9f0ab0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55974a9f0a98 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55974a9f0a78 <col:98, col:105> 'String' (CXXTemporary 0x55974a9f0a78)
|           `-CXXTemporaryObjectExpr 0x55974a9f0a40 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55974a9e84a8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55974a9e82d8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55974a9e8350 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55974a9e83c8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55974a9f0b78 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55974a9f0b60 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55974a9f0b48 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55974a9f0b28 <col:94, col:101> 'String' (CXXTemporary 0x55974a9f0b28)
| |         `-CXXTemporaryObjectExpr 0x55974a9f0af0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55974a9f1360 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55974a9f12d8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55974a9f12a8 <col:9> '<bound member function type>' ->add_task_handlers 0x55974a9e8208
|     | `-CXXThisExpr 0x55974a9f1298 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55974a9f1318 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55974a9f1218 <col:27> 'Task *' lvalue ParmVar 0x55974a9e82d8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55974a9f1330 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55974a9f1238 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55974a9e8350 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55974a9f1348 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55974a9f1258 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55974a9e7ea0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55974a9f1278 <col:62> 'const String' lvalue ParmVar 0x55974a9e83c8 'prefix' 'const String &'
|-CXXMethodDecl 0x55974a9e86b8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55974a9e8570 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55974a9e85e8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55974a9f0c28 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55974a9f0c10 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55974a9f0bf8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55974a9f0bd8 <col:70, col:77> 'String' (CXXTemporary 0x55974a9f0bd8)
| |         `-CXXTemporaryObjectExpr 0x55974a9f0ba0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55974a9f1538 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55974a9f14b0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55974a9f1480 <col:9> '<bound member function type>' ->add_task_handlers 0x55974a9e8208
|     | `-CXXThisExpr 0x55974a9f1470 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55974a9f14f0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55974a9f13f0 <col:27> 'Task *' lvalue ParmVar 0x55974a9e8570 'task' 'Task *'
|     |-ImplicitCastExpr 0x55974a9f1508 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55974a9f1410 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55974a9f1520 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55974a9f1430 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55974a9e7ea0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55974a9f1450 <col:57> 'const String' lvalue ParmVar 0x55974a9e85e8 'prefix' 'const String &'
|-CXXMethodDecl 0x55974a9e8998 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55974a9e8780 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e8800 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e8878 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55974a9e8c48 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55974a9e8a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e8ae8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e8b68 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55974a9e8f38 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55974a9e8d18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e8d98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e8e10 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55974a9e91e8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55974a9e9008 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e9088 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e9108 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55974a9e9498 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55974a9e92b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e9338 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e93b8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55974a9e9748 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55974a9e9568 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e95e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e9660 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55974a9e99f8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55974a9e9818 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e9898 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e9918 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55974a9e9d08 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55974a9e9b20 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e9ba0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e9c20 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55974a9e9fe8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55974a9e9dd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9e9e58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9e9f00 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55974a9ea2c8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55974a9ea0b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9ea138 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9ea1e0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55974a9ea530 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55974a9ea398 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55974a9ea418 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55974a9ea490 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55974a9ea7d8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55974a9ea600 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55974a9ea680 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55974a9ea6f8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55974a9eaa88 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55974a9ea8a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9ea928 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9ea9a8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55974a9ead38 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55974a9eab58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9eabd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9eac50 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55974a9eafe8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55974a9eae08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9eae88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9eaf00 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55974a9eb2b8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55974a9eb0b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9eb138 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55974a9eb1d8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55974a9eb5e8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55974a9eb388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55974a9eb408 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55974a9eb480 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55974a9eb4f8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974a9f0c40 <col:93> 'bool' false
|-CXXMethodDecl 0x55974a9eb7d0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55974a9eb6b8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55974a9eb738 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55974a9eb9a8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55974a9eb890 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55974a9eb910 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55974a9ebc88 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55974a9eba68 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55974a9ebae0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55974a9ebb60 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55974a9ebbd8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9ebf78 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55974a9ebd58 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55974a9ebdd0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55974a9ebe50 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55974a9ebec8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9ec1b0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55974a9ec050 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55974a9ec0d0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55974a9ec398 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55974a9ec278 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55974a9ec2f8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55974a9ec448 prev 0x55974a9e3be8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55974a9ec540 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55974a9ec5d0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55974a9ec648 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55974a9ec708 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55974a9ec7d0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55974a9ec948 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55974a9ec880 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55974a9ec9f0 <col:24>
| | `-OptimizeNoneAttr 0x55974a9eca48 <col:34>
| |-CXXMethodDecl 0x55974a9eca90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55974a9ecd48 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55974a9ecb40 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55974a9ecbb8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55974a9ecc38 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55974a9ece00 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55974a9ece38 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55974a9ecea0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55974a9ecf28 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55974a9ed248 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55974a9ecfe0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55974a9ed058 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55974a9ed0d0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55974a9ed150 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55974a9ed360 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55974a9f4cd8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55974a9f4cd8
| | `-ParmVarDecl 0x55974a9f4de8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55974a9f4e88 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55974a9f4e88
| | `-ParmVarDecl 0x55974a9f4f98 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55974ac4faa0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55974a9ed3d8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55974a9ed478 <col:38> "" ""
|-CXXMethodDecl 0x55974a9ed508 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55974a9ed5a8 <col:44> "" ""
|-AccessSpecDecl 0x55974a9ed618 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55974a9ed640 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55974a9ed740 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55974a9ed790 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9ed720 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55974a9ed700 <col:27> 'int' 4
|-FieldDecl 0x55974a9ed848 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55974a9ed9f8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55974a9edab0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55974a9eeb40 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55974a9eeba8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55974a9eecf8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55974a9eec38 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55974a9eeea8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55974a9eedb8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55974a9ef088 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55974a9eef68 <col:20> col:23 'int'
| `-ParmVarDecl 0x55974a9eefe8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55974a9ef330 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55974a9ef150 <col:23> col:26 'int'
| |-ParmVarDecl 0x55974a9ef1d0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55974a9ef248 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55974a9ef3e8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55974a9ef4b0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55974a9ef500 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55974a9ef550 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55974a9ef730 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55974a9ef5e0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55974a9ef658 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9ef9d8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55974a9ef7f8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55974a9ef878 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55974a9ef8f0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55974a9efbf8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55974a9efaa8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55974a9efb28 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55974a9eff30 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55974a9efcb8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55974a9efd38 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55974a9efdb0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55974a9efe30 <col:57> col:60 'int'
|-CXXMethodDecl 0x55974a9f0118 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55974a9f0000 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55974a9f0080 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55974a9f0268 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55974a9f01d8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55974a9f05e8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55974a9f0328 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55974a9f03a8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55974a9f0420 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55974a9f04a0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55974a9f0700 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ReadWriteLock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<struct ARPTable::ARPEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >
         0 |   class HashContainer_adapter<struct ARPTable::ARPEntry> (base) (empty)
         0 |   struct ARPTable::ARPEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >
         0 |   class HashContainer_rep<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > _rep
         0 |     class HashContainer_adapter<struct ARPTable::ARPEntry> (base) (empty)
         0 |     struct ARPTable::ARPEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class List<struct ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>
         0 |   struct ARPTable::ARPEntry * _head
         8 |   struct ARPTable::ARPEntry * _tail
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<72>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class ARPTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class ReadWriteLock _lock (empty)
       112 |   class HashContainer<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > _table
       112 |     class HashContainer_rep<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > _rep
       112 |       class HashContainer_adapter<struct ARPTable::ARPEntry> (base) (empty)
       112 |       struct ARPTable::ARPEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class List<struct ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link> _age
       144 |     struct ARPTable::ARPEntry * _head
       152 |     struct ARPTable::ARPEntry * _tail
       160 |   class atomic_uint32_t _entry_count
       160 |     uint32_t _val
       164 |   class atomic_uint32_t _packet_count
       164 |     uint32_t _val
       168 |   uint32_t _entry_capacity
       172 |   uint32_t _packet_capacity
       176 |   uint32_t _entry_packet_capacity
       180 |   uint32_t _capacity_slim_factor
       184 |   uint32_t _timeout_j
       188 |   class atomic_uint32_t _drops
       188 |     uint32_t _val
       192 |   class SizedHashAllocator<72> _alloc
       192 |     class HashAllocator (base)
       192 |       struct HashAllocator::link * _free
       200 |       struct HashAllocator::buffer * _buffer
       208 |       size_t _size
       216 |   class Timer _expire_timer
       216 |     int _schedpos1
       224 |     class Timestamp _expiry_s
       224 |       union Timestamp::rep_t _t
       224 |         int64_t x
       232 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       232 |       TimerCallback callback
       240 |     void * _thunk
       248 |     class Element * _owner
       256 |     class RouterThread * _thread
           | [sizeof=264, dsize=264, align=8,
           |  nvsize=264, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a962980 <../dummy_inc/click/sync.hh:406:1, line:429:1> line:406:7 referenced class ReadWriteLock definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55974a962a98 <col:1, col:7> col:7 implicit referenced class ReadWriteLock
|-AccessSpecDecl 0x55974a962b28 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55974a962bb0 <line:408:5, col:26> col:12 used ReadWriteLock 'void ()' inline
|-CXXMethodDecl 0x55974a962c78 <line:413:5, col:30> col:17 used acquire_read 'void ()' inline
|-CXXMethodDecl 0x55974a962d38 <line:414:5, col:30> col:17 attempt_read 'bool ()' inline
|-CXXMethodDecl 0x55974a962df8 <line:415:5, col:30> col:17 used release_read 'void ()' inline
|-CXXMethodDecl 0x55974a962eb8 <line:416:5, col:31> col:17 acquire_write 'void ()' inline
|-CXXMethodDecl 0x55974a962f78 <line:417:5, col:31> col:17 attempt_write 'bool ()' inline
|-CXXMethodDecl 0x55974a963038 <line:418:5, col:31> col:17 release_write 'void ()' inline
|-CXXConstructorDecl 0x55974a963178 <line:406:7> col:7 implicit constexpr ReadWriteLock 'void (const ReadWriteLock &)' inline default trivial noexcept-unevaluated 0x55974a963178
| `-ParmVarDecl 0x55974a963288 <col:7> col:7 'const ReadWriteLock &'
`-CXXConstructorDecl 0x55974a963328 <col:7> col:7 implicit constexpr ReadWriteLock 'void (ReadWriteLock &&)' inline default trivial noexcept-unevaluated 0x55974a963328
  `-ParmVarDecl 0x55974a963438 <col:7> col:7 'ReadWriteLock &&'

Layout: <CGRecordLayout
  LLVMType:%class.ReadWriteLock = type { i8 }
  NonVirtualBaseLLVMType:%class.ReadWriteLock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aa8a018 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'ARPTable::ARPEntry'
|-CXXRecordDecl 0x55974aa8a5c8 prev 0x55974aa8a018 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x55974aa8a658 <col:31, col:37> col:31 public
|-TypedefDecl 0x55974aa8a750 <line:34:5, col:34> col:34 referenced key_type 'typename ARPEntry::key_type':'IPAddress'
| `-ElaboratedType 0x55974aa8a700 'typename ARPEntry::key_type' sugar
|   `-TypedefType 0x55974aa8a6e0 'ARPTable::ARPEntry::key_type' sugar
|     |-Typedef 0x55974aa889a8 'key_type'
|     `-RecordType 0x55974a745500 'IPAddress'
|       `-CXXRecord 0x55974a7e0430 'IPAddress'
|-TypedefDecl 0x55974aa8a820 <line:35:5, col:45> col:45 key_const_reference 'typename ARPEntry::key_const_reference':'IPAddress'
| `-ElaboratedType 0x55974aa8a7d0 'typename ARPEntry::key_const_reference' sugar
|   `-TypedefType 0x55974aa88bd0 'ARPTable::ARPEntry::key_const_reference' sugar
|     |-Typedef 0x55974aa88a10 'key_const_reference'
|     `-RecordType 0x55974a745500 'IPAddress'
|       `-CXXRecord 0x55974a7e0430 'IPAddress'
|-CXXMethodDecl 0x55974aa8aa10 <line:36:5, line:38:5> line:36:16 hashnext 'ARPTable::ARPEntry *&(ARPTable::ARPEntry *)' static
| `-ParmVarDecl 0x55974aa8a918 <col:25, col:28> col:28 e 'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x55974aa8ac18 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<ARPTable::ARPEntry>::key_const_reference (const ARPTable::ARPEntry *)' static
| `-ParmVarDecl 0x55974aa8ab28 <col:40, col:49> col:49 e 'const ARPTable::ARPEntry *'
|-CXXMethodDecl 0x55974aa8aeb8 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<ARPTable::ARPEntry>::key_type &, const HashContainer_adapter<ARPTable::ARPEntry>::key_type &)' static
| |-ParmVarDecl 0x55974aa8ad28 <col:27, col:43> col:43 a 'const HashContainer_adapter<ARPTable::ARPEntry>::key_type &'
| `-ParmVarDecl 0x55974aa8ada0 <col:46, col:62> col:62 b 'const HashContainer_adapter<ARPTable::ARPEntry>::key_type &'
|-CXXConstructorDecl 0x55974aa8ef78 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<ARPTable::ARPEntry> &)' inline default trivial noexcept-unevaluated 0x55974aa8ef78
| `-ParmVarDecl 0x55974aa8f088 <col:7> col:7 'const HashContainer_adapter<ARPTable::ARPEntry> &'
|-CXXConstructorDecl 0x55974aa8f128 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<ARPTable::ARPEntry> &&)' inline default trivial noexcept-unevaluated 0x55974aa8f128
| `-ParmVarDecl 0x55974aa8f238 <col:7> col:7 'HashContainer_adapter<ARPTable::ARPEntry> &&'
|-CXXDestructorDecl 0x55974aa8f448 <col:7> col:7 implicit ~HashContainer_adapter 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55974aa8f588 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<ARPTable::ARPEntry> &(const HashContainer_adapter<ARPTable::ARPEntry> &)' inline default trivial noexcept-unevaluated 0x55974aa8f588
| `-ParmVarDecl 0x55974aa8f698 <col:7> col:7 'const HashContainer_adapter<ARPTable::ARPEntry> &'
`-CXXMethodDecl 0x55974aa8f708 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<ARPTable::ARPEntry> &(HashContainer_adapter<ARPTable::ARPEntry> &&)' inline default trivial noexcept-unevaluated 0x55974aa8f708
  `-ParmVarDecl 0x55974aa8f818 <col:7> col:7 'HashContainer_adapter<ARPTable::ARPEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a7e0430 prev 0x55974a745468 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a7e0528 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55974a7e05b8 <col:19, col:25> col:19 public
|-TypedefDecl 0x55974a7e05f0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55974a5d2d40 'uninitialized_type'
|   `-CXXRecord 0x55974a5d2ca8 'uninitialized_type'
|-CXXConstructorDecl 0x55974a7e06b0 <line:20:5, line:22:5> line:20:12 IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55974a7e3e00 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974a7e3ea8 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55974a7e3e68 <col:10> 'int' 0
| `-CompoundStmt 0x55974a7e3ef0 <col:13, line:22:5>
|-CXXConstructorDecl 0x55974a7e0800 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55974a7e0770 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55974a7e3e00 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974a7e3f40 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55974a7e3f00 <col:10> 'unsigned int' lvalue ParmVar 0x55974a7e0770 'x' 'unsigned int'
| `-CompoundStmt 0x55974a7e3f88 <col:13, line:27:5>
|-CXXConstructorDecl 0x55974a7e0958 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55974a7e08c8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55974a7e3e00 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974a7e3ff0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55974a7e3fd8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55974a7e3f98 <col:10> 'int' lvalue ParmVar 0x55974a7e08c8 'x' 'int'
| `-CompoundStmt 0x55974a7e4038 <col:13, line:31:5>
|-CXXConstructorDecl 0x55974a7e0ab0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55974a7e0a20 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55974a7e3e00 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974a7e40a0 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55974a7e4088 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55974a7e4048 <col:10> 'unsigned long' lvalue ParmVar 0x55974a7e0a20 'x' 'unsigned long'
| `-CompoundStmt 0x55974a7e40e8 <col:13, line:35:5>
|-CXXConstructorDecl 0x55974a7e0c08 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55974a7e0b78 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55974a7e3e00 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974a7e4150 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55974a7e4138 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55974a7e40f8 <col:10> 'long' lvalue ParmVar 0x55974a7e0b78 'x' 'long'
| `-CompoundStmt 0x55974a7e4198 <col:13, line:39:5>
|-CXXConstructorDecl 0x55974a7e0dc8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55974a7e0cd8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55974a7e3e00 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974a7e4218 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55974a7e41c8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55974a714220
| |     `-DeclRefExpr 0x55974a7e41a8 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55974a7e0cd8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55974a7e4260 <col:20, line:44:5>
|-CXXConstructorDecl 0x55974a7e0f58 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55974a7e0e90 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55974a7e43c8 <col:51, line:56:5>
|   `-BinaryOperator 0x55974a7e43a8 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55974a7e4280 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55974a7e3e00
|     | `-CXXThisExpr 0x55974a7e4270 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55974a7e4390 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55974a7e4378 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55974a7e4358 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55974a7e4328 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55974a7e4310 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55974a7e42b0 <col:47> 'const unsigned char *' lvalue ParmVar 0x55974a7e0e90 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55974a7e10a8 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55974a7e1018 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55974a7e1258 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55974a7e1198 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55974a7e4438 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55974a7e4410 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55974a7e43e0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55974a7e1198 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55974a7e13e8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55974a7e1320 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55974a7e14d8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55974a7e53f8 <col:46, line:83:5>
|   `-ReturnStmt 0x55974a7e53e8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55974a7e53d0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55974a7e53a0 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a7e5258 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55974a7e5140 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55974a7e5028 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55974a7e4460 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55974a7e15c8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55974a7e54a8 <col:31, line:88:5>
|   `-ReturnStmt 0x55974a7e5498 <line:87:2, col:10>
|     `-UnaryOperator 0x55974a7e5480 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55974a7e5468 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55974a7e5450 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55974a7e5420 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55974a7e3e00
|             `-CXXThisExpr 0x55974a7e5410 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55974a7e1688 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55974a7e5528 <col:34, line:93:5>
|   `-ReturnStmt 0x55974a7e5518 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55974a7e5500 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974a7e54d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55974a7e3e00
|         `-CXXThisExpr 0x55974a7e54c0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55974a7e1758 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55974a7e55a8 <col:38, line:101:5>
|   `-ReturnStmt 0x55974a7e5598 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55974a7e5580 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974a7e5550 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55974a7e3e00
|         `-CXXThisExpr 0x55974a7e5540 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55974a7e1828 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55974a7e5878 <col:38, line:108:5>
|   `-ReturnStmt 0x55974a7e5868 <line:107:2, col:58>
|     `-BinaryOperator 0x55974a7e5848 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55974a7e5760 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55974a7e5740 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55974a7e5728 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55974a7e55d0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55974a7e3e00
|       |   |   `-CXXThisExpr 0x55974a7e55c0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55974a7e5700 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55974a7e56e8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55974a7e5668 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55974a722758 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55974a7e5648 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55974a7e5820 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55974a7e5808 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55974a7e57e8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55974a722758 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55974a7e57c8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55974a7e18e8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55974a7e5ae8 <col:39, line:112:5>
|   `-ReturnStmt 0x55974a7e5ad8 <line:111:2, col:56>
|     `-BinaryOperator 0x55974a7e5ab8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55974a7e59d0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55974a7e59b0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55974a7e5998 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55974a7e58a0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55974a7e3e00
|       |   |   `-CXXThisExpr 0x55974a7e5890 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55974a7e5970 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55974a7e5958 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55974a7e5938 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55974a722758 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55974a7e5918 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55974a7e5a90 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55974a7e5a78 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55974a7e5a58 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55974a722758 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55974a7e5a38 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55974a7e1a18 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55974a7e1b20 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55974a7e1c30 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55974a7e2cf8 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55974a7e2db8 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a7e2e80 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55974a7e3078 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55974a7e2f30 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55974a7e2fa8 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55974a7e31f8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55974a7e3138 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55974a7e3340 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55974a7e32b0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55974a7e34e8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55974a7e33f8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55974a7e3630 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55974a7e35a0 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55974a7e3778 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55974a7e36e8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55974a7e3840 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55974a7e3900 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55974a7e3a78 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55974a7e39b0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55974a7e3b40 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55974a7e3c28 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55974a7e3cd0 <col:51> "" ""
|-TypedefDecl 0x55974a7e3d70 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55974a745500 'IPAddress'
|   `-CXXRecord 0x55974a7e0430 'IPAddress'
|-AccessSpecDecl 0x55974a7e3dc8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55974a7e3e00 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55974a7e44a8 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a7e45b8 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x55974a7e3e00 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974aa96ed8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55974aa96e90 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55974a7e3e00
| |     `-DeclRefExpr 0x55974aa96e70 <col:7> 'const IPAddress' lvalue ParmVar 0x55974a7e45b8 '' 'const IPAddress &'
| `-CompoundStmt 0x55974aa96f20 <col:7>
|-CXXConstructorDecl 0x55974a7e4658 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a7e4768 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55974a7e3e00 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974a7e5348 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55974a7e5300 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55974a7e3e00
| |     `-CXXStaticCastExpr 0x55974a7e52d0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55974a7e52a0 <col:7> 'IPAddress' lvalue ParmVar 0x55974a7e4768 '' 'IPAddress &&'
| `-CompoundStmt 0x55974a7e5390 <col:7>
|-CXXDestructorDecl 0x55974a7e5058 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55974aa89928 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x55974aa89928
| `-ParmVarDecl 0x55974aa89a38 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x55974aa89aa8 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x55974aa89aa8
  `-ParmVarDecl 0x55974aa89bb8 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9f7e48 prev 0x55974a9df3b0 <../dummy_inc/click/etheraddress.hh:9:1, line:148:1> line:9:7 referenced class EtherAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-PackedAttr 0x55974a9f98b8 <line:148:18>
|-CXXRecordDecl 0x55974a9f7f40 <line:9:1, col:7> col:7 implicit referenced class EtherAddress
|-AccessSpecDecl 0x55974a9f7fd0 <col:22, col:28> col:22 public
|-TypedefDecl 0x55974a9f8008 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55974a5d2d40 'uninitialized_type'
|   `-CXXRecord 0x55974a5d2ca8 'uninitialized_type'
|-CXXConstructorDecl 0x55974a9f8098 <line:14:5, line:16:5> line:14:12 used EtherAddress 'void ()' inline
| `-CompoundStmt 0x55974a9f9bb8 <col:27, line:16:5>
|   `-BinaryOperator 0x55974a9f9b98 <line:15:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x55974a9f99a0 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x55974a9f9988 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55974a9f9938 <col:2> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|     | |   `-CXXThisExpr 0x55974a9f9928 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x55974a9f9968 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x55974a9f9b80 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x55974a9f9b60 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x55974a9f9a38 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x55974a9f9a20 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x55974a9f99d0 <col:13> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|         | |   `-CXXThisExpr 0x55974a9f99c0 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x55974a9f9a00 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x55974a9f9b48 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x55974a9f9b28 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x55974a9f9ad0 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x55974a9f9ab8 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x55974a9f9a68 <col:24> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|             | |   `-CXXThisExpr 0x55974a9f9a58 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x55974a9f9a98 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x55974a9f9b10 <col:35> 'uint16_t':'unsigned short' <IntegralCast>
|               `-IntegerLiteral 0x55974a9f9af0 <col:35> 'int' 0
|-CXXConstructorDecl 0x55974a9f81e8 <line:22:5, line:24:5> line:22:21 EtherAddress 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x55974a9f8158 <col:34, col:55> col:55 used data 'const unsigned char *'
| `-CompoundStmt 0x55974a9f9d80 <col:61, line:24:5>
|   `-CallExpr 0x55974a9f9cd0 <line:23:2, col:23> 'void *'
|     |-ImplicitCastExpr 0x55974a9f9cb8 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55974a9f9c98 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55974a6dcab8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x55974a9f9d20 <col:9> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x55974a9f9d08 <col:9> 'uint16_t *' <ArrayToPointerDecay>
|     |   `-MemberExpr 0x55974a9f9c28 <col:9> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|     |     `-CXXThisExpr 0x55974a9f9c18 <col:9> 'EtherAddress *' implicit this
|     |-ImplicitCastExpr 0x55974a9f9d50 <col:16> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x55974a9f9d38 <col:16> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x55974a9f9c58 <col:16> 'const unsigned char *' lvalue ParmVar 0x55974a9f8158 'data' 'const unsigned char *'
|     `-ImplicitCastExpr 0x55974a9f9d68 <col:22> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x55974a9f9c78 <col:22> 'int' 6
|-CXXConstructorDecl 0x55974a9f8338 <line:27:5, line:29:5> line:27:12 EtherAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55974a9f82a8 <col:25, col:51> col:51 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55974a9f9df0 <col:59, line:29:5>
|   `-CStyleCastExpr 0x55974a9f9dc8 <line:28:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55974a9f9d98 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55974a9f82a8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55974a9f8438 <line:32:5, line:34:5> line:32:25 used make_broadcast 'EtherAddress ()' static
| `-CompoundStmt 0x55974a9fa538 <col:42, line:34:5>
|   `-ReturnStmt 0x55974a9fa528 <line:33:2, col:28>
|     `-ExprWithCleanups 0x55974a9fa510 <col:9, col:28> 'EtherAddress'
|       `-CXXConstructExpr 0x55974a9fa4e0 <col:9, col:28> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a9fa318 <col:9, col:28> 'EtherAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55974a9fa290 <col:9, col:28> 'EtherAddress' functional cast to class EtherAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55974a9fa180 <col:9, col:28> 'EtherAddress' 'void (uint16_t)'
|               `-ImplicitCastExpr 0x55974a9fa168 <col:22> 'uint16_t':'unsigned short' <IntegralCast>
|                 `-IntegerLiteral 0x55974a9f9e18 <col:22> 'int' 65535
|-CXXMethodDecl 0x55974a9f84f8 <line:36:5, col:70> col:32 broadcast 'EtherAddress ()' static inline
| `-DeprecatedAttr 0x55974a9f8598 <col:59> "" ""
|-TypedefDecl 0x55974a9f8718 <line:39:5, col:59> col:34 referenced unspecified_bool_type 'bool (EtherAddress::*)() const'
| `-MemberPointerType 0x55974a9f8690 'bool (EtherAddress::*)() const'
|   |-RecordType 0x55974a9df440 'EtherAddress'
|   | `-CXXRecord 0x55974a9f7e48 'EtherAddress'
|   `-ParenType 0x55974a9f8630 'bool () const' sugar
|     `-FunctionProtoType 0x55974a525ac0 'bool () const' const cdecl
|       `-BuiltinType 0x55974a477500 'bool'
|-CXXConversionDecl 0x55974a9f8858 <line:41:5, line:43:5> line:41:12 operator bool (EtherAddress::*)() const 'EtherAddress::unspecified_bool_type () const' inline
| `-CompoundStmt 0x55974a9fa918 <col:51, line:43:5>
|   `-ReturnStmt 0x55974a9fa908 <line:42:2, col:70>
|     `-ConditionalOperator 0x55974a9fa8d8 <col:9, col:70> 'bool (EtherAddress::*)() const'
|       |-BinaryOperator 0x55974a9fa800 <col:9, col:40> 'bool' '||'
|       | |-BinaryOperator 0x55974a9fa718 <col:9, col:28> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55974a9fa6d0 <col:9, col:16> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55974a9fa6b8 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x55974a9fa600 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x55974a9fa5e8 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x55974a9fa560 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|       | | |     |   `-CXXThisExpr 0x55974a9fa550 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x55974a9fa590 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x55974a9fa700 <col:21, col:28> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55974a9fa6e8 <col:21, col:28> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x55974a9fa698 <col:21, col:28> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x55974a9fa680 <col:21> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x55974a9fa630 <col:21> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|       | |       |   `-CXXThisExpr 0x55974a9fa620 <col:21> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x55974a9fa660 <col:27> 'int' 1
|       | `-ImplicitCastExpr 0x55974a9fa7e8 <col:33, col:40> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55974a9fa7d0 <col:33, col:40> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x55974a9fa7b0 <col:33, col:40> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x55974a9fa798 <col:33> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x55974a9fa748 <col:33> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|       |       |   `-CXXThisExpr 0x55974a9fa738 <col:33> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x55974a9fa778 <col:39> 'int' 2
|       |-UnaryOperator 0x55974a9fa888 <col:44, col:59> 'bool (EtherAddress::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55974a9fa858 <col:45, col:59> 'bool () const' CXXMethod 0x55974a9f8928 'is_group' 'bool () const'
|       `-ImplicitCastExpr 0x55974a9fa8c0 <col:70> 'bool (EtherAddress::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55974a9fa8a0 <col:70> 'int' 0
|-CXXMethodDecl 0x55974a9f8928 <line:49:5, line:51:5> line:49:17 used is_group 'bool () const' inline
| `-CompoundStmt 0x55974a9faad8 <col:34, line:51:5>
|   `-ReturnStmt 0x55974a9faac8 <line:50:2, col:21>
|     `-ImplicitCastExpr 0x55974a9faab0 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55974a9faa90 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x55974a9faa78 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55974a9faa60 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55974a9faa20 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x55974a9fa9e0 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x55974a9fa9b0 <col:9> '<bound member function type>' ->data 0x55974a9f8dc0
|         |     |   `-CXXThisExpr 0x55974a9fa9a0 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x55974a9faa00 <col:16> 'int' 0
|         `-IntegerLiteral 0x55974a9faa40 <col:21> 'int' 1
|-CXXMethodDecl 0x55974a9f89e8 <line:57:5, line:59:5> line:57:17 is_local 'bool () const' inline
| `-CompoundStmt 0x55974a9fac98 <col:34, line:59:5>
|   `-ReturnStmt 0x55974a9fac88 <line:58:2, col:21>
|     `-ImplicitCastExpr 0x55974a9fac70 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55974a9fac50 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x55974a9fac38 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55974a9fac20 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55974a9fabe0 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x55974a9faba0 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x55974a9fab70 <col:9> '<bound member function type>' ->data 0x55974a9f8dc0
|         |     |   `-CXXThisExpr 0x55974a9fab60 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x55974a9fabc0 <col:16> 'int' 0
|         `-IntegerLiteral 0x55974a9fac00 <col:21> 'int' 2
|-CXXMethodDecl 0x55974a9f8aa8 <line:64:5, line:66:5> line:64:17 used is_broadcast 'bool () const' inline
| `-CompoundStmt 0x55974a9faf98 <col:38, line:66:5>
|   `-ReturnStmt 0x55974a9faf88 <line:65:2, col:43>
|     `-BinaryOperator 0x55974a9faf68 <col:9, col:43> 'bool' '=='
|       |-BinaryOperator 0x55974a9faf28 <col:9, col:38> 'int' '+'
|       | |-BinaryOperator 0x55974a9fae40 <col:9, col:27> 'int' '+'
|       | | |-ImplicitCastExpr 0x55974a9fadf8 <col:9, col:16> 'int' <IntegralCast>
|       | | | `-ImplicitCastExpr 0x55974a9fade0 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x55974a9fad28 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x55974a9fad10 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x55974a9facc0 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|       | | |     |   `-CXXThisExpr 0x55974a9facb0 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x55974a9facf0 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x55974a9fae28 <col:20, col:27> 'int' <IntegralCast>
|       | |   `-ImplicitCastExpr 0x55974a9fae10 <col:20, col:27> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x55974a9fadc0 <col:20, col:27> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x55974a9fada8 <col:20> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x55974a9fad58 <col:20> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|       | |       |   `-CXXThisExpr 0x55974a9fad48 <col:20> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x55974a9fad88 <col:26> 'int' 1
|       | `-ImplicitCastExpr 0x55974a9faf10 <col:31, col:38> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x55974a9faef8 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x55974a9faed8 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x55974a9faec0 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x55974a9fae70 <col:31> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|       |       |   `-CXXThisExpr 0x55974a9fae60 <col:31> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x55974a9faea0 <col:37> 'int' 2
|       `-IntegerLiteral 0x55974a9faf48 <col:43> 'int' 196605
|-CXXMethodDecl 0x55974a9f8c28 <line:69:5, line:75:5> line:69:24 is_broadcast 'bool (const unsigned char *)' static inline
| |-ParmVarDecl 0x55974a9f8b60 <col:37, col:58> col:58 used data 'const unsigned char *'
| `-CompoundStmt 0x55974a9fb0e8 <col:64, line:75:5>
|   `-ReturnStmt 0x55974a9fb0d8 <line:71:2, col:68>
|     `-CXXMemberCallExpr 0x55974a9fb0b8 <col:9, col:68> 'bool'
|       `-MemberExpr 0x55974a9fb088 <col:9, col:55> '<bound member function type>' ->is_broadcast 0x55974a9f8aa8
|         `-CXXReinterpretCastExpr 0x55974a9faff8 <col:9, col:52> 'const EtherAddress *' reinterpret_cast<const class EtherAddress *> <BitCast>
|           `-ImplicitCastExpr 0x55974a9fafe0 <col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x55974a9fafb0 <col:48> 'const unsigned char *' lvalue ParmVar 0x55974a9f8b60 'data' 'const unsigned char *'
|-CXXMethodDecl 0x55974a9f8cf8 <line:78:5, line:80:5> line:78:27 data 'unsigned char *()' inline
| `-CompoundStmt 0x55974a9fb1b0 <col:34, line:80:5>
|   `-ReturnStmt 0x55974a9fb1a0 <line:79:2, col:48>
|     `-CXXReinterpretCastExpr 0x55974a9fb170 <col:9, col:48> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x55974a9fb158 <col:43> 'uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x55974a9fb110 <col:43> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|           `-CXXThisExpr 0x55974a9fb100 <col:43> 'EtherAddress *' implicit this
|-CXXMethodDecl 0x55974a9f8dc0 <line:83:5, line:85:5> line:83:33 used data 'const unsigned char *() const' inline
| `-CompoundStmt 0x55974a9fb278 <col:46, line:85:5>
|   `-ReturnStmt 0x55974a9fb268 <line:84:2, col:54>
|     `-CXXReinterpretCastExpr 0x55974a9fb238 <col:9, col:54> 'const unsigned char *' reinterpret_cast<const unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x55974a9fb220 <col:49> 'const uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x55974a9fb1d8 <col:49> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|           `-CXXThisExpr 0x55974a9fb1c8 <col:49> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55974a9f8f08 <line:89:5, line:91:5> line:89:28 used sdata 'const uint16_t *() const' inline
| `-CompoundStmt 0x55974a9fb2f8 <col:42, line:91:5>
|   `-ReturnStmt 0x55974a9fb2e8 <line:90:2, col:9>
|     `-ImplicitCastExpr 0x55974a9fb2d0 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       `-MemberExpr 0x55974a9fb2a0 <col:9> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|         `-CXXThisExpr 0x55974a9fb290 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55974a9f8ff8 <line:94:5, line:97:5> line:94:19 hashcode 'size_t () const' inline
| `-CompoundStmt 0x55974a9fb708 <col:36, line:97:5>
|   `-ReturnStmt 0x55974a9fb6f8 <line:95:2, line:96:31>
|     `-BinaryOperator 0x55974a9fb6d8 <line:95:9, line:96:31> 'unsigned long' '^'
|       |-ParenExpr 0x55974a9fb558 <line:95:9, col:46> 'unsigned long'
|       | `-BinaryOperator 0x55974a9fb538 <col:10, col:45> 'unsigned long' '|'
|       |   |-ImplicitCastExpr 0x55974a9fb520 <col:10, col:17> 'unsigned long' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55974a9fb508 <col:10, col:17> 'uint16_t':'unsigned short' <LValueToRValue>
|       |   |   `-ArraySubscriptExpr 0x55974a9fb388 <col:10, col:17> 'const uint16_t':'const unsigned short' lvalue
|       |   |     |-ImplicitCastExpr 0x55974a9fb370 <col:10> 'const uint16_t *' <ArrayToPointerDecay>
|       |   |     | `-MemberExpr 0x55974a9fb320 <col:10> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|       |   |     |   `-CXXThisExpr 0x55974a9fb310 <col:10> 'const EtherAddress *' implicit this
|       |   |     `-IntegerLiteral 0x55974a9fb350 <col:16> 'int' 2
|       |   `-ParenExpr 0x55974a9fb4e8 <col:21, col:45> 'size_t':'unsigned long'
|       |     `-BinaryOperator 0x55974a9fb4c8 <col:22, col:43> 'size_t':'unsigned long' '<<'
|       |       |-CStyleCastExpr 0x55974a9fb480 <col:22, col:38> 'size_t':'unsigned long' <NoOp>
|       |       | `-ImplicitCastExpr 0x55974a9fb468 <col:31, col:38> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|       |       |   `-ImplicitCastExpr 0x55974a9fb450 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|       |       |     `-ArraySubscriptExpr 0x55974a9fb420 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |       |-ImplicitCastExpr 0x55974a9fb408 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       |       | `-MemberExpr 0x55974a9fb3b8 <col:31> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|       |       |       |   `-CXXThisExpr 0x55974a9fb3a8 <col:31> 'const EtherAddress *' implicit this
|       |       |       `-IntegerLiteral 0x55974a9fb3e8 <col:37> 'int' 1
|       |       `-IntegerLiteral 0x55974a9fb4a8 <col:43> 'int' 16
|       `-ParenExpr 0x55974a9fb6b8 <line:96:8, col:31> 'size_t':'unsigned long'
|         `-BinaryOperator 0x55974a9fb698 <col:9, col:30> 'size_t':'unsigned long' '<<'
|           |-CStyleCastExpr 0x55974a9fb650 <col:9, col:25> 'size_t':'unsigned long' <NoOp>
|           | `-ImplicitCastExpr 0x55974a9fb638 <col:18, col:25> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           |   `-ImplicitCastExpr 0x55974a9fb620 <col:18, col:25> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|           |     `-ArraySubscriptExpr 0x55974a9fb5f0 <col:18, col:25> 'const uint16_t':'const unsigned short' lvalue
|           |       |-ImplicitCastExpr 0x55974a9fb5d8 <col:18> 'const uint16_t *' <ArrayToPointerDecay>
|           |       | `-MemberExpr 0x55974a9fb588 <col:18> 'uint16_t const[3]' lvalue ->_data 0x55974a9f96b8
|           |       |   `-CXXThisExpr 0x55974a9fb578 <col:18> 'const EtherAddress *' implicit this
|           |       `-IntegerLiteral 0x55974a9fb5b8 <col:24> 'int' 0
|           `-IntegerLiteral 0x55974a9fb678 <col:30> 'int' 9
|-CXXMethodDecl 0x55974a9f90b8 <line:109:5, line:111:5> line:109:19 used unparse 'String () const' inline
| `-CompoundStmt 0x55974a9fb818 <col:35, line:111:5>
|   `-ReturnStmt 0x55974a9fb808 <line:110:2, col:22>
|     `-ExprWithCleanups 0x55974a9fb7f0 <col:9, col:22> 'String'
|       `-CXXConstructExpr 0x55974a9fb7c0 <col:9, col:22> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55974a9fb7a8 <col:9, col:22> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55974a9fb788 <col:9, col:22> 'String' (CXXTemporary 0x55974a9fb788)
|             `-CXXMemberCallExpr 0x55974a9fb760 <col:9, col:22> 'String'
|               `-MemberExpr 0x55974a9fb730 <col:9> '<bound member function type>' ->unparse_dash 0x55974a9f9238
|                 `-CXXThisExpr 0x55974a9fb720 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x55974a9f9178 <line:118:5, col:28> col:12 unparse_colon 'String () const'
|-CXXMethodDecl 0x55974a9f9238 <line:126:5, col:27> col:12 used unparse_dash 'String () const'
|-CXXMethodDecl 0x55974a9f92f8 <line:131:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55974a9f9398 <col:44> "" ""
|-CXXConversionDecl 0x55974a9f9438 <line:136:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55974a9f94e0 <col:51> "" ""
|-TypedefDecl 0x55974a9f9598 <line:138:5, col:33> col:33 parameter_type 'const EtherAddress &'
| `-LValueReferenceType 0x55974a9f9560 'const EtherAddress &'
|   `-QualType 0x55974a9df441 'const EtherAddress' const
|     `-RecordType 0x55974a9df440 'EtherAddress'
|       `-CXXRecord 0x55974a9f7e48 'EtherAddress'
|-AccessSpecDecl 0x55974a9f95f0 <line:140:2, col:9> col:2 private
|-FieldDecl 0x55974a9f96b8 <line:142:5, col:21> col:14 referenced _data 'uint16_t [3]'
|-CXXConstructorDecl 0x55974a9f9808 <line:144:5, line:146:5> line:144:5 used EtherAddress 'void (uint16_t)'
| |-ParmVarDecl 0x55974a9f9718 <col:18, col:27> col:27 used m 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55974a9fbac0 <col:30, line:146:5>
|   `-BinaryOperator 0x55974a9fbaa0 <line:145:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x55974a9fb8a8 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x55974a9fb890 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55974a9fb840 <col:2> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|     | |   `-CXXThisExpr 0x55974a9fb830 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x55974a9fb870 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x55974a9fba88 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x55974a9fba68 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x55974a9fb940 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x55974a9fb928 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x55974a9fb8d8 <col:13> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|         | |   `-CXXThisExpr 0x55974a9fb8c8 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x55974a9fb908 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x55974a9fba50 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x55974a9fba30 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x55974a9fb9d8 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x55974a9fb9c0 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x55974a9fb970 <col:24> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|             | |   `-CXXThisExpr 0x55974a9fb960 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x55974a9fb9a0 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x55974a9fba18 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-DeclRefExpr 0x55974a9fb9f8 <col:35> 'uint16_t':'unsigned short' lvalue ParmVar 0x55974a9f9718 'm' 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x55974a9f9e38 <line:9:7> col:7 implicit constexpr EtherAddress 'void (const EtherAddress &)' inline default trivial noexcept-unevaluated 0x55974a9f9e38
| `-ParmVarDecl 0x55974a9f9f48 <col:7> col:7 'const EtherAddress &'
|-CXXConstructorDecl 0x55974a9f9fe8 <col:7> col:7 implicit used constexpr EtherAddress 'void (EtherAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a9fa0f8 <col:7> col:7 used 'EtherAddress &&'
| |-CXXCtorInitializer Field 0x55974a9f96b8 '_data' 'uint16_t [3]'
| | `-ArrayInitLoopExpr 0x55974a9fa480 <col:7> 'uint16_t [3]'
| |   |-OpaqueValueExpr 0x55974a9fa408 <col:7> 'uint16_t [3]' xvalue
| |   | `-MemberExpr 0x55974a9fa3c0 <col:7> 'uint16_t [3]' xvalue ._data 0x55974a9f96b8
| |   |   `-CXXStaticCastExpr 0x55974a9fa390 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |   |     `-DeclRefExpr 0x55974a9fa360 <col:7> 'EtherAddress' lvalue ParmVar 0x55974a9fa0f8 '' 'EtherAddress &&'
| |   `-ImplicitCastExpr 0x55974a9fa468 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |     `-ArraySubscriptExpr 0x55974a9fa448 <col:7> 'uint16_t':'unsigned short' xvalue
| |       |-ImplicitCastExpr 0x55974a9fa430 <col:7> 'uint16_t *' <ArrayToPointerDecay>
| |       | `-OpaqueValueExpr 0x55974a9fa408 <col:7> 'uint16_t [3]' xvalue
| |       |   `-MemberExpr 0x55974a9fa3c0 <col:7> 'uint16_t [3]' xvalue ._data 0x55974a9f96b8
| |       |     `-CXXStaticCastExpr 0x55974a9fa390 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |       |       `-DeclRefExpr 0x55974a9fa360 <col:7> 'EtherAddress' lvalue ParmVar 0x55974a9fa0f8 '' 'EtherAddress &&'
| |       `-ArrayInitIndexExpr 0x55974a9fa420 <<invalid sloc>> 'unsigned long'
| `-CompoundStmt 0x55974a9fa4d0 <col:7>
|-CXXDestructorDecl 0x55974a9fa1b0 <col:7> col:7 implicit referenced ~EtherAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55974aa89c28 <col:7> col:7 implicit used operator= 'EtherAddress &(const EtherAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974aa89d38 <col:7> col:7 used 'const EtherAddress &'
| `-CompoundStmt 0x55974aa9d370 <col:7>
|   |-CallExpr 0x55974aa9d2d0 <col:7> 'void *'
|   | |-ImplicitCastExpr 0x55974aa9d2b8 <col:7> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x55974aa9d248 <col:7> '<builtin fn type>' Function 0x55974aa9d000 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
|   | |-ImplicitCastExpr 0x55974aa9d308 <col:7> 'void *' <BitCast>
|   | | `-UnaryOperator 0x55974aa9cf58 <col:7> 'uint16_t (*)[3]' prefix '&' cannot overflow
|   | |   `-MemberExpr 0x55974aa9ced0 <col:7> 'uint16_t [3]' lvalue ->_data 0x55974a9f96b8
|   | |     `-CXXThisExpr 0x55974aa9cec0 <col:7> 'EtherAddress *' this
|   | |-ImplicitCastExpr 0x55974aa9d320 <col:7> 'const void *' <BitCast>
|   | | `-UnaryOperator 0x55974aa9cea8 <col:7> 'uint16_t const (*)[3]' prefix '&' cannot overflow
|   | |   `-MemberExpr 0x55974aa9ce20 <col:7> 'uint16_t const[3]' lvalue ._data 0x55974a9f96b8
|   | |     `-DeclRefExpr 0x55974aa9ce00 <col:7> 'const EtherAddress' lvalue ParmVar 0x55974aa89d38 '' 'const EtherAddress &'
|   | `-IntegerLiteral 0x55974aa9d268 <col:7> 'unsigned long' 6
|   `-ReturnStmt 0x55974aa9d360 <col:7>
|     `-UnaryOperator 0x55974aa9d348 <col:7> 'EtherAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974aa9d338 <col:7> 'EtherAddress *' this
`-CXXMethodDecl 0x55974aa89da8 <col:7> col:7 implicit operator= 'EtherAddress &(EtherAddress &&)' inline default trivial noexcept-unevaluated 0x55974aa89da8
  `-ParmVarDecl 0x55974aa89eb8 <col:7> col:7 'EtherAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddress = type { [3 x i16] }
  NonVirtualBaseLLVMType:%class.EtherAddress = type { [3 x i16] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9b7af8 prev 0x55974a9acd00 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a9b7bf0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55974a9b7ce0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55974a9b7e08 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55974a9b7f88 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55974a9b8108 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55974a9b8288 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55974a9c90b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55974a9c9928 <col:11>
|-CXXDestructorDecl 0x55974a9c9190 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55974a9c92c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55974a9c92c8
| `-ParmVarDecl 0x55974a9c93d8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55974a9c9478 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55974a9c9478
| `-ParmVarDecl 0x55974a9c9588 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55974a9cc348 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a9cc458 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55974a9cc6d8 <col:11>
|   `-ReturnStmt 0x55974a9cc6c8 <col:11>
|     `-UnaryOperator 0x55974a9cc6b0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974a9cc6a0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55974a9cc4c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55974a9cc4c8
  `-ParmVarDecl 0x55974a9cc5d8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9b82f0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a9b8408 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55974a9b84a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55974a9b8510 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55974a9b8578 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55974a9b85e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55974a9b8640 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55974a9b8700 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55974a9b8760 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55974a9b87c0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55974a9c8fc8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55974a9b84a8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55974a9c9938 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55974a9c9990 <col:12>
|-CXXConstructorDecl 0x55974a9c95f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55974a9c95f8
| `-ParmVarDecl 0x55974a9c9708 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55974a9c97a8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55974a9c97a8
| `-ParmVarDecl 0x55974a9c98b8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55974a9cba30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9a6410 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974a9a6528 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55974a9a65b8 <col:16, col:22> col:16 public
|-EnumDecl 0x55974a9a65e0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55974a9a66e0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55974a9a67c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9a66c0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55974a9a66a0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55974a9a6770 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55974a9a67d8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9a6750 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55974a9a6730 <col:22> 'int' 64
|-CXXMethodDecl 0x55974a9a6b18 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55974a9a6800 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55974a9a6880 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55974a9a68f8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55974a9a6970 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55974a9a6bd8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a6dd8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55974a9a6c50 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55974a9a6cc8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55974a9a6e88 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a6fe8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55974a9a6ef8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55974a9a7090 <col:72> warn_unused_result ""
|-TypedefDecl 0x55974a9a73f0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55974a9a7380 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55974a9a7320 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55974a9a72e0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55974a4774e0 'void'
|       |-PointerType 0x55974a7267b0 'unsigned char *'
|       | `-BuiltinType 0x55974a4775e0 'unsigned char'
|       |-TypedefType 0x55974a522d80 'size_t' sugar
|       | |-Typedef 0x55974a4e7be0 'size_t'
|       | `-BuiltinType 0x55974a477640 'unsigned long'
|       `-PointerType 0x55974a477ce0 'void *'
|         `-BuiltinType 0x55974a4774e0 'void'
|-CXXMethodDecl 0x55974a9a7868 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55974a9a7460 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55974a9a74d8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55974a9a7570 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55974a9a75f0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55974a9c1f60 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55974a9c1f48 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55974a9c1f10 <col:58> 'int' 0
| |-ParmVarDecl 0x55974a9a7670 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55974a9c1f88 <col:76> 'int' 0
| |-ParmVarDecl 0x55974a9a76f0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55974a9c1fa8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55974a9a7938 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a79b8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55974a9a7a78 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55974a9a7b18 <col:20>
| `-OptimizeNoneAttr 0x55974a9a7b70 <col:30>
|-CXXMethodDecl 0x55974a9a7be8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55974a9a7c88 <col:20>
| `-OptimizeNoneAttr 0x55974a9a7ce0 <col:30>
|-CXXMethodDecl 0x55974a9a7d58 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55974a9a7df8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a7ea8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55974a9a7f48 <col:20>
| |-OptimizeNoneAttr 0x55974a9a7fa0 <col:30>
| `-WarnUnusedResultAttr 0x55974a9a7fc8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a8020 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55974a9a80c0 <col:20>
| `-OptimizeNoneAttr 0x55974a9a8118 <col:30>
|-CXXMethodDecl 0x55974a9a8168 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55974a9a8208 <col:20>
| `-OptimizeNoneAttr 0x55974a9a8260 <col:30>
|-CXXMethodDecl 0x55974a9a82a8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55974a9a8348 <col:20>
| `-OptimizeNoneAttr 0x55974a9a83a0 <col:30>
|-CXXMethodDecl 0x55974a9a83e8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a9a84a8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a9a8570 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55974a9a8638 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55974a9a86f8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a9a8818 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55974a9c2070 <col:54, line:99:5>
|   `-ReturnStmt 0x55974a9c2060 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55974a9c2048 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55974a9c2018 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55974a9b8af8
|         `-CXXThisExpr 0x55974a9c2008 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55974a9a89b8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55974a9a88c8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55974a9c2120 <col:67, line:103:5>
|   `-BinaryOperator 0x55974a9c2100 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55974a9c2098 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55974a9b8af8
|     | `-CXXThisExpr 0x55974a9c2088 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55974a9c20e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55974a9c20c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55974a9a88c8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55974a9a8ab0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55974a9c21a0 <col:33, line:107:5>
|   `-ReturnStmt 0x55974a9c2190 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55974a9c2178 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55974a9c2148 <col:16> 'void *' lvalue ->_destructor_argument 0x55974a9b8b60
|         `-CXXThisExpr 0x55974a9c2138 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55974a9a8b70 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55974a9c27d0 <col:25, line:113:5>
|   |-ParenExpr 0x55974a9c2518 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55974a9c24e8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c2258 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55974a9c2230 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55974a9c21f8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55974a9c21c8 <col:24> '<bound member function type>' ->shared 0x55974a9a7be8
|   |   |       `-ImplicitCastExpr 0x55974a9c2218 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55974a9c21b8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55974a9c22b8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c2298 <col:42> 'int' 0
|   |   `-CallExpr 0x55974a9c2448 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c2430 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c2410 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c2488 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c2328 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55974a9c24a0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c2350 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c24b8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c2388 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55974a9c24d0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c23f8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c23e0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c23a8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55974a9c2718 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55974a9c2548 <col:2> 'unsigned char *' lvalue ->_head 0x55974a9b8900
|   | | `-CXXThisExpr 0x55974a9c2538 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55974a9c2700 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55974a9c26e0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55974a9c2588 <col:10> 'unsigned char *' lvalue ->_data 0x55974a9b8968
|   |     | `-CXXThisExpr 0x55974a9c2578 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55974a9c26c8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55974a9c26a8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55974a9c25c8 <col:18> 'unsigned char *' lvalue ->_tail 0x55974a9b89d0
|   |         | `-CXXThisExpr 0x55974a9c25b8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55974a9c2690 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55974a9c2670 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55974a9c2608 <col:26> 'unsigned char *' lvalue ->_end 0x55974a9b8a38
|   |             | `-CXXThisExpr 0x55974a9c25f8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55974a9c2658 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55974a9c2638 <col:33> 'int' 0
|   `-BinaryOperator 0x55974a9c27b0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55974a9c2748 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55974a9b8af8
|     | `-CXXThisExpr 0x55974a9c2738 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55974a9c2798 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55974a9c2778 <col:16> 'int' 0
|-CXXMethodDecl 0x55974a9a8cb0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55974a9a8c20 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55974a9a8d58 <col:20>
| |-OptimizeNoneAttr 0x55974a9a8db0 <col:30>
| `-WarnUnusedResultAttr 0x55974a9a8dd8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a8ea8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55974a9a8e18 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55974a9a8f50 <col:20>
| |-OptimizeNoneAttr 0x55974a9a8fa8 <col:30>
| `-WarnUnusedResultAttr 0x55974a9a8fd0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a9108 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55974a9a9010 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55974a9a91b0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a92b0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55974a9a9220 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55974a9a9358 <col:20>
| `-OptimizeNoneAttr 0x55974a9a93b0 <col:30>
|-CXXMethodDecl 0x55974a9a9478 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55974a9a93e8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55974a9a9520 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a9620 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55974a9a9590 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55974a9a96c8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a97c8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55974a9a9738 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55974a9a9870 <col:20>
| `-OptimizeNoneAttr 0x55974a9a98c8 <col:30>
|-CXXMethodDecl 0x55974a9a9a58 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55974a9a9908 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55974a9a9980 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55974a9c1fc8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55974a9a9b08 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55974a9a9d08 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55974a9a9b80 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55974a9a9bf8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a9a9f18 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55974a9a9dc8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55974a9a9e40 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a9aa128 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55974a9a9fd8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55974a9aa058 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55974a9c1fd8 <col:39> 'int' 0
|-CXXMethodDecl 0x55974a9aa1f8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55974a9aa2c0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55974a9aa388 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55974a9aa448 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a9aa510 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55974a9aa658 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55974a9aa5c8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55974a9aa828 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55974a9aa718 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55974a9aa790 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a9aa8f8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55974a9aa9b8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55974a9aaa58 <col:20>
| `-OptimizeNoneAttr 0x55974a9aaab0 <col:30>
|-CXXMethodDecl 0x55974a9aab00 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55974a9aaba0 <col:20>
| `-OptimizeNoneAttr 0x55974a9aabf8 <col:30>
|-CXXMethodDecl 0x55974a9aac48 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55974a9aad08 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a9aadd0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55974a9aae70 <col:20>
| `-OptimizeNoneAttr 0x55974a9aaec8 <col:30>
|-CXXMethodDecl 0x55974a9ab018 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55974a9aaf08 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55974a9aaf80 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a9ab168 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55974a9ab0d8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a9ab240 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55974a9ab300 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55974a9ab3a0 <col:20>
| `-OptimizeNoneAttr 0x55974a9ab3f8 <col:30>
|-CXXMethodDecl 0x55974a9ab448 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55974a9ab4e8 <col:20>
| `-OptimizeNoneAttr 0x55974a9ab540 <col:30>
|-CXXMethodDecl 0x55974a9ab590 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55974a9ab658 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55974a9ab6f8 <col:20>
| `-OptimizeNoneAttr 0x55974a9ab750 <col:30>
|-CXXMethodDecl 0x55974a9ab798 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55974a9ab8b8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55974a9aba28 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55974a9ab968 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55974a9abb18 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55974a9abbb8 <col:20>
| `-OptimizeNoneAttr 0x55974a9abc10 <col:30>
|-CXXMethodDecl 0x55974a9abc60 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55974a9abd20 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a9abf58 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55974a9abdd0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55974a9abe48 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55974a9ac008 <col:20>
| `-OptimizeNoneAttr 0x55974a9ac060 <col:30>
|-CXXMethodDecl 0x55974a9ac108 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55974a9ac1a8 <col:20>
| `-OptimizeNoneAttr 0x55974a9ac200 <col:30>
|-CXXMethodDecl 0x55974a9ac250 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55974a9ac2f0 <col:20>
| `-OptimizeNoneAttr 0x55974a9ac348 <col:30>
|-CXXMethodDecl 0x55974a9ac390 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55974a9ac430 <col:20>
| `-OptimizeNoneAttr 0x55974a9ac488 <col:30>
|-CXXMethodDecl 0x55974a9ac588 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55974a9ac4c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55974a9ac630 <col:20>
| `-OptimizeNoneAttr 0x55974a9ac688 <col:30>
|-CXXMethodDecl 0x55974a9ac848 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55974a9ac6c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55974a9ac738 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55974a9ac8f8 <col:20>
| `-OptimizeNoneAttr 0x55974a9ac950 <col:30>
|-CXXMethodDecl 0x55974a9ac9f8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55974a9acb18 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55974a9acc38 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55974a9accd8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55974a9acd00 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55974a9ace28 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55974a9acec8 <col:20>
| `-OptimizeNoneAttr 0x55974a9acf20 <col:30>
|-CXXMethodDecl 0x55974a9acfc8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55974a9ad068 <col:20>
| `-OptimizeNoneAttr 0x55974a9ad0c0 <col:30>
|-AccessSpecDecl 0x55974a9ad0e8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55974a9ad110 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55974a9ad210 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55974a9ad260 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9ad1f0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55974a9ad1d0 <col:14> 'int' 48
|-CXXMethodDecl 0x55974a9ad2c8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55974a9ad368 <col:20>
| `-OptimizeNoneAttr 0x55974a9ad3c0 <col:30>
|-CXXMethodDecl 0x55974a9ad438 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55974a9ad4d8 <col:20>
| `-OptimizeNoneAttr 0x55974a9ad530 <col:30>
|-CXXMethodDecl 0x55974a9ad5f8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55974a9ad568 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55974a9ad798 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55974a9ad938 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55974a9ad848 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55974a9ad9e0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55974a9adae0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55974a9ade90 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9adac0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55974a9adaa0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55974a9adb70 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55974a9adea8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9adb50 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55974a9adb30 <col:14> 'int' 1
| |-EnumConstantDecl 0x55974a9adc00 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55974a9adec0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9adbe0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55974a9adbc0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55974a9adc90 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55974a9aded8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9adc70 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55974a9adc50 <col:14> 'int' 3
| |-EnumConstantDecl 0x55974a9add20 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55974a9adef0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9add00 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55974a9adce0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55974a9addb0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55974a9adf08 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9add90 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55974a9add70 <col:13> 'int' 5
| `-EnumConstantDecl 0x55974a9ade40 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55974a9adf20 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9ade20 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55974a9ade00 <col:14> 'int' 6
|-CXXMethodDecl 0x55974a9adf88 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55974a9ae028 <col:20>
| `-OptimizeNoneAttr 0x55974a9ae080 <col:30>
|-CXXMethodDecl 0x55974a9ae178 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55974a9ae0b8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55974a9ae220 <col:20>
| `-OptimizeNoneAttr 0x55974a9ae278 <col:30>
|-CXXMethodDecl 0x55974a9ae2e8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55974a9ae410 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55974a9ae588 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55974a9ae4c0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55974a9ae650 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55974a9ae718 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55974a9ae858 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55974a9ae7c8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55974a9ae900 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55974a9aea00 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55974a9aec00 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9ae9e0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55974a9ae9c0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55974a9aea90 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55974a9aec18 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9aea70 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55974a9aea50 <col:45> 'int' 4
| |-EnumConstantDecl 0x55974a9aeb20 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55974a9aec30 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9aeb00 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55974a9aeae0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55974a9aebb0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55974a9aec48 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9aeb90 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55974a9aeb70 <col:47> 'int' 16
|-CXXMethodDecl 0x55974a9aeca8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55974a9aee18 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55974a9aed58 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55974a9aeec0 <col:20>
| `-OptimizeNoneAttr 0x55974a9aef18 <col:30>
|-CXXMethodDecl 0x55974a9aef68 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55974a9c28f0 <col:18, col:36>
|   `-ReturnStmt 0x55974a9c28e0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55974a9c28c8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55974a9c28a8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55974a9c2878 <col:27> '<bound member function type>' ->xanno 0x55974a9acfc8
|           `-CXXThisExpr 0x55974a9c2868 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55974a9af060 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55974a9c2a00 <col:30, col:48>
|   `-ReturnStmt 0x55974a9c29f0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55974a9c29d8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55974a9c29b8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55974a9c2988 <col:39> '<bound member function type>' ->xanno 0x55974a9ace28
|           `-CXXThisExpr 0x55974a9c2978 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55974a9af148 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55974a9c2b98 <col:24, col:50>
|   `-ReturnStmt 0x55974a9c2b88 <col:26, col:47>
|     `-UnaryOperator 0x55974a9c2b70 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55974a9c2b50 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55974a9c2b38 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55974a9c2ae8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55974a9b7e08
|         |   `-CXXMemberCallExpr 0x55974a9c2ac8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55974a9c2a98 <col:34> '<bound member function type>' ->xanno 0x55974a9acfc8
|         |       `-CXXThisExpr 0x55974a9c2a88 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55974a9c2b18 <col:46> 'int' 0
|-CXXMethodDecl 0x55974a9af250 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55974a9c2d68 <col:36, col:62>
|   `-ReturnStmt 0x55974a9c2d58 <col:38, col:59>
|     `-UnaryOperator 0x55974a9c2d40 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55974a9c2d20 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55974a9c2d08 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55974a9c2c80 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55974a9b7e08
|         |   `-CXXMemberCallExpr 0x55974a9c2c60 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55974a9c2c30 <col:46> '<bound member function type>' ->xanno 0x55974a9ace28
|         |       `-CXXThisExpr 0x55974a9c2c20 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55974a9c2cb0 <col:58> 'int' 0
|-CXXMethodDecl 0x55974a9af368 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55974a9c2f00 <col:26, col:53>
|   `-ReturnStmt 0x55974a9c2ef0 <col:28, col:50>
|     `-UnaryOperator 0x55974a9c2ed8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55974a9c2eb8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55974a9c2ea0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55974a9c2e50 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55974a9b8108
|         |   `-CXXMemberCallExpr 0x55974a9c2e30 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55974a9c2e00 <col:36> '<bound member function type>' ->xanno 0x55974a9acfc8
|         |       `-CXXThisExpr 0x55974a9c2df0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55974a9c2e80 <col:49> 'int' 0
|-CXXMethodDecl 0x55974a9af488 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55974a9c30d8 <col:38, col:65>
|   `-ReturnStmt 0x55974a9c30c8 <col:40, col:62>
|     `-UnaryOperator 0x55974a9c30b0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55974a9c3090 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55974a9c3078 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55974a9c2fe8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55974a9b8108
|         |   `-CXXMemberCallExpr 0x55974a9c2fc8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55974a9c2f98 <col:48> '<bound member function type>' ->xanno 0x55974a9ace28
|         |       `-CXXThisExpr 0x55974a9c2f88 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55974a9c3018 <col:61> 'int' 0
|-CXXMethodDecl 0x55974a9af638 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55974a9af540 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55974a9c37a8 <col:34, line:463:5>
|   |-ParenExpr 0x55974a9c35f0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55974a9c35c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c3228 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c31f8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c3148 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c3130 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c30f0 <col:23> 'int' lvalue ParmVar 0x55974a9af540 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c3110 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c31d8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c31a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c3168 <col:33> 'int' lvalue ParmVar 0x55974a9af540 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55974a9c31c0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55974a9c3188 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55974a9c3288 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c3268 <col:56> 'int' 0
|   |   `-CallExpr 0x55974a9c3520 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c3508 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c34e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c3560 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c3378 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55974a9c3578 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c33a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c3590 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c33e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55974a9c35a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c34d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c34b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c3478 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55974a9c3798 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55974a9c3780 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55974a9c3760 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55974a9c3730 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55974a9c36e0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55974a9b7e08
|         |   `-CXXMemberCallExpr 0x55974a9c36c0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55974a9c3690 <col:9> '<bound member function type>' ->xanno 0x55974a9ace28
|         |       `-CXXThisExpr 0x55974a9c3680 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55974a9c3748 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55974a9c3710 <col:21> 'int' lvalue ParmVar 0x55974a9af540 'i' 'int'
|-CXXMethodDecl 0x55974a9af888 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55974a9af6f8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55974a9af770 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55974a9c3e38 <col:40, line:472:5>
|   |-ParenExpr 0x55974a9c3c50 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55974a9c3c20 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c3900 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c38d0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c3820 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c3808 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c37c8 <col:23> 'int' lvalue ParmVar 0x55974a9af6f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c37e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c38b0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c3880 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c3840 <col:33> 'int' lvalue ParmVar 0x55974a9af6f8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55974a9c3898 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55974a9c3860 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55974a9c3960 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c3940 <col:56> 'int' 0
|   |   `-CallExpr 0x55974a9c3b80 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c3b68 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c3b48 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c3bc0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c39d0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55974a9c3bd8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c3a00 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c3bf0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c3a38 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55974a9c3c08 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c3b30 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c3b18 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c3ad8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55974a9c3e18 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55974a9c3dc0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55974a9c3d90 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55974a9c3d40 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55974a9b7e08
|     | |   `-CXXMemberCallExpr 0x55974a9c3d20 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55974a9c3cf0 <col:2> '<bound member function type>' ->xanno 0x55974a9acfc8
|     | |       `-CXXThisExpr 0x55974a9c3ce0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55974a9c3da8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55974a9c3d70 <col:14> 'int' lvalue ParmVar 0x55974a9af6f8 'i' 'int'
|     `-ImplicitCastExpr 0x55974a9c3e00 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55974a9c3de0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55974a9af770 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55974a9afa48 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55974a9af950 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55974a9c45b8 <col:36, line:485:5>
|   |-ParenExpr 0x55974a9c4320 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c42f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c3fd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c3fa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c3eb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c3e98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c3e58 <col:23> 'int' lvalue ParmVar 0x55974a9af950 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c3e78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c3f80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c3f68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c3ed0 <col:33> 'int' lvalue ParmVar 0x55974a9af950 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c3f48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c3f30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c3ef0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c3f10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55974a9c4030 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c4010 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c4250 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c4238 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c4218 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c4290 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c40a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55974a9c42a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c40d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c42c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c4110 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55974a9c42d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c4200 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c41e8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c41a8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55974a9c45a8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55974a9c4590 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55974a9c4578 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55974a9c4548 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55974a9c44e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55974a9c44b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55974a9c4430 <col:61, col:70> 'char const[48]' lvalue ->c 0x55974a9b7ce0
|             |   `-CXXMemberCallExpr 0x55974a9c4410 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55974a9c43e0 <col:61> '<bound member function type>' ->xanno 0x55974a9ace28
|             |       `-CXXThisExpr 0x55974a9c43d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55974a9c44d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55974a9c4460 <col:74> 'int' lvalue ParmVar 0x55974a9af950 'i' 'int'
|-CXXMethodDecl 0x55974a9afc98 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55974a9afb08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55974a9afb80 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55974a9c4d08 <col:42, line:500:5>
|   |-ParenExpr 0x55974a9c4aa0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c4a70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c4750 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c4720 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c4630 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c4618 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c45d8 <col:23> 'int' lvalue ParmVar 0x55974a9afb08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c45f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c4700 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c46e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c4650 <col:33> 'int' lvalue ParmVar 0x55974a9afb08 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c46c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c46b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c4670 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c4690 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55974a9c47b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c4790 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c49d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c49b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c4998 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c4a10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c4820 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55974a9c4a28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c4858 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c4a40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c4890 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55974a9c4a58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c4980 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c4968 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c4928 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55974a9c4ce8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55974a9c4c98 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55974a9c4c68 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55974a9c4c10 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55974a9c4be0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55974a9c4b90 <col:48, col:57> 'char [48]' lvalue ->c 0x55974a9b7ce0
|     |     |   `-CXXMemberCallExpr 0x55974a9c4b70 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55974a9c4b40 <col:48> '<bound member function type>' ->xanno 0x55974a9acfc8
|     |     |       `-CXXThisExpr 0x55974a9c4b30 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55974a9c4bf8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55974a9c4bc0 <col:61> 'int' lvalue ParmVar 0x55974a9afb08 'i' 'int'
|     `-ImplicitCastExpr 0x55974a9c4cd0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55974a9c4cb0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55974a9afb80 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55974a9afe58 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55974a9afd60 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55974a9c5468 <col:35, line:513:5>
|   |-ParenExpr 0x55974a9c5178 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c5148 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c4ea0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c4e70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c4d80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c4d68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c4d28 <col:23> 'int' lvalue ParmVar 0x55974a9afd60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c4d48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c4e50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c4e38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c4da0 <col:33> 'int' lvalue ParmVar 0x55974a9afd60 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c4e18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c4e00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c4dc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c4de0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55974a9c4f00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c4ee0 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c50a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c5090 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c5070 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c50e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c4f70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55974a9c5100 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c4fa8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c5118 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c4fe0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55974a9c5130 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c5058 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c5040 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c5000 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55974a9c5458 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55974a9c5440 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55974a9c5428 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55974a9c53f8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55974a9c5370 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55974a9c5340 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55974a9c52f0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55974a9b7ce0
|             |   `-CXXMemberCallExpr 0x55974a9c52d0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55974a9c52a0 <col:60> '<bound member function type>' ->xanno 0x55974a9ace28
|             |       `-CXXThisExpr 0x55974a9c5290 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55974a9c5358 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55974a9c5320 <col:73> 'int' lvalue ParmVar 0x55974a9afd60 'i' 'int'
|-CXXMethodDecl 0x55974a9b00a8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55974a9aff18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55974a9aff90 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55974a9c5b88 <col:41, line:528:5>
|   |-ParenExpr 0x55974a9c5910 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c58e0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c5600 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c55d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c54e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c54c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c5488 <col:23> 'int' lvalue ParmVar 0x55974a9aff18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c54a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c55b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c5598 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c5500 <col:33> 'int' lvalue ParmVar 0x55974a9aff18 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c5578 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c5560 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c5520 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c5540 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55974a9c5660 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c5640 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c5840 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c5828 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c5808 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c5880 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c56d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55974a9c5898 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c5708 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c58b0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c5740 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55974a9c58c8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c57f0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c57d8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c5798 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55974a9c5b68 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55974a9c5b18 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55974a9c5ae8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55974a9c5a90 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55974a9c5a50 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55974a9c5a00 <col:47, col:56> 'char [48]' lvalue ->c 0x55974a9b7ce0
|     |     |   `-CXXMemberCallExpr 0x55974a9c59e0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55974a9c59b0 <col:47> '<bound member function type>' ->xanno 0x55974a9acfc8
|     |     |       `-CXXThisExpr 0x55974a9c59a0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55974a9c5a68 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55974a9c5a30 <col:60> 'int' lvalue ParmVar 0x55974a9aff18 'i' 'int'
|     `-ImplicitCastExpr 0x55974a9c5b50 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55974a9c5b30 <col:65> 'int16_t':'short' lvalue ParmVar 0x55974a9aff90 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55974a9b0268 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55974a9b0170 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55974a9c6258 <col:36, line:541:5>
|   |-ParenExpr 0x55974a9c5ff8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c5fc8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c5d20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c5cf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c5c00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c5be8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c5ba8 <col:23> 'int' lvalue ParmVar 0x55974a9b0170 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c5bc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c5cd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c5cb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c5c20 <col:33> 'int' lvalue ParmVar 0x55974a9b0170 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c5c98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c5c80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c5c40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c5c60 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55974a9c5d80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c5d60 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c5f28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c5f10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c5ef0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c5f68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c5df0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55974a9c5f80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c5e28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c5f98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c5e60 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55974a9c5fb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c5ed8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c5ec0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c5e80 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55974a9c6248 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55974a9c6230 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55974a9c6218 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55974a9c61e8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55974a9c6190 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55974a9c6160 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55974a9c6110 <col:61, col:70> 'char const[48]' lvalue ->c 0x55974a9b7ce0
|             |   `-CXXMemberCallExpr 0x55974a9c60f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55974a9c60c0 <col:61> '<bound member function type>' ->xanno 0x55974a9ace28
|             |       `-CXXThisExpr 0x55974a9c60b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55974a9c6178 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55974a9c6140 <col:74> 'int' lvalue ParmVar 0x55974a9b0170 'i' 'int'
|-CXXMethodDecl 0x55974a9b0438 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55974a9b0328 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55974a9b03a0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55974a9b04e8 <col:20>
| `-OptimizeNoneAttr 0x55974a9b0540 <col:30>
|-CXXMethodDecl 0x55974a9b0678 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55974a9b0580 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55974a9c6928 <col:35, line:562:5>
|   |-ParenExpr 0x55974a9c66c8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c6698 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c63f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c63c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c62d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c62b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c6278 <col:23> 'int' lvalue ParmVar 0x55974a9b0580 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c6298 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c63a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c6388 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c62f0 <col:33> 'int' lvalue ParmVar 0x55974a9b0580 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c6368 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c6350 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c6310 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c6330 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55974a9c6450 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c6430 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c65f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c65e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c65c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c6638 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c64c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55974a9c6650 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c64f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c6668 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c6530 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55974a9c6680 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c65a8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c6590 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c6550 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55974a9c6918 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55974a9c6900 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55974a9c68e8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55974a9c68b8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55974a9c6860 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55974a9c6830 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55974a9c67e0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55974a9b7ce0
|             |   `-CXXMemberCallExpr 0x55974a9c67c0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55974a9c6790 <col:60> '<bound member function type>' ->xanno 0x55974a9ace28
|             |       `-CXXThisExpr 0x55974a9c6780 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55974a9c6848 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55974a9c6810 <col:73> 'int' lvalue ParmVar 0x55974a9b0580 'i' 'int'
|-CXXMethodDecl 0x55974a9b0888 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55974a9b0738 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55974a9b07b0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55974a9c7008 <col:41, line:577:5>
|   |-ParenExpr 0x55974a9c6d98 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c6d68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c6ac0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c6a90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c69a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c6988 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c6948 <col:23> 'int' lvalue ParmVar 0x55974a9b0738 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c6968 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c6a70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c6a58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c69c0 <col:33> 'int' lvalue ParmVar 0x55974a9b0738 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c6a38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c6a20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c69e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c6a00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55974a9c6b20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c6b00 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c6cc8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c6cb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c6c90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c6d08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c6b90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55974a9c6d20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c6bc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c6d38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c6c00 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55974a9c6d50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c6c78 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c6c60 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c6c20 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55974a9c6fe8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55974a9c6f98 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55974a9c6f68 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55974a9c6f08 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55974a9c6ed8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55974a9c6e88 <col:47, col:56> 'char [48]' lvalue ->c 0x55974a9b7ce0
|     |     |   `-CXXMemberCallExpr 0x55974a9c6e68 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55974a9c6e38 <col:47> '<bound member function type>' ->xanno 0x55974a9acfc8
|     |     |       `-CXXThisExpr 0x55974a9c6e28 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55974a9c6ef0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55974a9c6eb8 <col:60> 'int' lvalue ParmVar 0x55974a9b0738 'i' 'int'
|     `-ImplicitCastExpr 0x55974a9c6fd0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55974a9c6fb0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55974a9b07b0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55974a9b0a48 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55974a9b0950 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55974a9c7738 <col:36, line:591:5>
|   |-ParenExpr 0x55974a9c7478 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c7448 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c71a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c7170 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c7080 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c7068 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c7028 <col:23> 'int' lvalue ParmVar 0x55974a9b0950 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c7048 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c7150 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c7138 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c70a0 <col:33> 'int' lvalue ParmVar 0x55974a9b0950 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c7118 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c7100 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c70c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c70e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55974a9c7200 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c71e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c73a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c7390 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c7370 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c73e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c7270 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55974a9c7400 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c72a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c7418 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c72e0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55974a9c7430 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c7358 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c7340 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c7300 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55974a9c7728 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55974a9c7710 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55974a9c76f8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55974a9c76c8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55974a9c7640 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55974a9c7610 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55974a9c75c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55974a9b7ce0
|             |   `-CXXMemberCallExpr 0x55974a9c75a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55974a9c7570 <col:61> '<bound member function type>' ->xanno 0x55974a9ace28
|             |       `-CXXThisExpr 0x55974a9c7560 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55974a9c7628 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55974a9c75f0 <col:74> 'int' lvalue ParmVar 0x55974a9b0950 'i' 'int'
|-CXXMethodDecl 0x55974a9b0c98 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55974a9b0b08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55974a9b0b80 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55974a9c7e18 <col:42, line:606:5>
|   |-ParenExpr 0x55974a9c7ba8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55974a9c7b78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c78d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c78a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c77b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c7798 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c7758 <col:23> 'int' lvalue ParmVar 0x55974a9b0b08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c7778 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c7880 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55974a9c7868 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c77d0 <col:33> 'int' lvalue ParmVar 0x55974a9b0b08 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c7848 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c7830 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c77f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55974a9c7810 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55974a9c7930 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c7910 <col:60> 'int' 0
|   |   `-CallExpr 0x55974a9c7ad8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c7ac0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c7aa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c7b18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c79a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55974a9c7b30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c79d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c7b48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c7a10 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55974a9c7b60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c7a88 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c7a70 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c7a30 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55974a9c7df8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55974a9c7da8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55974a9c7d78 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55974a9c7d18 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55974a9c7ce8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55974a9c7c98 <col:48, col:57> 'char [48]' lvalue ->c 0x55974a9b7ce0
|     |     |   `-CXXMemberCallExpr 0x55974a9c7c78 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55974a9c7c48 <col:48> '<bound member function type>' ->xanno 0x55974a9acfc8
|     |     |       `-CXXThisExpr 0x55974a9c7c38 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55974a9c7d00 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55974a9c7cc8 <col:61> 'int' lvalue ParmVar 0x55974a9b0b08 'i' 'int'
|     `-ImplicitCastExpr 0x55974a9c7de0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55974a9c7dc0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55974a9b0b80 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55974a9b0e30 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55974a9b0d60 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55974a9c8688 <col:33, line:620:5>
|   |-ParenExpr 0x55974a9c8400 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55974a9c83d0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c8020 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c7ff0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c7e90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c7e78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c7e38 <col:23> 'int' lvalue ParmVar 0x55974a9b0d60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c7e58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c7fd0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55974a9c7fb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c7eb0 <col:33> 'int' lvalue ParmVar 0x55974a9b0d60 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c7f98 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c7f80 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c7ed0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55974a9c7f58 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55974a9c7f40 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55974a9c7f08 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55974a9c8080 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c8060 <col:79> 'int' 0
|   |   `-CallExpr 0x55974a9c8330 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c8318 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c82f8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c8370 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c8168 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55974a9c8388 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c81b0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c83a0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c81e8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55974a9c83b8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c82e0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c82c8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c8288 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55974a9c8678 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55974a9c8660 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55974a9c8648 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55974a9c8618 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55974a9c8590 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55974a9c8560 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55974a9c8510 <col:67, col:76> 'char const[48]' lvalue ->c 0x55974a9b7ce0
|             |   `-CXXMemberCallExpr 0x55974a9c84f0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55974a9c84c0 <col:67> '<bound member function type>' ->xanno 0x55974a9ace28
|             |       `-CXXThisExpr 0x55974a9c84b0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55974a9c8578 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55974a9c8540 <col:80> 'int' lvalue ParmVar 0x55974a9b0d60 'i' 'int'
|-CXXMethodDecl 0x55974a9b1048 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55974a9b0ef0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55974a9b0f70 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55974a9c8eb0 <col:45, line:635:5>
|   |-ParenExpr 0x55974a9c8bf8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55974a9c8bc8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55974a9c8890 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974a9c8860 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974a9c8700 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55974a9c86e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55974a9c86a8 <col:23> 'int' lvalue ParmVar 0x55974a9b0ef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55974a9c86c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55974a9c8840 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55974a9c8828 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974a9c8720 <col:33> 'int' lvalue ParmVar 0x55974a9b0ef0 'i' 'int'
|   |   |     `-BinaryOperator 0x55974a9c8808 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55974a9c87f0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55974a9c8740 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55974a9ad210 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55974a9c87c8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55974a9c87b0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55974a9c8778 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55974a9c88f0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974a9c88d0 <col:79> 'int' 0
|   |   `-CallExpr 0x55974a9c8b28 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55974a9c8b10 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9c8af0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974a9c8b68 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c8960 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55974a9c8b80 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974a9c89a8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55974a9c8b98 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974a9c89e0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55974a9c8bb0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974a9c8ad8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974a9c8ac0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974a9c8a78 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55974a9c8e90 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55974a9c8df8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55974a9c8dc8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55974a9c8d68 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55974a9c8d38 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55974a9c8ce8 <col:54, col:63> 'char [48]' lvalue ->c 0x55974a9b7ce0
|     |     |   `-CXXMemberCallExpr 0x55974a9c8cc8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55974a9c8c98 <col:54> '<bound member function type>' ->xanno 0x55974a9acfc8
|     |     |       `-CXXThisExpr 0x55974a9c8c88 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55974a9c8d50 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55974a9c8d18 <col:67> 'int' lvalue ParmVar 0x55974a9b0ef0 'i' 'int'
|     `-CXXConstCastExpr 0x55974a9c8e60 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55974a9c8e48 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55974a9c8e10 <col:91> 'const void *' lvalue ParmVar 0x55974a9b0f70 'x' 'const void *'
|-CXXMethodDecl 0x55974a9b1118 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55974a9c8f38 <col:34, line:640:5>
|   `-ReturnStmt 0x55974a9c8f28 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55974a9c8f10 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55974a9c8ee0 <col:16> 'Packet *' lvalue ->_data_packet 0x55974a9b8898
|         `-CXXThisExpr 0x55974a9c8ed0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55974a9b1258 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55974a9b11c8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974a9c1ff8 <col:46> 'bool' true
|-CXXMethodDecl 0x55974a9b13d8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55974a9b1310 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55974a9b1480 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55974a9b1c30 <line:660:22> "" ""
| |-EnumConstantDecl 0x55974a9b1580 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1ca0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b1560 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55974a9b1540 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55974a9a66e0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55974a9b1610 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1cb8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b15f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55974a9b15d0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55974a9a6770 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55974a9b16a0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1cd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b1680 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55974a9b1660 <col:21> 'int' 0
| |-EnumConstantDecl 0x55974a9b1730 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1ce8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b1710 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55974a9b16f0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55974a9b17c0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1d00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b17a0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55974a9b1780 <col:21> 'int' 16
| |-EnumConstantDecl 0x55974a9b1850 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1d18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b1830 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55974a9b1810 <col:19> 'int' 32
| |-EnumConstantDecl 0x55974a9b18e0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1d30 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b18c0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55974a9b18a0 <col:19> 'int' EnumConstant 0x55974a9b1730 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55974a9b1970 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1d48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b1950 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55974a9b1930 <col:19> 'int' EnumConstant 0x55974a9b1850 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55974a9b1a40 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1d60 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b1a20 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55974a9b1a00 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55974a9b19c0 <col:23> 'int' EnumConstant 0x55974a9b1970 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55974a9b19e0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55974a9b1b10 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55974a9b1d78 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a9b1af0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55974a9b1ad0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55974a9b1a90 <col:23> 'int' EnumConstant 0x55974a9b1970 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55974a9b1ab0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55974a9b1be0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55974a9b1d90 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a9b1bc0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55974a9b1ba0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55974a9b1b60 <col:23> 'int' EnumConstant 0x55974a9b1970 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55974a9b1b80 <col:40> 'int' 8
|-CXXMethodDecl 0x55974a9b1dd0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55974a9b1e70 <col:68> "" ""
|-CXXMethodDecl 0x55974a9b1f08 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55974a9b1fa8 <col:45> "" ""
|-CXXMethodDecl 0x55974a9b2040 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55974a9b20e0 <col:57> "" ""
|-CXXMethodDecl 0x55974a9b2178 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55974a9b2218 <col:45> "" ""
|-CXXMethodDecl 0x55974a9b22b0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55974a9b2350 <col:57> "" ""
|-CXXMethodDecl 0x55974a9b23e0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55974a9b2480 <col:51> "" ""
|-CXXMethodDecl 0x55974a9b2510 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55974a9b25b0 <col:63> "" ""
|-CXXMethodDecl 0x55974a9b2640 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55974a9b26e0 <col:53> "" ""
|-CXXMethodDecl 0x55974a9b2770 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55974a9b2810 <col:65> "" ""
|-CXXMethodDecl 0x55974a9b2928 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55974a9b2898 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55974a9b29d0 <col:61> "" ""
|-CXXMethodDecl 0x55974a9b2b68 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55974a9b2a58 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55974a9b2ad0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55974a9b2c18 <col:67> "" ""
|-CXXMethodDecl 0x55974a9b2d30 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55974a9b2ca0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55974a9b2dd8 <col:63> "" ""
|-CXXMethodDecl 0x55974a9b2f70 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55974a9b2e60 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55974a9b2ed8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55974a9b3020 <col:69> "" ""
|-CXXMethodDecl 0x55974a9b3138 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55974a9b30a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55974a9b31e0 <col:63> "" ""
|-CXXMethodDecl 0x55974a9b58b8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55974a9b57a8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55974a9b5820 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974a9b5968 <col:69> "" ""
|-CXXMethodDecl 0x55974a9b5a80 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55974a9b59f0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55974a9b5b28 <col:62> "" ""
|-CXXMethodDecl 0x55974a9b5cc0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55974a9b5bb0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55974a9b5c28 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55974a9b5d70 <col:68> "" ""
|-CXXMethodDecl 0x55974a9b5e88 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55974a9b5df8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55974a9b5f30 <col:63> "" ""
|-CXXMethodDecl 0x55974a9b60c8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55974a9b5fb8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55974a9b6030 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55974a9b6178 <col:69> "" ""
|-CXXMethodDecl 0x55974a9b6208 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55974a9b62a8 <col:64> "" ""
|-CXXMethodDecl 0x55974a9b6338 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55974a9b63d8 <col:52> "" ""
|-CXXMethodDecl 0x55974a9b6468 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55974a9b6508 <col:67> "" ""
|-CXXMethodDecl 0x55974a9b6598 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55974a9b6638 <col:55> "" ""
|-CXXMethodDecl 0x55974a9b6750 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55974a9b66c0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55974a9b67f8 <col:58> "" ""
|-CXXMethodDecl 0x55974a9b6990 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55974a9b6880 <col:33> col:36 'int'
| |-ParmVarDecl 0x55974a9b68f8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55974a9b6a40 <col:62> "" ""
|-CXXMethodDecl 0x55974a9b6b58 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55974a9b6ac8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55974a9b6c00 <col:58> "" ""
|-CXXMethodDecl 0x55974a9b6d98 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55974a9b6c88 <col:33> col:36 'int'
| |-ParmVarDecl 0x55974a9b6d00 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55974a9b6e48 <col:62> "" ""
|-CXXMethodDecl 0x55974a9b6f60 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55974a9b6ed0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55974a9b7008 <col:60> "" ""
|-CXXMethodDecl 0x55974a9b71a0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55974a9b7090 <col:34> col:37 'int'
| |-ParmVarDecl 0x55974a9b7108 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55974a9b7250 <col:64> "" ""
|-CXXMethodDecl 0x55974a9b7368 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55974a9b72d8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55974a9b7410 <col:58> "" ""
|-CXXMethodDecl 0x55974a9b75a8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55974a9b7498 <col:33> col:36 'int'
| |-ParmVarDecl 0x55974a9b7510 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55974a9b7658 <col:62> "" ""
|-CXXMethodDecl 0x55974a9b7770 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55974a9b76e0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55974a9b7818 <col:59> "" ""
|-CXXMethodDecl 0x55974a9b79b0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55974a9b78a0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55974a9b7918 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974a9b7a60 <col:63> "" ""
|-AccessSpecDecl 0x55974a9b7ad0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55974a9b7af8 prev 0x55974a9acd00 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55974a9b7bf0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55974a9b7ce0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55974a9b7e08 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55974a9b7f88 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55974a9b8108 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55974a9b8288 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55974a9c90b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55974a9c9928 <col:11>
| |-CXXDestructorDecl 0x55974a9c9190 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55974a9c92c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55974a9c92c8
| | `-ParmVarDecl 0x55974a9c93d8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55974a9c9478 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55974a9c9478
| | `-ParmVarDecl 0x55974a9c9588 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55974a9cc348 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55974a9cc458 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55974a9cc6d8 <col:11>
| |   `-ReturnStmt 0x55974a9cc6c8 <col:11>
| |     `-UnaryOperator 0x55974a9cc6b0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55974a9cc6a0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55974a9cc4c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55974a9cc4c8
|   `-ParmVarDecl 0x55974a9cc5d8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55974a9b82f0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55974a9b8408 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55974a9b84a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55974a9b8510 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55974a9b8578 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55974a9b85e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55974a9b8640 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55974a9b8700 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55974a9b8760 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55974a9b87c0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55974a9c8fc8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55974a9b84a8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55974a9c9938 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55974a9c9990 <col:12>
| |-CXXConstructorDecl 0x55974a9c95f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55974a9c95f8
| | `-ParmVarDecl 0x55974a9c9708 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55974a9c97a8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55974a9c97a8
| | `-ParmVarDecl 0x55974a9c98b8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55974a9cba30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55974a9b8838 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55974a9b8898 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55974a9b8900 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55974a9b8968 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55974a9b89d0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55974a9b8a38 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55974a9b8a98 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55974a9b8af8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55974a9b8b60 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55974a9b8be8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55974a9b8838 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55974a9c8f60 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55974a9b8a98 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55974a9c99a0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55974a9c9a00 <col:21, line:755:5>
|-CXXConstructorDecl 0x55974a9b8d88 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55974a9b8cc8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55974a9b8e80 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55974a9b9068 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55974a9b8f70 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55974a9b9338 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55974a9b9120 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55974a9b9198 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55974a9b9210 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a9b9558 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55974a9b9408 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55974a9b9480 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55974a9c1b38 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55974a9b9618 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55974a9b9690 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55974a9b9708 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55974a9c1c90 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55974a9c1c00 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a9c1dd8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55974a9c1d48 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55974a9c1ed0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aa876b8 <../dummy_inc/click/list.hh:101:1, line:136:1> line:102:7 class List_member definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument type 'ARPTable::ARPEntry'
|-CXXRecordDecl 0x55974aa878c8 prev 0x55974aa876b8 <col:1, col:7> col:7 implicit class List_member
|-AccessSpecDecl 0x55974aa87958 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55974aa879b8 <line:105:5, line:107:5> line:105:5 used List_member 'void ()'
|-CXXMethodDecl 0x55974aa87b48 <line:110:5, line:112:5> line:110:8 next 'ARPTable::ARPEntry *()'
|-CXXMethodDecl 0x55974aa87cd8 <line:114:5, line:116:5> line:114:14 next 'const ARPTable::ARPEntry *() const'
|-CXXMethodDecl 0x55974aa87da8 <line:119:5, line:121:5> line:119:8 prev 'ARPTable::ARPEntry *()'
|-CXXMethodDecl 0x55974aa87e78 <line:123:5, line:125:5> line:123:14 prev 'const ARPTable::ARPEntry *() const'
|-AccessSpecDecl 0x55974aa87f28 <line:127:3, col:10> col:3 private
|-FieldDecl 0x55974aa87f60 <line:129:5, col:8> col:8 _next 'ARPTable::ARPEntry *'
|-FieldDecl 0x55974aa87fc0 <line:130:5, col:8> col:8 _prev 'ARPTable::ARPEntry *'
|-CXXConstructorDecl 0x55974aa88208 <line:132:5, col:40> col:5 List_member 'void (const List_member<ARPTable::ARPEntry> &)'
| `-ParmVarDecl 0x55974aa880f0 <col:17, col:39> col:39 x 'const List_member<ARPTable::ARPEntry> &'
|-CXXMethodDecl 0x55974aa88550 <line:133:5, col:54> col:21 operator= 'List_member<ARPTable::ARPEntry> &(const List_member<ARPTable::ARPEntry> &)'
| `-ParmVarDecl 0x55974aa88430 <col:31, col:53> col:53 x 'const List_member<ARPTable::ARPEntry> &'
`-FriendDecl 0x55974aa888f0 <line:134:5, col:67> col:67
  `-ClassTemplateDecl 0x55974aa88878 parent 0x55974a477488 prev 0x55974aa5d788 <col:5, col:67> col:67 List
    |-TemplateTypeParmDecl 0x55974aa88608 <col:15, col:24> col:24 typename depth 0 index 0 X
    |-NonTypeTemplateParmDecl 0x55974aa88760 <col:27, col:46> col:46 'List_member<X> X::*' depth 0 index 1 member
    |-CXXRecordDecl 0x55974aa887e8 parent 0x55974a477488 prev 0x55974aa5d6f8 <col:61, col:67> col:67 class List
    `-ClassTemplateSpecialization 0x55974aa90990 'List'

Layout: <CGRecordLayout
  LLVMType:%class.List_member = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"* }
  NonVirtualBaseLLVMType:%class.List_member = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aa87108 <../elements/ethernet/arptable.hh:169:5, line:207:5> line:169:12 referenced struct ARPEntry definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55974aa87228 <col:5, col:12> col:12 implicit referenced struct ARPEntry
|-FieldDecl 0x55974aa872c8 <line:170:2, col:12> col:12 referenced _ip 'IPAddress'
|-FieldDecl 0x55974aa87358 <line:171:2, col:12> col:12 _hashnext 'ARPTable::ARPEntry *'
|-FieldDecl 0x55974aa873b8 <line:172:2, col:15> col:15 referenced _eth 'EtherAddress'
|-FieldDecl 0x55974aa87418 <line:173:2, col:7> col:7 referenced _known 'bool'
|-FieldDecl 0x55974aa87478 <line:174:2, col:10> col:10 referenced _num_polls_since_reply 'uint8_t':'unsigned char'
|-FieldDecl 0x55974aa874d8 <line:175:2, col:18> col:18 referenced _live_at_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x55974aa87538 <line:176:2, col:18> col:18 referenced _polled_at_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x55974aa87598 <line:177:2, col:10> col:10 _head 'Packet *'
|-FieldDecl 0x55974aa875f8 <line:178:2, col:10> col:10 _tail 'Packet *'
|-FieldDecl 0x55974aa87658 <line:179:2, col:11> col:11 _entry_packet_count 'uint32_t':'unsigned int'
|-FieldDecl 0x55974aa88948 <line:180:2, col:24> col:24 referenced _age_link 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
|-TypedefDecl 0x55974aa889a8 <line:181:2, col:20> col:20 referenced key_type 'IPAddress'
| `-RecordType 0x55974a745500 'IPAddress'
|   `-CXXRecord 0x55974a7e0430 'IPAddress'
|-TypedefDecl 0x55974aa88a10 <line:182:2, col:20> col:20 referenced key_const_reference 'IPAddress'
| `-RecordType 0x55974a745500 'IPAddress'
|   `-CXXRecord 0x55974a7e0430 'IPAddress'
|-CXXConstructorDecl 0x55974aa88b20 <line:183:2, line:186:2> line:183:2 ARPEntry 'void (IPAddress)'
| |-ParmVarDecl 0x55974aa88a78 <col:11, col:21> col:21 used ip 'IPAddress'
| |-CXXCtorInitializer Field 0x55974aa872c8 '_ip' 'IPAddress'
| | `-CXXConstructExpr 0x55974aa96f30 <line:184:8, col:14> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55974aa96e28 <col:12> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55974aa96de8 <col:12> 'IPAddress' lvalue ParmVar 0x55974aa88a78 'ip' 'IPAddress'
| |-CXXCtorInitializer Field 0x55974aa87358 '_hashnext' 'ARPTable::ARPEntry *'
| | `-ImplicitValueInitExpr 0x55974aa96fa0 <<invalid sloc>> 'ARPTable::ARPEntry *'
| |-CXXCtorInitializer Field 0x55974aa873b8 '_eth' 'EtherAddress'
| | `-ExprWithCleanups 0x55974aa970e0 <col:30, col:65> 'EtherAddress'
| |   `-CXXConstructExpr 0x55974aa970b0 <col:30, col:65> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
| |     `-MaterializeTemporaryExpr 0x55974aa97098 <col:35, col:64> 'EtherAddress' xvalue
| |       `-CallExpr 0x55974aa97058 <col:35, col:64> 'EtherAddress'
| |         `-ImplicitCastExpr 0x55974aa97040 <col:35, col:49> 'EtherAddress (*)()' <FunctionToPointerDecay>
| |           `-DeclRefExpr 0x55974aa97010 <col:35, col:49> 'EtherAddress ()' lvalue CXXMethod 0x55974a9f8438 'make_broadcast' 'EtherAddress ()'
| |-CXXCtorInitializer Field 0x55974aa87418 '_known' 'bool'
| | `-CXXBoolLiteralExpr 0x55974aa97120 <line:185:15> 'bool' false
| |-CXXCtorInitializer Field 0x55974aa87478 '_num_polls_since_reply' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55974aa971b8 <col:46> 'uint8_t':'unsigned char' <IntegralCast>
| |   `-IntegerLiteral 0x55974aa97178 <col:46> 'int' 0
| |-CXXCtorInitializer Field 0x55974aa87598 '_head' 'Packet *'
| | `-ImplicitValueInitExpr 0x55974aa97210 <<invalid sloc>> 'Packet *'
| |-CXXCtorInitializer Field 0x55974aa875f8 '_tail' 'Packet *'
| | `-ImplicitValueInitExpr 0x55974aa97260 <<invalid sloc>> 'Packet *'
| |-CXXCtorInitializer Field 0x55974aa87658 '_entry_packet_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974aa972d8 <col:88> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55974aa97298 <col:88> 'int' 0
| |-CXXCtorInitializer Field 0x55974aa88948 '_age_link' 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
| | `-CXXConstructExpr 0x55974aa97318 <line:183:2> 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>' 'void ()'
| `-CompoundStmt 0x55974aa973b0 <line:185:91, line:186:2>
|-CXXMethodDecl 0x55974aa88c38 <line:187:2, line:189:2> line:187:22 hashkey 'ARPTable::ARPEntry::key_const_reference () const'
| `-CompoundStmt 0x55974aa97440 <col:38, line:189:2>
|   `-ReturnStmt 0x55974aa97430 <line:188:6, col:13>
|     `-CXXConstructExpr 0x55974aa97400 <col:13> 'ARPTable::ARPEntry::key_const_reference':'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55974aa973d0 <col:13> 'const IPAddress' lvalue ->_ip 0x55974aa872c8
|         `-CXXThisExpr 0x55974aa973c0 <col:13> 'const ARPTable::ARPEntry *' implicit this
|-CXXMethodDecl 0x55974aa88e78 <line:190:2, line:193:2> line:190:7 used expired 'bool (click_jiffies_t, uint32_t) const'
| |-ParmVarDecl 0x55974aa88ce8 <col:15, col:31> col:31 used now 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x55974aa88d60 <col:36, col:45> col:45 used timeout_j 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa97710 <col:62, line:193:2>
|   `-ReturnStmt 0x55974aa97700 <line:191:6, line:192:6>
|     `-BinaryOperator 0x55974aa976e0 <line:191:13, line:192:6> 'bool' '&&'
|       |-ParenExpr 0x55974aa97670 <line:191:13, col:81> 'bool'
|       | `-BinaryOperator 0x55974aa97650 <col:14, col:80> 'bool' '<'
|       |   |-CStyleCastExpr 0x55974aa97608 <col:14, col:76> 'click_jiffies_difference_t':'int' <NoOp>
|       |   | `-ImplicitCastExpr 0x55974aa975f0 <col:43, col:76> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|       |   |   `-ParenExpr 0x55974aa975d0 <col:43, col:76> 'unsigned int'
|       |   |     `-BinaryOperator 0x55974aa97580 <col:44, col:75> 'unsigned int' '-'
|       |   |       |-ParenExpr 0x55974aa97508 <col:44, col:67> 'unsigned int'
|       |   |       | `-BinaryOperator 0x55974aa974e8 <col:45, col:58> 'unsigned int' '+'
|       |   |       |   |-ImplicitCastExpr 0x55974aa974b8 <col:45> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       |   |       |   | `-MemberExpr 0x55974aa97468 <col:45> 'const click_jiffies_t':'const unsigned int' lvalue ->_live_at_j 0x55974aa874d8
|       |   |       |   |   `-CXXThisExpr 0x55974aa97458 <col:45> 'const ARPTable::ARPEntry *' implicit this
|       |   |       |   `-ImplicitCastExpr 0x55974aa974d0 <col:58> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   |       |     `-DeclRefExpr 0x55974aa97498 <col:58> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa88d60 'timeout_j' 'uint32_t':'unsigned int'
|       |   |       `-ImplicitCastExpr 0x55974aa97568 <col:71, col:75> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       |   |         `-ParenExpr 0x55974aa97548 <col:71, col:75> 'click_jiffies_t':'unsigned int' lvalue
|       |   |           `-DeclRefExpr 0x55974aa97528 <col:72> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55974aa88ce8 'now' 'click_jiffies_t':'unsigned int'
|       |   `-IntegerLiteral 0x55974aa97630 <col:80> 'int' 0
|       `-ImplicitCastExpr 0x55974aa976c8 <line:192:6> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55974aa976b0 <col:6> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55974aa97690 <col:6> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa88d60 'timeout_j' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa89048 <line:194:2, line:196:2> line:194:7 used known 'bool (click_jiffies_t, uint32_t) const'
| |-ParmVarDecl 0x55974aa88f38 <col:13, col:29> col:29 used now 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x55974aa88fb0 <col:34, col:43> col:43 used timeout_j 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa978a8 <col:60, line:196:2>
|   `-ReturnStmt 0x55974aa97898 <line:195:6, col:46>
|     `-BinaryOperator 0x55974aa97878 <col:13, col:46> 'bool' '&&'
|       |-ImplicitCastExpr 0x55974aa97860 <col:13> 'bool' <LValueToRValue>
|       | `-MemberExpr 0x55974aa97738 <col:13> 'const bool' lvalue ->_known 0x55974aa87418
|       |   `-CXXThisExpr 0x55974aa97728 <col:13> 'const ARPTable::ARPEntry *' implicit this
|       `-UnaryOperator 0x55974aa97848 <col:23, col:46> 'bool' prefix '!' cannot overflow
|         `-CXXMemberCallExpr 0x55974aa977e8 <col:24, col:46> 'bool'
|           |-MemberExpr 0x55974aa97778 <col:24> '<bound member function type>' ->expired 0x55974aa88e78
|           | `-CXXThisExpr 0x55974aa97768 <col:24> 'const ARPTable::ARPEntry *' implicit this
|           |-ImplicitCastExpr 0x55974aa97818 <col:32> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           | `-DeclRefExpr 0x55974aa977a8 <col:32> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55974aa88f38 'now' 'click_jiffies_t':'unsigned int'
|           `-ImplicitCastExpr 0x55974aa97830 <col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|             `-DeclRefExpr 0x55974aa977c8 <col:37> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa88fb0 'timeout_j' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa891f8 <line:197:2, line:201:2> line:197:7 used allow_poll 'bool (click_jiffies_t) const'
| |-ParmVarDecl 0x55974aa89108 <col:18, col:34> col:34 used now 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55974aa97d88 <col:45, line:201:2>
|   |-DeclStmt 0x55974aa97b88 <line:198:6, line:199:58>
|   | `-VarDecl 0x55974aa978d0 <line:198:6, line:199:57> line:198:22 used thresh_j 'click_jiffies_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55974aa97b68 <col:33, line:199:57> 'unsigned int' '+'
|   |     |-ImplicitCastExpr 0x55974aa97b38 <line:198:33> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|   |     | `-MemberExpr 0x55974aa97948 <col:33> 'const click_jiffies_t':'const unsigned int' lvalue ->_polled_at_j 0x55974aa87538
|   |     |   `-CXXThisExpr 0x55974aa97938 <col:33> 'const ARPTable::ARPEntry *' implicit this
|   |     `-ImplicitCastExpr 0x55974aa97b50 <line:199:5, col:57> 'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x55974aa97b18 <col:5, col:57> 'int'
|   |         `-ConditionalOperator 0x55974aa97ae8 <col:6, col:55> 'int'
|   |           |-BinaryOperator 0x55974aa97a08 <col:6, col:32> 'bool' '>='
|   |           | |-ImplicitCastExpr 0x55974aa979f0 <col:6> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55974aa979d8 <col:6> 'uint8_t':'unsigned char' <LValueToRValue>
|   |           | |   `-MemberExpr 0x55974aa97988 <col:6> 'const uint8_t':'const unsigned char' lvalue ->_num_polls_since_reply 0x55974aa87478
|   |           | |     `-CXXThisExpr 0x55974aa97978 <col:6> 'const ARPTable::ARPEntry *' implicit this
|   |           | `-IntegerLiteral 0x55974aa979b8 <col:32> 'int' 10
|   |           |-BinaryOperator 0x55974aa97a68 <col:37, col:44> 'int' '*'
|   |           | |-IntegerLiteral 0x55974aa97a28 <col:37> 'int' 1000
|   |           | `-IntegerLiteral 0x55974aa97a48 <col:44> 'int' 2
|   |           `-BinaryOperator 0x55974aa97ac8 <col:48, col:55> 'int' '/'
|   |             |-IntegerLiteral 0x55974aa97a88 <col:48> 'int' 1000
|   |             `-IntegerLiteral 0x55974aa97aa8 <col:55> 'int' 10
|   `-ReturnStmt 0x55974aa97d78 <line:200:6, col:68>
|     `-UnaryOperator 0x55974aa97d60 <col:13, col:68> 'bool' prefix '!' cannot overflow
|       `-ParenExpr 0x55974aa97d40 <col:14, col:68> 'bool'
|         `-BinaryOperator 0x55974aa97d20 <col:15, col:67> 'bool' '<'
|           |-CStyleCastExpr 0x55974aa97cd8 <col:15, col:63> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55974aa97cc0 <col:44, col:63> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55974aa97ca0 <col:44, col:63> 'unsigned int'
|           |     `-BinaryOperator 0x55974aa97c50 <col:45, col:62> 'unsigned int' '-'
|           |       |-ImplicitCastExpr 0x55974aa97c20 <col:45, col:49> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |       | `-ParenExpr 0x55974aa97bc0 <col:45, col:49> 'click_jiffies_t':'unsigned int' lvalue
|           |       |   `-DeclRefExpr 0x55974aa97ba0 <col:46> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55974aa89108 'now' 'click_jiffies_t':'unsigned int'
|           |       `-ImplicitCastExpr 0x55974aa97c38 <col:53, col:62> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |         `-ParenExpr 0x55974aa97c00 <col:53, col:62> 'click_jiffies_t':'unsigned int' lvalue
|           |           `-DeclRefExpr 0x55974aa97be0 <col:54> 'click_jiffies_t':'unsigned int' lvalue Var 0x55974aa978d0 'thresh_j' 'click_jiffies_t':'unsigned int'
|           `-IntegerLiteral 0x55974aa97d00 <col:67> 'int' 0
|-CXXMethodDecl 0x55974aa89378 <line:202:2, line:206:2> line:202:7 used mark_poll 'void (click_jiffies_t)'
| |-ParmVarDecl 0x55974aa892b0 <col:17, col:33> col:33 used now 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55974aa97f60 <col:38, line:206:2>
|   |-BinaryOperator 0x55974aa97e20 <line:203:6, col:21> 'click_jiffies_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55974aa97db8 <col:6> 'click_jiffies_t':'unsigned int' lvalue ->_polled_at_j 0x55974aa87538
|   | | `-CXXThisExpr 0x55974aa97da8 <col:6> 'ARPTable::ARPEntry *' implicit this
|   | `-ImplicitCastExpr 0x55974aa97e08 <col:21> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55974aa97de8 <col:21> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55974aa892b0 'now' 'click_jiffies_t':'unsigned int'
|   `-IfStmt 0x55974aa97f48 <line:204:6, line:205:5>
|     |-BinaryOperator 0x55974aa97ed0 <line:204:10, col:35> 'bool' '<'
|     | |-ImplicitCastExpr 0x55974aa97eb8 <col:10> 'int' <IntegralCast>
|     | | `-ImplicitCastExpr 0x55974aa97ea0 <col:10> 'uint8_t':'unsigned char' <LValueToRValue>
|     | |   `-MemberExpr 0x55974aa97e50 <col:10> 'uint8_t':'unsigned char' lvalue ->_num_polls_since_reply 0x55974aa87478
|     | |     `-CXXThisExpr 0x55974aa97e40 <col:10> 'ARPTable::ARPEntry *' implicit this
|     | `-IntegerLiteral 0x55974aa97e80 <col:35> 'int' 255
|     `-UnaryOperator 0x55974aa97f30 <line:205:3, col:5> 'uint8_t':'unsigned char' lvalue prefix '++' cannot overflow
|       `-MemberExpr 0x55974aa97f00 <col:5> 'uint8_t':'unsigned char' lvalue ->_num_polls_since_reply 0x55974aa87478
|         `-CXXThisExpr 0x55974aa97ef0 <col:5> 'ARPTable::ARPEntry *' implicit this
|-CXXConstructorDecl 0x55974aa89448 <line:169:12> col:12 implicit ARPEntry 'void (const ARPTable::ARPEntry &)' inline default_delete noexcept-unevaluated 0x55974aa89448
| `-ParmVarDecl 0x55974aa89558 <col:12> col:12 'const ARPTable::ARPEntry &'
|-CXXConstructorDecl 0x55974aa895f8 <col:12> col:12 implicit ARPEntry 'void (ARPTable::ARPEntry &&)' inline default_delete noexcept-unevaluated 0x55974aa895f8
| `-ParmVarDecl 0x55974aa89708 <col:12> col:12 'ARPTable::ARPEntry &&'
`-CXXMethodDecl 0x55974aa897a8 <col:12> col:12 implicit operator= 'ARPTable::ARPEntry &(ARPTable::ARPEntry &&)' inline default_delete noexcept-unevaluated 0x55974aa897a8
  `-ParmVarDecl 0x55974aa898b8 <col:12> col:12 'ARPTable::ARPEntry &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.ARPTable::ARPEntry" = type { %class.IPAddress, %"struct.ARPTable::ARPEntry"*, %class.EtherAddress, i8, i8, i32, i32, %class.Packet*, %class.Packet*, i32, %class.List_member }
  NonVirtualBaseLLVMType:%"struct.ARPTable::ARPEntry" = type { %class.IPAddress, %"struct.ARPTable::ARPEntry"*, %class.EtherAddress, i8, i8, i32, i32, %class.Packet*, %class.Packet*, i32, %class.List_member }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aa23df8 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974aa23f18 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x55974aa23fb8 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x55974aa24018 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55974aa27100 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55974aa27538 <col:8>
|-CXXConstructorDecl 0x55974aa27208 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55974aa27208
| `-ParmVarDecl 0x55974aa27318 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x55974aa273b8 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974aa274c8 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55974aa23fb8 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55974aa293e0 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55974aa293b0 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x55974aa23fb8
| |     `-CXXStaticCastExpr 0x55974aa29380 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55974aa29350 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55974aa274c8 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55974aa24018 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55974aa294b0 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55974aa29480 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x55974aa24018
| |     `-CXXStaticCastExpr 0x55974aa29450 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55974aa29420 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55974aa274c8 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x55974aa29500 <col:8>
|-CXXDestructorDecl 0x55974aa29888 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55974aa8f8b8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55974aa8f8b8
| `-ParmVarDecl 0x55974aa8f9c8 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x55974aa8fa38 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x55974aa8fa38
  `-ParmVarDecl 0x55974aa8fb48 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aa8e590 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_adapter<ARPTable::ARPEntry>':'HashContainer_adapter<ARPTable::ARPEntry>'
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x55974aa8e828 prev 0x55974aa8e590 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x55974aa8e990 <line:21:5, col:9> col:9 buckets 'ARPTable::ARPEntry **'
|-FieldDecl 0x55974aa8e9e0 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x55974aa8ea30 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x55974aa8ea80 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x55974aa8ead0 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x55974aa8ec28 <line:26:5, col:36> col:12 'class HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-FriendDecl 0x55974aa8ed78 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-FriendDecl 0x55974aa8eec8 <line:28:5, col:45> col:12 'class HashContainer_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-CXXConstructorDecl 0x55974aa8f2c0 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline default trivial noexcept-unevaluated 0x55974aa8f2c0
| `-ParmVarDecl 0x55974aa8f3d8 <col:7> col:7 'const HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
|-CXXMethodDecl 0x55974aa8fbb8 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &(const HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline default trivial noexcept-unevaluated 0x55974aa8fbb8
| `-ParmVarDecl 0x55974aa8fcc8 <col:7> col:7 'const HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
`-CXXDestructorDecl 0x55974ac4f9a8 <col:7> col:7 implicit ~HashContainer_rep 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %"struct.ARPTable::ARPEntry"**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %"struct.ARPTable::ARPEntry"**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aa8a190 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x55974aa8a448 prev 0x55974aa8a190 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x55974aa8a4d8 <col:23, col:29> col:23 public
|-TypedefDecl 0x55974aa8afe0 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<ARPEntry>::key_type':'IPAddress'
| `-ElaboratedType 0x55974aa8af90 'typename HashContainer_adapter<ARPEntry>::key_type' sugar
|   `-TypedefType 0x55974aa8acd0 'HashContainer_adapter<ARPTable::ARPEntry>::key_type' sugar
|     |-Typedef 0x55974aa8a750 'key_type'
|     `-ElaboratedType 0x55974aa8a700 'typename ARPEntry::key_type' sugar
|       `-TypedefType 0x55974aa8a6e0 'ARPTable::ARPEntry::key_type' sugar
|         |-Typedef 0x55974aa889a8 'key_type'
|         `-RecordType 0x55974a745500 'IPAddress'
|           `-CXXRecord 0x55974a7e0430 'IPAddress'
|-TypedefDecl 0x55974aa8b078 <line:90:5, col:15> col:15 value_type 'ARPTable::ARPEntry':'ARPTable::ARPEntry'
| `-SubstTemplateTypeParmType 0x55974aa8b040 'ARPTable::ARPEntry' sugar
|   |-TemplateTypeParmType 0x55974aa319a0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974aa31948 'T'
|   `-RecordType 0x55974aa871a0 'ARPTable::ARPEntry'
|     `-CXXRecord 0x55974aa87108 'ARPEntry'
|-TypedefDecl 0x55974aa8b0d0 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x55974a522d80 'size_t' sugar
|   |-Typedef 0x55974a4e7be0 'size_t'
|   `-BuiltinType 0x55974a477640 'unsigned long'
|-TypedefDecl 0x55974aa8b128 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55974a5d3030 'uint32_t' sugar
|   |-Typedef 0x55974a4e04c8 'uint32_t'
|   `-TypedefType 0x55974a4b95a0 '__uint32_t' sugar
|     |-Typedef 0x55974a4b9198 '__uint32_t'
|     `-BuiltinType 0x55974a477620 'unsigned int'
|-EnumDecl 0x55974aa8b180 <line:98:5> col:5
| |-EnumConstantDecl 0x55974aa8b2b0 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x55974aa8b290 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x55974aa8b268 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x55974aa8b250 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x55974aa31ff0 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x55974aa31fd0 <col:42> 'int' 1
| `-EnumConstantDecl 0x55974aa8b320 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x55974aa8b370 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974aa8b300 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x55974aa320a8 <col:25> 'int' 63
|-CXXConstructorDecl 0x55974aa8b3c0 <line:108:5, col:19> col:5 used HashContainer 'void ()'
|-CXXConstructorDecl 0x55974aa8b528 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55974aa8b478 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x55974aa8b610 <line:114:5, col:20> col:5 used ~HashContainer 'void () noexcept'
|-CXXMethodDecl 0x55974aa8b700 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x55974aa8b7b0 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974aa8b860 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x55974aa8b9f8 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55974aa8b930 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55974aa8bc18 <line:142:5, col:51> col:23 bucket 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const'
| `-ParmVarDecl 0x55974aa8bb28 <col:30, col:46> col:46 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x55974aa8bcd0 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x55974aa8bf60 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| `-TemplateSpecializationType 0x55974aa8bec0 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'ARPTable::ARPEntry':'ARPTable::ARPEntry'
|   |-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>':'HashContainer_adapter<ARPTable::ARPEntry>'
|   `-RecordType 0x55974aa8bea0 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|     `-ClassTemplateSpecialization 0x55974aa8bda0 'HashContainer_const_iterator'
|-TypedefDecl 0x55974aa8c190 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| `-TemplateSpecializationType 0x55974aa8c0f0 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'ARPTable::ARPEntry':'ARPTable::ARPEntry'
|   |-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>':'HashContainer_adapter<ARPTable::ARPEntry>'
|   `-RecordType 0x55974aa8c0d0 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|     `-ClassTemplateSpecialization 0x55974aa8bfd8 'HashContainer_iterator'
|-CXXMethodDecl 0x55974aa8c288 <line:155:5, col:27> col:21 begin 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55974aa8c3d8 <line:157:5, col:35> col:27 begin 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55974aa8c4a8 <line:161:5, col:25> col:21 end 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55974aa8c578 <line:163:5, col:33> col:27 end 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55974aa8c718 <line:166:5, col:46> col:21 begin 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x55974aa8c628 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55974aa8c8c8 <line:168:5, col:54> col:27 begin 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55974aa8c7d0 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55974aa8ca88 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55974aa8c990 <col:26, col:42> col:42 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x55974aa8cc48 <line:173:5, col:49> col:22 count 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::size_type (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55974aa8cb50 <col:28, col:44> col:44 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x55974aa8ce08 <line:183:5, col:45> col:21 used find 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55974aa8cd10 <col:26, col:42> col:42 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x55974aa8cfc8 <line:185:5, col:53> col:27 find 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::const_iterator (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55974aa8ced0 <col:32, col:48> col:48 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x55974aa8d120 <line:191:5, col:52> col:21 find_prefer 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55974aa8d090 <col:33, col:49> col:49 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x55974aa8d308 <line:197:5, col:68> col:43 get 'ARPTable::ARPEntry *(const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const'
| |-ParmVarDecl 0x55974aa8d218 <col:47, col:63> col:63 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
| |-NoInlineAttr 0x55974aa8d3e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aa8d440 <col:30> Inherited
|-CXXMethodDecl 0x55974aa8d668 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &, ARPTable::ARPEntry *)' inline
| |-ParmVarDecl 0x55974aa8d4d8 <col:27, col:37> col:37 it 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &'
| `-ParmVarDecl 0x55974aa8d550 <col:41, col:44> col:44 element 'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x55974aa8d938 <line:239:5, col:58> col:8 set 'ARPTable::ARPEntry *(HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &, ARPTable::ARPEntry *, bool)'
| |-ParmVarDecl 0x55974aa8d738 <col:12, col:22> col:22 it 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &'
| |-ParmVarDecl 0x55974aa8d7b0 <col:26, col:29> col:29 element 'ARPTable::ARPEntry *'
| `-ParmVarDecl 0x55974aa8d818 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x55974aa8db18 <line:249:5, col:57> col:43 set 'ARPTable::ARPEntry *(ARPTable::ARPEntry *)'
| |-ParmVarDecl 0x55974aa8da10 <col:47, col:50> col:50 element 'ARPTable::ARPEntry *'
| |-NoInlineAttr 0x55974aa8dbd0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aa8dc28 <col:30> Inherited
|-CXXMethodDecl 0x55974aa8dd58 <line:256:5, col:33> col:15 erase 'ARPTable::ARPEntry *(HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &)' inline
| `-ParmVarDecl 0x55974aa8dc60 <col:21, col:31> col:31 it 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &'
|-CXXMethodDecl 0x55974aa8df18 <line:262:5, col:40> col:15 erase 'ARPTable::ARPEntry *(const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55974aa8de20 <col:21, col:37> col:37 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x55974aa8dfd0 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55974aa8e298 <line:269:5, col:44> col:17 swap 'void (HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline
| `-ParmVarDecl 0x55974aa8e1a8 <col:22, col:43> col:43 x 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
|-CXXMethodDecl 0x55974aa8e3e0 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55974aa8e350 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55974aa8e498 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x55974aa8e548 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55974aa8fd50 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-CXXConstructorDecl 0x55974aa8ffd8 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)'
| `-ParmVarDecl 0x55974aa8fec8 <col:19, col:45> col:46 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
|-CXXMethodDecl 0x55974aa90378 <line:292:5, col:63> col:26 operator= 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &(const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)'
| `-ParmVarDecl 0x55974aa90248 <col:36, col:62> col:63 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
|-FriendDecl 0x55974aa90538 <line:294:5, col:45> col:12 'class HashContainer_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
`-FriendDecl 0x55974aa90688 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aa90990 <../dummy_inc/click/list.hh:138:1, line:560:1> line:139:7 class List definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument decl
| `-Field 0x55974aa88948 '_age_link' 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x55974aa90c88 prev 0x55974aa90990 <col:1, col:7> col:7 implicit class List
|-AccessSpecDecl 0x55974aa90d18 <col:14, col:20> col:14 public
|-TypedefDecl 0x55974aa90da8 <line:141:5, col:16> col:16 pointer 'ARPTable::ARPEntry *'
| `-PointerType 0x55974aa90d70 'ARPTable::ARPEntry *'
|   `-SubstTemplateTypeParmType 0x55974aa90d40 'ARPTable::ARPEntry' sugar
|     |-TemplateTypeParmType 0x55974aa5d510 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974aa5d4b8 'T'
|     `-RecordType 0x55974aa871a0 'ARPTable::ARPEntry'
|       `-CXXRecord 0x55974aa87108 'ARPEntry'
|-TypedefDecl 0x55974aa90e38 <line:142:5, col:22> col:22 const_pointer 'const ARPTable::ARPEntry *'
| `-PointerType 0x55974aa90e00 'const ARPTable::ARPEntry *'
|   `-QualType 0x55974aa90d41 'const ARPTable::ARPEntry' const
|     `-SubstTemplateTypeParmType 0x55974aa90d40 'ARPTable::ARPEntry' sugar
|       |-TemplateTypeParmType 0x55974aa5d510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974aa5d4b8 'T'
|       `-RecordType 0x55974aa871a0 'ARPTable::ARPEntry'
|         `-CXXRecord 0x55974aa87108 'ARPEntry'
|-CXXRecordDecl 0x55974aa90e90 <line:143:5, col:11> col:11 class const_iterator
|-CXXRecordDecl 0x55974aa90f50 <line:144:5, col:11> col:11 class iterator
|-TypedefDecl 0x55974aa91010 <line:145:5, col:20> col:20 size_type 'size_t':'unsigned long'
| `-TypedefType 0x55974a522d80 'size_t' sugar
|   |-Typedef 0x55974a4e7be0 'size_t'
|   `-BuiltinType 0x55974a477640 'unsigned long'
|-CXXConstructorDecl 0x55974aa910a0 <line:148:5, line:150:5> line:148:5 used List 'void ()'
|-CXXMethodDecl 0x55974aa911a8 <line:154:5, line:156:5> line:154:14 begin 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator ()'
|-CXXMethodDecl 0x55974aa912a8 <line:158:5, line:160:5> line:158:20 begin 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_iterator () const'
|-CXXMethodDecl 0x55974aa91378 <line:163:5, line:165:5> line:163:14 end 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator ()'
|-CXXMethodDecl 0x55974aa91448 <line:167:5, line:169:5> line:167:20 end 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_iterator () const'
|-CXXMethodDecl 0x55974aa914f8 <line:174:5, line:176:5> line:174:10 empty 'bool () const'
|-CXXMethodDecl 0x55974aa915a8 <line:180:5, line:185:5> line:180:15 size 'List::size_type () const'
|-CXXMethodDecl 0x55974aa916c8 <line:191:5, line:193:5> line:191:13 front 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer ()'
|-CXXMethodDecl 0x55974aa917e8 <line:195:5, line:197:5> line:195:19 front 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer () const'
|-CXXMethodDecl 0x55974aa918b8 <line:201:5, line:203:5> line:201:13 back 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer ()'
|-CXXMethodDecl 0x55974aa91988 <line:205:5, line:207:5> line:205:19 back 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer () const'
|-CXXMethodDecl 0x55974aa91b38 <line:213:5, line:221:5> line:213:10 push_front 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| `-ParmVarDecl 0x55974aa91a48 <col:21, col:29> col:29 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x55974aa91c90 <line:226:5, line:235:5> line:226:10 push_back 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| `-ParmVarDecl 0x55974aa91c00 <col:20, col:28> col:28 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x55974aa91d48 <line:239:5, line:247:5> line:239:10 pop_front 'void ()'
|-CXXMethodDecl 0x55974aa91df8 <line:251:5, line:259:5> line:251:10 pop_back 'void ()'
|-CXXMethodDecl 0x55974aa92048 <line:266:5, line:275:5> line:266:10 insert 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer, List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| |-ParmVarDecl 0x55974aa91eb8 <col:17, col:25> col:25 pos 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
| `-ParmVarDecl 0x55974aa91f30 <col:30, col:38> col:38 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x55974aa922a8 <line:282:5, line:285:5> line:282:14 insert 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator, List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| |-ParmVarDecl 0x55974aa92118 <col:21, col:30> col:30 it 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
| `-ParmVarDecl 0x55974aa92190 <col:34, col:42> col:42 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-FunctionTemplateDecl 0x55974aa926c8 <line:292:5, line:298:5> line:293:10 insert
| |-TemplateTypeParmDecl 0x55974aa92368 <line:292:15, col:24> col:24 typename depth 0 index 0 InputIterator
| `-CXXMethodDecl 0x55974aa92628 <line:293:5, line:298:5> line:293:10 insert 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator, InputIterator, InputIterator)'
|   |-ParmVarDecl 0x55974aa92418 <col:17, col:26> col:26 it 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
|   |-ParmVarDecl 0x55974aa92490 <col:30, col:44> col:44 first 'InputIterator'
|   `-ParmVarDecl 0x55974aa92508 <col:51, col:65> col:65 last 'InputIterator'
|-CXXMethodDecl 0x55974aa92858 <line:304:5, line:316:5> line:304:10 erase 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| `-ParmVarDecl 0x55974aa927c8 <col:16, col:24> col:24 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x55974aa929e8 <line:322:5, line:327:5> line:322:14 erase 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator)'
| `-ParmVarDecl 0x55974aa92920 <col:20, col:29> col:29 it 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
|-CXXMethodDecl 0x55974aa92bf8 <line:333:5, line:337:5> line:333:14 erase 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator, List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator)'
| |-ParmVarDecl 0x55974aa92ab0 <col:20, col:29> col:29 first 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
| `-ParmVarDecl 0x55974aa92b28 <col:36, col:45> col:45 last 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
|-CXXMethodDecl 0x55974aa92cb8 <line:341:5, line:347:5> line:341:10 clear 'void ()'
|-CXXMethodDecl 0x55974aa92d68 <line:354:5, line:356:5> line:354:10 __clear 'void ()'
|-CXXMethodDecl 0x55974aa931d8 <line:360:5, line:364:5> line:360:10 swap 'void (List<ARPTable::ARPEntry, &ARPEntry::_age_link> &)'
| `-ParmVarDecl 0x55974aa930e8 <col:15, col:32> col:32 x 'List<ARPTable::ARPEntry, &ARPEntry::_age_link> &'
|-CXXMethodDecl 0x55974aa93398 <line:370:5, line:372:5> line:370:10 isolated 'bool (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer)'
| `-ParmVarDecl 0x55974aa932a0 <col:19, col:33> col:33 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer':'const ARPTable::ARPEntry *'
|-CXXMethodDecl 0x55974aa93558 <line:375:5, line:381:5> line:375:10 contains 'bool (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer) const'
| `-ParmVarDecl 0x55974aa93460 <col:19, col:33> col:33 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer':'const ARPTable::ARPEntry *'
|-CXXRecordDecl 0x55974aa93610 prev 0x55974aa90e90 <line:386:5, col:11> col:11 class const_iterator
|-CXXRecordDecl 0x55974aa936b0 prev 0x55974aa90f50 <line:491:5, col:11> col:11 class iterator
|-AccessSpecDecl 0x55974aa93750 <line:552:3, col:10> col:3 private
|-FieldDecl 0x55974aa93788 <line:554:5, col:8> col:8 _head 'ARPTable::ARPEntry *'
|-FieldDecl 0x55974aa937e8 <line:555:5, col:8> col:8 _tail 'ARPTable::ARPEntry *'
|-CXXConstructorDecl 0x55974aa93c18 <line:557:5, col:34> col:5 List 'void (const List<ARPTable::ARPEntry, &ARPEntry::_age_link> &)'
| `-ParmVarDecl 0x55974aa93b08 <col:10, col:33> col:33 x 'const List<ARPTable::ARPEntry, &ARPEntry::_age_link> &'
`-CXXMethodDecl 0x55974aa942f8 <line:558:5, col:56> col:22 operator= 'List<ARPTable::ARPEntry, &ARPEntry::_age_link> &(const List<ARPTable::ARPEntry, &ARPEntry::_age_link> &)'
  `-ParmVarDecl 0x55974aa941c8 <col:32, col:55> col:55 x 'const List<ARPTable::ARPEntry, &ARPEntry::_age_link> &'

Layout: <CGRecordLayout
  LLVMType:%class.List = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"* }
  NonVirtualBaseLLVMType:%class.List = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aa589d8 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55974aa58af8 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x55974aa58bc8 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aa58c30 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55974aa58d48 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x55974aa58e18 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x55974aa58e78 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x55974aa58ed8 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aa57ff0 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974aa58108 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x55974aa58198 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55974aa582d8 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x55974aa581d0 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55974aa583d0 <line:12:5, col:20> col:5 used ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x55974aa58550 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x55974aa584c0 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x55974aa59d30 <col:48, line:17:5>
|   |-ParenExpr 0x55974aa59c78 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x55974aa59c48 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x55974aa59910 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974aa598e0 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55974aa59810 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x55974aa59770 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x55974aa59758 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x55974aa59740 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x55974aa59710 <col:24> 'HashAllocator::link *' lvalue ->_free 0x55974aa59208
|   |   |   | |       `-CXXThisExpr 0x55974aa59700 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x55974aa597f8 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x55974aa597e0 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x55974aa597c8 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x55974aa59798 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x55974aa59268
|   |   |   |         `-CXXThisExpr 0x55974aa59788 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x55974aa598c0 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x55974aa59890 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55974aa59830 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x55974aa584c0 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x55974aa598a8 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x55974aa59860 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x55974aa592c8
|   |   |         `-CXXThisExpr 0x55974aa59850 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55974aa59970 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974aa59950 <col:72> 'int' 0
|   |   `-CallExpr 0x55974aa59ba8 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x55974aa59b90 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974aa59b70 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974aa59be8 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974aa599e0 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x55974aa59c00 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974aa59a20 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x55974aa59c18 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974aa59a60 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x55974aa59c30 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974aa59b58 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974aa59b40 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974aa59af8 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x55974aa59d10 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x55974aa59ca8 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x55974aa592c8
|     | `-CXXThisExpr 0x55974aa59c98 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x55974aa59cf8 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55974aa59cd8 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x55974aa584c0 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x55974aa58620 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x55974aa58768 <line:20:5, col:35> col:17 deallocate 'void (void *)' inline
| `-ParmVarDecl 0x55974aa586d8 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x55974aa58908 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x55974aa58848 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x55974aa589b0 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x55974aa589d8 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974aa58af8 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x55974aa58bc8 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x55974aa58c30 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974aa58d48 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x55974aa58e18 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x55974aa58e78 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x55974aa58ed8 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x55974aa58f40 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x55974aa59040 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55974aa591b0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974aa59020 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x55974aa59000 <col:20> 'int' 1024
| |-EnumConstantDecl 0x55974aa590d0 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55974aa591c8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974aa590b0 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x55974aa59090 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x55974aa59160 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x55974aa591e0 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974aa59140 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x55974aa59120 <col:18> 'int' 8
|-FieldDecl 0x55974aa59208 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x55974aa59268 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x55974aa592c8 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55974aa59340 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x55974aa594d8 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x55974aa59418 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x55974aa59658 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x55974aa59598 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aa949e8 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 72
|-CXXRecordDecl 0x55974aa94c28 prev 0x55974aa949e8 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55974aa94cb8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55974aa94d18 <line:61:5, line:63:5> line:61:5 used SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55974aa94df8 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<72> &)' inline default_delete noexcept-unevaluated 0x55974aa94df8
| `-ParmVarDecl 0x55974aa94f08 <col:7> col:7 'const SizedHashAllocator<72> &'
|-CXXConstructorDecl 0x55974aa94fa8 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55974aa94fa8
| `-ParmVarDecl 0x55974aa950b8 <col:7> col:7 'SizedHashAllocator<72> &&'
|-CXXMethodDecl 0x55974aa95158 <col:7> col:7 implicit operator= 'SizedHashAllocator<72> &(SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55974aa95158
| `-ParmVarDecl 0x55974aa95268 <col:7> col:7 'SizedHashAllocator<72> &&'
`-CXXDestructorDecl 0x55974aa952f0 <col:7> col:7 implicit used ~SizedHashAllocator 'void () noexcept' inline default
  `-CompoundStmt 0x55974ac4fa90 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a977d90 prev 0x55974a96ebd0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a977e88 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55974a977f28 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55974a97ecf0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55974a97f0d8 <col:11>
|-CXXConstructorDecl 0x55974a97edd0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a97eeb8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55974a97f820 <col:11>
|-CXXConstructorDecl 0x55974a97ef58 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a97f068 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55974a981078 <col:11>
|-CXXDestructorDecl 0x55974a980388 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55974a686f38 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a687048 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55974a687910 <col:11>
|   `-ReturnStmt 0x55974a687900 <col:11>
|     `-UnaryOperator 0x55974a6878e8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974a6878d8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55974a6870b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55974a6871c8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55974aa181b0 <col:11>
    `-ReturnStmt 0x55974aa181a0 <col:11>
      `-UnaryOperator 0x55974aa18188 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55974aa18178 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a96dd88 prev 0x55974a96da98 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a96de80 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55974a96df10 <col:19, col:25> col:19 public
|-TypedefDecl 0x55974a96df48 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55974a5d3110 'int32_t' sugar
|   |-Typedef 0x55974a4e0328 'int32_t'
|   `-TypedefType 0x55974a4b9510 '__int32_t' sugar
|     |-Typedef 0x55974a4b9128 '__int32_t'
|     `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974a96dfb0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55974a5d32d0 'int64_t' sugar
|   |-Typedef 0x55974a4e0390 'int64_t'
|   `-TypedefType 0x55974a4b9630 '__int64_t' sugar
|     |-Typedef 0x55974a4b9208 '__int64_t'
|     `-BuiltinType 0x55974a4775a0 'long'
|-EnumDecl 0x55974a96e008 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55974a96e180 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55974a96e160 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55974a96e138 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55974a96e120 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55974a96e0f0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55974a96e278 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55974a96e258 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55974a96e230 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55974a96e218 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55974a96e1f0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55974a96e1d0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55974a96e2c8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55974a96e3d0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55974a96e920 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a96e3b0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55974a96e390 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55974a96e460 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55974a96e938 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a96e440 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55974a96e420 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55974a96e4f0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55974a96e950 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a96e4d0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55974a96e4b0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55974a96e580 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55974a96e968 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a96e560 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55974a96e540 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55974a96e610 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55974a96e980 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a96e5f0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55974a96e5d0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55974a96e6a0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55974a96e998 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a96e680 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55974a96e660 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55974a96e730 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55974a96e9b0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a96e710 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55974a96e6f0 <col:26> 'int' EnumConstant 0x55974a96e3d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55974a96e800 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55974a96e9c8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a96e7e0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55974a96e7c0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55974a96e780 <col:27> 'int' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55974a96e7a0 <col:44> 'int' EnumConstant 0x55974a96e6a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55974a96e8d0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55974a96e9e0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a96e8b0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55974a96e890 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55974a96e850 <col:27> 'int' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55974a96e870 <col:44> 'int' EnumConstant 0x55974a96e580 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55974a96e9f8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55974a96eb00 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55974a96eb50 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a96eae0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55974a96eac0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55974a96eb78 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55974a5d2d40 'uninitialized_type'
|   `-CXXRecord 0x55974a5d2ca8 'uninitialized_type'
|-CXXRecordDecl 0x55974a96ebd0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55974a96ece0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a97f0e8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55974a97f208 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55974a97f1c0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55974a97f150 <col:9> '<bound member function type>' ->assign 0x55974a973928
|     | `-CXXThisExpr 0x55974a97f140 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55974a97f180 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55974a97f1f0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55974a97f1a0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55974a96ef28 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55974a96eda0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55974a96ee18 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55974a97aa20 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55974a97aa00 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a97f220 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55974a97f370 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55974a97f2f8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55974a97f288 <col:9> '<bound member function type>' ->assign 0x55974a973928
|     | `-CXXThisExpr 0x55974a97f278 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55974a97f340 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55974a97f328 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55974a97f2b8 <col:16> 'long' lvalue ParmVar 0x55974a96eda0 'sec' 'long'
|     `-ImplicitCastExpr 0x55974a97f358 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55974a97f2d8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a96ee18 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55974a96f188 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55974a96eff8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55974a96f070 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55974a97aa58 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55974a97aa38 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a97f388 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55974a97f4c0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55974a97f460 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55974a97f3f0 <col:9> '<bound member function type>' ->assign 0x55974a973928
|     | `-CXXThisExpr 0x55974a97f3e0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55974a97f490 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55974a97f420 <col:16> 'int' lvalue ParmVar 0x55974a96eff8 'sec' 'int'
|     `-ImplicitCastExpr 0x55974a97f4a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55974a97f440 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a96f070 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55974a96f3e8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55974a96f258 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55974a96f2d0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55974a97aa90 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55974a97aa70 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a97f4d8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55974a97f628 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55974a97f5b0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55974a97f540 <col:9> '<bound member function type>' ->assign 0x55974a973928
|     | `-CXXThisExpr 0x55974a97f530 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55974a97f5f8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55974a97f5e0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55974a97f570 <col:16> 'unsigned long' lvalue ParmVar 0x55974a96f258 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55974a97f610 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55974a97f590 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a96f2d0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55974a970580 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55974a96f4b8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55974a96f530 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55974a97aac8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55974a97aaa8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a97f640 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55974a97f790 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55974a97f718 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55974a97f6a8 <col:9> '<bound member function type>' ->assign 0x55974a973928
|     | `-CXXThisExpr 0x55974a97f698 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55974a97f760 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55974a97f748 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55974a97f6d8 <col:16> 'unsigned int' lvalue ParmVar 0x55974a96f4b8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55974a97f778 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55974a97f6f8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a96f530 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55974a9706e0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55974a970650 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55974a970878 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55974a9707b8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55974a970aa8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55974a9709b0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55974a970c58 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55974a970b98 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a97f830 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55974a97f7a8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55974a970b98 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55974a97f890 <col:19, line:214:5>
|-CXXConstructorDecl 0x55974a970e28 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55974a970d68 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a97f8a0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55974a97f950 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55974a97f928 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55974a97f8f8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55974a970d68 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55974a971018 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55974a970f90 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55974a96db30 'Timestamp'
|   | `-CXXRecord 0x55974a96dd88 'Timestamp'
|   `-ParenType 0x55974a970f30 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55974a970f00 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55974a96e0d0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55974a96df48 'seconds_type'
|         `-TypedefType 0x55974a5d3110 'int32_t' sugar
|           |-Typedef 0x55974a4e0328 'int32_t'
|           `-TypedefType 0x55974a4b9510 '__int32_t' sugar
|             |-Typedef 0x55974a4b9128 '__int32_t'
|             `-BuiltinType 0x55974a477580 'int'
|-CXXConversionDecl 0x55974a971158 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55974a971228 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55974a97fa58 <col:37, line:231:5>
|   `-ReturnStmt 0x55974a97fa48 <line:227:9, col:23>
|     `-BinaryOperator 0x55974a97fa28 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55974a97f9f8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55974a97f9a8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55974a977f28
|       |   `-MemberExpr 0x55974a97f978 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55974a978ed8
|       |     `-CXXThisExpr 0x55974a97f968 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55974a97fa10 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55974a97f9d8 <col:23> 'int' 0
|-CXXMethodDecl 0x55974a9712e8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55974a9713a8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a971468 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a971528 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a9715e8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55974a971758 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55974a971698 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55974a9718a0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55974a971810 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a971968 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55974a971a08 <col:54> "" ""
|-CXXMethodDecl 0x55974a971a98 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55974a971b38 <col:54> "" ""
|-CXXMethodDecl 0x55974a971bc8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55974a971c68 <col:54> "" ""
|-CXXMethodDecl 0x55974a971d68 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55974a971e38 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55974a971f68 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55974a972060 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55974a972198 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55974a97fc70 <col:39, line:271:5>
|   `-ReturnStmt 0x55974a97fc60 <line:267:9, col:61>
|     `-CallExpr 0x55974a97fc00 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55974a97fbe8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a97fa70 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55974a979208 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55974a97fc30 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55974a97fad0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55974a977f28
|       |   `-MemberExpr 0x55974a97faa0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55974a978ed8
|       |     `-CXXThisExpr 0x55974a97fa90 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55974a97fc48 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55974a97fb70 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55974a97fb40 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55974a97fb00 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55974a97fb58 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55974a97fb20 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e6a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55974a972258 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55974a97fe30 <col:39, line:279:5>
|   `-ReturnStmt 0x55974a97fe20 <line:275:9, col:61>
|     `-CallExpr 0x55974a97fdc0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55974a97fda8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a97fc88 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55974a979208 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55974a97fdf0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55974a97fce8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55974a977f28
|       |   `-MemberExpr 0x55974a97fcb8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55974a978ed8
|       |     `-CXXThisExpr 0x55974a97fca8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55974a97fe08 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55974a97fd88 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55974a97fd58 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55974a97fd18 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55974a97fd70 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55974a97fd38 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e580 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55974a972318 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55974a97ffc8 <col:39, line:287:5>
|   `-ReturnStmt 0x55974a97ffb8 <line:283:9, col:53>
|     `-BinaryOperator 0x55974a97ff98 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55974a97ff68 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55974a97fe88 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55974a977f28
|       |   `-MemberExpr 0x55974a97fe58 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55974a978ed8
|       |     `-CXXThisExpr 0x55974a97fe48 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55974a97ff80 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55974a97ff48 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55974a97ff28 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55974a97fef8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55974a97feb8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e3d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55974a97ff10 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55974a97fed8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55974a972408 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55974a981260 <col:40, line:293:5>
|   |-DeclStmt 0x55974a980110 <line:291:9, col:48>
|   | `-VarDecl 0x55974a97fff0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55974a9800f0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55974a980098 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55974a980068 <col:22> '<bound member function type>' ->subsec 0x55974a9713a8
|   |     |   `-CXXThisExpr 0x55974a980058 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55974a9800d8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55974a9800b8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e800 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55974a981250 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55974a981238 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55974a981208 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a9811f0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55974a9811d0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55974a9811a0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55974a980f38 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55974a980f20 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55974a980128 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55974a97fff0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55974a981140 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55974a981128 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55974a9810f8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55974a980f50 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55974a980ec0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55974a980ea8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55974a980e58 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55974a96dcd8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55974a980df8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55974a980158 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55974a980148 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55974a980e40 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55974a980e28 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55974a980618 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55974a980180 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55974a980210 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55974a9801e0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55974a9801a0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e800 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55974a9801f8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55974a9801c0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55974a97fff0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55974a981170 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55974a980f08 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55974a980ef8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55974a9724c8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55974a9817b8 <col:40, line:302:5>
|   |-DeclStmt 0x55974a9813b0 <line:297:9, col:48>
|   | `-VarDecl 0x55974a981290 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55974a981390 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55974a981338 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55974a981308 <col:22> '<bound member function type>' ->subsec 0x55974a9713a8
|   |     |   `-CXXThisExpr 0x55974a9812f8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55974a981378 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55974a981358 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e8d0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55974a9817a8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55974a981790 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55974a981760 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a981748 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55974a981728 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55974a9816f8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55974a981620 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55974a981608 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55974a9813c8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55974a981290 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55974a981698 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55974a981680 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55974a981650 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55974a981638 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55974a9815a8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55974a981590 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55974a981570 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55974a96dcd8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55974a981510 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55974a9813f8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55974a9813e8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55974a981558 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55974a981540 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55974a9814d0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55974a981420 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55974a9814b0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55974a981480 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55974a981440 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e8d0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55974a981498 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55974a981460 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55974a981290 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55974a9816c8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55974a9815f0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55974a9815e0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55974a972588 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55974a981840 <col:40, line:306:5>
|   `-ReturnStmt 0x55974a981830 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55974a981800 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55974a9817e8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974a9817d8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55974a972728 <line:310:5, col:65> col:29 used make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55974a972638 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55974a9728f8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55974a972800 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55974a9729e8 <line:314:5, col:38> col:28 used jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55974a972b58 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55974a972a98 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55974a981988 <col:56, line:320:5>
|   `-ReturnStmt 0x55974a981978 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55974a981960 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55974a981930 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a981918 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55974a9818d8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55974a9818a8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55974a981868 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55974a972a98 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55974a9818c0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55974a981888 <col:31> 'int' 0
|-CXXMethodDecl 0x55974a972d98 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55974a972c10 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a972c88 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a981b58 <col:72, line:326:5>
|   `-ReturnStmt 0x55974a981b48 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55974a981b30 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55974a981b00 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a981ae8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55974a981aa8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55974a981a90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55974a9819b0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55974a972c10 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55974a981a50 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55974a981a38 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55974a9819d0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55974a977680 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55974a981a78 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55974a9819f0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a972c88 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a972f48 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55974a972e58 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55974a982220 <col:56, line:337:5>
|   |-DeclStmt 0x55974a981e58 <line:329:9, col:51>
|   | `-VarDecl 0x55974a981b80 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55974a981e40 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55974a981e10 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55974a981df8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55974a981de0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55974a981db0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55974a981d98 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55974a981d80 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55974a981c70 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55974a982010 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55974a981ec0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55974a977f28
|   | | `-MemberExpr 0x55974a981e90 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55974a978ed8
|   | |   `-DeclRefExpr 0x55974a981e70 <col:9> 'Timestamp' lvalue Var 0x55974a981b80 't' 'Timestamp'
|   | `-BinaryOperator 0x55974a981ff0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55974a981fc0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55974a981ef0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55974a972e58 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55974a981fd8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55974a981fa0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55974a981f80 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55974a981f50 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55974a981f10 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55974a981f68 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55974a981f30 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e6a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55974a982208 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55974a9821d8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55974a9821c0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55974a9821a0 <col:16> 'Timestamp' lvalue Var 0x55974a981b80 't' 'Timestamp'
|-CXXMethodDecl 0x55974a973110 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55974a973000 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a973078 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a9823d8 <col:72, line:343:5>
|   `-ReturnStmt 0x55974a9823c8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55974a9823b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55974a982380 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a982368 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55974a982328 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55974a982310 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55974a982258 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55974a973000 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55974a9822d0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55974a9822b8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55974a982278 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55974a9777c8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55974a9822f8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55974a982298 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a973078 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a973260 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55974a9731d0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55974a982820 <col:56, line:354:5>
|   |-DeclStmt 0x55974a9825c8 <line:346:9, col:51>
|   | `-VarDecl 0x55974a982400 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55974a9825b0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55974a982580 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55974a982568 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55974a982550 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55974a982520 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55974a982508 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55974a9824f0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55974a9824c0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55974a982780 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55974a982630 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55974a977f28
|   | | `-MemberExpr 0x55974a982600 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55974a978ed8
|   | |   `-DeclRefExpr 0x55974a9825e0 <col:9> 'Timestamp' lvalue Var 0x55974a982400 't' 'Timestamp'
|   | `-BinaryOperator 0x55974a982760 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55974a982730 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55974a982660 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55974a9731d0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55974a982748 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55974a982710 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55974a9826f0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55974a9826c0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55974a982680 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55974a9826d8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55974a9826a0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e580 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55974a982808 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55974a9827d8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55974a9827c0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55974a9827a0 <col:16> 'Timestamp' lvalue Var 0x55974a982400 't' 'Timestamp'
|-CXXMethodDecl 0x55974a973428 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55974a973318 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a973390 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a9829d8 <col:72, line:360:5>
|   `-ReturnStmt 0x55974a9829c8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55974a9829b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55974a982980 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a982968 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55974a982928 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55974a982910 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55974a982858 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55974a973318 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55974a9828d0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55974a9828b8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55974a982878 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55974a977910 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55974a9828f8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55974a982898 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a973390 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a973578 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55974a9734e8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55974a98f348 <col:56, line:371:5>
|   |-DeclStmt 0x55974a982bc8 <line:363:9, col:51>
|   | `-VarDecl 0x55974a982a00 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55974a982bb0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55974a982b80 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55974a982b68 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55974a982b50 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55974a982b20 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55974a982b08 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55974a982af0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55974a982ac0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55974a98f2a8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55974a982c30 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55974a977f28
|   | | `-MemberExpr 0x55974a982c00 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55974a978ed8
|   | |   `-DeclRefExpr 0x55974a982be0 <col:9> 'Timestamp' lvalue Var 0x55974a982a00 't' 'Timestamp'
|   | `-CallExpr 0x55974a98f248 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55974a98f230 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55974a982c60 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55974a979208 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55974a98f278 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55974a982c80 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55974a9734e8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55974a98f290 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55974a98f210 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55974a98f1e0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55974a982ca0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e3d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55974a98f1f8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55974a982cc0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55974a98f330 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55974a98f300 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55974a98f2e8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55974a98f2c8 <col:16> 'Timestamp' lvalue Var 0x55974a982a00 't' 'Timestamp'
|-CXXMethodDecl 0x55974a973668 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55974a98f488 <col:39, line:377:5>
|   `-ReturnStmt 0x55974a98f478 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55974a98f460 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55974a98f430 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974a98f418 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55974a98f3d8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55974a98f380 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55974a98f3c0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55974a98f3a0 <col:29> 'int' 1
|-CXXMethodDecl 0x55974a973728 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55974a98f568 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55974a98f520 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55974a98f4b0 <col:9> '<bound member function type>' ->assign 0x55974a973928
|     | `-CXXThisExpr 0x55974a98f4a0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55974a98f4e0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55974a98f550 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55974a98f500 <col:19> 'int' 0
|-CXXMethodDecl 0x55974a973928 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55974a9737d8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a973850 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55974a97ab00 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55974a97aae0 <col:60> 'int' 0
| `-CompoundStmt 0x55974a98f760 <col:63, line:395:5>
|   `-BinaryOperator 0x55974a98f740 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55974a98f5c0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55974a977f28
|     | `-MemberExpr 0x55974a98f590 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55974a978ed8
|     |   `-CXXThisExpr 0x55974a98f580 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55974a98f720 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55974a98f6b0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55974a98f650 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55974a98f638 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55974a98f620 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55974a98f5f0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55974a9737d8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55974a98f698 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55974a98f678 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55974a98f708 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55974a98f6f0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55974a98f6d0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a973850 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a973af8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55974a9739e8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a973a60 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a98f8b8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55974a98f870 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55974a98f788 <col:9> '<bound member function type>' ->assign 0x55974a973928
|     | `-CXXThisExpr 0x55974a98f778 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55974a98f8a0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55974a98f7b8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55974a9739e8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55974a98f830 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55974a98f818 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a98f7d8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55974a9777c8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55974a98f858 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55974a98f7f8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a973a60 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a973cc8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55974a973bb8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a973c30 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a98fa10 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55974a98f9c8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55974a98f8e0 <col:9> '<bound member function type>' ->assign 0x55974a973928
|     | `-CXXThisExpr 0x55974a98f8d0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55974a98f9f8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55974a98f910 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55974a973bb8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55974a98f988 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55974a98f970 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a98f930 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55974a977910 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55974a98f9b0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55974a98f950 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a973c30 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a973e98 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55974a973d88 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a973e00 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55974a97ab38 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55974a97ab18 <col:57> 'int' 0
| `-DeprecatedAttr 0x55974a973f48 <col:75> "" ""
|-CXXMethodDecl 0x55974a9740d8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55974a973fc8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a974040 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974a974188 <col:74> "" ""
|-CXXMethodDecl 0x55974a974318 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55974a974208 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55974a974280 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974a9743c8 <col:74> "" ""
|-CXXMethodDecl 0x55974a974458 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55974a9744f8 <col:42> "" ""
|-CXXMethodDecl 0x55974a976d30 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55974a976c10 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55974a976c90 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55974a976e00 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55974a976ec0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55974a976f60 <col:20>
| `-OptimizeNoneAttr 0x55974a976fb8 <col:30>
|-CXXMethodDecl 0x55974a977000 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55974a9770c0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55974a977180 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55974a977240 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55974a977300 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55974a9773c0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55974a977480 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55974a977540 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55974a977680 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55974a9775f0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a98fb58 <col:58, line:512:5>
|   `-ReturnStmt 0x55974a98fb48 <line:511:9, col:53>
|     `-BinaryOperator 0x55974a98fb28 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55974a98faf8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55974a98fa28 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a9775f0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55974a98fb10 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55974a98fad8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55974a98fab8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55974a98fa88 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55974a98fa48 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55974a98faa0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55974a98fa68 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e6a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55974a9777c8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55974a977738 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a98fca0 <col:58, line:516:5>
|   `-ReturnStmt 0x55974a98fc90 <line:515:9, col:53>
|     `-BinaryOperator 0x55974a98fc70 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55974a98fc40 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55974a98fb70 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a977738 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55974a98fc58 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55974a98fc20 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55974a98fc00 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55974a98fbd0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55974a98fb90 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55974a98fbe8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55974a98fbb0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e580 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55974a977910 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55974a977880 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a98fde8 <col:58, line:520:5>
|   `-ReturnStmt 0x55974a98fdd8 <line:519:9, col:53>
|     `-BinaryOperator 0x55974a98fdb8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55974a98fd88 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55974a98fcb8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a977880 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55974a98fda0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55974a98fd68 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55974a98fd48 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55974a98fd18 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55974a98fcd8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e3d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55974a98fd30 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55974a98fcf8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55974a977a58 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55974a9779c8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a98ff30 <col:60, line:524:5>
|   `-ReturnStmt 0x55974a98ff20 <line:523:9, col:55>
|     `-BinaryOperator 0x55974a98ff00 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55974a98fed0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55974a98fe00 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a9779c8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55974a98fee8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55974a98feb0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55974a98fe90 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55974a98fe60 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55974a98fe20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55974a98fe78 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55974a98fe40 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e6a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55974a977ba0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55974a977b10 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a990078 <col:60, line:528:5>
|   `-ReturnStmt 0x55974a990068 <line:527:9, col:55>
|     `-BinaryOperator 0x55974a990048 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55974a990018 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55974a98ff48 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a977b10 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55974a990030 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55974a98fff8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55974a98ffd8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55974a98ffa8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55974a98ff68 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55974a98ffc0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55974a98ff88 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e580 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55974a977ce8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55974a977c58 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a9901c0 <col:60, line:532:5>
|   `-ReturnStmt 0x55974a9901b0 <line:531:9, col:55>
|     `-BinaryOperator 0x55974a990190 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55974a990160 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55974a990090 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a977c58 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55974a990178 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55974a990140 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55974a990120 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55974a9900f0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55974a9900b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e3d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55974a990108 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55974a9900d0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55974a96e730 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55974a977d90 prev 0x55974a96ebd0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55974a977e88 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55974a977f28 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55974a97ecf0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55974a97f0d8 <col:11>
| |-CXXConstructorDecl 0x55974a97edd0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55974a97eeb8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55974a97f820 <col:11>
| |-CXXConstructorDecl 0x55974a97ef58 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55974a97f068 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55974a981078 <col:11>
| |-CXXDestructorDecl 0x55974a980388 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55974a686f38 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55974a687048 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55974a687910 <col:11>
| |   `-ReturnStmt 0x55974a687900 <col:11>
| |     `-UnaryOperator 0x55974a6878e8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55974a6878d8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55974a6870b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55974a6871c8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55974aa181b0 <col:11>
|     `-ReturnStmt 0x55974aa181a0 <col:11>
|       `-UnaryOperator 0x55974aa18188 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974aa18178 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55974a977f90 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55974a978090 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55974a978290 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a978070 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55974a978050 <col:21> 'int' 0
| |-EnumConstantDecl 0x55974a978120 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55974a9782a8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a978100 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55974a9780e0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55974a9781b0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55974a9782c0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974a978190 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55974a978170 <col:23> 'int' 2
| `-EnumConstantDecl 0x55974a978240 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55974a9782d8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a978220 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55974a978200 <col:27> 'int' 3
|-CXXMethodDecl 0x55974a978318 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55974a9783e0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55974a9785e8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55974a978490 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55974a978510 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55974a97ab50 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55974a9787f8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55974a9786a8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55974a978720 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55974a9788c8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55974a978988 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55974a978af8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55974a978a38 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55974a978bc0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55974a978c80 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55974a978d40 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55974a978e00 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55974a978ea0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55974a978ed8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55974a978f48 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55974a9901d8 <col:27, line:684:5>
|-CXXMethodDecl 0x55974a979008 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55974a9901e8 <col:27, line:696:5>
|-CXXMethodDecl 0x55974a979208 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55974a9790b8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55974a979130 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a990370 <col:66, line:700:5>
|   `-ReturnStmt 0x55974a990360 <line:699:9, col:31>
|     `-CallExpr 0x55974a990300 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55974a9902e8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a990298 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55974a7fb5b8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55974a990330 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55974a990258 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55974a9790b8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55974a990348 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55974a990278 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a979130 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974a979578 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55974a9792c8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55974a979340 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55974a9793b8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55974a979430 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974a9906c0 <col:64, line:707:5>
|   |-DeclStmt 0x55974a990400 <line:704:9, col:24>
|   | `-VarDecl 0x55974a990398 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55974a990610 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55974a990418 <col:9> 'int32_t':'int' lvalue ParmVar 0x55974a979340 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55974a9905f8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55974a990590 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55974a990578 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974a9904f8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55974a800888 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55974a9905c8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55974a990498 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55974a9793b8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55974a9905e0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55974a9904b8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974a979430 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55974a9904d8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55974a990398 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55974a9906a0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55974a990630 <col:9> 'int32_t':'int' lvalue ParmVar 0x55974a9792c8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55974a990688 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55974a990670 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55974a990650 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55974a990398 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55974a979818 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55974a979648 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55974a9796c0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55974a979738 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55974a979ab8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55974a9798e0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55974a979958 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55974a9799d0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55974a979c48 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55974a979b80 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55974a979e48 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55974a979d00 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55974a979d78 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55974a97a118 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55974a97a058 parent 0x55974a477488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55974a979f08 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55974a979f80 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55974a97a338 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55974a97a278 parent 0x55974a477488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55974a97a168 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55974a97a1e0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55974a97a500 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55974a97a448 parent 0x55974a477488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55974a97a388 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55974a97a788 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55974a97a6c8 parent 0x55974a477488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55974a97a578 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55974a97a5f0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55974a97a9a8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55974a97a8e8 parent 0x55974a477488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55974a97a7d8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55974a97a850 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55974a980230 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a980318 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a980d88 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55974a980d40 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55974a978ed8
| |     `-DeclRefExpr 0x55974a980d20 <col:7> 'const Timestamp' lvalue ParmVar 0x55974a980318 '' 'const Timestamp &'
| `-CompoundStmt 0x55974a980de8 <col:7>
|-CXXConstructorDecl 0x55974a980498 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a9805a8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55974a978ed8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55974a981088 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55974a981030 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55974a978ed8
| |     `-CXXStaticCastExpr 0x55974a981000 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55974a980fd0 <col:7> 'Timestamp' lvalue ParmVar 0x55974a9805a8 '' 'Timestamp &&'
| `-CompoundStmt 0x55974a9810e8 <col:7>
|-CXXDestructorDecl 0x55974a980658 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55974a686d88 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a686e98 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55974a687988 <col:7>
|   |-CXXMemberCallExpr 0x55974a687928 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55974a687868 <col:7> '<bound member function type>' .operator= 0x55974a686f38
|   | | `-MemberExpr 0x55974a687778 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55974a978ed8
|   | |   `-CXXThisExpr 0x55974a687768 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55974a687838 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55974a978ed8
|   |   `-DeclRefExpr 0x55974a687818 <col:7> 'const Timestamp' lvalue ParmVar 0x55974a686e98 '' 'const Timestamp &'
|   `-ReturnStmt 0x55974a687978 <col:7>
|     `-UnaryOperator 0x55974a687960 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974a687950 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55974a687238 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55974a687348 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55974aa18228 <col:7>
    |-CXXMemberCallExpr 0x55974aa181c8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55974aa18130 <col:7> '<bound member function type>' .operator= 0x55974a6870b8
    | | `-MemberExpr 0x55974aa18000 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55974a978ed8
    | |   `-CXXThisExpr 0x55974aa17ff0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55974aa18100 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55974a978ed8
    |   `-CXXStaticCastExpr 0x55974aa180d0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55974aa180a0 <col:7> 'Timestamp' lvalue ParmVar 0x55974a687348 '' 'Timestamp &&'
    `-ReturnStmt 0x55974aa18218 <col:7>
      `-UnaryOperator 0x55974aa18200 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55974aa181f0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aa15208 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55974aa15338 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55974aa15e28 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.13 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab84570 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974ab84688 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55974ab84758 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55974ab847b8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55974ab84820 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55974ab848a8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55974ab84b10 <col:16, line:46:5>
|   |-BinaryOperator 0x55974ab84a58 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55974ab84978 <col:9> 'TaskLink *' lvalue ->_prev 0x55974ab84758
|   | | `-CXXThisExpr 0x55974ab84968 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55974ab84a40 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55974ab84a20 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55974ab849b8 <col:17> 'TaskLink *' lvalue ->_next 0x55974ab847b8
|   |     | `-CXXThisExpr 0x55974ab849a8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55974ab84a08 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55974ab849e8 <col:25> 'int' 0
|   `-BinaryOperator 0x55974ab84af0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55974ab84a88 <col:9> 'unsigned int' lvalue ->_pass 0x55974ab84820
|     | `-CXXThisExpr 0x55974ab84a78 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55974ab84ad8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55974ab84ab8 <col:17> 'int' 0
|-CXXConstructorDecl 0x55974abe6c58 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55974abe6c58
| `-ParmVarDecl 0x55974abe6d68 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55974abe6e08 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55974abe6e08
| `-ParmVarDecl 0x55974abe6f18 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55974abe7108 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55974abe7108
|-CXXMethodDecl 0x55974abe7908 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55974abe7908
| `-ParmVarDecl 0x55974abe7a18 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55974abe7a88 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55974abe7a88
  `-ParmVarDecl 0x55974abe7b98 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ab8b538 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55974ab8b748 prev 0x55974ab8b538 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974ab8c950 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55974ab8c900 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55974ab8c8e0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55974ab8c790 'type'
|     `-SubstTemplateTypeParmType 0x55974ab8c5b0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974ab8c100 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55974ab8c018 'sized_array_memory'
|-FieldDecl 0x55974ab91f30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55974ab91f80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974ab91fb8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55974ab8b7e0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|     `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-TypedefDecl 0x55974ab92078 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55974ab92040 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55974ab8b7e0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|       `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-TypedefDecl 0x55974ab92108 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55974ab920d0 'const TimerSet::heap_element &'
|   `-QualType 0x55974ab8b7e1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55974ab8b7e0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|         `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-TypedefDecl 0x55974ab92198 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55974ab92160 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55974ab8b7e0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|       `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-TypedefDecl 0x55974ab92258 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55974ab92220 'const TimerSet::heap_element *'
|   `-QualType 0x55974ab8b7e1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55974ab8b7e0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|         `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-TypedefDecl 0x55974ab92eb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55974ab92e60 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55974ab92e40 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55974ab92d78 'type'
|     `-LValueReferenceType 0x55974ab92d40 'const TimerSet::heap_element &'
|       `-QualType 0x55974ab92ae1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55974ab92ae0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55974a74de10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55974a74ddb8 'T'
|           `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|             `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-TypedefDecl 0x55974ab92f18 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55974ab920d0 'const TimerSet::heap_element &'
|   `-QualType 0x55974ab8b7e1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55974ab8b7e0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|         `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-TypedefDecl 0x55974ab92f70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab92fd8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55974ab92160 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55974ab8b7e0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|       `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-TypedefDecl 0x55974ab93040 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55974ab92220 'const TimerSet::heap_element *'
|   `-QualType 0x55974ab8b7e1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55974ab8b7e0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974ab8a740 'TimerSet::heap_element'
|         `-CXXRecord 0x55974ab8a6b0 'heap_element'
|-EnumDecl 0x55974ab93098 <line:134:5> col:5
| `-EnumConstantDecl 0x55974ab93190 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974ab93170 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974ab93218 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974ab934a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab932d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ab93370 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55974ab93768 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55974ab93650 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55974ab93a28 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55974ab93910 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55974ab93d70 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55974ab93c50 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55974ab94080 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55974ab93f60 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55974ab94370 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab941b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ab94230 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55974ab944c8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55974ab945a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab94600 <col:30> Inherited
|-CXXMethodDecl 0x55974ab94648 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55974ab946f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab94750 <col:30> Inherited
|-CXXMethodDecl 0x55974ab94818 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55974ab948c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab94920 <col:30> Inherited
|-CXXMethodDecl 0x55974ab94968 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55974ab94a18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab94a70 <col:30> Inherited
|-CXXMethodDecl 0x55974ab94ab8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55974ab94b68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab94bc0 <col:30> Inherited
|-CXXMethodDecl 0x55974ab94c08 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55974ab94cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974ab94d10 <col:30> Inherited
|-CXXMethodDecl 0x55974ab94d38 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ab94de8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974ab94e98 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55974ab95058 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab94f48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ab94fc0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55974ab951a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974ab95118 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab95358 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55974ab95260 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ab95410 <col:20>
| `-OptimizeNoneAttr 0x55974ab95468 <col:30>
|-CXXMethodDecl 0x55974ab95588 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55974ab95490 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974ab95640 <col:20>
| `-OptimizeNoneAttr 0x55974ab95698 <col:30>
|-CXXMethodDecl 0x55974ab95750 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ab956c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab95898 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ab95808 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab959c8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55974ab95af8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55974ab95bc8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55974ab95c98 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55974ab95dd8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974ab95d48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab95f20 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974ab95e90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974ab96068 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55974ab95fd8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ab96120 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974ab96220 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974ab96190 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974ab962d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974ab96398 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55974ab96498 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55974ab96648 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ab96558 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55974ab98010 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974ab96700 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55974ab97f70 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55974ab96c68 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55974ab980f0 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974ab98240 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55974ab981b0 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55974ab982f8 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974ab98548 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab983b8 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55974ab98430 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55974ab98708 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55974ab98618 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55974ab98958 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55974ab987d0 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55974ab98848 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55974ab98a18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974ab98c78 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55974ab98b80 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55974ab98d48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974ab98d48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ab98e90 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55974ab99098 prev 0x55974ab98e90 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974ab9a1e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55974ab9a190 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55974ab9a170 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55974ab9a020 'type'
|     `-SubstTemplateTypeParmType 0x55974ab99e40 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974ab99990 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55974ab998a8 'sized_array_memory'
|-FieldDecl 0x55974ab9de10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55974ab9de60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974ab9de98 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55974ab99130 'Timer *' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-PointerType 0x55974a9dffc0 'Timer *'
|     `-RecordType 0x55974a9df110 'Timer'
|       `-CXXRecord 0x55974a9640c8 'Timer'
|-TypedefDecl 0x55974ab9df58 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55974ab9df20 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55974ab99130 'Timer *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a9dffc0 'Timer *'
|       `-RecordType 0x55974a9df110 'Timer'
|         `-CXXRecord 0x55974a9640c8 'Timer'
|-TypedefDecl 0x55974ab9e018 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55974ab9dfe0 'Timer *const &'
|   `-QualType 0x55974ab99131 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55974ab99130 'Timer *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a9dffc0 'Timer *'
|         `-RecordType 0x55974a9df110 'Timer'
|           `-CXXRecord 0x55974a9640c8 'Timer'
|-TypedefDecl 0x55974ab9e0d8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55974ab9e0a0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55974ab99130 'Timer *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a9dffc0 'Timer *'
|       `-RecordType 0x55974a9df110 'Timer'
|         `-CXXRecord 0x55974a9640c8 'Timer'
|-TypedefDecl 0x55974ab9e198 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55974ab9e160 'Timer *const *'
|   `-QualType 0x55974ab99131 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55974ab99130 'Timer *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a9dffc0 'Timer *'
|         `-RecordType 0x55974a9df110 'Timer'
|           `-CXXRecord 0x55974a9640c8 'Timer'
|-TypedefDecl 0x55974ab9ed70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55974ab9ed20 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55974ab9ed00 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55974ab9ec90 'type'
|     `-SubstTemplateTypeParmType 0x55974ab9ea50 'Timer *' sugar
|       |-TemplateTypeParmType 0x55974a74e540 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a74e4f0 'T'
|       `-PointerType 0x55974a9dffc0 'Timer *'
|         `-RecordType 0x55974a9df110 'Timer'
|           `-CXXRecord 0x55974a9640c8 'Timer'
|-TypedefDecl 0x55974ab9edd8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55974ab9dfe0 'Timer *const &'
|   `-QualType 0x55974ab99131 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55974ab99130 'Timer *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a9dffc0 'Timer *'
|         `-RecordType 0x55974a9df110 'Timer'
|           `-CXXRecord 0x55974a9640c8 'Timer'
|-TypedefDecl 0x55974ab9ee30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974ab9ee98 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55974ab9e0a0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55974ab99130 'Timer *' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-PointerType 0x55974a9dffc0 'Timer *'
|       `-RecordType 0x55974a9df110 'Timer'
|         `-CXXRecord 0x55974a9640c8 'Timer'
|-TypedefDecl 0x55974ab9ef00 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55974ab9e160 'Timer *const *'
|   `-QualType 0x55974ab99131 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55974ab99130 'Timer *' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-PointerType 0x55974a9dffc0 'Timer *'
|         `-RecordType 0x55974a9df110 'Timer'
|           `-CXXRecord 0x55974a9640c8 'Timer'
|-EnumDecl 0x55974ab9ef58 <line:134:5> col:5
| `-EnumConstantDecl 0x55974ab9f050 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974ab9f030 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974ab9f0d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974ab9f368 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974ab9f190 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974ab9f230 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55974ab9f628 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55974ab9f510 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55974ab9f8e8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55974ab9f7d0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55974ab9fc30 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55974ab9fb10 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55974aba19d0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55974ab9fe20 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55974aba1cc0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974aba1b08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974aba1b80 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55974aba1e18 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55974aba1ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aba1f50 <col:30> Inherited
|-CXXMethodDecl 0x55974aba1f98 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55974aba2048 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aba20a0 <col:30> Inherited
|-CXXMethodDecl 0x55974aba2168 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55974aba2218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aba2270 <col:30> Inherited
|-CXXMethodDecl 0x55974aba22b8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55974aba2368 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aba23c0 <col:30> Inherited
|-CXXMethodDecl 0x55974aba2408 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55974aba24b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aba2510 <col:30> Inherited
|-CXXMethodDecl 0x55974aba2558 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55974aba2608 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974aba2660 <col:30> Inherited
|-CXXMethodDecl 0x55974aba2688 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974aba2738 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974aba27e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974aba29a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974aba2898 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974aba2910 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55974aba2af8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974aba2a68 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aba2ca8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55974aba2bb0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974aba2d60 <col:20>
| `-OptimizeNoneAttr 0x55974aba2db8 <col:30>
|-CXXMethodDecl 0x55974aba2ed8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55974aba2de0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974aba2f90 <col:20>
| `-OptimizeNoneAttr 0x55974aba2fe8 <col:30>
|-CXXMethodDecl 0x55974aba30a0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55974aba3010 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aba31e8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974aba3158 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aba3318 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55974aba3448 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55974aba3518 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55974aba35e8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55974aba3728 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55974aba3698 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aba3870 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974aba37e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974aba39b8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55974aba3928 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974aba3a70 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974aba3b70 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974aba3ae0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974aba3c28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974aba3ce8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55974aba3de8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55974aba3f68 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55974aba3ea8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55974aba4728 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974aba4020 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55974aba4688 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55974aba4588 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55974aba4808 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974aba4958 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55974aba48c8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55974aba4a10 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974aba4c58 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55974aba4ad0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55974aba4b48 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55974aba4e18 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55974aba4d28 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55974aba5068 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55974aba4ee0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55974aba4f58 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55974aba5128 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974aba5388 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55974aba5290 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55974aba5458 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974aba5458

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a960b00 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974a960c18 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55974a960ca8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55974a960d30 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55974a960e20 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55974a960f20 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55974a960fe0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55974a9610a0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55974a9611c8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55974a9611c8
| `-ParmVarDecl 0x55974a9612d8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55974aba6208 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55974aba6208
  `-ParmVarDecl 0x55974aba6318 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab89830 prev 0x55974aa15cb8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55974ab89928 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55974ab899b8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55974ab89a40 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55974ab89b38 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55974aba6680 <col:43, col:67>
|   `-ReturnStmt 0x55974aba6670 <col:45, col:52>
|     `-CXXConstructExpr 0x55974aba6640 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55974aba6610 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55974ab8b320
|         `-CXXThisExpr 0x55974aba6600 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55974ab89bf8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55974ab89e00 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55974ab89ca8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55974ab89d20 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55974ab89ef8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55974ab89fc0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55974aba6700 <col:39, col:67>
|   `-ReturnStmt 0x55974aba66f0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55974aba66d8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974aba66a8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55974ab8b408
|         `-CXXThisExpr 0x55974aba6698 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55974ab8a088 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55974aba6780 <col:35, col:59>
|   `-ReturnStmt 0x55974aba6770 <col:37, col:44>
|     `-ImplicitCastExpr 0x55974aba6758 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974aba6728 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55974ab8b470
|         `-CXXThisExpr 0x55974aba6718 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55974ab8a1d0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55974ab8a140 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55974ab8a318 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55974ab8a288 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55974ab8a518 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55974ab8a3d0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55974ab8a448 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55974ab8a5e8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55974ab8a688 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55974ab8a6b0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974ab8a7c8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55974ab8a868 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55974ab8a8c8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55974ab8a9f8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55974ab8a928 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55974ab8a868 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55974aba6858 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55974aba6800 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55974aba67d0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55974a965738
|   |       `-ImplicitCastExpr 0x55974aba6820 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55974aba67b8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55974aba6798 <col:17> 'Timer *' lvalue ParmVar 0x55974ab8a928 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55974ab8a8c8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55974aba68f0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55974aba68b0 <col:41> 'Timer *' lvalue ParmVar 0x55974ab8a928 't_' 'Timer *'
|   `-CompoundStmt 0x55974aba6940 <col:45, line:44:2>
|-CXXRecordDecl 0x55974ab8aac0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974ab8abd8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55974ab8ae28 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55974ab8aca8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55974ab8ad20 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55974aba6a70 <col:71, line:49:2>
|     `-ReturnStmt 0x55974aba6a60 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55974aba6a28 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55974aba6a10 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55974aba69f0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55974a99d328 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55974aba6970 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55974ab8a868
|         | `-DeclRefExpr 0x55974aba6950 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55974ab8aca8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55974aba69c0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55974ab8a868
|           `-DeclRefExpr 0x55974aba69a0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55974ab8ad20 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55974ab8aef0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974ab8b008 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55974ab8b228 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55974ab8b0a8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55974ab8b120 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55974aba6c78 <col:63, line:54:2>
|     `-BinaryOperator 0x55974aba6c58 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55974aba6b08 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55974aa15158
|       | `-ImplicitCastExpr 0x55974aba6af0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55974aba6ac0 <col:6, col:9> 'Timer *' lvalue ->t 0x55974ab8a8c8
|       |     `-ImplicitCastExpr 0x55974aba6aa8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55974aba6a88 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55974ab8b120 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55974aba6c40 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55974aba6c20 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55974aba6bc8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55974aba6ba8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55974aba6b78 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55974aba6b38 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55974ab8b120 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55974aba6b90 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55974aba6b58 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55974ab8b0a8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55974aba6c08 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55974aba6be8 <col:39> 'int' 1
|-FieldDecl 0x55974ab8b320 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55974ab8b390 <col:44, col:53> aligned
|   `-ConstantExpr 0x55974ab8b370 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55974ab8b2f0 <col:52> 'int' 8
|-FieldDecl 0x55974ab8b408 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55974ab8b470 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55974ab8b4d8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55974ab98e30 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55974aba5540 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55974aba55a0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55974aba5600 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55974aba5660 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aba5750 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55974aba56c0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55974aba5818 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55974aba70d0 <col:29, line:81:5>
|   `-IfStmt 0x55974aba70a8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55974aba6d60 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55974aba6d00 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55974aba6cd0 <col:6, col:18> '<bound member function type>' .size 0x55974ab94d38
|     |     `-ImplicitCastExpr 0x55974aba6d48 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55974aba6ca0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55974ab98e30
|     |         `-CXXThisExpr 0x55974aba6c90 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55974aba6f50 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55974aba6f38 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55974aba6f18 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55974a686d88 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55974aba6d88 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55974ab8b320
|     | | `-CXXThisExpr 0x55974aba6d78 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55974aba6f00 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55974aba6ed0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55974ab8a868
|     |     `-CXXMemberCallExpr 0x55974aba6ea8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55974aba6e78 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55974ab95dd8
|     |       | `-MemberExpr 0x55974aba6dc8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55974ab98e30
|     |       |   `-CXXThisExpr 0x55974aba6db8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55974aba6e58 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55974aba7090 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55974aba7058 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55974aba7040 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55974aba7020 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55974a687238 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55974aba6f98 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55974ab8b320
|         | `-CXXThisExpr 0x55974aba6f88 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55974aba7008 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55974aba6fd8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55974aba5958 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55974aba58c8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55974aba5a20 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55974aba5ae0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55974aba5ba0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55974aba5c90 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55974aba5cf8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55974aba5cf8
| `-ParmVarDecl 0x55974aba5e08 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55974aba5ea8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55974aba5ea8
| `-ParmVarDecl 0x55974aba5fb8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55974aba6058 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55974aba6058
| `-ParmVarDecl 0x55974aba6168 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55974aba6388 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55974aba6388
| `-ParmVarDecl 0x55974aba6498 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55974aba6520 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55974aba6520

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974a8906f8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55974a890908 prev 0x55974a8906f8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974a8919e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55974a891990 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55974a891970 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55974a891820 'type'
|     `-SubstTemplateTypeParmType 0x55974ab99e40 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974ab99990 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55974ab998a8 'sized_array_memory'
|-FieldDecl 0x55974a891ae0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55974a891b30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974a891b68 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55974a8909a0 'pollfd' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-RecordType 0x55974abd5ad0 'pollfd'
|     `-CXXRecord 0x55974abd5a40 'pollfd'
|-TypedefDecl 0x55974a891c28 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55974a891bf0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55974a8909a0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974abd5ad0 'pollfd'
|       `-CXXRecord 0x55974abd5a40 'pollfd'
|-TypedefDecl 0x55974a891ce8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55974a891cb0 'const pollfd &'
|   `-QualType 0x55974a8909a1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55974a8909a0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974abd5ad0 'pollfd'
|         `-CXXRecord 0x55974abd5a40 'pollfd'
|-TypedefDecl 0x55974a891d78 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55974a891d40 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55974a8909a0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974abd5ad0 'pollfd'
|       `-CXXRecord 0x55974abd5a40 'pollfd'
|-TypedefDecl 0x55974a891e38 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55974a891e00 'const pollfd *'
|   `-QualType 0x55974a8909a1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55974a8909a0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974abd5ad0 'pollfd'
|         `-CXXRecord 0x55974abd5a40 'pollfd'
|-TypedefDecl 0x55974a892a10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55974a8929c0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55974a8929a0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55974a892930 'type'
|     `-SubstTemplateTypeParmType 0x55974a8926f0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55974a74e540 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a74e4f0 'T'
|       `-RecordType 0x55974abd5ad0 'pollfd'
|         `-CXXRecord 0x55974abd5a40 'pollfd'
|-TypedefDecl 0x55974a892a78 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55974a891cb0 'const pollfd &'
|   `-QualType 0x55974a8909a1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55974a8909a0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974abd5ad0 'pollfd'
|         `-CXXRecord 0x55974abd5a40 'pollfd'
|-TypedefDecl 0x55974a892ad0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974a892b38 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55974a891d40 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55974a8909a0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974abd5ad0 'pollfd'
|       `-CXXRecord 0x55974abd5a40 'pollfd'
|-TypedefDecl 0x55974a892ba0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55974a891e00 'const pollfd *'
|   `-QualType 0x55974a8909a1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55974a8909a0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974abd5ad0 'pollfd'
|         `-CXXRecord 0x55974abd5a40 'pollfd'
|-EnumDecl 0x55974a892bf8 <line:134:5> col:5
| `-EnumConstantDecl 0x55974a892cf0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974a892cd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974a892d78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974a893008 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55974a892e30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974a892ed0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55974a8932c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55974a8931b0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55974a893588 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55974a893470 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55974a8938d0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55974a8937b0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55974a893be0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55974a893ac0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55974a893ed0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55974a893d18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974a893d90 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55974a894028 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55974a894108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974a894160 <col:30> Inherited
|-CXXMethodDecl 0x55974a8941a8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55974a894258 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974a8942b0 <col:30> Inherited
|-CXXMethodDecl 0x55974a894378 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55974a894428 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974a894480 <col:30> Inherited
|-CXXMethodDecl 0x55974a8944c8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55974a894578 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974a8945d0 <col:30> Inherited
|-CXXMethodDecl 0x55974a894618 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55974a8946c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974a894720 <col:30> Inherited
|-CXXMethodDecl 0x55974a894768 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55974a894818 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974a894870 <col:30> Inherited
|-CXXMethodDecl 0x55974a894898 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974a894948 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974a8949f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974a894bb8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55974a894aa8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974a894b20 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55974a894d08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974a894c78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974a894eb8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55974a894dc0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974a894f70 <col:20>
| `-OptimizeNoneAttr 0x55974a894fc8 <col:30>
|-CXXMethodDecl 0x55974a8950e8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55974a894ff0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974a8951a0 <col:20>
| `-OptimizeNoneAttr 0x55974a8951f8 <col:30>
|-CXXMethodDecl 0x55974a8952b0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974a895220 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974a8953f8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974a895368 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974a895528 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55974a895658 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55974a895728 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55974a8957f8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55974a895938 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974a8958a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974a895a80 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974a8959f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974a895bc8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55974a895b38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974a895c80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974a895d80 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974a895cf0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974a895e38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974a895ef8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55974a895ff8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55974a8961a8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55974a8960b8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55974a896968 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974a896260 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55974a8968c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55974a8967c8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55974a896a48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974a896b98 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55974a896b08 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55974a896c50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974abd6258 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55974a896d10 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55974abd6140 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55974abd6418 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55974abd6328 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55974abd6668 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55974abd64e0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55974abd6558 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55974abd6728 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974abd6988 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55974abd6890 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55974abd6a58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974abd6a58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974abd7f40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55974abd8118 prev 0x55974abd7f40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55974abd81a8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55974abd81d0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974abd9da0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55974abd9d50 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55974abd8680 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55974abd8580 'type'
|     `-TemplateSpecializationType 0x55974abd8510 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55974abd83f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55974abd83d0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55974abd83b0 <col:24> 'unsigned long' 24
|       `-RecordType 0x55974abd84f0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55974abd8410 'char_array'
|-TypedefDecl 0x55974abd9e58 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55974abd9e20 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55974abd9e00 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55974abd9da0 'type'
|     `-ElaboratedType 0x55974abd9d50 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55974abd8680 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55974abd8580 'type'
|         `-TemplateSpecializationType 0x55974abd8510 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55974abd83f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55974abd83d0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55974abd83b0 <col:24> 'unsigned long' 24
|           `-RecordType 0x55974abd84f0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55974abd8410 'char_array'
|-CXXMethodDecl 0x55974abd9fd8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55974abd9ee8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55974abda0c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55974abda1a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55974abda1a8
|-CXXMethodDecl 0x55974abda478 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55974abda380 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55974abda6b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55974abda530 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974abda5a8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55974abda888 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55974abda778 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974abda7f0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55974abda9e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55974abdaab8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55974abdad08 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55974abdab78 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55974abdabf0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55974abdaf68 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55974abdadd8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55974abdae50 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55974abdb128 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55974abdb038 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55974abdb2e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55974abdb1f0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55974abdb3a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974abdb450 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974abdb688 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55974abdb500 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55974abdb578 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55974abdb928 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55974abdb830 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55974abdb9f0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55974abdba40 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55974abdba90 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974abd6ba0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55974abd6da8 prev 0x55974abd6ba0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55974abd7eb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55974abd7e60 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55974abd7e40 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55974abd7cf0 'type'
|     `-SubstTemplateTypeParmType 0x55974abd7b10 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55974a743740 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a7436e8 'T'
|       `-RecordType 0x55974aac7c90 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55974aac7ba8 'sized_array_memory'
|-FieldDecl 0x55974abdbae0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55974abdbb30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55974abdbb68 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55974abd6e40 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55974a77b3d8 'T'
|   `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-TypedefDecl 0x55974abdbc28 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55974abdbbf0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55974abd6e40 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-TypedefDecl 0x55974abdbce8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55974abdbcb0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55974abd6e41 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55974abd6e40 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-TypedefDecl 0x55974abdbd78 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55974abdbd40 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55974abd6e40 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-TypedefDecl 0x55974abdbe38 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55974abdbe00 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55974abd6e41 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55974abd6e40 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-TypedefDecl 0x55974abdca90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55974abdca40 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55974abdca20 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55974abdc958 'type'
|     `-LValueReferenceType 0x55974abdc920 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55974abdc6c1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55974abdc6c0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55974a74de10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55974a74ddb8 'T'
|           `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-TypedefDecl 0x55974abdcaf8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55974abdbcb0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55974abd6e41 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55974abd6e40 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-TypedefDecl 0x55974abdcb50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55974a477580 'int'
|-TypedefDecl 0x55974abdcbb8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55974abdbd40 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55974abd6e40 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55974a77b3d8 'T'
|     `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-TypedefDecl 0x55974abdcc20 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55974abdbe00 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55974abd6e41 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55974abd6e40 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55974a77b430 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55974a77b3d8 'T'
|       `-RecordType 0x55974a890260 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55974a8901d0 'SelectorInfo'
|-EnumDecl 0x55974abdcc78 <line:134:5> col:5
| `-EnumConstantDecl 0x55974abdcd70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55974abdcd50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55974a77cab8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55974a77ca90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55974a77ca70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55974abdcdf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55974abdd088 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55974abdceb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974abdcf50 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55974abdd348 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55974abdd230 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55974abdd608 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55974abdd4f0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55974abdd950 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55974abdd830 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55974abddc60 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55974abddb40 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55974abddf50 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55974abddd98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974abdde10 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55974abde150 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55974abde228 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974abde280 <col:30> Inherited
|-CXXMethodDecl 0x55974abde2c8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55974abde378 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974abde3d0 <col:30> Inherited
|-CXXMethodDecl 0x55974abde498 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55974abde548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974abde5a0 <col:30> Inherited
|-CXXMethodDecl 0x55974abde5e8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55974abde698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974abde6f0 <col:30> Inherited
|-CXXMethodDecl 0x55974abde738 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55974abde7e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974abde840 <col:30> Inherited
|-CXXMethodDecl 0x55974abde888 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55974abde938 <col:20> Inherited
| `-OptimizeNoneAttr 0x55974abde990 <col:30> Inherited
|-CXXMethodDecl 0x55974abde9b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974abdea68 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55974abdeb18 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974abdecd8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55974abdebc8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55974abdec40 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55974abdee28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55974abded98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974abdefd8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55974abdeee0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974abdf090 <col:20>
| `-OptimizeNoneAttr 0x55974abdf0e8 <col:30>
|-CXXMethodDecl 0x55974abdf208 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55974abdf110 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55974abdf2c0 <col:20>
| `-OptimizeNoneAttr 0x55974abdf318 <col:30>
|-CXXMethodDecl 0x55974abdf3d0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974abdf340 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974abdf518 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974abdf488 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974abdf648 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55974abdf778 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55974abdf848 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55974abdf918 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55974abdfa58 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55974abdf9c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974abdfba0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55974abdfb10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55974abdfce8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55974abdfc58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974abdfda0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55974abdfea0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55974abdfe10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55974abdff58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55974abe0018 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55974abe0118 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55974abe02c8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55974abe01d8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55974abe0a88 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55974abe0380 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55974abe09e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55974abe08e8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55974abe0b68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55974abe0cb8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55974abe0c28 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55974abe0d70 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55974abe0fb8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55974abe0e30 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55974abe0ea8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55974abe1178 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55974abe1088 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55974abe13c8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55974abe1240 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55974abe12b8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55974abe1488 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974abe16e8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55974abe15f0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55974abe17b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55974abe17b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a88f3b0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974a88f4c8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55974a88f558 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55974a88f5e0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55974a88f6d0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55974a88f6d0
|-CXXMethodDecl 0x55974a88f7d0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55974a88fa70 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55974a88f888 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55974a88f900 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55974a88f980 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55974a88fce0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55974a88fb40 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55974a88fbb8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55974a88fc38 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55974a88fe38 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55974a88fda8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55974a88ff00 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55974abe2e68 <col:34, line:50:5>
|   |-BinaryOperator 0x55974abe2838 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55974abe27f8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55974a890688
|   | | `-CXXThisExpr 0x55974abe27e8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55974abe2828 <col:23> 'bool' true
|   `-CallExpr 0x55974abe2e40 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55974abe2e28 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55974abe2da8 <col:2> 'void (long)' lvalue Function 0x55974abe2ca8 'ignore_result' 'void (long)' (FunctionTemplate 0x55974a73e6e8 'ignore_result')
|     `-CallExpr 0x55974abe2a50 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55974abe2a38 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974abe29b8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55974abac418 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55974abe2a88 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55974abe2960 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55974abe2948 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55974abe28f8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55974a890628
|       |   |   `-CXXThisExpr 0x55974abe28e8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55974abe2928 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55974abe2ab8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55974abe2aa0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55974abe2980 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55974abe2ad0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55974abe2998 <col:41> 'int' 1
|-CXXMethodDecl 0x55974a890040 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55974a88ffb0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55974a890108 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55974a8901a8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55974a8901d0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974a8902e8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55974a890388 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55974a8903e8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55974a890450 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55974a890500 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55974a890388 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55974abe2ec8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55974abe2e88 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55974a8903e8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55974abe2f48 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55974abe2f08 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55974a890450 'pollfd' 'int'
|   | `-UnaryOperator 0x55974abe2fa8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55974abe2f88 <col:35> 'int' 1
|   `-CompoundStmt 0x55974abe3020 <line:64:2, line:65:2>
|-FieldDecl 0x55974a890628 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55974a890688 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55974abd6b40 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55974abe18a0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55974abe1ad8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55974abe1908 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55974abe1980 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55974abe19f8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55974abe1cc0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55974abe1ba8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55974abe1c28 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55974abe1f08 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55974abe1d88 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55974abe1e08 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55974abe2118 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55974abe1fc8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55974abe2040 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55974abe2268 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55974abe21d8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55974abe2330 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55974abe23f0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55974abe24b8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55974abe24b8
| `-ParmVarDecl 0x55974abe25c8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55974abe2668 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55974abe2668
  `-ParmVarDecl 0x55974abe2778 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a95fa68 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974a95fb88 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55974a95fc18 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55974a95fca0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55974a95fd90 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55974a95fe90 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55974a95ff50 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55974a960010 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55974a9600f8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55974a960218 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55974a960218
| `-ParmVarDecl 0x55974a960328 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55974abe7c38 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55974abe7c38
  `-ParmVarDecl 0x55974abe7d48 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab877d8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974ab878f8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55974ab87998 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55974ab879f8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55974abe7238 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55974abe7238
| `-ParmVarDecl 0x55974abe7348 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55974abe73e8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55974abe73e8
| `-ParmVarDecl 0x55974abe74f8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55974abe7568 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55974abe7568
|-CXXMethodDecl 0x55974abe7de8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55974abe7de8
| `-ParmVarDecl 0x55974abe7ef8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55974abe7f68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55974abe7f68
| `-ParmVarDecl 0x55974abe8078 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55974abee6b8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55974abee790 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a961960 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a961a78 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55974a961b08 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55974a961b90 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55974a961c50 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55974a477580 'int'
|-CXXMethodDecl 0x55974a961d18 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55974a961db8 <col:45> always_inline
|-CXXMethodDecl 0x55974a961ee8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55974a961e20 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55974a961f90 <col:49> always_inline
|-CXXConstructorDecl 0x55974a962088 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55974a962088
| `-ParmVarDecl 0x55974a962198 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55974a962238 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55974a962238
| `-ParmVarDecl 0x55974a962348 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55974abe7650 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55974abe7650
|-CXXMethodDecl 0x55974abe8118 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55974abe8118
| `-ParmVarDecl 0x55974abe8228 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55974abe8298 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55974abe8298
  `-ParmVarDecl 0x55974abe83a8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974abe3490 prev 0x55974a88f320 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55974abe3588 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55974abe3618 <col:22, col:28> col:22 public
|-EnumDecl 0x55974abe3640 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55974abe3758 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55974abe3738 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55974abe3720 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55974abe3700 <col:32> 'int' 1
| `-EnumConstantDecl 0x55974abe3800 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55974abe37e0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55974abe37c8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55974abe37a8 <col:53> 'int' 1000
|-CXXMethodDecl 0x55974abe38a0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55974abe3960 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55974abe3a48 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55974abe8468 <col:34, col:52>
|   `-ReturnStmt 0x55974abe8458 <col:36, col:43>
|     `-MemberExpr 0x55974abe8428 <col:43> 'TimerSet' lvalue ->_timers 0x55974abe5718
|       `-CXXThisExpr 0x55974abe8418 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55974abe3b38 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55974abe84d0 <col:46, col:64>
|   `-ReturnStmt 0x55974abe84c0 <col:48, col:55>
|     `-MemberExpr 0x55974abe8490 <col:55> 'const TimerSet' lvalue ->_timers 0x55974abe5718
|       `-CXXThisExpr 0x55974abe8480 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55974abe3c28 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55974abe8538 <col:36, col:55>
|   `-ReturnStmt 0x55974abe8528 <col:38, col:45>
|     `-MemberExpr 0x55974abe84f8 <col:45> 'SelectSet' lvalue ->_selects 0x55974abe5778
|       `-CXXThisExpr 0x55974abe84e8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55974abe3d18 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55974abe85a0 <col:48, col:67>
|   `-ReturnStmt 0x55974abe8590 <col:50, col:57>
|     `-MemberExpr 0x55974abe8560 <col:57> 'const SelectSet' lvalue ->_selects 0x55974abe5778
|       `-CXXThisExpr 0x55974abe8550 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55974abe3dd8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55974abe3ec8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55974abe4038 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55974abe3f78 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55974abe4100 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55974abe4548 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55974abe41b0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55974abe4430 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55974abe4618 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55974abe46d8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55974abe4798 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55974abe48d8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55974abe4848 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55974abe49a0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55974abe4a60 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55974abe4b20 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55974abe4be0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55974abe4d20 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55974abe4c90 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55974abe4de8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55974abe4ea8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55974abe4f48 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55974abe5010 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe5060 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe50b0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe5100 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe5150 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe51a0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe51f0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe5240 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe5290 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55974abe52e0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55974abe5330 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55974abe5428 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55974abe5398 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55974abe5578 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55974abe54e8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55974abe5620 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55974abe5658 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55974abe56b8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55974abe5718 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55974abe5778 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55974abe57f8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55974abe5868 <col:40, col:50> aligned
|   `-ConstantExpr 0x55974abe5848 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55974abe57c8 <col:48> 'int' 64
|-FieldDecl 0x55974abe58d8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55974abe5938 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55974abe5a30 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55974abe5b40 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55974abe5ba0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55974abe5c20 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55974abe5c90 <col:36, col:46> aligned
|   `-ConstantExpr 0x55974abe5c70 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55974abe5bf0 <col:44> 'int' 64
|-FieldDecl 0x55974abe5d08 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55974abe5d68 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55974abe5db8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55974abe5df8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55974abe5e60 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55974abe5eb0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55974abe6058 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55974abe5ee8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55974abe5f68 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55974abe6180 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55974abe6180
|-CXXMethodDecl 0x55974abe6280 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55974abe6348 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55974abe8698 <col:34, line:217:5>
|   `-ReturnStmt 0x55974abe8688 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55974abe8670 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974abe8640 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55974ab84820
|         `-ImplicitCastExpr 0x55974abe8628 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55974abe85f8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55974ab847b8
|             `-MemberExpr 0x55974abe85c8 <col:16> 'const TaskLink' lvalue ->_task_link 0x55974abe5658
|               `-CXXThisExpr 0x55974abe85b8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55974abe6408 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55974abe64c8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55974abe8dc0 <col:39, line:226:5>
|   |-DeclStmt 0x55974abe88e8 <line:223:9, col:68>
|   | `-VarDecl 0x55974abe86c0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55974abe88a0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55974abe8870 <col:24, col:38> '<bound member function type>' .compare_swap 0x55974a7a4d30
|   |     | `-MemberExpr 0x55974abe8738 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55974abe58d8
|   |     |   `-CXXThisExpr 0x55974abe8728 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55974abe8828 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55974abe8810 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55974abe87e8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55974abe87c8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55974abe88d0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55974abe8850 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55974abe8930 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55974abe8900 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55974abe86c0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55974abe8da0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55974abe8d70 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55974abe8a48 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55974abe8a18 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55974abe8a00 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55974abe8958 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55974abe86c0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55974abe89d8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55974abe89c0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55974abe8998 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55974abe8978 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55974abe8aa8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55974abe8a88 <col:60> 'int' 0
|       `-CallExpr 0x55974abe8cd0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55974abe8cb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55974abe8c98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55974abe8d10 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55974abe8b98 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55974abe8d28 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55974abe8bc8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55974abe8d40 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55974abe8c08 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55974abe8d58 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55974abe8c80 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55974abe8c68 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55974abe8c28 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55974abe6610 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55974abe6580 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55974abe66d8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55974abe6798 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55974abe6858 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55974abe6918 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55974abe69d8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55974abe6ad0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55974abe6b30 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55974abe6bc0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55974abe6f88 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55974abe6f88
| `-ParmVarDecl 0x55974abe7098 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55974abe7758 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55974abe7758
  `-ParmVarDecl 0x55974abe7868 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9640c8 prev 0x55974a9df080 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974a9641c0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55974a964250 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55974a9642b0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55974a964358 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974a964478 <col:5, col:12> col:12 implicit struct do_nothing_t
| |-CXXConstructorDecl 0x55974ac4f258 <col:12> col:12 implicit constexpr do_nothing_t 'void ()' inline default trivial noexcept-unevaluated 0x55974ac4f258
| |-CXXConstructorDecl 0x55974ac4f330 <col:12> col:12 implicit constexpr do_nothing_t 'void (const Timer::do_nothing_t &)' inline default trivial noexcept-unevaluated 0x55974ac4f330
| | `-ParmVarDecl 0x55974ac4f418 <col:12> col:12 'const Timer::do_nothing_t &'
| `-CXXConstructorDecl 0x55974ac4f4b8 <col:12> col:12 implicit constexpr do_nothing_t 'void (Timer::do_nothing_t &&)' inline default trivial noexcept-unevaluated 0x55974ac4f4b8
|   `-ParmVarDecl 0x55974ac4f5c8 <col:12> col:12 'Timer::do_nothing_t &&'
|-CXXConstructorDecl 0x55974a964618 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55974a964558 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55974a964868 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55974a9646d8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55974a964758 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55974a9649f8 <line:43:5, col:27> col:5 used Timer 'void (Element *)'
| `-ParmVarDecl 0x55974a964930 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55974a964b78 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55974a964ab8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55974a964d28 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55974a964c68 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55974a964e20 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55974aa16000 <col:21, line:58:5>
|   `-IfStmt 0x55974aa15fe8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55974aa15f50 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55974aa15f20 <col:6> '<bound member function type>' ->scheduled 0x55974a965678
|     |   `-ImplicitCastExpr 0x55974aa15f70 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55974aa15f10 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55974aa15fc8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55974aa15f98 <col:6> '<bound member function type>' ->unschedule 0x55974aa146b0
|         `-CXXThisExpr 0x55974aa15f88 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55974a964f20 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55974aa161a0 <col:26, line:65:5>
|   |-BinaryOperator 0x55974aa160c0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55974aa16058 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55974aa15338
|   | | `-MemberExpr 0x55974aa16028 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55974aa153f8
|   | |   `-CXXThisExpr 0x55974aa16018 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55974aa160a8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55974aa16088 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55974aa15858 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55974aa16180 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55974aa160f0 <col:2> 'void *' lvalue ->_thunk 0x55974aa15478
|     | `-CXXThisExpr 0x55974aa160e0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55974aa16158 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55974aa16120 <col:20> 'int' 1
|-CXXMethodDecl 0x55974a965060 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55974a964fd0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55974aa16300 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55974aa161f0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55974aa161c0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55974a964fd0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55974aa162e0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55974aa162b0 <col:2> '<bound member function type>' ->assign 0x55974a964f20
|       `-CXXThisExpr 0x55974aa162a0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55974a965230 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55974a965118 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55974a965198 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55974aa16480 <col:58, line:79:5>
|   |-BinaryOperator 0x55974aa163c8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55974aa16360 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55974aa15338
|   | | `-MemberExpr 0x55974aa16330 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55974aa153f8
|   | |   `-CXXThisExpr 0x55974aa16320 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55974aa163b0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55974aa16390 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55974a965118 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55974aa16460 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55974aa163f8 <col:2> 'void *' lvalue ->_thunk 0x55974aa15478
|     | `-CXXThisExpr 0x55974aa163e8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55974aa16448 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55974aa16428 <col:11> 'void *' lvalue ParmVar 0x55974a965198 'user_data' 'void *'
|-CXXMethodDecl 0x55974a965380 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55974a9652f0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55974aa16618 <col:35, line:87:5>
|   |-BinaryOperator 0x55974aa16548 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55974aa164e0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55974aa15338
|   | | `-MemberExpr 0x55974aa164b0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55974aa153f8
|   | |   `-CXXThisExpr 0x55974aa164a0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55974aa16530 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55974aa16510 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55974aa15a30 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55974aa165f8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55974aa16578 <col:2> 'void *' lvalue ->_thunk 0x55974aa15478
|     | `-CXXThisExpr 0x55974aa16568 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55974aa165e0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55974aa165c8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55974aa165a8 <col:11> 'Element *' lvalue ParmVar 0x55974a9652f0 'element' 'Element *'
|-CXXMethodDecl 0x55974a9654c8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55974a965438 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55974aa167b0 <col:29, line:94:5>
|   |-BinaryOperator 0x55974aa166e0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55974aa16678 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55974aa15338
|   | | `-MemberExpr 0x55974aa16648 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55974aa153f8
|   | |   `-CXXThisExpr 0x55974aa16638 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55974aa166c8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55974aa166a8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55974aa15c08 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55974aa16790 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55974aa16710 <col:2> 'void *' lvalue ->_thunk 0x55974aa15478
|     | `-CXXThisExpr 0x55974aa16700 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55974aa16778 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55974aa16760 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55974aa16740 <col:11> 'Task *' lvalue ParmVar 0x55974a965438 'task' 'Task *'
|-CXXMethodDecl 0x55974a9655b8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55974aa16890 <col:37, line:100:5>
|   `-ReturnStmt 0x55974aa16880 <line:99:2, col:19>
|     `-BinaryOperator 0x55974aa16860 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55974aa16830 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55974aa167e0 <col:9> 'Element *const' lvalue ->_owner 0x55974aa154d8
|       |   `-CXXThisExpr 0x55974aa167d0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55974aa16848 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55974aa16810 <col:19> 'int' 0
|-CXXMethodDecl 0x55974a965678 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55974aa16950 <col:35, line:105:5>
|   `-ReturnStmt 0x55974aa16940 <line:104:2, col:23>
|     `-BinaryOperator 0x55974aa16920 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55974aa16908 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55974aa168b8 <col:9> 'const int' lvalue ->_schedpos1 0x55974aa15158
|       |   `-CXXThisExpr 0x55974aa168a8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55974aa168e8 <col:23> 'int' 0
|-CXXMethodDecl 0x55974a965738 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55974aa169b8 <col:51, line:118:5>
|   `-ReturnStmt 0x55974aa169a8 <line:117:2, col:9>
|     `-MemberExpr 0x55974aa16978 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|       `-CXXThisExpr 0x55974aa16968 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55974a9657f8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55974aa16f10 <col:37, line:136:5>
|   `-IfStmt 0x55974aa16ee8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55974aa16a78 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55974aa16a60 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55974aa16a40 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55974aa16a10 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55974a971158
|     |       `-MemberExpr 0x55974aa169e0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|     |         `-CXXThisExpr 0x55974aa169d0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55974aa16e58 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55974aa16e40 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55974aa16e10 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55974aa16df8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55974aa16dc0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55974aa16da8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55974aa16d88 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55974a99f930 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55974aa16d28 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55974aa16d10 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55974aa16c38 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55974aa16c20 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55974aa16c00 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55974a99f5f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55974aa16ba0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55974aa16aa0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|     |         |     |   `-CXXThisExpr 0x55974aa16a90 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55974aa16be8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55974aa16bd0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55974aa16b80 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55974aa16b68 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55974aa16b08 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55974a992c50 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55974aa16d70 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55974aa16d58 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55974aa16cf0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55974aa16cd8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55974aa16ca8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55974a7ee1a0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55974aa16ed8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55974aa16ea8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55974aa16e78 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|           `-CXXThisExpr 0x55974aa16e68 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55974a9658b8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55974aa16ff8 <col:35, line:141:5>
|   `-ReturnStmt 0x55974aa16fe8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55974aa16fb0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55974aa16f80 <col:9, col:17> '<bound member function type>' ->router 0x55974a9f17e0
|         `-ImplicitCastExpr 0x55974aa16fd0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55974aa16f68 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55974aa16f38 <col:9> 'Element *const' lvalue ->_owner 0x55974aa154d8
|               `-CXXThisExpr 0x55974aa16f28 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55974a965978 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55974aa17078 <col:37, line:146:5>
|   `-ReturnStmt 0x55974aa17068 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55974aa17050 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55974aa17020 <col:9> 'Element *const' lvalue ->_owner 0x55974aa154d8
|         `-CXXThisExpr 0x55974aa17010 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55974a965a38 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55974aa170f8 <col:41, line:151:5>
|   `-ReturnStmt 0x55974aa170e8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55974aa170d0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55974aa170a0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55974aa15538
|         `-CXXThisExpr 0x55974aa17090 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55974a965b00 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55974a965cf8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55974a965bb0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55974a965c28 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974aa15e18 <col:50> 'bool' false
|-CXXMethodDecl 0x55974a965e78 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55974a965db8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55974a965fc0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55974a965f30 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55974a966108 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55974a966078 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55974a966250 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55974a9661c0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55974a966398 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55974a966308 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55974a966460 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55974aa17260 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55974aa17248 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55974aa171f0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55974aa17120 <col:2> '<bound member function type>' ->schedule_at_steady 0x55974a965fc0
|       | `-CXXThisExpr 0x55974aa17110 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55974aa17230 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55974aa17218 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55974aa171d0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55974aa171b8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55974aa17188 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55974a7ee1a0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55974aa13f80 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55974a966510 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55974aa140c8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55974aa14038 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa173e8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55974aa173d0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55974aa17378 <col:2, col:40> 'void'
|       |-MemberExpr 0x55974aa17288 <col:2> '<bound member function type>' ->schedule_after 0x55974aa13f80
|       | `-CXXThisExpr 0x55974aa17278 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55974aa173b8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55974aa173a0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55974aa17338 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55974aa17308 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55974aa172c8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa14038 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55974aa17320 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55974aa172e8 <col:38> 'int' 0
|-CXXMethodDecl 0x55974aa14210 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55974aa14180 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa17658 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55974aa17640 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55974aa175e8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55974aa17410 <col:2> '<bound member function type>' ->schedule_after 0x55974aa13f80
|       | `-CXXThisExpr 0x55974aa17400 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55974aa17628 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55974aa17610 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55974aa17590 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55974aa17578 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55974aa174e8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55974a972f48 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55974aa175d0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55974aa175b8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55974aa174c8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa14180 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa14358 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55974aa142c8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55974aa17838 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55974aa17820 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55974aa177c8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55974aa17680 <col:2> '<bound member function type>' ->schedule_at_steady 0x55974a965fc0
|       | `-CXXThisExpr 0x55974aa17670 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55974aa17808 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55974aa177f0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55974aa17790 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55974aa17778 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55974aa17758 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55974a99f5f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55974aa17728 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55974aa17710 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55974aa176c0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|             |     `-CXXThisExpr 0x55974aa176b0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55974aa176f0 <col:33> 'const Timestamp' lvalue ParmVar 0x55974aa142c8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55974aa144a0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55974aa14410 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa17b10 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55974aa17af8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55974aa17aa0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55974aa17860 <col:2> '<bound member function type>' ->schedule_at_steady 0x55974a965fc0
|       | `-CXXThisExpr 0x55974aa17850 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55974aa17ae0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55974aa17ac8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55974aa17a60 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55974aa17998 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55974aa17980 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55974aa17910 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55974aa178e0 <col:31, col:41> '<bound member function type>' .sec 0x55974a7efc98
|             | |     `-ImplicitCastExpr 0x55974aa17930 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55974aa178b0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|             | |         `-CXXThisExpr 0x55974aa178a0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55974aa17968 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55974aa17948 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa14410 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55974aa17a28 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55974aa179f8 <col:60, col:70> '<bound member function type>' .subsec 0x55974a7f0390
|                 `-ImplicitCastExpr 0x55974aa17a48 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55974aa179c8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|                     `-CXXThisExpr 0x55974aa179b8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55974aa145e8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55974aa14558 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa17e48 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55974aa17e30 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55974aa17dd8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55974aa17b38 <col:2> '<bound member function type>' ->schedule_at_steady 0x55974a965fc0
|       | `-CXXThisExpr 0x55974aa17b28 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55974aa17e18 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55974aa17e00 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55974aa17da0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55974aa17d88 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55974aa17d68 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55974a99f5f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55974aa17d08 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55974aa17cf0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55974aa17b78 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|             |     `-CXXThisExpr 0x55974aa17b68 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55974aa17d50 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55974aa17d38 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55974aa17c98 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55974aa17c80 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55974aa17c50 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55974a972f48 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55974aa17cd8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55974aa17cc0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55974aa17c30 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa14558 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa146b0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55974aa14770 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55974aa18310 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55974aa17ea0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55974aa17e70 <col:2> '<bound member function type>' ->unschedule 0x55974aa146b0
|   |   `-CXXThisExpr 0x55974aa17e60 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55974aa182f8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55974aa182c0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55974aa182a8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974aa17f58 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55974a687238 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55974aa17ed0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55974aa151b8
|       | `-CXXThisExpr 0x55974aa17ec0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55974aa17f40 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55974aa17f10 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55974aa14830 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55974aa18668 <col:42, line:310:5>
|   |-IfStmt 0x55974aa184b0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55974aa183e0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55974aa183c8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55974aa18368 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55974a9910c0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55974aa184a0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55974aa18488 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55974aa18458 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55974aa18440 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55974aa18410 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55974aa18658 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55974aa18640 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55974aa18610 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974aa185f8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55974aa185b8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55974aa185a0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55974aa18570 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55974a973260 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55974aa185e0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55974aa18550 <col:30> 'int' 500
|-CXXMethodDecl 0x55974aa14970 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55974aa148e0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974aa14a18 <col:69> "" ""
|-CXXMethodDecl 0x55974aa14b28 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55974aa14a98 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974aa14bd0 <col:70> "" ""
|-CXXMethodDecl 0x55974aa14ce0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55974aa14c50 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974aa14d88 <col:71> "" ""
|-CXXMethodDecl 0x55974aa14e98 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55974aa14e08 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55974aa14f40 <col:72> "" ""
|-EnumDecl 0x55974aa14fb0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55974aa150b0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55974aa15100 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974aa15090 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55974aa15070 <col:25> 'int' 1
|-AccessSpecDecl 0x55974aa15118 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55974aa15158 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55974aa151b8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55974aa15208 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55974aa15338 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55974aa15e28 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55974aa153f8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55974aa15478 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55974aa154d8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55974aa15538 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55974aa15688 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55974aa15598 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55974aa15858 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55974aa15740 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55974aa157c0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55974aa15a30 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55974aa15918 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55974aa15998 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55974aa15c08 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55974aa15af0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55974aa15b70 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55974aa15dd8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aa815b8 <../elements/ethernet/arptable.hh:96:1, line:231:1> line:96:7 referenced class ARPTable definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55974aa81718 <col:1, col:7> col:7 implicit referenced class ARPTable
|-AccessSpecDecl 0x55974aa817a8 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x55974aa81830 <line:98:5, col:14> col:5 ARPTable 'void ()'
|-CXXDestructorDecl 0x55974aa81920 <line:99:5, col:15> col:5 ~ARPTable 'void ()' noexcept-unevaluated 0x55974aa81920
| `-Overrides: [ 0x55974a9df738 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55974aa81a50 <line:101:5, col:57> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55974a9e0b98 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55974aa95c28 <col:36, col:57>
|   `-ReturnStmt 0x55974aa95c18 <col:38, col:45>
|     `-ImplicitCastExpr 0x55974aa95c00 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55974aa95be0 <col:45> 'const char [9]' lvalue "ARPTable"
|-CXXMethodDecl 0x55974aa81d20 <line:103:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55974a9e2430 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55974aa81bd0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55974aa81c48 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55974aa81df0 <line:104:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x55974a9e4e80 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x55974aa95c60 <col:39, col:54>
|   `-ReturnStmt 0x55974aa95c50 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x55974aa95c40 <col:48> 'bool' true
|-CXXMethodDecl 0x55974aa81fb0 <line:105:5, col:46> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x55974a9e2888 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x55974aa81ea0 <col:21, col:29> col:30 'Element *'
| `-ParmVarDecl 0x55974aa81f18 <col:32, col:45> col:46 'ErrorHandler *'
|-CXXMethodDecl 0x55974aa82080 <line:106:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55974a9e2500 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55974aa821c0 <line:107:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55974a9e2e98 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55974aa82130 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55974aa82490 <line:109:5, col:72> col:9 used lookup 'int (IPAddress, EtherAddress *, uint32_t)'
| |-ParmVarDecl 0x55974aa82278 <col:16, col:26> col:26 ip 'IPAddress'
| |-ParmVarDecl 0x55974aa822f0 <col:30, col:44> col:44 eth 'EtherAddress *'
| `-ParmVarDecl 0x55974aa82368 <col:49, col:58> col:58 poll_timeout_j 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa82618 <line:110:5, col:37> col:18 lookup 'EtherAddress (IPAddress)'
| `-ParmVarDecl 0x55974aa82558 <col:25, col:35> col:35 ip 'IPAddress'
|-CXXMethodDecl 0x55974aa82798 <line:111:5, col:53> col:15 reverse_lookup 'IPAddress (const EtherAddress &)'
| `-ParmVarDecl 0x55974aa826d0 <col:30, col:50> col:50 eth 'const EtherAddress &'
|-CXXMethodDecl 0x55974aa82a60 <line:112:5, col:71> col:9 insert 'int (IPAddress, const EtherAddress &, Packet **)'
| |-ParmVarDecl 0x55974aa82850 <col:16, col:26> col:26 ip 'IPAddress'
| |-ParmVarDecl 0x55974aa828c8 <col:30, col:50> col:50 en 'const EtherAddress &'
| `-ParmVarDecl 0x55974aa82970 <col:54, col:70> col:63 head 'Packet **' cinit
|   `-ImplicitCastExpr 0x55974aa95bc8 <col:70> 'Packet **' <NullToPointer>
|     `-IntegerLiteral 0x55974aa95ba8 <col:70> 'int' 0
|-CXXMethodDecl 0x55974aa85b18 <line:113:5, col:45> col:9 append_query 'int (IPAddress, Packet *)'
| |-ParmVarDecl 0x55974aa82b28 <col:22, col:32> col:32 ip 'IPAddress'
| `-ParmVarDecl 0x55974aa82ba0 <col:36, col:44> col:44 p 'Packet *'
|-CXXMethodDecl 0x55974aa85be8 <line:114:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55974aa85ca8 <line:116:5, line:118:5> line:116:14 capacity 'uint32_t () const'
| `-CompoundStmt 0x55974aa95ce0 <col:31, line:118:5>
|   `-ReturnStmt 0x55974aa95cd0 <line:117:2, col:9>
|     `-ImplicitCastExpr 0x55974aa95cb8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974aa95c88 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_packet_capacity 0x55974aa94548
|         `-CXXThisExpr 0x55974aa95c78 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x55974aa85de8 <line:119:5, line:121:5> line:119:10 set_capacity 'void (uint32_t)'
| |-ParmVarDecl 0x55974aa85d58 <col:23, col:32> col:32 used capacity 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa95d90 <col:42, line:121:5>
|   `-BinaryOperator 0x55974aa95d70 <line:120:2, col:21> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55974aa95d08 <col:2> 'uint32_t':'unsigned int' lvalue ->_packet_capacity 0x55974aa94548
|     | `-CXXThisExpr 0x55974aa95cf8 <col:2> 'ARPTable *' implicit this
|     `-ImplicitCastExpr 0x55974aa95d58 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55974aa95d38 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa85d58 'capacity' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa85eb0 <line:122:5, line:124:5> line:122:14 entry_capacity 'uint32_t () const'
| `-CompoundStmt 0x55974aa95e10 <col:37, line:124:5>
|   `-ReturnStmt 0x55974aa95e00 <line:123:2, col:9>
|     `-ImplicitCastExpr 0x55974aa95de8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974aa95db8 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_entry_capacity 0x55974aa944e8
|         `-CXXThisExpr 0x55974aa95da8 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x55974aa85ff0 <line:125:5, line:127:5> line:125:10 set_entry_capacity 'void (uint32_t)'
| |-ParmVarDecl 0x55974aa85f60 <col:29, col:38> col:38 used entry_capacity 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa95ec0 <col:54, line:127:5>
|   `-BinaryOperator 0x55974aa95ea0 <line:126:2, col:20> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55974aa95e38 <col:2> 'uint32_t':'unsigned int' lvalue ->_entry_capacity 0x55974aa944e8
|     | `-CXXThisExpr 0x55974aa95e28 <col:2> 'ARPTable *' implicit this
|     `-ImplicitCastExpr 0x55974aa95e88 <col:20> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55974aa95e68 <col:20> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa85f60 'entry_capacity' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa860b8 <line:128:5, line:130:5> line:128:14 entry_packet_capacity 'uint32_t () const'
| `-CompoundStmt 0x55974aa95f40 <col:44, line:130:5>
|   `-ReturnStmt 0x55974aa95f30 <line:129:2, col:9>
|     `-ImplicitCastExpr 0x55974aa95f18 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974aa95ee8 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_entry_packet_capacity 0x55974aa945a8
|         `-CXXThisExpr 0x55974aa95ed8 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x55974aa861f8 <line:131:5, line:133:5> line:131:10 set_entry_packet_capacity 'void (uint32_t)'
| |-ParmVarDecl 0x55974aa86168 <col:36, col:45> col:45 used entry_packet_capacity 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa95ff0 <col:68, line:133:5>
|   `-BinaryOperator 0x55974aa95fd0 <line:132:2, col:27> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55974aa95f68 <col:2> 'uint32_t':'unsigned int' lvalue ->_entry_packet_capacity 0x55974aa945a8
|     | `-CXXThisExpr 0x55974aa95f58 <col:2> 'ARPTable *' implicit this
|     `-ImplicitCastExpr 0x55974aa95fb8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55974aa95f98 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa86168 'entry_packet_capacity' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa862c0 <line:134:5, line:136:5> line:134:14 capacity_slim_factor 'uint32_t () const'
| `-CompoundStmt 0x55974aa96070 <col:43, line:136:5>
|   `-ReturnStmt 0x55974aa96060 <line:135:2, col:9>
|     `-ImplicitCastExpr 0x55974aa96048 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55974aa96018 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_capacity_slim_factor 0x55974aa94608
|         `-CXXThisExpr 0x55974aa96008 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x55974aa86400 <line:137:5, line:140:5> line:137:10 set_capacity_slim_factor 'void (uint32_t)'
| |-ParmVarDecl 0x55974aa86370 <col:35, col:44> col:44 used capacity_slim_factor 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55974aa965b8 <col:66, line:140:5>
|   |-ParenExpr 0x55974aa96500 <line:138:9, col:189> 'void'
|   | `-ConditionalOperator 0x55974aa964d0 <col:10, col:188> 'void'
|   |   |-CXXStaticCastExpr 0x55974aa96128 <col:10, col:55> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55974aa960f8 <col:30, col:54> 'bool' '!='
|   |   |   |-ImplicitCastExpr 0x55974aa960c8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x55974aa96088 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa86370 'capacity_slim_factor' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x55974aa960e0 <col:54> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55974aa960a8 <col:54> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x55974aa96188 <col:59, col:66> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55974aa96168 <col:65> 'int' 0
|   |   `-CallExpr 0x55974aa96430 <col:70, col:188> 'void'
|   |     |-ImplicitCastExpr 0x55974aa96418 <col:70> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55974aa963f8 <col:70> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55974a519ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55974aa96470 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974aa961f8 <col:85> 'const char [26]' lvalue "capacity_slim_factor != 0"
|   |     |-ImplicitCastExpr 0x55974aa96488 <col:114> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55974aa962a8 <col:114> 'const char [33]' lvalue "../elements/ethernet/arptable.hh"
|   |     |-ImplicitCastExpr 0x55974aa964a0 <col:150> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55974aa962e0 <col:150> 'int' 138
|   |     `-ImplicitCastExpr 0x55974aa964b8 <col:155, col:169> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55974aa963e0 <col:155, col:169> 'const char [50]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55974aa963c8 <col:169> 'const char [50]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55974aa96378 <col:169> 'const char [50]' lvalue "void ARPTable::set_capacity_slim_factor(uint32_t)"
|   `-BinaryOperator 0x55974aa96598 <line:139:2, col:26> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55974aa96530 <col:2> 'uint32_t':'unsigned int' lvalue ->_capacity_slim_factor 0x55974aa94608
|     | `-CXXThisExpr 0x55974aa96520 <col:2> 'ARPTable *' implicit this
|     `-ImplicitCastExpr 0x55974aa96580 <col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55974aa96560 <col:26> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa86370 'capacity_slim_factor' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55974aa864c8 <line:141:5, line:143:5> line:141:15 timeout 'Timestamp () const'
| `-CompoundStmt 0x55974aa96828 <col:31, line:143:5>
|   `-ReturnStmt 0x55974aa96818 <line:142:2, col:61>
|     `-ExprWithCleanups 0x55974aa96800 <col:9, col:61> 'Timestamp'
|       `-CXXConstructExpr 0x55974aa967d0 <col:9, col:61> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55974aa967b8 <col:9, col:61> 'Timestamp' xvalue
|           `-CallExpr 0x55974aa96790 <col:9, col:61> 'Timestamp'
|             |-ImplicitCastExpr 0x55974aa96778 <col:9, col:20> 'Timestamp (*)(click_jiffies_t)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55974aa966f0 <col:9, col:20> 'Timestamp (click_jiffies_t)' lvalue CXXMethod 0x55974a99b290 'make_jiffies' 'Timestamp (click_jiffies_t)'
|             `-CStyleCastExpr 0x55974aa966c8 <col:33, col:51> 'click_jiffies_t':'unsigned int' <NoOp>
|               `-ImplicitCastExpr 0x55974aa966b0 <col:51> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|                 `-MemberExpr 0x55974aa96670 <col:51> 'const uint32_t':'const unsigned int' lvalue ->_timeout_j 0x55974aa94668
|                   `-CXXThisExpr 0x55974aa96660 <col:51> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x55974aa86608 <line:144:5, line:149:5> line:144:10 set_timeout 'void (const Timestamp &)'
| |-ParmVarDecl 0x55974aa86578 <col:22, col:39> col:39 used timeout 'const Timestamp &'
| `-CompoundStmt 0x55974aa96b60 <col:48, line:149:5>
|   `-IfStmt 0x55974aa96b38 <line:145:2, line:148:35> has_else
|     |-BinaryOperator 0x55974aa969b0 <line:145:6, col:59> 'bool' '>='
|     | |-CStyleCastExpr 0x55974aa968d8 <col:6, col:29> 'uint32_t':'unsigned int' <NoOp>
|     | | `-ImplicitCastExpr 0x55974aa968c0 <col:17, col:29> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|     | |   `-CXXMemberCallExpr 0x55974aa96890 <col:17, col:29> 'Timestamp::seconds_type':'int'
|     | |     `-MemberExpr 0x55974aa96860 <col:17, col:25> '<bound member function type>' .sec 0x55974a7efc98
|     | |       `-DeclRefExpr 0x55974aa96840 <col:17> 'const Timestamp' lvalue ParmVar 0x55974aa86578 'timeout' 'const Timestamp &'
|     | `-BinaryOperator 0x55974aa96990 <col:34, col:59> 'unsigned int' '/'
|     |   |-CStyleCastExpr 0x55974aa96930 <col:34, col:45> 'uint32_t':'unsigned int' <NoOp>
|     |   | `-IntegerLiteral 0x55974aa96900 <col:45> 'unsigned int' 4294967295
|     |   `-ImplicitCastExpr 0x55974aa96978 <col:59> 'unsigned int' <IntegralCast>
|     |     `-IntegerLiteral 0x55974aa96958 <col:59> 'int' 1000
|     |-BinaryOperator 0x55974aa96a48 <line:146:6, col:19> 'uint32_t':'unsigned int' lvalue '='
|     | |-MemberExpr 0x55974aa969e0 <col:6> 'uint32_t':'unsigned int' lvalue ->_timeout_j 0x55974aa94668
|     | | `-CXXThisExpr 0x55974aa969d0 <col:6> 'ARPTable *' implicit this
|     | `-ImplicitCastExpr 0x55974aa96a30 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x55974aa96a10 <col:19> 'int' 0
|     `-BinaryOperator 0x55974aa96b18 <line:148:6, col:35> 'uint32_t':'unsigned int' lvalue '='
|       |-MemberExpr 0x55974aa96a78 <col:6> 'uint32_t':'unsigned int' lvalue ->_timeout_j 0x55974aa94668
|       | `-CXXThisExpr 0x55974aa96a68 <col:6> 'ARPTable *' implicit this
|       `-CXXMemberCallExpr 0x55974aa96af8 <col:19, col:35> 'click_jiffies_t':'unsigned int'
|         `-MemberExpr 0x55974aa96ac8 <col:19, col:27> '<bound member function type>' .jiffies 0x55974a7f1798
|           `-DeclRefExpr 0x55974aa96aa8 <col:19> 'const Timestamp' lvalue ParmVar 0x55974aa86578 'timeout' 'const Timestamp &'
|-CXXMethodDecl 0x55974aa866d0 <line:151:5, line:153:5> line:151:14 drops 'uint32_t () const'
| `-CompoundStmt 0x55974aa96c30 <col:28, line:153:5>
|   `-ReturnStmt 0x55974aa96c20 <line:152:2, col:9>
|     `-ImplicitCastExpr 0x55974aa96c08 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       `-CXXMemberCallExpr 0x55974aa96be8 <col:9> 'uint32_t':'unsigned int'
|         `-MemberExpr 0x55974aa96bb8 <col:9> '<bound member function type>' .operator unsigned int 0x55974a79e270
|           `-MemberExpr 0x55974aa96b88 <col:9> 'const atomic_uint32_t' lvalue ->_drops 0x55974aa946c8
|             `-CXXThisExpr 0x55974aa96b78 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x55974aa86790 <line:154:5, line:156:5> line:154:14 count 'uint32_t () const'
| `-CompoundStmt 0x55974aa96d00 <col:28, line:156:5>
|   `-ReturnStmt 0x55974aa96cf0 <line:155:2, col:9>
|     `-ImplicitCastExpr 0x55974aa96cd8 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       `-CXXMemberCallExpr 0x55974aa96cb8 <col:9> 'uint32_t':'unsigned int'
|         `-MemberExpr 0x55974aa96c88 <col:9> '<bound member function type>' .operator unsigned int 0x55974a79e270
|           `-MemberExpr 0x55974aa96c58 <col:9> 'const atomic_uint32_t' lvalue ->_entry_count 0x55974aa94428
|             `-CXXThisExpr 0x55974aa96c48 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x55974aa86850 <line:157:5, line:159:5> line:157:14 length 'uint32_t () const'
| `-CompoundStmt 0x55974aa96dd0 <col:29, line:159:5>
|   `-ReturnStmt 0x55974aa96dc0 <line:158:2, col:9>
|     `-ImplicitCastExpr 0x55974aa96da8 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       `-CXXMemberCallExpr 0x55974aa96d88 <col:9> 'uint32_t':'unsigned int'
|         `-MemberExpr 0x55974aa96d58 <col:9> '<bound member function type>' .operator unsigned int 0x55974a79e270
|           `-MemberExpr 0x55974aa96d28 <col:9> 'const atomic_uint32_t' lvalue ->_packet_count 0x55974aa94488
|             `-CXXThisExpr 0x55974aa96d18 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x55974aa86990 <line:161:5, col:27> col:10 run_timer 'void (Timer *)'
| |-Overrides: [ 0x55974a9e00b8 Element::run_timer 'void (Timer *)' ]
| `-ParmVarDecl 0x55974aa86900 <col:20, col:26> col:27 'Timer *'
|-EnumDecl 0x55974aa86a38 <line:163:5, line:165:5> line:163:5
| |-EnumConstantDecl 0x55974aa86b00 <line:164:2> col:2 h_table 'ARPTable::(anonymous enum at ../elements/ethernet/arptable.hh:163:5)'
| |-EnumConstantDecl 0x55974aa86b50 <col:11> col:11 h_insert 'ARPTable::(anonymous enum at ../elements/ethernet/arptable.hh:163:5)'
| |-EnumConstantDecl 0x55974aa86ba0 <col:21> col:21 h_delete 'ARPTable::(anonymous enum at ../elements/ethernet/arptable.hh:163:5)'
| `-EnumConstantDecl 0x55974aa86bf0 <col:31> col:31 h_clear 'ARPTable::(anonymous enum at ../elements/ethernet/arptable.hh:163:5)'
|-CXXMethodDecl 0x55974aa86d68 <line:166:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55974aa86c50 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55974aa86cd0 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x55974aa87048 <line:167:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55974aa86e28 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55974aa86ea0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55974aa86f20 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x55974aa86f98 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXRecordDecl 0x55974aa87108 <line:169:5, line:207:5> line:169:12 referenced struct ARPEntry definition
| |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists non_trivial needs_overload_resolution
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974aa87228 <col:5, col:12> col:12 implicit referenced struct ARPEntry
| |-FieldDecl 0x55974aa872c8 <line:170:2, col:12> col:12 referenced _ip 'IPAddress'
| |-FieldDecl 0x55974aa87358 <line:171:2, col:12> col:12 _hashnext 'ARPTable::ARPEntry *'
| |-FieldDecl 0x55974aa873b8 <line:172:2, col:15> col:15 referenced _eth 'EtherAddress'
| |-FieldDecl 0x55974aa87418 <line:173:2, col:7> col:7 referenced _known 'bool'
| |-FieldDecl 0x55974aa87478 <line:174:2, col:10> col:10 referenced _num_polls_since_reply 'uint8_t':'unsigned char'
| |-FieldDecl 0x55974aa874d8 <line:175:2, col:18> col:18 referenced _live_at_j 'click_jiffies_t':'unsigned int'
| |-FieldDecl 0x55974aa87538 <line:176:2, col:18> col:18 referenced _polled_at_j 'click_jiffies_t':'unsigned int'
| |-FieldDecl 0x55974aa87598 <line:177:2, col:10> col:10 _head 'Packet *'
| |-FieldDecl 0x55974aa875f8 <line:178:2, col:10> col:10 _tail 'Packet *'
| |-FieldDecl 0x55974aa87658 <line:179:2, col:11> col:11 _entry_packet_count 'uint32_t':'unsigned int'
| |-FieldDecl 0x55974aa88948 <line:180:2, col:24> col:24 referenced _age_link 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
| |-TypedefDecl 0x55974aa889a8 <line:181:2, col:20> col:20 referenced key_type 'IPAddress'
| | `-RecordType 0x55974a745500 'IPAddress'
| |   `-CXXRecord 0x55974a7e0430 'IPAddress'
| |-TypedefDecl 0x55974aa88a10 <line:182:2, col:20> col:20 referenced key_const_reference 'IPAddress'
| | `-RecordType 0x55974a745500 'IPAddress'
| |   `-CXXRecord 0x55974a7e0430 'IPAddress'
| |-CXXConstructorDecl 0x55974aa88b20 <line:183:2, line:186:2> line:183:2 ARPEntry 'void (IPAddress)'
| | |-ParmVarDecl 0x55974aa88a78 <col:11, col:21> col:21 used ip 'IPAddress'
| | |-CXXCtorInitializer Field 0x55974aa872c8 '_ip' 'IPAddress'
| | | `-CXXConstructExpr 0x55974aa96f30 <line:184:8, col:14> 'IPAddress' 'void (const IPAddress &) noexcept'
| | |   `-ImplicitCastExpr 0x55974aa96e28 <col:12> 'const IPAddress' lvalue <NoOp>
| | |     `-DeclRefExpr 0x55974aa96de8 <col:12> 'IPAddress' lvalue ParmVar 0x55974aa88a78 'ip' 'IPAddress'
| | |-CXXCtorInitializer Field 0x55974aa87358 '_hashnext' 'ARPTable::ARPEntry *'
| | | `-ImplicitValueInitExpr 0x55974aa96fa0 <<invalid sloc>> 'ARPTable::ARPEntry *'
| | |-CXXCtorInitializer Field 0x55974aa873b8 '_eth' 'EtherAddress'
| | | `-ExprWithCleanups 0x55974aa970e0 <col:30, col:65> 'EtherAddress'
| | |   `-CXXConstructExpr 0x55974aa970b0 <col:30, col:65> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
| | |     `-MaterializeTemporaryExpr 0x55974aa97098 <col:35, col:64> 'EtherAddress' xvalue
| | |       `-CallExpr 0x55974aa97058 <col:35, col:64> 'EtherAddress'
| | |         `-ImplicitCastExpr 0x55974aa97040 <col:35, col:49> 'EtherAddress (*)()' <FunctionToPointerDecay>
| | |           `-DeclRefExpr 0x55974aa97010 <col:35, col:49> 'EtherAddress ()' lvalue CXXMethod 0x55974a9f8438 'make_broadcast' 'EtherAddress ()'
| | |-CXXCtorInitializer Field 0x55974aa87418 '_known' 'bool'
| | | `-CXXBoolLiteralExpr 0x55974aa97120 <line:185:15> 'bool' false
| | |-CXXCtorInitializer Field 0x55974aa87478 '_num_polls_since_reply' 'uint8_t':'unsigned char'
| | | `-ImplicitCastExpr 0x55974aa971b8 <col:46> 'uint8_t':'unsigned char' <IntegralCast>
| | |   `-IntegerLiteral 0x55974aa97178 <col:46> 'int' 0
| | |-CXXCtorInitializer Field 0x55974aa87598 '_head' 'Packet *'
| | | `-ImplicitValueInitExpr 0x55974aa97210 <<invalid sloc>> 'Packet *'
| | |-CXXCtorInitializer Field 0x55974aa875f8 '_tail' 'Packet *'
| | | `-ImplicitValueInitExpr 0x55974aa97260 <<invalid sloc>> 'Packet *'
| | |-CXXCtorInitializer Field 0x55974aa87658 '_entry_packet_count' 'uint32_t':'unsigned int'
| | | `-ImplicitCastExpr 0x55974aa972d8 <col:88> 'uint32_t':'unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x55974aa97298 <col:88> 'int' 0
| | |-CXXCtorInitializer Field 0x55974aa88948 '_age_link' 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
| | | `-CXXConstructExpr 0x55974aa97318 <line:183:2> 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>' 'void ()'
| | `-CompoundStmt 0x55974aa973b0 <line:185:91, line:186:2>
| |-CXXMethodDecl 0x55974aa88c38 <line:187:2, line:189:2> line:187:22 hashkey 'ARPTable::ARPEntry::key_const_reference () const'
| | `-CompoundStmt 0x55974aa97440 <col:38, line:189:2>
| |   `-ReturnStmt 0x55974aa97430 <line:188:6, col:13>
| |     `-CXXConstructExpr 0x55974aa97400 <col:13> 'ARPTable::ARPEntry::key_const_reference':'IPAddress' 'void (const IPAddress &) noexcept'
| |       `-MemberExpr 0x55974aa973d0 <col:13> 'const IPAddress' lvalue ->_ip 0x55974aa872c8
| |         `-CXXThisExpr 0x55974aa973c0 <col:13> 'const ARPTable::ARPEntry *' implicit this
| |-CXXMethodDecl 0x55974aa88e78 <line:190:2, line:193:2> line:190:7 used expired 'bool (click_jiffies_t, uint32_t) const'
| | |-ParmVarDecl 0x55974aa88ce8 <col:15, col:31> col:31 used now 'click_jiffies_t':'unsigned int'
| | |-ParmVarDecl 0x55974aa88d60 <col:36, col:45> col:45 used timeout_j 'uint32_t':'unsigned int'
| | `-CompoundStmt 0x55974aa97710 <col:62, line:193:2>
| |   `-ReturnStmt 0x55974aa97700 <line:191:6, line:192:6>
| |     `-BinaryOperator 0x55974aa976e0 <line:191:13, line:192:6> 'bool' '&&'
| |       |-ParenExpr 0x55974aa97670 <line:191:13, col:81> 'bool'
| |       | `-BinaryOperator 0x55974aa97650 <col:14, col:80> 'bool' '<'
| |       |   |-CStyleCastExpr 0x55974aa97608 <col:14, col:76> 'click_jiffies_difference_t':'int' <NoOp>
| |       |   | `-ImplicitCastExpr 0x55974aa975f0 <col:43, col:76> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
| |       |   |   `-ParenExpr 0x55974aa975d0 <col:43, col:76> 'unsigned int'
| |       |   |     `-BinaryOperator 0x55974aa97580 <col:44, col:75> 'unsigned int' '-'
| |       |   |       |-ParenExpr 0x55974aa97508 <col:44, col:67> 'unsigned int'
| |       |   |       | `-BinaryOperator 0x55974aa974e8 <col:45, col:58> 'unsigned int' '+'
| |       |   |       |   |-ImplicitCastExpr 0x55974aa974b8 <col:45> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |       |   |       |   | `-MemberExpr 0x55974aa97468 <col:45> 'const click_jiffies_t':'const unsigned int' lvalue ->_live_at_j 0x55974aa874d8
| |       |   |       |   |   `-CXXThisExpr 0x55974aa97458 <col:45> 'const ARPTable::ARPEntry *' implicit this
| |       |   |       |   `-ImplicitCastExpr 0x55974aa974d0 <col:58> 'uint32_t':'unsigned int' <LValueToRValue>
| |       |   |       |     `-DeclRefExpr 0x55974aa97498 <col:58> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa88d60 'timeout_j' 'uint32_t':'unsigned int'
| |       |   |       `-ImplicitCastExpr 0x55974aa97568 <col:71, col:75> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |       |   |         `-ParenExpr 0x55974aa97548 <col:71, col:75> 'click_jiffies_t':'unsigned int' lvalue
| |       |   |           `-DeclRefExpr 0x55974aa97528 <col:72> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55974aa88ce8 'now' 'click_jiffies_t':'unsigned int'
| |       |   `-IntegerLiteral 0x55974aa97630 <col:80> 'int' 0
| |       `-ImplicitCastExpr 0x55974aa976c8 <line:192:6> 'bool' <IntegralToBoolean>
| |         `-ImplicitCastExpr 0x55974aa976b0 <col:6> 'uint32_t':'unsigned int' <LValueToRValue>
| |           `-DeclRefExpr 0x55974aa97690 <col:6> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa88d60 'timeout_j' 'uint32_t':'unsigned int'
| |-CXXMethodDecl 0x55974aa89048 <line:194:2, line:196:2> line:194:7 used known 'bool (click_jiffies_t, uint32_t) const'
| | |-ParmVarDecl 0x55974aa88f38 <col:13, col:29> col:29 used now 'click_jiffies_t':'unsigned int'
| | |-ParmVarDecl 0x55974aa88fb0 <col:34, col:43> col:43 used timeout_j 'uint32_t':'unsigned int'
| | `-CompoundStmt 0x55974aa978a8 <col:60, line:196:2>
| |   `-ReturnStmt 0x55974aa97898 <line:195:6, col:46>
| |     `-BinaryOperator 0x55974aa97878 <col:13, col:46> 'bool' '&&'
| |       |-ImplicitCastExpr 0x55974aa97860 <col:13> 'bool' <LValueToRValue>
| |       | `-MemberExpr 0x55974aa97738 <col:13> 'const bool' lvalue ->_known 0x55974aa87418
| |       |   `-CXXThisExpr 0x55974aa97728 <col:13> 'const ARPTable::ARPEntry *' implicit this
| |       `-UnaryOperator 0x55974aa97848 <col:23, col:46> 'bool' prefix '!' cannot overflow
| |         `-CXXMemberCallExpr 0x55974aa977e8 <col:24, col:46> 'bool'
| |           |-MemberExpr 0x55974aa97778 <col:24> '<bound member function type>' ->expired 0x55974aa88e78
| |           | `-CXXThisExpr 0x55974aa97768 <col:24> 'const ARPTable::ARPEntry *' implicit this
| |           |-ImplicitCastExpr 0x55974aa97818 <col:32> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55974aa977a8 <col:32> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55974aa88f38 'now' 'click_jiffies_t':'unsigned int'
| |           `-ImplicitCastExpr 0x55974aa97830 <col:37> 'uint32_t':'unsigned int' <LValueToRValue>
| |             `-DeclRefExpr 0x55974aa977c8 <col:37> 'uint32_t':'unsigned int' lvalue ParmVar 0x55974aa88fb0 'timeout_j' 'uint32_t':'unsigned int'
| |-CXXMethodDecl 0x55974aa891f8 <line:197:2, line:201:2> line:197:7 used allow_poll 'bool (click_jiffies_t) const'
| | |-ParmVarDecl 0x55974aa89108 <col:18, col:34> col:34 used now 'click_jiffies_t':'unsigned int'
| | `-CompoundStmt 0x55974aa97d88 <col:45, line:201:2>
| |   |-DeclStmt 0x55974aa97b88 <line:198:6, line:199:58>
| |   | `-VarDecl 0x55974aa978d0 <line:198:6, line:199:57> line:198:22 used thresh_j 'click_jiffies_t':'unsigned int' cinit
| |   |   `-BinaryOperator 0x55974aa97b68 <col:33, line:199:57> 'unsigned int' '+'
| |   |     |-ImplicitCastExpr 0x55974aa97b38 <line:198:33> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |   |     | `-MemberExpr 0x55974aa97948 <col:33> 'const click_jiffies_t':'const unsigned int' lvalue ->_polled_at_j 0x55974aa87538
| |   |     |   `-CXXThisExpr 0x55974aa97938 <col:33> 'const ARPTable::ARPEntry *' implicit this
| |   |     `-ImplicitCastExpr 0x55974aa97b50 <line:199:5, col:57> 'unsigned int' <IntegralCast>
| |   |       `-ParenExpr 0x55974aa97b18 <col:5, col:57> 'int'
| |   |         `-ConditionalOperator 0x55974aa97ae8 <col:6, col:55> 'int'
| |   |           |-BinaryOperator 0x55974aa97a08 <col:6, col:32> 'bool' '>='
| |   |           | |-ImplicitCastExpr 0x55974aa979f0 <col:6> 'int' <IntegralCast>
| |   |           | | `-ImplicitCastExpr 0x55974aa979d8 <col:6> 'uint8_t':'unsigned char' <LValueToRValue>
| |   |           | |   `-MemberExpr 0x55974aa97988 <col:6> 'const uint8_t':'const unsigned char' lvalue ->_num_polls_since_reply 0x55974aa87478
| |   |           | |     `-CXXThisExpr 0x55974aa97978 <col:6> 'const ARPTable::ARPEntry *' implicit this
| |   |           | `-IntegerLiteral 0x55974aa979b8 <col:32> 'int' 10
| |   |           |-BinaryOperator 0x55974aa97a68 <col:37, col:44> 'int' '*'
| |   |           | |-IntegerLiteral 0x55974aa97a28 <col:37> 'int' 1000
| |   |           | `-IntegerLiteral 0x55974aa97a48 <col:44> 'int' 2
| |   |           `-BinaryOperator 0x55974aa97ac8 <col:48, col:55> 'int' '/'
| |   |             |-IntegerLiteral 0x55974aa97a88 <col:48> 'int' 1000
| |   |             `-IntegerLiteral 0x55974aa97aa8 <col:55> 'int' 10
| |   `-ReturnStmt 0x55974aa97d78 <line:200:6, col:68>
| |     `-UnaryOperator 0x55974aa97d60 <col:13, col:68> 'bool' prefix '!' cannot overflow
| |       `-ParenExpr 0x55974aa97d40 <col:14, col:68> 'bool'
| |         `-BinaryOperator 0x55974aa97d20 <col:15, col:67> 'bool' '<'
| |           |-CStyleCastExpr 0x55974aa97cd8 <col:15, col:63> 'click_jiffies_difference_t':'int' <NoOp>
| |           | `-ImplicitCastExpr 0x55974aa97cc0 <col:44, col:63> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
| |           |   `-ParenExpr 0x55974aa97ca0 <col:44, col:63> 'unsigned int'
| |           |     `-BinaryOperator 0x55974aa97c50 <col:45, col:62> 'unsigned int' '-'
| |           |       |-ImplicitCastExpr 0x55974aa97c20 <col:45, col:49> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |           |       | `-ParenExpr 0x55974aa97bc0 <col:45, col:49> 'click_jiffies_t':'unsigned int' lvalue
| |           |       |   `-DeclRefExpr 0x55974aa97ba0 <col:46> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55974aa89108 'now' 'click_jiffies_t':'unsigned int'
| |           |       `-ImplicitCastExpr 0x55974aa97c38 <col:53, col:62> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |           |         `-ParenExpr 0x55974aa97c00 <col:53, col:62> 'click_jiffies_t':'unsigned int' lvalue
| |           |           `-DeclRefExpr 0x55974aa97be0 <col:54> 'click_jiffies_t':'unsigned int' lvalue Var 0x55974aa978d0 'thresh_j' 'click_jiffies_t':'unsigned int'
| |           `-IntegerLiteral 0x55974aa97d00 <col:67> 'int' 0
| |-CXXMethodDecl 0x55974aa89378 <line:202:2, line:206:2> line:202:7 used mark_poll 'void (click_jiffies_t)'
| | |-ParmVarDecl 0x55974aa892b0 <col:17, col:33> col:33 used now 'click_jiffies_t':'unsigned int'
| | `-CompoundStmt 0x55974aa97f60 <col:38, line:206:2>
| |   |-BinaryOperator 0x55974aa97e20 <line:203:6, col:21> 'click_jiffies_t':'unsigned int' lvalue '='
| |   | |-MemberExpr 0x55974aa97db8 <col:6> 'click_jiffies_t':'unsigned int' lvalue ->_polled_at_j 0x55974aa87538
| |   | | `-CXXThisExpr 0x55974aa97da8 <col:6> 'ARPTable::ARPEntry *' implicit this
| |   | `-ImplicitCastExpr 0x55974aa97e08 <col:21> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x55974aa97de8 <col:21> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55974aa892b0 'now' 'click_jiffies_t':'unsigned int'
| |   `-IfStmt 0x55974aa97f48 <line:204:6, line:205:5>
| |     |-BinaryOperator 0x55974aa97ed0 <line:204:10, col:35> 'bool' '<'
| |     | |-ImplicitCastExpr 0x55974aa97eb8 <col:10> 'int' <IntegralCast>
| |     | | `-ImplicitCastExpr 0x55974aa97ea0 <col:10> 'uint8_t':'unsigned char' <LValueToRValue>
| |     | |   `-MemberExpr 0x55974aa97e50 <col:10> 'uint8_t':'unsigned char' lvalue ->_num_polls_since_reply 0x55974aa87478
| |     | |     `-CXXThisExpr 0x55974aa97e40 <col:10> 'ARPTable::ARPEntry *' implicit this
| |     | `-IntegerLiteral 0x55974aa97e80 <col:35> 'int' 255
| |     `-UnaryOperator 0x55974aa97f30 <line:205:3, col:5> 'uint8_t':'unsigned char' lvalue prefix '++' cannot overflow
| |       `-MemberExpr 0x55974aa97f00 <col:5> 'uint8_t':'unsigned char' lvalue ->_num_polls_since_reply 0x55974aa87478
| |         `-CXXThisExpr 0x55974aa97ef0 <col:5> 'ARPTable::ARPEntry *' implicit this
| |-CXXConstructorDecl 0x55974aa89448 <line:169:12> col:12 implicit ARPEntry 'void (const ARPTable::ARPEntry &)' inline default_delete noexcept-unevaluated 0x55974aa89448
| | `-ParmVarDecl 0x55974aa89558 <col:12> col:12 'const ARPTable::ARPEntry &'
| |-CXXConstructorDecl 0x55974aa895f8 <col:12> col:12 implicit ARPEntry 'void (ARPTable::ARPEntry &&)' inline default_delete noexcept-unevaluated 0x55974aa895f8
| | `-ParmVarDecl 0x55974aa89708 <col:12> col:12 'ARPTable::ARPEntry &&'
| `-CXXMethodDecl 0x55974aa897a8 <col:12> col:12 implicit operator= 'ARPTable::ARPEntry &(ARPTable::ARPEntry &&)' inline default_delete noexcept-unevaluated 0x55974aa897a8
|   `-ParmVarDecl 0x55974aa898b8 <col:12> col:12 'ARPTable::ARPEntry &&'
|-AccessSpecDecl 0x55974aa89f40 <line:209:3, col:10> col:3 private
|-FieldDecl 0x55974aa89f78 <line:211:5, col:19> col:19 referenced _lock 'ReadWriteLock'
|-TypedefDecl 0x55974aa8a350 <line:213:5, col:37> col:37 referenced Table 'HashContainer<ARPTable::ARPEntry>':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| `-TemplateSpecializationType 0x55974aa8a2b0 'HashContainer<ARPTable::ARPEntry>' sugar HashContainer
|   |-TemplateArgument type 'ARPTable::ARPEntry'
|   `-RecordType 0x55974aa8a290 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|     `-ClassTemplateSpecialization 0x55974aa8a190 'HashContainer'
|-FieldDecl 0x55974aa906c8 <line:214:5, col:11> col:11 referenced _table 'ARPTable::Table':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-TypedefDecl 0x55974aa90b98 <line:215:5, col:50> col:50 referenced AgeList 'List<ARPTable::ARPEntry, &ARPEntry::_age_link>':'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>'
| `-TemplateSpecializationType 0x55974aa90ab0 'List<ARPTable::ARPEntry, &ARPEntry::_age_link>' sugar List
|   |-TemplateArgument type 'ARPTable::ARPEntry'
|   |-TemplateArgument expr
|   | `-UnaryOperator 0x55974aa90810 <col:28, col:39> 'List_member<ARPTable::ARPEntry> ARPTable::ARPEntry::*' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55974aa90778 <col:29, col:39> 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>' lvalue Field 0x55974aa88948 '_age_link' 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
|   `-RecordType 0x55974aa90a90 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>'
|     `-ClassTemplateSpecialization 0x55974aa90990 'List'
|-FieldDecl 0x55974aa943c8 <line:216:5, col:13> col:13 _age 'ARPTable::AgeList':'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>'
|-FieldDecl 0x55974aa94428 <line:217:5, col:21> col:21 referenced _entry_count 'atomic_uint32_t'
|-FieldDecl 0x55974aa94488 <line:218:5, col:21> col:21 referenced _packet_count 'atomic_uint32_t'
|-FieldDecl 0x55974aa944e8 <line:219:5, col:14> col:14 referenced _entry_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55974aa94548 <line:220:5, col:14> col:14 referenced _packet_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55974aa945a8 <line:221:5, col:14> col:14 referenced _entry_packet_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55974aa94608 <line:222:5, col:14> col:14 referenced _capacity_slim_factor 'uint32_t':'unsigned int'
|-FieldDecl 0x55974aa94668 <line:223:5, col:14> col:14 referenced _timeout_j 'uint32_t':'unsigned int'
|-FieldDecl 0x55974aa946c8 <line:224:5, col:21> col:21 referenced _drops 'atomic_uint32_t'
|-FieldDecl 0x55974aa953d0 <line:225:5, col:42> col:42 _alloc 'SizedHashAllocator<sizeof(ARPTable::ARPEntry)>':'SizedHashAllocator<72>'
|-FieldDecl 0x55974aa95430 <line:226:5, col:11> col:11 _expire_timer 'Timer'
|-CXXMethodDecl 0x55974aa95618 <line:228:5, col:55> col:15 ensure 'ARPTable::ARPEntry *(IPAddress, click_jiffies_t)'
| |-ParmVarDecl 0x55974aa95490 <col:22, col:32> col:32 ip 'IPAddress'
| `-ParmVarDecl 0x55974aa95508 <col:36, col:52> col:52 now 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55974aa95768 <line:229:5, col:34> col:10 slim 'void (click_jiffies_t)'
| `-ParmVarDecl 0x55974aa956d8 <col:15, col:31> col:31 now 'click_jiffies_t':'unsigned int'
|-CXXConstructorDecl 0x55974aa95838 <line:96:7> col:7 implicit ARPTable 'void (const ARPTable &)' inline default_delete noexcept-unevaluated 0x55974aa95838
| `-ParmVarDecl 0x55974aa95948 <col:7> col:7 'const ARPTable &'
`-CXXMethodDecl 0x55974aa959e8 <col:7> col:7 implicit operator= 'ARPTable &(const ARPTable &)' inline default_delete noexcept-unevaluated 0x55974aa959e8
  `-ParmVarDecl 0x55974aa95b38 <col:7> col:7 'const ARPTable &'

Layout: <CGRecordLayout
  LLVMType:%class.ARPTable = type { %class.Element.base, %class.ReadWriteLock, %class.HashContainer, %class.List, %class.atomic_uint32_t, %class.atomic_uint32_t, i32, i32, i32, i32, i32, %class.atomic_uint32_t, %class.SizedHashAllocator, %class.Timer }
  NonVirtualBaseLLVMType:%class.ARPTable = type { %class.Element.base, %class.ReadWriteLock, %class.HashContainer, %class.List, %class.atomic_uint32_t, %class.atomic_uint32_t, i32, i32, i32, i32, i32, %class.atomic_uint32_t, %class.SizedHashAllocator, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab87108 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55974ab87238 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55974ab87298 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55974ab872f8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55974abedda8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55974abede80 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55974abede80
|-CXXConstructorDecl 0x55974abee170 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55974abee170
| `-ParmVarDecl 0x55974abee288 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55974abee328 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55974abee328
  `-ParmVarDecl 0x55974abee438 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab86f60 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55974ab87078 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55974ab87108 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55974ab87238 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55974ab87298 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55974ab872f8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55974abedda8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55974abede80 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55974abede80
| |-CXXConstructorDecl 0x55974abee170 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55974abee170
| | `-ParmVarDecl 0x55974abee288 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55974abee328 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55974abee328
|   `-ParmVarDecl 0x55974abee438 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55974ab873b8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55974ab87418 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55974ab873b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55974ab87238 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55974ab87470 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55974ab873b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55974ab87298 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55974ab874c8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55974ab873b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55974ab872f8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55974ab87520 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55974abedcb8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55974abee658 <col:11>
|-CXXConstructorDecl 0x55974abedf88 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55974abedf88
| `-ParmVarDecl 0x55974abee098 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55974abee4d8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55974abee4d8
  `-ParmVarDecl 0x55974abee5e8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab84b30 prev 0x55974a9defd0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55974ab84c68 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55974ab84cf8 <col:33, col:39> col:33 public
|-EnumDecl 0x55974ab84d20 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55974ab84e60 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55974ab84e40 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55974ab84e20 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55974ab84de0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55974ab84e00 <col:26> 'int' 16
| `-EnumConstantDecl 0x55974ab84f30 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55974ab84f10 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55974ab84ef0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55974ab84eb0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55974ab84ed0 <col:47> 'int' 31
|-EnumDecl 0x55974ab84f80 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55974ab850c0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55974ab851e0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ab850a0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55974ab85080 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55974ab85040 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55974ab85060 <col:29> 'int' 15
| `-EnumConstantDecl 0x55974ab85190 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55974ab851f8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974ab85170 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55974ab85150 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55974ab85110 <col:51> 'int' 1
|         `-IntegerLiteral 0x55974ab85130 <col:54> 'int' 10
|-CXXConstructorDecl 0x55974ab85460 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55974ab85220 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55974ab852a0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55974ab855b8 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55974ab85528 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55974ab856b0 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55974ab856b0
|-CXXMethodDecl 0x55974ab85838 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55974ab88938 <col:42, line:100:5>
|   `-ReturnStmt 0x55974ab88928 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55974ab88910 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55974ab888e0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55974ab87660
|         `-CXXThisExpr 0x55974ab888d0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55974ab85900 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55974ab889b8 <col:36, line:105:5>
|   `-ReturnStmt 0x55974ab889a8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55974ab88990 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55974ab88960 <col:16> 'void *const' lvalue ->_thunk 0x55974ab876c8
|         `-CXXThisExpr 0x55974ab88950 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55974ab859c0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55974ab88a38 <col:37, line:110:5>
|   `-ReturnStmt 0x55974ab88a28 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55974ab88a10 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55974ab889e0 <col:16> 'Element *const' lvalue ->_owner 0x55974ab87788
|         `-CXXThisExpr 0x55974ab889d0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55974ab85a80 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55974ab85b48 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55974ab85c08 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55974ab85cc8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55974ab88b20 <col:35, line:137:5>
|   `-ReturnStmt 0x55974ab88b10 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55974ab88ad8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55974ab88aa8 <col:16, col:24> '<bound member function type>' ->router 0x55974a9f17e0
|         `-ImplicitCastExpr 0x55974ab88af8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55974ab88a90 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55974ab88a60 <col:16> 'Element *const' lvalue ->_owner 0x55974ab87788
|               `-CXXThisExpr 0x55974ab88a50 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55974ab85d88 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55974ab85f48 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55974ab85e38 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55974ab85eb0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55974ab86158 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55974ab86008 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55974ab86080 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55974ab86228 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55974ab88c30 <col:35, line:181:5>
|   `-ReturnStmt 0x55974ab88c20 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55974ab88c08 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55974ab88bf0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55974ab88bc0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55974ab87298
|           `-MemberExpr 0x55974ab88b78 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55974ab873b8
|             `-MemberExpr 0x55974ab88b48 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55974ab875e8
|               `-CXXThisExpr 0x55974ab88b38 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55974ab862e8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55974ab88d48 <col:30, line:192:5>
|   `-BinaryOperator 0x55974ab88d28 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55974ab88cd0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55974ab87298
|     | `-MemberExpr 0x55974ab88c88 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55974ab873b8
|     |   `-MemberExpr 0x55974ab88c58 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55974ab875e8
|     |     `-CXXThisExpr 0x55974ab88c48 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55974ab88d10 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55974ab88d00 <col:32> 'bool' false
|-CXXMethodDecl 0x55974ab863a8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55974ab89098 <col:30, line:206:5>
|   |-BinaryOperator 0x55974ab88e40 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55974ab88de8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55974ab87298
|   | | `-MemberExpr 0x55974ab88da0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55974ab873b8
|   | |   `-MemberExpr 0x55974ab88d70 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55974ab875e8
|   | |     `-CXXThisExpr 0x55974ab88d60 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55974ab88e28 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55974ab88e18 <col:32> 'bool' true
|   |-CallExpr 0x55974ab88ee0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55974ab88ec8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55974ab88ea8 <col:9> 'void ()' lvalue Function 0x55974a95f620 'click_fence' 'void ()'
|   `-IfStmt 0x55974ab89080 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55974ab88fc0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55974ab88f90 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55974ab88f40 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55974ab879f8
|     | |   `-MemberExpr 0x55974ab88f10 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55974ab87a70
|     | |     `-CXXThisExpr 0x55974ab88f00 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55974ab88fa8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55974ab88f70 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55974ab89040 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55974ab88ff0 <col:13> '<bound member function type>' ->complete_schedule 0x55974ab88470
|       | `-CXXThisExpr 0x55974ab88fe0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55974ab89068 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55974ab89020 <col:31> 'int' 0
|-CXXMethodDecl 0x55974ab86468 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55974ab891c0 <col:35, line:240:5>
|   `-BinaryOperator 0x55974ab891a0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55974ab89148 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55974ab87298
|     | `-MemberExpr 0x55974ab89100 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55974ab873b8
|     |   `-MemberExpr 0x55974ab890d0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55974ab875e8
|     |     `-CXXThisExpr 0x55974ab890c0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55974ab89188 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55974ab89178 <col:32> 'bool' true
|-CXXMethodDecl 0x55974ab86528 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55974ab893d8 <col:37, line:253:5>
|   |-BinaryOperator 0x55974ab892b8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55974ab89260 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55974ab87298
|   | | `-MemberExpr 0x55974ab89218 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55974ab873b8
|   | |   `-MemberExpr 0x55974ab891e8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55974ab875e8
|   | |     `-CXXThisExpr 0x55974ab891d8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55974ab892a0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55974ab89290 <col:32> 'bool' false
|   `-BinaryOperator 0x55974ab893b8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55974ab89360 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55974ab872f8
|     | `-MemberExpr 0x55974ab89318 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55974ab873b8
|     |   `-MemberExpr 0x55974ab892e8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55974ab875e8
|     |     `-CXXThisExpr 0x55974ab892d8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55974ab893a0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55974ab89390 <col:41> 'bool' true
|-CXXMethodDecl 0x55974ab865e8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55974ab89558 <col:37, line:264:5>
|   |-BinaryOperator 0x55974ab894d8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55974ab89480 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55974ab872f8
|   | | `-MemberExpr 0x55974ab89438 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55974ab873b8
|   | |   `-MemberExpr 0x55974ab89408 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55974ab875e8
|   | |     `-CXXThisExpr 0x55974ab893f8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55974ab894c0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55974ab894b0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55974ab89538 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55974ab89508 <col:9> '<bound member function type>' ->reschedule 0x55974ab863a8
|       `-CXXThisExpr 0x55974ab894f8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55974ab86730 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55974ab866a0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55974ab86800 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55974ab86948 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55974ab868b8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55974ab86a98 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55974ab86a08 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55974ab86b60 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55974ab86c20 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55974ab86cc0 <col:53> "" ""
|-CXXMethodDecl 0x55974ab86d58 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55974ab86df8 <col:47> "" ""
|-AccessSpecDecl 0x55974ab86e68 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55974ab86ea8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55974ab86f10 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55974ab86f60 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55974ab87078 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55974ab87108 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55974ab87238 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55974ab87298 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55974ab872f8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55974abedda8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55974abede80 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55974abede80
| | |-CXXConstructorDecl 0x55974abee170 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55974abee170
| | | `-ParmVarDecl 0x55974abee288 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55974abee328 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55974abee328
| |   `-ParmVarDecl 0x55974abee438 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55974ab873b8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55974ab87418 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55974ab873b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55974ab87238 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55974ab87470 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55974ab873b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55974ab87298 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55974ab874c8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55974ab873b8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55974ab872f8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55974ab87520 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55974abedcb8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55974abee658 <col:11>
| |-CXXConstructorDecl 0x55974abedf88 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55974abedf88
| | `-ParmVarDecl 0x55974abee098 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55974abee4d8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55974abee4d8
|   `-ParmVarDecl 0x55974abee5e8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55974ab875e8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55974ab87660 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55974ab876c8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55974ab87728 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55974ab87788 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55974ab877d8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55974ab878f8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55974ab87998 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55974ab879f8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55974abe7238 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55974abe7238
| | `-ParmVarDecl 0x55974abe7348 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55974abe73e8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55974abe73e8
| | `-ParmVarDecl 0x55974abe74f8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55974abe7568 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55974abe7568
| |-CXXMethodDecl 0x55974abe7de8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55974abe7de8
| | `-ParmVarDecl 0x55974abe7ef8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55974abe7f68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55974abe7f68
| | `-ParmVarDecl 0x55974abe8078 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55974abee6b8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55974abee790 <col:11>
|-FieldDecl 0x55974ab87a70 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55974ab87bb8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55974ab87af8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55974ab87d68 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55974ab87c78 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55974ab87e30 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55974ab87ef0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55974ab87fb0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55974ab89668 <col:41, line:355:5>
|   `-ReturnStmt 0x55974ab89658 <line:354:9, col:38>
|     `-BinaryOperator 0x55974ab89638 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55974ab89608 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55974ab895b8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55974ab879f8
|       |   `-MemberExpr 0x55974ab89588 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55974ab87a70
|       |     `-CXXThisExpr 0x55974ab89578 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55974ab89620 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55974ab895e8 <col:38> 'int' 0
|-CXXMethodDecl 0x55974ab88070 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55974ab881b0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55974ab88120 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55974ab88328 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55974ab88268 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55974ab88470 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55974ab883e0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55974ab88538 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55974ab88700 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55974ab885e8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55974ab88668 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55974ab88800 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55974ab88890 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aade928 prev 0x55974a9fd1e8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974aadea20 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55974aadeab0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55974aadebe8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55974aadeae8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55974aae0010 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55974aadfff0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55974aadfb88 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55974aae00a0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55974aae0060 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55974aadeae8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55974aadfbf0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55974aae0120 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55974aae00e0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55974aadfc50 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55974aae0160 <col:54> 'bool' false
| `-CompoundStmt 0x55974aae0268 <col:61, line:38:5>
|   `-BinaryOperator 0x55974aae0248 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55974aae01e0 <col:9> 'const Element *' lvalue ->_context 0x55974aadfb28
|     | `-CXXThisExpr 0x55974aae01d0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55974aae0230 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55974aae0210 <col:20> 'int' 0
|-CXXConstructorDecl 0x55974aadedf8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55974aadeca8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55974aaded20 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55974aae0048 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55974aae0028 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55974aadfb28 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55974aae02c0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55974aae0280 <col:20> 'const Element *' lvalue ParmVar 0x55974aadeca8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55974aadfb88 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55974aae0340 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55974aae0300 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55974aaded20 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55974aadfbf0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55974aae03c0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55974aae0380 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55974aadfc50 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55974aae0400 <col:73> 'bool' false
| `-CompoundStmt 0x55974aae0478 <col:80, line:46:5>
|-CXXMethodDecl 0x55974aadef28 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55974aae04f0 <col:36, line:51:5>
|   `-ReturnStmt 0x55974aae04e0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55974aae04c8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55974aae0498 <col:16> 'const Element *const' lvalue ->_context 0x55974aadfb28
|         `-CXXThisExpr 0x55974aae0488 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55974aadf018 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55974aae0570 <col:32, line:57:5>
|   `-ReturnStmt 0x55974aae0560 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55974aae0548 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55974aae0518 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55974aadfb88
|         `-CXXThisExpr 0x55974aae0508 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55974aadf0d8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55974aadf260 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55974aadf190 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55974aadf3b0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55974aadf320 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55974aadf500 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55974aadf470 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55974aadf708 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55974aadf5b8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55974aadf630 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55974aadfa38 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55974aadf7c8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55974aadf848 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55974aadf910 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55974aadfaf0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55974aadfb28 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55974aadfb88 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55974aadfbf0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55974aadfc50 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55974aadfca0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55974aadfca0
| `-ParmVarDecl 0x55974aadfdb8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55974aadfe58 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55974aadfe58
| `-ParmVarDecl 0x55974aadff68 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55974ac5fe20 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab0c0c8 prev 0x55974aae6cb0 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974ab0c1c0 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55974ab0c2b0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55974ab33060 <col:16, line:828:9>
|-CXXDestructorDecl 0x55974ab0c3a0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55974ab33070 <col:25, line:830:9>
|-CXXMethodDecl 0x55974ab0c4a0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55974ab0c550 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55974ab0c5f8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55974ab0c5f8
| `-ParmVarDecl 0x55974ab0c708 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55974ab0cec8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55974ab0cec8
  `-ParmVarDecl 0x55974ab0cfd8 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974aae6ae8 prev 0x55974a9fd278 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55974aae6c20 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55974aae6cb0 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55974aae6d60 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55974aae6e68 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55974aae6d98 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55974ab22528 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55974ab22508 <col:31> 'int' 0
|-CXXConstructorDecl 0x55974aae7188 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55974aae7000 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55974aae7078 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55974ab22560 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55974ab22540 <col:59> 'int' 0
|-CXXConstructorDecl 0x55974aae7360 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55974aae7250 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55974aae72c8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55974ab22598 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55974ab22578 <col:55> 'int' 0
|-CXXConstructorDecl 0x55974aae7718 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55974aae7500 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55974aae7578 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55974aae75f0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55974ab225d0 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55974ab225b0 <col:31> 'int' 0
|-CXXConstructorDecl 0x55974aae78d8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55974aae7818 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55974aae79d0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55974aae7b88 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55974aae7ac0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55974aae7c78 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55974ab22980 <col:24, line:291:5>
|   `-ReturnStmt 0x55974ab22970 <line:290:9, col:79>
|     `-BinaryOperator 0x55974ab22950 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55974ab22828 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55974ab22780 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55974ab22760 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55974ab22658 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55974ab22640 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55974ab22628 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55974ab225f8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55974ab0dec0
|       | |   |       `-CXXThisExpr 0x55974ab225e8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55974ab22748 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55974ab22730 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55974ab226f8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55974ab226c8 <col:28, col:35> '<bound member function type>' ->size 0x55974aaceb88
|       | |           `-ImplicitCastExpr 0x55974ab22718 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55974ab226b0 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55974ab22680 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55974ab0dec0
|       | |                 `-CXXThisExpr 0x55974ab22670 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55974ab22810 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55974ab227f8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55974ab227e0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55974ab227b0 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55974ab210b0
|       |         `-CXXThisExpr 0x55974ab227a0 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55974ab22930 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55974ab22918 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55974ab22900 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55974ab228c0 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55974ab228a8 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55974ab22858 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55974ab21160
|         |     |   `-CXXThisExpr 0x55974ab22848 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55974ab22888 <col:73> 'int' 0
|         `-IntegerLiteral 0x55974ab228e0 <col:79> 'int' 0
|-CXXMethodDecl 0x55974aae7d38 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55974ab22b58 <col:32, line:296:5>
|   `-ReturnStmt 0x55974ab22b48 <line:295:9, col:49>
|     `-BinaryOperator 0x55974ab22b28 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55974ab22a08 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55974ab229f0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55974ab229d8 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55974ab229a8 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55974ab210b0
|       |       `-CXXThisExpr 0x55974ab22998 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55974ab22b08 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55974ab22af0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55974ab22ad8 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55974ab22a98 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55974ab22a80 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55974ab22a30 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55974ab21160
|         |     |   `-CXXThisExpr 0x55974ab22a20 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55974ab22a60 <col:43> 'int' 0
|         `-IntegerLiteral 0x55974ab22ab8 <col:49> 'int' 0
|-CXXMethodDecl 0x55974aae7e28 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55974ab22d68 <col:19, line:306:5>
|   |-IfStmt 0x55974ab22c88 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55974ab22bc8 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55974ab22bb0 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55974ab22b80 <col:13> 'Vector<String> *' lvalue ->_conf 0x55974ab0dec0
|   | |     `-CXXThisExpr 0x55974ab22b70 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55974ab22c68 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55974ab22c38 <col:13, col:20> '<bound member function type>' ->clear 0x55974aad39b8
|   |     `-ImplicitCastExpr 0x55974ab22c20 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55974ab22bf0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55974ab0dec0
|   |         `-CXXThisExpr 0x55974ab22be0 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55974ab22d10 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55974ab22ce0 <col:9, col:16> '<bound member function type>' .clear 0x55974ab20c38
|   |   `-MemberExpr 0x55974ab22cb0 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55974ab21050
|   |     `-CXXThisExpr 0x55974ab22ca0 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55974ab22d58 <line:305:9, col:17>
|     `-UnaryOperator 0x55974ab22d40 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974ab22d30 <col:17> 'Args *' this
|-CXXMethodDecl 0x55974aae80a8 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55974aae7fb0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55974aae8228 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55974aae8160 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55974aae85a8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55974aae82d0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55974aae8508 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55974aae8378 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55974aae83f0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55974ab23098 <col:67, line:327:5>
|     |-WhileStmt 0x55974ab23048 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55974ab22e60 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55974ab22dd0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55974aa57d48 0x55974a9fcc10 0x55974a99d018 0x55974a7e65f8 0x55974a7e62d0 0x55974a7d7ab0 0x55974a7d7760 0x55974a7d7050 0x55974a7a99c0 0x55974a735e80
|     | | |-DeclRefExpr 0x55974ab22d90 <col:16> 'Iter' lvalue ParmVar 0x55974aae8378 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55974ab22db0 <col:25> 'Iter' lvalue ParmVar 0x55974aae83f0 'end' 'Iter'
|     | `-CompoundStmt 0x55974ab23028 <col:30, line:325:9>
|     |   |-CallExpr 0x55974ab22fc8 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55974ab22ea8 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55974ab22f98 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55974ab22f28 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|     |   |   `-DeclRefExpr 0x55974ab22f08 <col:24> 'Iter' lvalue ParmVar 0x55974aae8378 'begin' 'Iter'
|     |   `-UnaryOperator 0x55974ab23010 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55974ab22ff0 <col:15> 'Iter' lvalue ParmVar 0x55974aae8378 'begin' 'Iter'
|     `-ReturnStmt 0x55974ab23088 <line:326:9, col:17>
|       `-UnaryOperator 0x55974ab23070 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab23060 <col:17> 'Args *' this
|-CXXMethodDecl 0x55974aae86b0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55974aae8620 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55974aae87f8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55974aae8768 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55974aae88c0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55974ab23178 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55974ab23118 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55974ab230c8 <col:9> '<bound member function type>' ->reset_from 0x55974ab214d8
|   | | `-CXXThisExpr 0x55974ab230b8 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55974ab230f8 <col:20> 'int' 0
|   `-ReturnStmt 0x55974ab23168 <line:352:9, col:17>
|     `-UnaryOperator 0x55974ab23150 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974ab23140 <col:17> 'Args *' this
|-VarDecl 0x55974aae8978 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55974aae89e0 <col:38> 'int' 1
|-VarDecl 0x55974aae8a70 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55974aae8ad8 <col:39> 'int' 2
|-VarDecl 0x55974aae8b68 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55974aae8bd0 <col:39> 'int' 4
|-VarDecl 0x55974aae8c60 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55974aae8cc8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55974aae9048 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55974aae8d40 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55974aae8fa8 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55974aae8df0 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55974aae8e98 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55974ab232d0 <col:43, line:371:5>
| |   `-ReturnStmt 0x55974ab232c0 <line:370:9, col:34>
| |     `-CallExpr 0x55974ab23288 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55974ab231a8 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55974ab23228 <col:21> 'const char *' lvalue ParmVar 0x55974aae8df0 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55974ab23248 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55974ab23268 <col:33> 'T' lvalue ParmVar 0x55974aae8e98 'x' 'T &'
| |-CXXMethodDecl 0x55974ac602c8 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, unsigned int &)'
| | |-TemplateArgument type 'unsigned int'
| | |-ParmVarDecl 0x55974ac600e0 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x55974ac601b8 <col:37, col:40> col:40 x 'unsigned int &'
| `-CXXMethodDecl 0x55974ac60c78 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, Timestamp &)'
|   |-TemplateArgument type 'Timestamp'
|   |-ParmVarDecl 0x55974ac60a90 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55974ac60b68 <col:37, col:40> col:40 x 'Timestamp &'
|-FunctionTemplateDecl 0x55974aae9378 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55974aae90b0 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55974aae92d8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55974aae9160 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aae9208 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55974ab23420 <col:45, line:375:5>
|     `-ReturnStmt 0x55974ab23410 <line:374:9, col:42>
|       `-CallExpr 0x55974ab233d8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab232f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab23378 <col:21> 'const char *' lvalue ParmVar 0x55974aae9160 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab23398 <col:30> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int'
|         `-DeclRefExpr 0x55974ab233b8 <col:41> 'T' lvalue ParmVar 0x55974aae9208 'x' 'T &'
|-FunctionTemplateDecl 0x55974aae96a8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55974aae93e0 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55974aae9608 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55974aae9490 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aae9538 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55974ab23570 <col:45, line:379:5>
|     `-ReturnStmt 0x55974ab23560 <line:378:9, col:43>
|       `-CallExpr 0x55974ab23528 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab23448 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab234c8 <col:21> 'const char *' lvalue ParmVar 0x55974aae9490 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab234e8 <col:30> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int'
|         `-DeclRefExpr 0x55974ab23508 <col:42> 'T' lvalue ParmVar 0x55974aae9538 'x' 'T &'
|-FunctionTemplateDecl 0x55974aae99d8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55974aae9710 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55974aae9938 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55974aae97c0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aae9868 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55974ab23770 <col:46, line:383:5>
|     `-ReturnStmt 0x55974ab23760 <line:382:9, col:55>
|       `-CallExpr 0x55974ab23728 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab23598 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab23618 <col:21> 'const char *' lvalue ParmVar 0x55974aae97c0 'keyword' 'const char *'
|         |-BinaryOperator 0x55974ab236e8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55974ab23698 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55974ab23678 <col:30> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55974ab236d0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55974ab236b0 <col:42> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55974ab23708 <col:54> 'T' lvalue ParmVar 0x55974aae9868 'x' 'T &'
|-FunctionTemplateDecl 0x55974aae9dd8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55974aae9a40 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55974aae9d38 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55974aae9af0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aae9b70 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55974aae9c18 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55974ab238b0 <col:54, line:388:5>
|     |-CallExpr 0x55974ab23838 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab23788 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55974ab237c8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55974ab237d8 <col:30> 'const char *' lvalue ParmVar 0x55974aae9af0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55974ab237f8 <col:39> 'int' lvalue ParmVar 0x55974aae9b70 'flags' 'int'
|     | `-DeclRefExpr 0x55974ab23818 <col:46> 'T' lvalue ParmVar 0x55974aae9c18 'x' 'T &'
|     `-ReturnStmt 0x55974ab238a0 <line:387:9, col:17>
|       `-UnaryOperator 0x55974ab23888 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab23878 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974aaea288 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55974aae9e48 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55974aae9ec8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55974aaea1e8 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55974aae9f88 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaea028 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55974aaea0c8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55974ab23a20 <col:74, line:403:5>
|     `-ReturnStmt 0x55974ab23a10 <line:402:9, col:56>
|       `-CallExpr 0x55974ab239d0 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab238e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab23950 <col:28> 'const char *' lvalue ParmVar 0x55974aae9f88 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab23970 <col:37> 'int' 0
|         |-DeclRefExpr 0x55974ab23990 <col:40> 'T' lvalue ParmVar 0x55974aaea028 'x' 'T &'
|         `-DeclRefExpr 0x55974ab239b0 <col:43> 'const V' lvalue ParmVar 0x55974aaea0c8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55974aaea6f8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55974aaea2f8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55974aaea378 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55974aaea658 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55974aaea438 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaea4d8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55974aaea578 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55974ab23b88 <col:76, line:407:5>
|     `-ReturnStmt 0x55974ab23b78 <line:406:9, col:65>
|       `-CallExpr 0x55974ab23b38 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab23a48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab23ab8 <col:28> 'const char *' lvalue ParmVar 0x55974aaea438 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab23ad8 <col:37> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int'
|         |-DeclRefExpr 0x55974ab23af8 <col:49> 'T' lvalue ParmVar 0x55974aaea4d8 'x' 'T &'
|         `-DeclRefExpr 0x55974ab23b18 <col:52> 'const V' lvalue ParmVar 0x55974aaea578 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55974aaef070 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55974aaea768 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55974aaea7e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55974aaeefd0 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55974aaea8a8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaea928 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55974aaea9c8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55974aaeaa68 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55974ab23cf0 <col:85, line:412:5>
|     |-CallExpr 0x55974ab23c70 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab23ba0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55974ab23be0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55974ab23bf0 <col:37> 'const char *' lvalue ParmVar 0x55974aaea8a8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55974ab23c10 <col:46> 'int' lvalue ParmVar 0x55974aaea928 'flags' 'int'
|     | |-DeclRefExpr 0x55974ab23c30 <col:53> 'T' lvalue ParmVar 0x55974aaea9c8 'x' 'T &'
|     | `-DeclRefExpr 0x55974ab23c50 <col:56> 'const V' lvalue ParmVar 0x55974aaeaa68 'default_value' 'const V &'
|     `-ReturnStmt 0x55974ab23ce0 <line:411:9, col:17>
|       `-UnaryOperator 0x55974ab23cc8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab23cb8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974aaef508 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55974aaef0e8 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaef168 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaef468 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaef228 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaef2a0 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaef348 <col:47, col:50> col:50 referenced x 'T &'
|   `-CompoundStmt 0x55974ab23e70 <col:53, line:425:5>
|     `-ReturnStmt 0x55974ab23e60 <line:424:9, col:42>
|       `-CallExpr 0x55974ab23e20 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab23d20 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab23da0 <col:21> 'const char *' lvalue ParmVar 0x55974aaef228 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab23dc0 <col:30> 'int' 0
|         |-DeclRefExpr 0x55974ab23de0 <col:33> 'P' lvalue ParmVar 0x55974aaef2a0 'parser' 'P'
|         `-DeclRefExpr 0x55974ab23e00 <col:41> 'T' lvalue ParmVar 0x55974aaef348 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaef958 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55974aaef578 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaef5f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaef8b8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaef6b8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaef730 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaef7d8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55974ab23fe8 <col:55, line:429:5>
|     `-ReturnStmt 0x55974ab23fd8 <line:428:9, col:50>
|       `-CallExpr 0x55974ab23f98 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab23e98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab23f18 <col:21> 'const char *' lvalue ParmVar 0x55974aaef6b8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab23f38 <col:30> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int'
|         |-DeclRefExpr 0x55974ab23f58 <col:41> 'P' lvalue ParmVar 0x55974aaef730 'parser' 'P'
|         `-DeclRefExpr 0x55974ab23f78 <col:49> 'T' lvalue ParmVar 0x55974aaef7d8 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaefda8 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55974aaef9c8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaefa48 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaefd08 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaefb08 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaefb80 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaefc28 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55974ab24160 <col:55, line:433:5>
|     `-ReturnStmt 0x55974ab24150 <line:432:9, col:51>
|       `-CallExpr 0x55974ab24110 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab24010 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab24090 <col:21> 'const char *' lvalue ParmVar 0x55974aaefb08 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab240b0 <col:30> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int'
|         |-DeclRefExpr 0x55974ab240d0 <col:42> 'P' lvalue ParmVar 0x55974aaefb80 'parser' 'P'
|         `-DeclRefExpr 0x55974ab240f0 <col:50> 'T' lvalue ParmVar 0x55974aaefc28 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaf01f8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55974aaefe18 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaefe98 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf0158 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaeff58 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaeffd0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf0078 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55974ab24388 <col:56, line:437:5>
|     `-ReturnStmt 0x55974ab24378 <line:436:9, col:63>
|       `-CallExpr 0x55974ab24338 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab24188 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab24208 <col:21> 'const char *' lvalue ParmVar 0x55974aaeff58 'keyword' 'const char *'
|         |-BinaryOperator 0x55974ab242d8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55974ab24288 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55974ab24268 <col:30> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55974ab242c0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55974ab242a0 <col:42> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55974ab242f8 <col:54> 'P' lvalue ParmVar 0x55974aaeffd0 'parser' 'P'
|         `-DeclRefExpr 0x55974ab24318 <col:62> 'T' lvalue ParmVar 0x55974aaf0078 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaf0728 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55974aaf0268 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf02e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf0688 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55974aaf03a8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf0428 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55974aaf04a0 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf0548 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55974ab244f0 <col:64, line:442:5>
|     |-CallExpr 0x55974ab24470 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab243a0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55974ab243e0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55974ab243f0 <col:30> 'const char *' lvalue ParmVar 0x55974aaf03a8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55974ab24410 <col:39> 'int' lvalue ParmVar 0x55974aaf0428 'flags' 'int'
|     | |-DeclRefExpr 0x55974ab24430 <col:46> 'P' lvalue ParmVar 0x55974aaf04a0 'parser' 'P'
|     | `-DeclRefExpr 0x55974ab24450 <col:54> 'T' lvalue ParmVar 0x55974aaf0548 'x' 'T &'
|     `-ReturnStmt 0x55974ab244e0 <line:441:9, col:17>
|       `-UnaryOperator 0x55974ab244c8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab244b8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974aaf0d28 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55974aaf07a0 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf0818 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55974aaf0898 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55974aaf0c88 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55974aaf0960 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf09d8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf0a78 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55974aaf0b48 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55974ab24688 <col:84, line:458:5>
|     `-ReturnStmt 0x55974ab24678 <line:457:9, col:64>
|       `-CallExpr 0x55974ab24630 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab24520 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab24590 <col:28> 'const char *' lvalue ParmVar 0x55974aaf0960 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab245b0 <col:37> 'int' 0
|         |-DeclRefExpr 0x55974ab245d0 <col:40> 'P' lvalue ParmVar 0x55974aaf09d8 'parser' 'P'
|         |-DeclRefExpr 0x55974ab245f0 <col:48> 'T' lvalue ParmVar 0x55974aaf0a78 'x' 'T &'
|         `-DeclRefExpr 0x55974ab24610 <col:51> 'const V' lvalue ParmVar 0x55974aaf0b48 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55974aaf12a8 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55974aaf0da0 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf0e18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55974aaf0e98 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55974aaf1208 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55974aaf0f60 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf0fd8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf1078 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55974aaf1118 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55974ab24818 <col:86, line:462:5>
|     `-ReturnStmt 0x55974ab24808 <line:461:9, col:73>
|       `-CallExpr 0x55974ab247c0 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab246b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab24720 <col:28> 'const char *' lvalue ParmVar 0x55974aaf0f60 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab24740 <col:37> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int'
|         |-DeclRefExpr 0x55974ab24760 <col:49> 'P' lvalue ParmVar 0x55974aaf0fd8 'parser' 'P'
|         |-DeclRefExpr 0x55974ab24780 <col:57> 'T' lvalue ParmVar 0x55974aaf1078 'x' 'T &'
|         `-DeclRefExpr 0x55974ab247a0 <col:60> 'const V' lvalue ParmVar 0x55974aaf1118 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55974aaf1908 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55974aaf1320 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf1398 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55974aaf1418 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55974aaf1868 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55974aaf14e0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf1560 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55974aaf15d8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf1678 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55974aaf1718 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55974ab249a8 <col:95, line:467:5>
|     |-CallExpr 0x55974ab24920 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab24830 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55974ab24870 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55974ab24880 <col:37> 'const char *' lvalue ParmVar 0x55974aaf14e0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55974ab248a0 <col:46> 'int' lvalue ParmVar 0x55974aaf1560 'flags' 'int'
|     | |-DeclRefExpr 0x55974ab248c0 <col:53> 'P' lvalue ParmVar 0x55974aaf15d8 'parser' 'P'
|     | |-DeclRefExpr 0x55974ab248e0 <col:61> 'T' lvalue ParmVar 0x55974aaf1678 'x' 'T &'
|     | `-DeclRefExpr 0x55974ab24900 <col:64> 'const V' lvalue ParmVar 0x55974aaf1718 'default_value' 'const V &'
|     `-ReturnStmt 0x55974ab24998 <line:466:9, col:17>
|       `-UnaryOperator 0x55974ab24980 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab24970 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974aaf1ee8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55974aaf1988 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf1a08 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55974aaf1a88 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55974aaf1e48 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55974aaf1b50 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf1bc8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf1c68 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55974aaf1d08 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55974ab24b50 <col:63, line:481:5>
|     `-ReturnStmt 0x55974ab24b40 <line:480:9, col:47>
|       `-CallExpr 0x55974ab24af8 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab249d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab24a58 <col:21> 'const char *' lvalue ParmVar 0x55974aaf1b50 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab24a78 <col:30> 'int' 0
|         |-DeclRefExpr 0x55974ab24a98 <col:33> 'P' lvalue ParmVar 0x55974aaf1bc8 'parser' 'P'
|         |-DeclRefExpr 0x55974ab24ab8 <col:41> 'T1' lvalue ParmVar 0x55974aaf1c68 'x1' 'T1 &'
|         `-DeclRefExpr 0x55974ab24ad8 <col:45> 'T2' lvalue ParmVar 0x55974aaf1d08 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55974aaf2468 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55974aaf1f60 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf1fd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55974aaf2058 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55974aaf23c8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55974aaf2120 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf2198 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf2238 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55974aaf22d8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55974ab24cf0 <col:65, line:485:5>
|     `-ReturnStmt 0x55974ab24ce0 <line:484:9, col:55>
|       `-CallExpr 0x55974ab24c98 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab24b78 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab24bf8 <col:21> 'const char *' lvalue ParmVar 0x55974aaf2120 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab24c18 <col:30> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int'
|         |-DeclRefExpr 0x55974ab24c38 <col:41> 'P' lvalue ParmVar 0x55974aaf2198 'parser' 'P'
|         |-DeclRefExpr 0x55974ab24c58 <col:49> 'T1' lvalue ParmVar 0x55974aaf2238 'x1' 'T1 &'
|         `-DeclRefExpr 0x55974ab24c78 <col:53> 'T2' lvalue ParmVar 0x55974aaf22d8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55974aaf29e8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55974aaf24e0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf2558 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55974aaf25d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55974aaf2948 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55974aaf26a0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf2718 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf27b8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55974aaf2858 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55974ab24e90 <col:65, line:489:5>
|     `-ReturnStmt 0x55974ab24e80 <line:488:9, col:56>
|       `-CallExpr 0x55974ab24e38 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab24d18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab24d98 <col:21> 'const char *' lvalue ParmVar 0x55974aaf26a0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab24db8 <col:30> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int'
|         |-DeclRefExpr 0x55974ab24dd8 <col:42> 'P' lvalue ParmVar 0x55974aaf2718 'parser' 'P'
|         |-DeclRefExpr 0x55974ab24df8 <col:50> 'T1' lvalue ParmVar 0x55974aaf27b8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55974ab24e18 <col:54> 'T2' lvalue ParmVar 0x55974aaf2858 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55974aaf2f68 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55974aaf2a60 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf2ad8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55974aaf2b58 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55974aaf2ec8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55974aaf2c20 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf2c98 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf2d38 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55974aaf2dd8 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55974ab250e0 <col:66, line:493:5>
|     `-ReturnStmt 0x55974ab250d0 <line:492:9, col:68>
|       `-CallExpr 0x55974ab25088 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab24eb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab24f38 <col:21> 'const char *' lvalue ParmVar 0x55974aaf2c20 'keyword' 'const char *'
|         |-BinaryOperator 0x55974ab25008 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55974ab24fb8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55974ab24f98 <col:30> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55974ab24ff0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55974ab24fd0 <col:42> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55974ab25028 <col:54> 'P' lvalue ParmVar 0x55974aaf2c98 'parser' 'P'
|         |-DeclRefExpr 0x55974ab25048 <col:62> 'T1' lvalue ParmVar 0x55974aaf2d38 'x1' 'T1 &'
|         `-DeclRefExpr 0x55974ab25068 <col:66> 'T2' lvalue ParmVar 0x55974aaf2dd8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55974aaf35c8 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55974aaf2fe0 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf3058 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55974aaf30d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55974aaf3528 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55974aaf31a0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf3220 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55974aaf3298 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf3338 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55974aaf33d8 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55974ab25270 <col:74, line:498:5>
|     |-CallExpr 0x55974ab251e8 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab250f8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55974ab25138 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55974ab25148 <col:30> 'const char *' lvalue ParmVar 0x55974aaf31a0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55974ab25168 <col:39> 'int' lvalue ParmVar 0x55974aaf3220 'flags' 'int'
|     | |-DeclRefExpr 0x55974ab25188 <col:46> 'P' lvalue ParmVar 0x55974aaf3298 'parser' 'P'
|     | |-DeclRefExpr 0x55974ab251a8 <col:54> 'T1' lvalue ParmVar 0x55974aaf3338 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55974ab251c8 <col:58> 'T2' lvalue ParmVar 0x55974aaf33d8 'x2' 'T2 &'
|     `-ReturnStmt 0x55974ab25260 <line:497:9, col:17>
|       `-UnaryOperator 0x55974ab25248 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab25238 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974aaf3928 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55974aaf3648 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974aaf3888 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55974aaf3700 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf3778 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55974ab253b8 <col:52, line:509:5>
|     `-ReturnStmt 0x55974ab253a8 <line:508:9, col:44>
|       `-CallExpr 0x55974ab25370 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab252a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab25310 <col:26> 'const char *' lvalue ParmVar 0x55974aaf3700 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab25330 <col:35> 'int' 0
|         `-DeclRefExpr 0x55974ab25350 <col:38> 'P' lvalue ParmVar 0x55974aaf3778 'parser' 'P'
|-FunctionTemplateDecl 0x55974aaf3c28 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55974aaf3990 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974aaf3b88 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55974aaf3a40 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf3ab8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55974ab254f8 <col:54, line:513:5>
|     `-ReturnStmt 0x55974ab254e8 <line:512:9, col:52>
|       `-CallExpr 0x55974ab254b0 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab253e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab25450 <col:26> 'const char *' lvalue ParmVar 0x55974aaf3a40 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab25470 <col:35> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int'
|         `-DeclRefExpr 0x55974ab25490 <col:46> 'P' lvalue ParmVar 0x55974aaf3ab8 'parser' 'P'
|-FunctionTemplateDecl 0x55974aaf3f28 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55974aaf3c90 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974aaf3e88 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55974aaf3d40 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf3db8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55974ab25638 <col:54, line:517:5>
|     `-ReturnStmt 0x55974ab25628 <line:516:9, col:53>
|       `-CallExpr 0x55974ab255f0 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab25520 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab25590 <col:26> 'const char *' lvalue ParmVar 0x55974aaf3d40 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab255b0 <col:35> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int'
|         `-DeclRefExpr 0x55974ab255d0 <col:47> 'P' lvalue ParmVar 0x55974aaf3db8 'parser' 'P'
|-FunctionTemplateDecl 0x55974aaf4228 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55974aaf3f90 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974aaf4188 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55974aaf4040 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf40b8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55974ab25828 <col:55, line:521:5>
|     `-ReturnStmt 0x55974ab25818 <line:520:9, col:65>
|       `-CallExpr 0x55974ab257e0 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab25660 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab256d0 <col:26> 'const char *' lvalue ParmVar 0x55974aaf4040 'keyword' 'const char *'
|         |-BinaryOperator 0x55974ab257a0 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55974ab25750 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55974ab25730 <col:35> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55974ab25788 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55974ab25768 <col:47> 'const int' lvalue Var 0x55974aae8a70 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55974ab257c0 <col:59> 'P' lvalue ParmVar 0x55974aaf40b8 'parser' 'P'
|-FunctionTemplateDecl 0x55974aaf45f8 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55974aaf4290 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974aaf4558 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55974aaf4340 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf43c0 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55974aaf4438 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55974ab25968 <col:63, line:526:5>
|     |-CallExpr 0x55974ab258f0 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab25840 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55974ab25880 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55974ab25890 <col:35> 'const char *' lvalue ParmVar 0x55974aaf4340 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55974ab258b0 <col:44> 'int' lvalue ParmVar 0x55974aaf43c0 'flags' 'int'
|     | `-DeclRefExpr 0x55974ab258d0 <col:51> 'P' lvalue ParmVar 0x55974aaf4438 'parser' 'P'
|     `-ReturnStmt 0x55974ab25958 <line:525:9, col:17>
|       `-UnaryOperator 0x55974ab25940 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab25930 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974aaf4a48 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55974aaf4668 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf46e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf49a8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaf47a8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf4820 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf48c8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55974ab25ac0 <col:58, line:541:5>
|     `-ReturnStmt 0x55974ab25ab0 <line:540:9, col:39>
|       `-CallExpr 0x55974ab25a78 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab25998 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab25a18 <col:21> 'const char *' lvalue ParmVar 0x55974aaf47a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab25a38 <col:30> 'P' lvalue ParmVar 0x55974aaf4820 'parser' 'P'
|         `-DeclRefExpr 0x55974ab25a58 <col:38> 'T' lvalue ParmVar 0x55974aaf48c8 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaf4e98 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55974aaf4ab8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf4b38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf4df8 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaf4bf8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf4c70 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf4d18 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55974ab25bf8 <col:60, line:545:5>
|     `-ReturnStmt 0x55974ab25be8 <line:544:9, col:41>
|       `-CallExpr 0x55974ab25bb0 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab25ae8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab25b50 <col:23> 'const char *' lvalue ParmVar 0x55974aaf4bf8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab25b70 <col:32> 'P' lvalue ParmVar 0x55974aaf4c70 'parser' 'P'
|         `-DeclRefExpr 0x55974ab25b90 <col:40> 'T' lvalue ParmVar 0x55974aaf4d18 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaf52e8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55974aaf4f08 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf4f88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf5248 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaf5048 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf50c0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf5168 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55974ab25d30 <col:60, line:549:5>
|     `-ReturnStmt 0x55974ab25d20 <line:548:9, col:41>
|       `-CallExpr 0x55974ab25ce8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab25c20 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab25c88 <col:23> 'const char *' lvalue ParmVar 0x55974aaf5048 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab25ca8 <col:32> 'P' lvalue ParmVar 0x55974aaf50c0 'parser' 'P'
|         `-DeclRefExpr 0x55974ab25cc8 <col:40> 'T' lvalue ParmVar 0x55974aaf5168 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaf5738 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55974aaf5358 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf53d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf5698 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaf5498 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf5510 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf55b8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55974ab25e68 <col:61, line:553:5>
|     `-ReturnStmt 0x55974ab25e58 <line:552:9, col:42>
|       `-CallExpr 0x55974ab25e20 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab25d58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab25dc0 <col:24> 'const char *' lvalue ParmVar 0x55974aaf5498 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab25de0 <col:33> 'P' lvalue ParmVar 0x55974aaf5510 'parser' 'P'
|         `-DeclRefExpr 0x55974ab25e00 <col:41> 'T' lvalue ParmVar 0x55974aaf55b8 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaf5c18 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55974aaf57a8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf5828 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf5b78 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55974aaf58e8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf5968 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55974aaf59e0 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf5a88 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55974ab25fe0 <col:69, line:557:5>
|     `-ReturnStmt 0x55974ab25fd0 <line:556:9, col:46>
|       `-CallExpr 0x55974ab25f90 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab25e90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab25f10 <col:21> 'const char *' lvalue ParmVar 0x55974aaf58e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab25f30 <col:30> 'int' lvalue ParmVar 0x55974aaf5968 'flags' 'int'
|         |-DeclRefExpr 0x55974ab25f50 <col:37> 'P' lvalue ParmVar 0x55974aaf59e0 'parser' 'P'
|         `-DeclRefExpr 0x55974ab25f70 <col:45> 'T' lvalue ParmVar 0x55974aaf5a88 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaf5f28 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55974aaf5c90 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974aaf5e88 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55974aaf5d40 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf5db8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55974ab26120 <col:56, line:571:5>
|     `-ReturnStmt 0x55974ab26110 <line:570:9, col:48>
|       `-CallExpr 0x55974ab260d8 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab26008 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab26078 <col:30> 'const char *' lvalue ParmVar 0x55974aaf5d40 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab26098 <col:39> 'int' 0
|         `-DeclRefExpr 0x55974ab260b8 <col:42> 'P' lvalue ParmVar 0x55974aaf5db8 'parser' 'P'
|-FunctionTemplateDecl 0x55974aaf62b8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55974aaf5f90 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974aaf6218 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55974aaf6040 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf60c0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55974aaf6138 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55974ab262f0 <col:67, line:576:5>
|     |-CallExpr 0x55974ab26278 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab26138 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55974ab26178 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55974ab26188 <col:39> 'const char *' lvalue ParmVar 0x55974aaf6040 'keyword' 'const char *'
|     | |-BinaryOperator 0x55974ab26238 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55974ab261e8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55974ab261a8 <col:48> 'int' lvalue ParmVar 0x55974aaf60c0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55974ab26220 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55974ab26200 <col:56> 'const int' lvalue Var 0x55974aae8c60 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55974ab26258 <col:68> 'P' lvalue ParmVar 0x55974aaf6138 'parser' 'P'
|     `-ReturnStmt 0x55974ab262e0 <line:575:9, col:17>
|       `-UnaryOperator 0x55974ab262c8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab262b8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974aaf6708 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55974aaf6328 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf63a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf6668 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55974aaf6468 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf64e0 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf6588 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55974ab26460 <col:62, line:592:5>
|     `-ReturnStmt 0x55974ab26450 <line:591:9, col:51>
|       `-CallExpr 0x55974ab26410 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab26320 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab26390 <col:30> 'const char *' lvalue ParmVar 0x55974aaf6468 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab263b0 <col:39> 'int' 0
|         |-DeclRefExpr 0x55974ab263d0 <col:42> 'P' lvalue ParmVar 0x55974aaf64e0 'parser' 'P'
|         `-DeclRefExpr 0x55974ab263f0 <col:50> 'T' lvalue ParmVar 0x55974aaf6588 'x' 'T &'
|-FunctionTemplateDecl 0x55974aaf6be8 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55974aaf6778 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf67f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974aaf6b48 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55974aaf68b8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf6938 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55974aaf69b0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55974aaf6a58 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55974ab26658 <col:73, line:597:5>
|     |-CallExpr 0x55974ab265d8 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab26478 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55974ab264b8 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55974ab264c8 <col:39> 'const char *' lvalue ParmVar 0x55974aaf68b8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55974ab26578 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55974ab26528 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55974ab264e8 <col:48> 'int' lvalue ParmVar 0x55974aaf6938 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55974ab26560 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55974ab26540 <col:56> 'const int' lvalue Var 0x55974aae8c60 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55974ab26598 <col:68> 'P' lvalue ParmVar 0x55974aaf69b0 'parser' 'P'
|     | `-DeclRefExpr 0x55974ab265b8 <col:76> 'T' lvalue ParmVar 0x55974aaf6a58 'x' 'T &'
|     `-ReturnStmt 0x55974ab26648 <line:596:9, col:17>
|       `-UnaryOperator 0x55974ab26630 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab26620 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974ab06f48 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55974aaf6c60 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974aaf6cd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974ab06ea8 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55974aaf6d98 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974aaf6e10 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55974ab06d80 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55974ab267c8 <col:65, line:614:5>
|     `-ReturnStmt 0x55974ab267b8 <line:613:9, col:46>
|       `-CallExpr 0x55974ab26778 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab26688 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab266f8 <col:25> 'const char *' lvalue ParmVar 0x55974aaf6d98 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab26718 <col:34> 'int' 0
|         |-DeclRefExpr 0x55974ab26738 <col:37> 'P' lvalue ParmVar 0x55974aaf6e10 'parser' 'P'
|         `-DeclRefExpr 0x55974ab26758 <col:45> 'Vector<T>' lvalue ParmVar 0x55974ab06d80 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55974ab07378 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55974ab06fb8 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55974ab072d8 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55974ab07070 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab071c0 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55974ab269e0 <col:55, line:618:5>
|     `-ReturnStmt 0x55974ab269d0 <line:617:9, col:55>
|       `-CallExpr 0x55974ab26990 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab267f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab26860 <col:25> 'const char *' lvalue ParmVar 0x55974ab07070 'keyword' 'const char *'
|         |-IntegerLiteral 0x55974ab26880 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55974ab26950 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55974ab26970 <col:54> 'Vector<T>' lvalue ParmVar 0x55974ab071c0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55974ab07948 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55974ab073e0 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974ab07458 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974ab078a8 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55974ab07518 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab07598 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab07610 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55974ab07760 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55974ab26bd8 <col:76, line:623:5>
|     |-CallExpr 0x55974ab26b58 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55974ab269f8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55974ab26a38 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55974ab26a48 <col:34> 'const char *' lvalue ParmVar 0x55974ab07518 'keyword' 'const char *'
|     | |-BinaryOperator 0x55974ab26af8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55974ab26aa8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55974ab26a68 <col:43> 'int' lvalue ParmVar 0x55974ab07598 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55974ab26ae0 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55974ab26ac0 <col:51> 'const int' lvalue Var 0x55974aae8c60 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55974ab26b18 <col:63> 'P' lvalue ParmVar 0x55974ab07610 'parser' 'P'
|     | `-DeclRefExpr 0x55974ab26b38 <col:71> 'Vector<T>' lvalue ParmVar 0x55974ab07760 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55974ab26bc8 <line:622:9, col:17>
|       `-UnaryOperator 0x55974ab26bb0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab26ba0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974ab07e88 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55974ab079c0 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974ab07a38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974ab07de8 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55974ab07af8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab07b78 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab07cc0 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55974ab26e40 <col:66, line:627:5>
|     `-ReturnStmt 0x55974ab26e30 <line:626:9, col:59>
|       `-CallExpr 0x55974ab26df0 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55974ab26c08 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55974ab26c78 <col:25> 'const char *' lvalue ParmVar 0x55974ab07af8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55974ab26c98 <col:34> 'int' lvalue ParmVar 0x55974ab07b78 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55974ab26db0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55974ab26dd0 <col:58> 'Vector<T>' lvalue ParmVar 0x55974ab07cc0 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55974ab07f18 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55974ab26ec0 <col:25, line:633:5>
|   `-ReturnStmt 0x55974ab26eb0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55974ab26e98 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55974ab26e68 <col:16> 'const bool' lvalue ->_status 0x55974ab0dd28
|         `-CXXThisExpr 0x55974ab26e58 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55974ab08098 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55974ab07fd0 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55974ab26fa8 <col:27, line:639:5>
|   |-BinaryOperator 0x55974ab26f50 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55974ab26ed8 <col:9> 'bool' lvalue ParmVar 0x55974ab07fd0 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55974ab26f38 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55974ab26f08 <col:13> 'bool' lvalue ->_status 0x55974ab0dd28
|   |     `-CXXThisExpr 0x55974ab26ef8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55974ab26f98 <line:638:9, col:17>
|     `-UnaryOperator 0x55974ab26f80 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974ab26f70 <col:17> 'Args *' this
|-CXXMethodDecl 0x55974ab08218 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55974ab08158 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55974ab27098 <col:39, line:644:5>
|   |-BinaryOperator 0x55974ab27040 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55974ab26fc8 <col:9> 'bool' lvalue ParmVar 0x55974ab08158 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55974ab27028 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55974ab26ff8 <col:13> 'const bool' lvalue ->_status 0x55974ab0dd28
|   |     `-CXXThisExpr 0x55974ab26fe8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55974ab27088 <line:643:9, col:17>
|     `-UnaryOperator 0x55974ab27070 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974ab27060 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55974ab082e0 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55974ab2b128 <col:30, line:651:5>
|   `-ReturnStmt 0x55974ab2b118 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55974ab2b100 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55974ab2b0d0 <col:16> 'bool' lvalue ->_read_status 0x55974aadfc50
|         `-ImplicitCastExpr 0x55974ab2b0b0 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55974ab270b8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55974ab08428 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55974ab08398 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55974ab2b230 <col:32, line:658:5>
|   |-BinaryOperator 0x55974ab2b1d8 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55974ab2b140 <col:9> 'bool' lvalue ParmVar 0x55974ab08398 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55974ab2b1c0 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55974ab2b190 <col:13> 'bool' lvalue ->_read_status 0x55974aadfc50
|   |     `-ImplicitCastExpr 0x55974ab2b170 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55974ab2b160 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55974ab2b220 <line:657:9, col:17>
|     `-UnaryOperator 0x55974ab2b208 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974ab2b1f8 <col:17> 'Args *' this
|-CXXMethodDecl 0x55974ab08578 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55974ab084e8 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55974ab2b340 <col:44, line:663:5>
|   |-BinaryOperator 0x55974ab2b2e8 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55974ab2b250 <col:9> 'bool' lvalue ParmVar 0x55974ab084e8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55974ab2b2d0 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55974ab2b2a0 <col:13> 'bool' lvalue ->_read_status 0x55974aadfc50
|   |     `-ImplicitCastExpr 0x55974ab2b280 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55974ab2b270 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55974ab2b330 <line:662:9, col:17>
|     `-UnaryOperator 0x55974ab2b318 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55974ab2b308 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55974ab08640 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55974ab08708 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55974ab087d0 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55974ab08898 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55974ab08ba8 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55974ab08938 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55974ab08b08 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55974ab08a18 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55974ab2b6f0 <col:19, line:706:5>
|     `-IfStmt 0x55974ab2b6c8 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55974ab2b438 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55974ab2b5f8 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55974ab2b5c8 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55974ab2b588 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55974ab2b490 <col:42> '<bound member function type>' ->simple_slot 0x55974ab22190
|       |     | `-CXXThisExpr 0x55974ab2b480 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55974ab2b528 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55974ab2b4e0 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55974a7eb098
|       |     | `-DeclRefExpr 0x55974ab2b4c0 <col:55> 'T' lvalue ParmVar 0x55974ab08a18 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55974ab2b568 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55974ab2b6b8 <line:705:13, col:34>
|         `-CallExpr 0x55974ab2b690 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55974ab2b618 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55974ab2b670 <col:33> 'T' lvalue ParmVar 0x55974ab08a18 'x' 'T &'
|-FunctionTemplateDecl 0x55974ab08e78 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55974ab08c08 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55974ab08dd8 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55974ab08ce8 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55974ab2bad0 <col:31, line:717:5>
|     |-DeclStmt 0x55974ab2b830 <line:713:9, col:23>
|     | `-VarDecl 0x55974ab2b718 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55974ab2b808 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55974ab2b790 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55974ab2b7e8 <col:21> 'T' lvalue ParmVar 0x55974ab08ce8 'x' 'T &'
|     |-IfStmt 0x55974ab2ba80 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55974ab2b928 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55974ab2ba60 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55974ab2ba00 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55974ab2b990 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|     |   | `-DeclRefExpr 0x55974ab2b970 <col:14> 'T *' lvalue Var 0x55974ab2b718 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55974ab2ba40 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55974ab2bab8 <line:716:9, col:16>
|       `-DeclRefExpr 0x55974ab2ba98 <col:16> 'T *' lvalue Var 0x55974ab2b718 's' 'T *'
|-FunctionTemplateDecl 0x55974ab09288 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55974ab08ed8 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55974ab08f58 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55974ab091e8 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55974ab09038 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55974ab090d8 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55974ab2bde0 <col:37, line:726:5>
|     |-IfStmt 0x55974ab2bd70 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55974ab2bd90 <line:723:13, col:26>
|     | | `-VarDecl 0x55974ab2bb38 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55974ab2bc28 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55974ab2bbb0 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55974ab2bc08 <col:25> 'T' lvalue ParmVar 0x55974ab09038 'x' 'T &'
|     | |-DeclRefExpr 0x55974ab2bc50 <col:16> 'T *' lvalue Var 0x55974ab2bb38 's' 'T *'
|     | `-BinaryOperator 0x55974ab2bd50 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55974ab2bd00 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55974ab2bc90 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|     |   | `-DeclRefExpr 0x55974ab2bc70 <col:14> 'T *' lvalue Var 0x55974ab2bb38 's' 'T *'
|     |   `-DeclRefExpr 0x55974ab2bd30 <col:18> 'const V' lvalue ParmVar 0x55974ab090d8 'value' 'const V &'
|     `-ReturnStmt 0x55974ab2bdd0 <line:725:9, col:17>
|       `-UnaryOperator 0x55974ab2bdb8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55974ab2bda8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55974ab09688 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55974ab092f0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55974ab095e8 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55974ab093a0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab09420 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab094c8 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55974ab2cc00 <col:65, line:737:5>
|     |-DeclStmt 0x55974ab2be78 <line:732:9, col:26>
|     | `-VarDecl 0x55974ab2be10 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55974ab2cbc8 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55974ab2cbe8 <line:733:13, col:58>
|       | `-VarDecl 0x55974ab2bea0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55974ab2c080 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55974ab2c050 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55974ab2c038 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55974ab2c018 <col:26, col:58> 'String' (CXXTemporary 0x55974ab2c018)
|       |           `-CXXMemberCallExpr 0x55974ab2bfa8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55974ab2bf18 <col:26> '<bound member function type>' ->find 0x55974ab217a8
|       |             | `-CXXThisExpr 0x55974ab2bf08 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55974ab2bfe0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55974ab2bf48 <col:31> 'const char *' lvalue ParmVar 0x55974ab093a0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55974ab2bff8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55974ab2bf68 <col:40> 'int' lvalue ParmVar 0x55974ab09420 'flags' 'int'
|       |             `-DeclRefExpr 0x55974ab2bf88 <col:47> 'Args::Slot *' lvalue Var 0x55974ab2be10 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55974ab2c138 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55974ab2c120 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55974ab2c100 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55974ab2c0d0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|       |       `-ImplicitCastExpr 0x55974ab2c0b8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55974ab2c098 <col:20> 'String' lvalue Var 0x55974ab2bea0 'str' 'String'
|       `-CompoundStmt 0x55974ab2cba8 <col:61, line:736:9>
|         |-DeclStmt 0x55974ab2c5f0 <line:734:13, col:76>
|         | `-VarDecl 0x55974ab2c188 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55974ab2c5c0 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55974ab2c530 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55974ab2c578 <col:60> 'T' lvalue ParmVar 0x55974ab094c8 'variable' 'T &'
|         |     `-UnaryOperator 0x55974ab2c5a8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55974ab2c598 <col:71> 'Args *' this
|         `-CallExpr 0x55974ab2cb78 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55974ab2c618 <col:13> '<bound member function type>' ->postparse 0x55974ab219b8
|           | `-CXXThisExpr 0x55974ab2c608 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55974ab2cb38 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55974ab2c648 <col:23> 'T *' lvalue Var 0x55974ab2c188 's' 'T *'
|           | `-CallExpr 0x55974ab2caf8 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55974ab2c8d0 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55974ab2c9d0 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55974ab2c9f0 <col:86> 'String' lvalue Var 0x55974ab2bea0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55974ab2caa0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55974ab2ca30 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|           |   | `-DeclRefExpr 0x55974ab2ca10 <col:92> 'T *' lvalue Var 0x55974ab2c188 's' 'T *'
|           |   `-UnaryOperator 0x55974ab2cae0 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55974ab2cad0 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55974ab2cb58 <col:103> 'Args::Slot *' lvalue Var 0x55974ab2be10 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55974ab09bd8 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55974ab096f8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55974ab09778 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55974ab09b38 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55974ab09838 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab098b8 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab09958 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55974ab099f8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55974ab2daa0 <col:88, line:745:5>
|     |-DeclStmt 0x55974ab2cc98 <line:741:9, col:26>
|     | `-VarDecl 0x55974ab2cc30 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55974ab2ceb8 <line:742:9, col:55>
|     | `-VarDecl 0x55974ab2ccc0 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55974ab2cea0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55974ab2ce70 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55974ab2ce58 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55974ab2ce38 <col:22, col:54> 'String' (CXXTemporary 0x55974ab2ce38)
|     |           `-CXXMemberCallExpr 0x55974ab2cdc8 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55974ab2cd38 <col:22> '<bound member function type>' ->find 0x55974ab217a8
|     |             | `-CXXThisExpr 0x55974ab2cd28 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55974ab2ce00 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55974ab2cd68 <col:27> 'const char *' lvalue ParmVar 0x55974ab09838 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55974ab2ce18 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55974ab2cd88 <col:36> 'int' lvalue ParmVar 0x55974ab098b8 'flags' 'int'
|     |             `-DeclRefExpr 0x55974ab2cda8 <col:43> 'Args::Slot *' lvalue Var 0x55974ab2cc30 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55974ab2d290 <line:743:9, col:72>
|     | `-VarDecl 0x55974ab2cf08 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55974ab2d260 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55974ab2d1d0 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55974ab2d218 <col:56> 'T' lvalue ParmVar 0x55974ab09958 'variable' 'T &'
|     |     `-UnaryOperator 0x55974ab2d248 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55974ab2d238 <col:67> 'Args *' this
|     `-CallExpr 0x55974ab2da70 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55974ab2d2b8 <col:9> '<bound member function type>' ->postparse 0x55974ab219b8
|       | `-CXXThisExpr 0x55974ab2d2a8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55974ab2da30 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55974ab2d2e8 <col:19> 'T *' lvalue Var 0x55974ab2cf08 's' 'T *'
|       | `-ParenExpr 0x55974ab2da10 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55974ab2d9e0 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55974ab2d9c8 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55974ab2d9b0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55974ab2d990 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55974ab2d960 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|       |     |       `-ImplicitCastExpr 0x55974ab2d948 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55974ab2d308 <col:25> 'String' lvalue Var 0x55974ab2ccc0 'str' 'String'
|       |     |-CallExpr 0x55974ab2d7b8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55974ab2d590 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55974ab2d690 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55974ab2d6b0 <col:89> 'String' lvalue Var 0x55974ab2ccc0 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55974ab2d760 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55974ab2d6f0 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|       |     | | `-DeclRefExpr 0x55974ab2d6d0 <col:95> 'T *' lvalue Var 0x55974ab2cf08 's' 'T *'
|       |     | `-UnaryOperator 0x55974ab2d7a0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55974ab2d790 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55974ab2d928 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55974ab2d908 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55974ab2d8d8 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55974ab2d888 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55974ab2d818 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|       |         | | `-DeclRefExpr 0x55974ab2d7f8 <col:109> 'T *' lvalue Var 0x55974ab2cf08 's' 'T *'
|       |         | `-DeclRefExpr 0x55974ab2d8b8 <col:113> 'const V' lvalue ParmVar 0x55974ab099f8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55974ab2d8f8 <col:120> 'bool' true
|       `-DeclRefExpr 0x55974ab2da50 <col:128> 'Args::Slot *' lvalue Var 0x55974ab2cc30 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55974ab0a108 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55974ab09c50 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974ab09cc8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974ab0a068 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55974ab09d88 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab09e08 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab09e80 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55974ab09f28 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55974ab2e698 <col:75, line:754:5>
|     |-DeclStmt 0x55974ab2db48 <line:749:9, col:26>
|     | `-VarDecl 0x55974ab2dae0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55974ab2e660 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55974ab2e680 <line:750:13, col:58>
|       | `-VarDecl 0x55974ab2db70 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55974ab2dd50 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55974ab2dd20 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55974ab2dd08 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55974ab2dce8 <col:26, col:58> 'String' (CXXTemporary 0x55974ab2dce8)
|       |           `-CXXMemberCallExpr 0x55974ab2dc78 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55974ab2dbe8 <col:26> '<bound member function type>' ->find 0x55974ab217a8
|       |             | `-CXXThisExpr 0x55974ab2dbd8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55974ab2dcb0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55974ab2dc18 <col:31> 'const char *' lvalue ParmVar 0x55974ab09d88 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55974ab2dcc8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55974ab2dc38 <col:40> 'int' lvalue ParmVar 0x55974ab09e08 'flags' 'int'
|       |             `-DeclRefExpr 0x55974ab2dc58 <col:47> 'Args::Slot *' lvalue Var 0x55974ab2dae0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55974ab2de08 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55974ab2ddf0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55974ab2ddd0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55974ab2dda0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|       |       `-ImplicitCastExpr 0x55974ab2dd88 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55974ab2dd68 <col:20> 'String' lvalue Var 0x55974ab2db70 'str' 'String'
|       `-CompoundStmt 0x55974ab2e640 <col:61, line:753:9>
|         |-DeclStmt 0x55974ab2e1e0 <line:751:13, col:63>
|         | `-VarDecl 0x55974ab2de58 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55974ab2e1b0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55974ab2e120 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55974ab2e168 <col:47> 'T' lvalue ParmVar 0x55974ab09f28 'variable' 'T &'
|         |     `-UnaryOperator 0x55974ab2e198 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55974ab2e188 <col:58> 'Args *' this
|         `-CallExpr 0x55974ab2e610 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55974ab2e208 <col:13> '<bound member function type>' ->postparse 0x55974ab219b8
|           | `-CXXThisExpr 0x55974ab2e1f8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55974ab2e5d0 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55974ab2e238 <col:23> 'T *' lvalue Var 0x55974ab2de58 's' 'T *'
|           | `-CallExpr 0x55974ab2e590 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55974ab2e420 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55974ab2e468 <col:56> 'P' lvalue ParmVar 0x55974ab09e80 'parser' 'P'
|           |   |-DeclRefExpr 0x55974ab2e488 <col:64> 'String' lvalue Var 0x55974ab2db70 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55974ab2e538 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55974ab2e4c8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|           |   | `-DeclRefExpr 0x55974ab2e4a8 <col:70> 'T *' lvalue Var 0x55974ab2de58 's' 'T *'
|           |   `-UnaryOperator 0x55974ab2e578 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55974ab2e568 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55974ab2e5f0 <col:81> 'Args::Slot *' lvalue Var 0x55974ab2dae0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55974ab0a768 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55974ab0a180 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55974ab0a1f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55974ab0a278 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55974ab0a6c8 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55974ab0a340 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab0a3c0 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab0a438 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55974ab0a4d8 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55974ab0a578 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55974ab2f428 <col:98, line:762:5>
|     |-DeclStmt 0x55974ab2e730 <line:758:9, col:26>
|     | `-VarDecl 0x55974ab2e6c8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55974ab2e950 <line:759:9, col:55>
|     | `-VarDecl 0x55974ab2e758 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55974ab2e938 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55974ab2e908 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55974ab2e8f0 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55974ab2e8d0 <col:22, col:54> 'String' (CXXTemporary 0x55974ab2e8d0)
|     |           `-CXXMemberCallExpr 0x55974ab2e860 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55974ab2e7d0 <col:22> '<bound member function type>' ->find 0x55974ab217a8
|     |             | `-CXXThisExpr 0x55974ab2e7c0 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55974ab2e898 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55974ab2e800 <col:27> 'const char *' lvalue ParmVar 0x55974ab0a340 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55974ab2e8b0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55974ab2e820 <col:36> 'int' lvalue ParmVar 0x55974ab0a3c0 'flags' 'int'
|     |             `-DeclRefExpr 0x55974ab2e840 <col:43> 'Args::Slot *' lvalue Var 0x55974ab2e6c8 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55974ab2ed70 <line:760:9, col:59>
|     | `-VarDecl 0x55974ab2e9a8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55974ab2ed40 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55974ab2ecb0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55974ab2ecf8 <col:43> 'T' lvalue ParmVar 0x55974ab0a4d8 'variable' 'T &'
|     |     `-UnaryOperator 0x55974ab2ed28 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55974ab2ed18 <col:54> 'Args *' this
|     `-CallExpr 0x55974ab2f3f8 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55974ab2ed98 <col:9> '<bound member function type>' ->postparse 0x55974ab219b8
|       | `-CXXThisExpr 0x55974ab2ed88 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55974ab2f3b8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55974ab2edc8 <col:19> 'T *' lvalue Var 0x55974ab2e9a8 's' 'T *'
|       | `-ParenExpr 0x55974ab2f398 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55974ab2f368 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55974ab2f350 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55974ab2f338 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55974ab2f318 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55974ab2f2e8 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|       |     |       `-ImplicitCastExpr 0x55974ab2f2d0 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55974ab2ede8 <col:25> 'String' lvalue Var 0x55974ab2e758 'str' 'String'
|       |     |-CallExpr 0x55974ab2f140 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55974ab2efd0 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55974ab2f018 <col:59> 'P' lvalue ParmVar 0x55974ab0a438 'parser' 'P'
|       |     | |-DeclRefExpr 0x55974ab2f038 <col:67> 'String' lvalue Var 0x55974ab2e758 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55974ab2f0e8 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55974ab2f078 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|       |     | | `-DeclRefExpr 0x55974ab2f058 <col:73> 'T *' lvalue Var 0x55974ab2e9a8 's' 'T *'
|       |     | `-UnaryOperator 0x55974ab2f128 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55974ab2f118 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55974ab2f2b0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55974ab2f290 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55974ab2f260 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55974ab2f210 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55974ab2f1a0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|       |         | | `-DeclRefExpr 0x55974ab2f180 <col:87> 'T *' lvalue Var 0x55974ab2e9a8 's' 'T *'
|       |         | `-DeclRefExpr 0x55974ab2f240 <col:91> 'const V' lvalue ParmVar 0x55974ab0a578 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55974ab2f280 <col:98> 'bool' true
|       `-DeclRefExpr 0x55974ab2f3d8 <col:106> 'Args::Slot *' lvalue Var 0x55974ab2e6c8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55974ab0add8 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55974ab0a7e8 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974ab0a868 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55974ab0a8e8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55974ab0ad38 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55974ab0a9b0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab0aa30 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab0aaa8 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55974ab0ab48 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55974ab0abe8 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55974ab30408 <col:60, line:773:5>
|     |-DeclStmt 0x55974ab2f4d0 <line:767:9, col:26>
|     | `-VarDecl 0x55974ab2f468 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55974ab303d0 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55974ab303f0 <line:768:13, col:58>
|       | `-VarDecl 0x55974ab2f4f8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55974ab2f6d8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55974ab2f6a8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55974ab2f690 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55974ab2f670 <col:26, col:58> 'String' (CXXTemporary 0x55974ab2f670)
|       |           `-CXXMemberCallExpr 0x55974ab2f600 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55974ab2f570 <col:26> '<bound member function type>' ->find 0x55974ab217a8
|       |             | `-CXXThisExpr 0x55974ab2f560 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55974ab2f638 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55974ab2f5a0 <col:31> 'const char *' lvalue ParmVar 0x55974ab0a9b0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55974ab2f650 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55974ab2f5c0 <col:40> 'int' lvalue ParmVar 0x55974ab0aa30 'flags' 'int'
|       |             `-DeclRefExpr 0x55974ab2f5e0 <col:47> 'Args::Slot *' lvalue Var 0x55974ab2f468 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55974ab2f790 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55974ab2f778 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55974ab2f758 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55974ab2f728 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|       |       `-ImplicitCastExpr 0x55974ab2f710 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55974ab2f6f0 <col:20> 'String' lvalue Var 0x55974ab2f4f8 'str' 'String'
|       `-CompoundStmt 0x55974ab303a8 <col:61, line:772:9>
|         |-DeclStmt 0x55974ab2fad0 <line:769:13, col:66>
|         | `-VarDecl 0x55974ab2f7e8 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55974ab2faa0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55974ab2fa10 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55974ab2fa58 <col:49> 'T1' lvalue ParmVar 0x55974ab0ab48 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55974ab2fa88 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55974ab2fa78 <col:61> 'Args *' this
|         |-DeclStmt 0x55974ab2fe40 <line:770:13, col:66>
|         | `-VarDecl 0x55974ab2fb58 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55974ab2fe10 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55974ab2fd80 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55974ab2fdc8 <col:49> 'T2' lvalue ParmVar 0x55974ab0abe8 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55974ab2fdf8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55974ab2fde8 <col:61> 'Args *' this
|         `-CallExpr 0x55974ab30378 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55974ab2fe68 <col:13> '<bound member function type>' ->postparse 0x55974ab219b8
|           | `-CXXThisExpr 0x55974ab2fe58 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55974ab30338 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55974ab2fed8 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55974ab2fe98 <col:23> 'T1 *' lvalue Var 0x55974ab2f7e8 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55974ab2feb8 <col:29> 'T2 *' lvalue Var 0x55974ab2fb58 's2' 'T2 *'
|           | `-CallExpr 0x55974ab302f0 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55974ab300c0 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55974ab30108 <col:63> 'P' lvalue ParmVar 0x55974ab0aaa8 'parser' 'P'
|           |   |-DeclRefExpr 0x55974ab30128 <col:71> 'String' lvalue Var 0x55974ab2f4f8 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55974ab301d8 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55974ab30168 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|           |   | `-DeclRefExpr 0x55974ab30148 <col:77> 'T1 *' lvalue Var 0x55974ab2f7e8 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55974ab30298 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55974ab30228 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|           |   | `-DeclRefExpr 0x55974ab30208 <col:82> 'T2 *' lvalue Var 0x55974ab2fb58 's2' 'T2 *'
|           |   `-UnaryOperator 0x55974ab302d8 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55974ab302c8 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55974ab30358 <col:94> 'Args::Slot *' lvalue Var 0x55974ab2f468 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55974ab0b1c8 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55974ab0ae58 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974ab0b128 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55974ab0af10 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab0af90 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab0b008 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55974ab30920 <col:67, line:780:5>
|     |-DeclStmt 0x55974ab304a0 <line:777:9, col:26>
|     | `-VarDecl 0x55974ab30438 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55974ab308e8 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55974ab30908 <line:778:13, col:58>
|       | `-VarDecl 0x55974ab304c8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55974ab306a8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55974ab30678 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55974ab30660 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55974ab30640 <col:26, col:58> 'String' (CXXTemporary 0x55974ab30640)
|       |           `-CXXMemberCallExpr 0x55974ab305d0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55974ab30540 <col:26> '<bound member function type>' ->find 0x55974ab217a8
|       |             | `-CXXThisExpr 0x55974ab30530 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55974ab30608 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55974ab30570 <col:31> 'const char *' lvalue ParmVar 0x55974ab0af10 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55974ab30620 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55974ab30590 <col:40> 'int' lvalue ParmVar 0x55974ab0af90 'flags' 'int'
|       |             `-DeclRefExpr 0x55974ab305b0 <col:47> 'Args::Slot *' lvalue Var 0x55974ab30438 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55974ab30760 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55974ab30748 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55974ab30728 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55974ab306f8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|       |       `-ImplicitCastExpr 0x55974ab306e0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55974ab306c0 <col:20> 'String' lvalue Var 0x55974ab304c8 'str' 'String'
|       `-CallExpr 0x55974ab308b8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55974ab30788 <col:13> '<bound member function type>' ->postparse 0x55974ab219b8
|         | `-CXXThisExpr 0x55974ab30778 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55974ab30868 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55974ab307d8 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55974ab307b8 <col:23> 'P' lvalue ParmVar 0x55974ab0b008 'parser' 'P'
|         | |-DeclRefExpr 0x55974ab30820 <col:36> 'String' lvalue Var 0x55974ab304c8 'str' 'String'
|         | `-UnaryOperator 0x55974ab30850 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55974ab30840 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55974ab30898 <col:49> 'Args::Slot *' lvalue Var 0x55974ab30438 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55974ab0b568 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55974ab0b238 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55974ab0b4c8 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55974ab0b2f0 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab0b370 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab0b3e8 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55974ab31290 <col:71, line:792:5>
|     |-DeclStmt 0x55974ab309b8 <line:784:9, col:26>
|     | `-VarDecl 0x55974ab30950 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55974ab30a88 <line:785:9, col:29>
|     | `-VarDecl 0x55974ab309e8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55974ab30a70 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55974ab30a50 <col:28> 'int' 1
|     |-WhileStmt 0x55974ab31140 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55974ab31160 <line:786:16, col:61>
|     | | `-VarDecl 0x55974ab30ab0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55974ab30c90 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55974ab30c60 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55974ab30c48 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55974ab30c28 <col:29, col:61> 'String' (CXXTemporary 0x55974ab30c28)
|     | |           `-CXXMemberCallExpr 0x55974ab30bb8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55974ab30b28 <col:29> '<bound member function type>' ->find 0x55974ab217a8
|     | |             | `-CXXThisExpr 0x55974ab30b18 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55974ab30bf0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55974ab30b58 <col:34> 'const char *' lvalue ParmVar 0x55974ab0b2f0 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55974ab30c08 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55974ab30b78 <col:43> 'int' lvalue ParmVar 0x55974ab0b370 'flags' 'int'
|     | |             `-DeclRefExpr 0x55974ab30b98 <col:50> 'Args::Slot *' lvalue Var 0x55974ab30950 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55974ab30d48 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55974ab30d30 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55974ab30d10 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55974ab30ce0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|     | |       `-ImplicitCastExpr 0x55974ab30cc8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55974ab30ca8 <col:23> 'String' lvalue Var 0x55974ab30ab0 'str' 'String'
|     | `-CompoundStmt 0x55974ab31118 <col:64, line:790:9>
|     |   |-CallExpr 0x55974ab30ea0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55974ab30d70 <col:13> '<bound member function type>' ->postparse 0x55974ab219b8
|     |   | | `-CXXThisExpr 0x55974ab30d60 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55974ab30e50 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55974ab30dc0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55974ab30da0 <col:23> 'P' lvalue ParmVar 0x55974ab0b3e8 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55974ab30e08 <col:36> 'String' lvalue Var 0x55974ab30ab0 'str' 'String'
|     |   | | `-UnaryOperator 0x55974ab30e38 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55974ab30e28 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55974ab30e80 <col:49> 'Args::Slot *' lvalue Var 0x55974ab30950 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55974ab31038 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55974ab30ed0 <col:13> 'int' lvalue Var 0x55974ab309e8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55974ab31020 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55974ab31000 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55974ab30f68 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55974ab30f48 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55974ab30f30 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55974ab30ef0 <col:28> 'int' lvalue Var 0x55974ab309e8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55974ab30f10 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55974ab30fe8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55974ab30fb8 <col:49> 'bool' lvalue ->_read_status 0x55974aadfc50
|     |   |         `-ImplicitCastExpr 0x55974ab30f98 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55974ab30f88 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55974ab310e8 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55974ab31058 <col:13> 'int' lvalue ParmVar 0x55974ab0b370 'flags' 'int'
|     |     `-UnaryOperator 0x55974ab310d0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55974ab310b8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55974ab31098 <col:23> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55974ab31270 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55974ab311a8 <col:9> 'bool' lvalue ->_read_status 0x55974aadfc50
|       | `-ImplicitCastExpr 0x55974ab31188 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55974ab31178 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55974ab31250 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55974ab31230 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55974ab31218 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55974ab311d8 <col:25> 'int' lvalue Var 0x55974ab309e8 'read_status' 'int'
|           `-IntegerLiteral 0x55974ab311f8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55974ab0ba48 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55974ab0b5d8 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974ab0b658 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974ab0b9a8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55974ab0b718 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab0b798 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab0b810 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55974ab0b8b8 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55974ab32220 <col:84, line:805:5>
|     |-DeclStmt 0x55974ab31338 <line:796:9, col:26>
|     | `-VarDecl 0x55974ab312d0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55974ab31408 <line:797:9, col:29>
|     | `-VarDecl 0x55974ab31368 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55974ab313f0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55974ab313d0 <col:28> 'int' 1
|     |-DeclStmt 0x55974ab31740 <line:798:9, col:71>
|     | `-VarDecl 0x55974ab31458 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55974ab31710 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55974ab31680 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55974ab316c8 <col:55> 'T' lvalue ParmVar 0x55974ab0b8b8 'variable' 'T &'
|     |     `-UnaryOperator 0x55974ab316f8 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55974ab316e8 <col:66> 'Args *' this
|     |-WhileStmt 0x55974ab320d0 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55974ab320f0 <line:799:16, col:61>
|     | | `-VarDecl 0x55974ab31768 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55974ab31948 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55974ab31918 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55974ab31900 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55974ab318e0 <col:29, col:61> 'String' (CXXTemporary 0x55974ab318e0)
|     | |           `-CXXMemberCallExpr 0x55974ab31870 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55974ab317e0 <col:29> '<bound member function type>' ->find 0x55974ab217a8
|     | |             | `-CXXThisExpr 0x55974ab317d0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55974ab318a8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55974ab31810 <col:34> 'const char *' lvalue ParmVar 0x55974ab0b718 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55974ab318c0 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55974ab31830 <col:43> 'int' lvalue ParmVar 0x55974ab0b798 'flags' 'int'
|     | |             `-DeclRefExpr 0x55974ab31850 <col:50> 'Args::Slot *' lvalue Var 0x55974ab312d0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55974ab31a00 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55974ab319e8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55974ab319c8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55974ab31998 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|     | |       `-ImplicitCastExpr 0x55974ab31980 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55974ab31960 <col:23> 'String' lvalue Var 0x55974ab31768 'str' 'String'
|     | `-CompoundStmt 0x55974ab320a8 <col:64, line:803:9>
|     |   |-CallExpr 0x55974ab31e30 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55974ab31a28 <col:13> '<bound member function type>' ->postparse 0x55974ab219b8
|     |   | | `-CXXThisExpr 0x55974ab31a18 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55974ab31df0 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55974ab31a58 <col:23> 'T *' lvalue Var 0x55974ab31458 's' 'T *'
|     |   | | `-CallExpr 0x55974ab31db0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55974ab31c40 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55974ab31c88 <col:56> 'P' lvalue ParmVar 0x55974ab0b810 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55974ab31ca8 <col:64> 'String' lvalue Var 0x55974ab31768 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55974ab31d58 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55974ab31ce8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|     |   | |   | `-DeclRefExpr 0x55974ab31cc8 <col:70> 'T *' lvalue Var 0x55974ab31458 's' 'T *'
|     |   | |   `-UnaryOperator 0x55974ab31d98 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55974ab31d88 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55974ab31e10 <col:81> 'Args::Slot *' lvalue Var 0x55974ab312d0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55974ab31fc8 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55974ab31e60 <col:13> 'int' lvalue Var 0x55974ab31368 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55974ab31fb0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55974ab31f90 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55974ab31ef8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55974ab31ed8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55974ab31ec0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55974ab31e80 <col:28> 'int' lvalue Var 0x55974ab31368 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55974ab31ea0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55974ab31f78 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55974ab31f48 <col:49> 'bool' lvalue ->_read_status 0x55974aadfc50
|     |   |         `-ImplicitCastExpr 0x55974ab31f28 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55974ab31f18 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55974ab32078 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55974ab31fe8 <col:13> 'int' lvalue ParmVar 0x55974ab0b798 'flags' 'int'
|     |     `-UnaryOperator 0x55974ab32060 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55974ab32048 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55974ab32028 <col:23> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55974ab32200 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55974ab32138 <col:9> 'bool' lvalue ->_read_status 0x55974aadfc50
|       | `-ImplicitCastExpr 0x55974ab32118 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55974ab32108 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55974ab321e0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55974ab321c0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55974ab321a8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55974ab32168 <col:25> 'int' lvalue Var 0x55974ab31368 'read_status' 'int'
|           `-IntegerLiteral 0x55974ab32188 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55974ab0c028 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55974ab0bac0 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55974ab0bb38 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55974ab0bf88 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55974ab0bbf8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55974ab0bc78 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55974ab0bcf0 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55974ab0be40 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55974ab33028 <col:87, line:821:5>
|     |-DeclStmt 0x55974ab322d0 <line:809:9, col:26>
|     | `-VarDecl 0x55974ab32268 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55974ab323a0 <line:810:9, col:29>
|     | `-VarDecl 0x55974ab32300 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55974ab32388 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55974ab32368 <col:28> 'int' 1
|     |-DeclStmt 0x55974ab325e8 <line:811:9, col:38>
|     | `-VarDecl 0x55974ab324d0 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55974ab325c0 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55974ab32548 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55974ab325a0 <col:29> 'Vector<T>' lvalue ParmVar 0x55974ab0be40 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55974ab32ed8 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55974ab32ef8 <line:812:16, col:61>
|     | | `-VarDecl 0x55974ab32610 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55974ab327f0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55974ab327c0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55974ab327a8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55974ab32788 <col:29, col:61> 'String' (CXXTemporary 0x55974ab32788)
|     | |           `-CXXMemberCallExpr 0x55974ab32718 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55974ab32688 <col:29> '<bound member function type>' ->find 0x55974ab217a8
|     | |             | `-CXXThisExpr 0x55974ab32678 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55974ab32750 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55974ab326b8 <col:34> 'const char *' lvalue ParmVar 0x55974ab0bbf8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55974ab32768 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55974ab326d8 <col:43> 'int' lvalue ParmVar 0x55974ab0bc78 'flags' 'int'
|     | |             `-DeclRefExpr 0x55974ab326f8 <col:50> 'Args::Slot *' lvalue Var 0x55974ab32268 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55974ab328a8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55974ab32890 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55974ab32870 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55974ab32840 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55974a7ae068
|     | |       `-ImplicitCastExpr 0x55974ab32828 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55974ab32808 <col:23> 'String' lvalue Var 0x55974ab32610 'str' 'String'
|     | `-CompoundStmt 0x55974ab32ea0 <col:64, line:819:9>
|     |   |-DeclStmt 0x55974ab32968 <line:813:13, col:23>
|     |   | `-VarDecl 0x55974ab328d0 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55974ab32948 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55974ab32ae8 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55974ab32990 <col:13> '<bound member function type>' ->postparse 0x55974ab219b8
|     |   | | `-CXXThisExpr 0x55974ab32980 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55974ab32a90 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55974ab329e0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55974ab329c0 <col:23> 'P' lvalue ParmVar 0x55974ab0bcf0 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55974ab32a28 <col:36> 'String' lvalue Var 0x55974ab32610 'str' 'String'
|     |   | | |-DeclRefExpr 0x55974ab32a48 <col:41> 'T' lvalue Var 0x55974ab328d0 'sx' 'T'
|     |   | | `-UnaryOperator 0x55974ab32a78 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55974ab32a68 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55974ab32ac8 <col:53> 'Args::Slot *' lvalue Var 0x55974ab32268 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55974ab32c40 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55974ab32b78 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55974ab32b48 <col:17> 'bool' lvalue ->_read_status 0x55974aadfc50
|     |   | |   `-ImplicitCastExpr 0x55974ab32b28 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55974ab32b18 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55974ab32c18 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55974ab32bb0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55974ab32b90 <col:17> 'Vector<T> *' lvalue Var 0x55974ab324d0 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55974ab32bf8 <col:30> 'T' lvalue Var 0x55974ab328d0 'sx' 'T'
|     |   |-BinaryOperator 0x55974ab32dc0 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55974ab32c58 <col:13> 'int' lvalue Var 0x55974ab32300 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55974ab32da8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55974ab32d88 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55974ab32cf0 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55974ab32cd0 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55974ab32cb8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55974ab32c78 <col:28> 'int' lvalue Var 0x55974ab32300 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55974ab32c98 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55974ab32d70 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55974ab32d40 <col:49> 'bool' lvalue ->_read_status 0x55974aadfc50
|     |   |         `-ImplicitCastExpr 0x55974ab32d20 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55974ab32d10 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55974ab32e70 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55974ab32de0 <col:13> 'int' lvalue ParmVar 0x55974ab0bc78 'flags' 'int'
|     |     `-UnaryOperator 0x55974ab32e58 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55974ab32e40 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55974ab32e20 <col:23> 'const int' lvalue Var 0x55974aae8978 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55974ab33008 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55974ab32f40 <col:9> 'bool' lvalue ->_read_status 0x55974aadfc50
|       | `-ImplicitCastExpr 0x55974ab32f20 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55974ab32f10 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55974ab32fe8 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55974ab32fc8 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55974ab32fb0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55974ab32f70 <col:25> 'int' lvalue Var 0x55974ab32300 'read_status' 'int'
|           `-IntegerLiteral 0x55974ab32f90 <col:40> 'int' 1
|-AccessSpecDecl 0x55974ab0c0a0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55974ab0c0c8 prev 0x55974aae6cb0 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55974ab0c1c0 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55974ab0c2b0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55974ab33060 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55974ab0c3a0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55974ab33070 <col:25, line:830:9>
| |-CXXMethodDecl 0x55974ab0c4a0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55974ab0c550 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55974ab0c5f8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55974ab0c5f8
| | `-ParmVarDecl 0x55974ab0c708 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55974ab0cec8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55974ab0cec8
|   `-ParmVarDecl 0x55974ab0cfd8 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55974ab0c778 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55974ab0c8d8 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55974ab0cad0 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55974ab0c980 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55974ab0c9f8 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55974ab35580 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55974ab0cd88 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55974ab353f0 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55974ab33080 <col:20> 'void *' lvalue ParmVar 0x55974ab0c980 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55974ab0cdf0 '_slot' 'char *'
| | | `-CXXNewExpr 0x55974ab35478 <col:32, col:45> 'char *' array Function 0x55974a5d0cd8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55974ab35460 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55974ab35430 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55974ab0c9f8 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55974ab0ce50 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55974ab35540 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55974ab35500 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55974ab0c9f8 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55974ab35600 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55974ab0cbd0 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55974ab0c3a0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55974ab35688 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55974ab35668 <line:840:13, col:22> 'void' array Function 0x55974a5d1038 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55974ab35650 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55974ab35620 <col:22> 'char *' lvalue ->_slot 0x55974ab0cdf0
| |         `-CXXThisExpr 0x55974ab35610 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55974ab0ccd0 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55974ab0c4a0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55974ab35878 <col:22, line:844:9>
| |   `-CallExpr 0x55974ab357e0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55974ab357c8 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55974ab357a8 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55974a6dcab8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55974ab35818 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55974ab356f8 <col:20> 'void *' lvalue ->_ptr 0x55974ab0cd88
| |     |   `-CXXThisExpr 0x55974ab356e8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55974ab35848 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55974ab35830 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55974ab35738 <col:26> 'char *' lvalue ->_slot 0x55974ab0cdf0
| |     |     `-CXXThisExpr 0x55974ab35728 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55974ab35860 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55974ab35778 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55974ab0ce50
| |         `-CXXThisExpr 0x55974ab35768 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55974ab0cd88 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55974ab0cdf0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55974ab0ce50 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55974ab0d048 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55974ab0d048
| | `-ParmVarDecl 0x55974ab0d158 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55974ab0d1f8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55974ab0d1f8
|   `-ParmVarDecl 0x55974ab0d308 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55974ab0d4a8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55974ab0d378 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55974ab0d418 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55974ab0d740 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55974ab0d908 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55974ab0d808 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55974ab0da88 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55974ab358b0 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55974ab35890 <col:20> 'T *' lvalue ParmVar 0x55974ab0d808 'ptr' 'T *'
|   | `-CompoundStmt 0x55974ab35900 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55974ab0d9d8 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55974ab0c4a0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55974ab35ab0 <col:22, line:857:9>
|   |   `-CallExpr 0x55974ab35a80 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55974ab35910 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55974a7951e8 0x55974a73f518
|   |     |-CXXOperatorCallExpr 0x55974ab35a10 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55974ab359a0 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55974a9a2198 0x55974a9a1db8 0x55974a9a19e8 0x55974a9a1608 0x55974a9a1228 0x55974a9a0e58
|   |     | `-MemberExpr 0x55974ab35970 <col:29> 'T *' lvalue ->_ptr 0x55974ab0da88
|   |     |   `-CXXThisExpr 0x55974ab35960 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55974ab35a50 <col:35> 'T' lvalue ->_slot 0x55974ab0dae8
|   |       `-CXXThisExpr 0x55974ab35a40 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55974ab0da88 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55974ab0dae8 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55974ab0db50 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55974ab0dc50 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55974ab0dca0 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974ab0dc30 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55974ab0dc10 <col:31> 'int' 48
|-FieldDecl 0x55974ab0dcc8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55974ab0dd28 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55974ab0dd88 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55974ab0dec0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55974ab21050 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55974ab210b0 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55974ab21160 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55974ab21388 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55974ab21290 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55974ab214d8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55974ab21448 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55974ab217a8 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55974ab21598 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55974ab21618 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55974ab216c0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55974ab219b8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55974ab21870 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55974ab218e8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55974ab21a88 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55974ab21bd8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55974ab21b40 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55974ab21f68 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55974ab21c98 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55974ab21d18 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55974ab21dc0 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55974ab21e78 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55974ab22190 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55974ab22040 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55974ab220b8 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55974ab224a8 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55974ab22240 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55974ab22408 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55974ab22318 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aa8bda0 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x55974aa987c8 prev 0x55974aa8bda0 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x55974aa98858 <col:38, col:44> col:38 public
|-TypedefDecl 0x55974aa98a20 <line:304:5, col:53> col:53 size_type 'typename HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >::size_type':'unsigned long'
| `-ElaboratedType 0x55974aa989d0 'typename HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >::size_type' sugar
|   `-TypedefType 0x55974aa8b910 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::size_type' sugar
|     |-Typedef 0x55974aa8b0d0 'size_type'
|     `-TypedefType 0x55974a522d80 'size_t' sugar
|       |-Typedef 0x55974a4e7be0 'size_t'
|       `-BuiltinType 0x55974a477640 'unsigned long'
|-TypedefDecl 0x55974aa98bc0 <line:305:5, col:61> col:61 referenced bucket_count_type 'typename HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x55974aa98b70 'typename HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >::bucket_count_type' sugar
|   `-TypedefType 0x55974aa8bab0 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type' sugar
|     |-Typedef 0x55974aa8b128 'bucket_count_type'
|     `-TypedefType 0x55974a5d3030 'uint32_t' sugar
|       |-Typedef 0x55974a4e04c8 'uint32_t'
|       `-TypedefType 0x55974a4b95a0 '__uint32_t' sugar
|         |-Typedef 0x55974a4b9198 '__uint32_t'
|         `-BuiltinType 0x55974a477620 'unsigned int'
|-CXXConstructorDecl 0x55974aa98c50 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x55974aa98db8 <line:312:5, line:314:5> line:312:8 get 'ARPTable::ARPEntry *() const'
|-CXXMethodDecl 0x55974aa98e88 <line:317:5, line:319:5> line:317:8 used operator-> 'ARPTable::ARPEntry *() const'
|-CXXMethodDecl 0x55974aa98fe8 <line:323:5, line:325:5> line:323:8 operator* 'ARPTable::ARPEntry &() const'
|-CXXMethodDecl 0x55974aa99098 <line:328:5, line:330:5> line:328:17 live 'bool () const' inline
|-TypedefDecl 0x55974aa99228 <line:332:5, col:73> col:48 unspecified_bool_type 'ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const'
| `-MemberPointerType 0x55974aa991c0 'ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const'
|   |-RecordType 0x55974aa8bea0 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|   | `-ClassTemplateSpecialization 0x55974aa8bda0 'HashContainer_const_iterator'
|   `-ParenType 0x55974aa99150 'ARPTable::ARPEntry *() const' sugar
|     `-FunctionProtoType 0x55974aa98d70 'ARPTable::ARPEntry *() const' const cdecl
|       `-PointerType 0x55974aa98d10 'ARPTable::ARPEntry *'
|         `-SubstTemplateTypeParmType 0x55974aa98880 'ARPTable::ARPEntry' sugar
|           |-TemplateTypeParmType 0x55974aa36ac0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55974aa36a70 'T'
|           `-RecordType 0x55974aa871a0 'ARPTable::ARPEntry'
|             `-CXXRecord 0x55974aa87108 'ARPEntry'
|-CXXConversionDecl 0x55974aa99340 <line:334:5, line:336:5> line:334:12 used operator ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55974aa99598 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *() const'
|-CXXMethodDecl 0x55974aa996b8 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type () const'
|-CXXMethodDecl 0x55974aa99768 <line:349:5, line:361:5> line:349:10 operator++ 'void ()'
|-CXXMethodDecl 0x55974aa998a8 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x55974aa99818 <col:21> col:24 'int'
|-AccessSpecDecl 0x55974aa99960 <line:368:3, col:10> col:3 private
|-FieldDecl 0x55974aa99998 <line:370:5, col:8> col:8 referenced _element 'ARPTable::ARPEntry *'
|-FieldDecl 0x55974aa99a30 <line:371:5, col:9> col:9 referenced _pprev 'ARPTable::ARPEntry **'
|-FieldDecl 0x55974aa99a90 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x55974aa99bd8 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
|-CXXConstructorDecl 0x55974aa99e38 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *)' inline
| `-ParmVarDecl 0x55974aa99d28 <col:41, col:68> col:68 hc 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
|-CXXConstructorDecl 0x55974aa9a2c8 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *, HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type, ARPTable::ARPEntry **, ARPTable::ARPEntry *)' inline
| |-ParmVarDecl 0x55974aa99ff8 <col:41, col:68> col:68 hc 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
| |-ParmVarDecl 0x55974aa9a070 <col:72, col:90> col:90 b 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55974aa9a0f0 <col:93, col:97> col:97 pprev 'ARPTable::ARPEntry **'
| `-ParmVarDecl 0x55974aa9a168 <col:104, col:107> col:107 element 'ARPTable::ARPEntry *'
|-FriendDecl 0x55974aa9a4a8 <line:392:5, col:36> col:12 'class HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-FriendDecl 0x55974aa9a5f8 <line:393:5, col:45> col:12 'class HashContainer_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-CXXDestructorDecl 0x55974aa9b710 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55974aa9b848 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline default trivial noexcept-unevaluated 0x55974aa9b848
| `-ParmVarDecl 0x55974aa9b958 <col:7> col:7 'const HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
`-CXXConstructorDecl 0x55974aa9b9f8 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55974aa9bb08 <col:7> col:7 used 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer Field 0x55974aa99998 '_element' 'ARPTable::ARPEntry *'
  | `-ImplicitCastExpr 0x55974aa9c0a8 <col:7> 'ARPTable::ARPEntry *' <LValueToRValue>
  |   `-MemberExpr 0x55974aa9c060 <col:7> 'ARPTable::ARPEntry *' xvalue ._element 0x55974aa99998
  |     `-CXXStaticCastExpr 0x55974aa9c030 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x55974aa9c000 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x55974aa9bb08 '' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer Field 0x55974aa99a30 '_pprev' 'ARPTable::ARPEntry **'
  | `-ImplicitCastExpr 0x55974aa9c190 <col:7> 'ARPTable::ARPEntry **' <LValueToRValue>
  |   `-MemberExpr 0x55974aa9c148 <col:7> 'ARPTable::ARPEntry **' xvalue ._pprev 0x55974aa99a30
  |     `-CXXStaticCastExpr 0x55974aa9c118 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x55974aa9c0e8 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x55974aa9bb08 '' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer Field 0x55974aa99a90 '_bucket' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int'
  | `-ImplicitCastExpr 0x55974aa9c278 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
  |   `-MemberExpr 0x55974aa9c230 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55974aa99a90
  |     `-CXXStaticCastExpr 0x55974aa9c200 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x55974aa9c1d0 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x55974aa9bb08 '' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer Field 0x55974aa99bd8 '_hc' 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
  | `-ImplicitCastExpr 0x55974aa9c360 <col:7> 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' <LValueToRValue>
  |   `-MemberExpr 0x55974aa9c318 <col:7> 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' xvalue ._hc 0x55974aa99bd8
  |     `-CXXStaticCastExpr 0x55974aa9c2e8 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x55974aa9c2b8 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x55974aa9bb08 '' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  `-CompoundStmt 0x55974aa9c3c0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974aa8bfd8 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x55974aa9a680 prev 0x55974aa8bfd8 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x55974aa9a710 <col:76, col:82> col:76 public
|-TypedefDecl 0x55974aa9a800 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| `-TemplateSpecializationType 0x55974aa9a760 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'ARPTable::ARPEntry':'ARPTable::ARPEntry'
|   |-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>':'HashContainer_adapter<ARPTable::ARPEntry>'
|   `-RecordType 0x55974aa8bea0 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|     `-ClassTemplateSpecialization 0x55974aa8bda0 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x55974aa9a890 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x55974aa9a948 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x55974aa9ab68 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *() const'
|-AccessSpecDecl 0x55974aa9ac18 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x55974aa9ae48 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *)' inline
| `-ParmVarDecl 0x55974aa9ad38 <col:35, col:56> col:56 hc 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
|-CXXConstructorDecl 0x55974aa9b3d8 <line:429:5, line:431:5> line:429:12 HashContainer_iterator 'void (HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *, typename inherited::bucket_count_type, ARPTable::ARPEntry **, ARPTable::ARPEntry *)' inline
| |-ParmVarDecl 0x55974aa9b008 <col:35, col:56> col:56 hc 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
| |-ParmVarDecl 0x55974aa9b120 <col:60, col:98> col:98 b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55974aa9b200 <col:101, col:105> col:105 pprev 'ARPTable::ARPEntry **'
| `-ParmVarDecl 0x55974aa9b278 <col:112, col:115> col:115 element 'ARPTable::ARPEntry *'
|-FriendDecl 0x55974aa9b5b8 <line:433:5, col:36> col:12 'class HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-CXXDestructorDecl 0x55974aa9b628 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55974aa9bb78 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline default trivial noexcept-unevaluated 0x55974aa9bb78
| `-ParmVarDecl 0x55974aa9bc88 <col:7> col:7 'const HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
`-CXXConstructorDecl 0x55974aa9bd28 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55974aa9be38 <col:7> col:7 used 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
  | `-CXXConstructExpr 0x55974aa9c3d0 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' 'void (HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&) noexcept'
  |   `-ImplicitCastExpr 0x55974aa9bfe0 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
  |     `-CXXStaticCastExpr 0x55974aa9bfb0 <col:7> 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x55974aa9bf80 <col:7> 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x55974aa9be38 '' 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  `-CompoundStmt 0x55974aa9c498 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a995990 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a995aa8 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55974a995b50 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55974a995bb8 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55974a995c20 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55974a995cd0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55974a995b50 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55974a996b50 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55974a996b08 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55974a996ad0 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55974a996ab8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55974a996a60 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55974a7d0b50 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55974a995bb8 'len' 'int'
| | `-IntegerLiteral 0x55974a996bc8 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55974a995c20 'cap' 'int'
| | `-IntegerLiteral 0x55974a996c30 <col:20> 'int' 0
| `-CompoundStmt 0x55974a996cb0 <col:23, line:119:2>
|-CXXConstructorDecl 0x55974a995e48 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55974a995d88 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55974a996cc0 <col:37, line:121:2>
|-CXXConstructorDecl 0x55974a998ed8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55974a998fe8 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55974a995b50 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55974a99a920 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55974a99a8f0 <col:12> 'unsigned char *const' lvalue .s 0x55974a995b50
| |     `-DeclRefExpr 0x55974a99a8d0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55974a998fe8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55974a995bb8 'len' 'int'
| | `-ImplicitCastExpr 0x55974a99a9b0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55974a99a980 <col:12> 'const int' lvalue .len 0x55974a995bb8
| |     `-DeclRefExpr 0x55974a99a960 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55974a998fe8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55974a995c20 'cap' 'int'
| | `-ImplicitCastExpr 0x55974a99aa40 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55974a99aa10 <col:12> 'const int' lvalue .cap 0x55974a995c20
| |     `-DeclRefExpr 0x55974a99a9f0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55974a998fe8 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55974a99aa98 <col:12>
|-CXXConstructorDecl 0x55974a999088 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55974a999088
| `-ParmVarDecl 0x55974a999198 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55974a99ad50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab63320 prev 0x55974aaa4140 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55974ab63418 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55974ab634a8 <col:21, col:27> col:21 public
|-TypedefDecl 0x55974ab634e8 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55974a477fd0 'const char *'
|   `-QualType 0x55974a477521 'const char' const
|     `-BuiltinType 0x55974a477520 'char'
|-TypedefDecl 0x55974ab63558 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55974a4781a0 'char *'
|   `-BuiltinType 0x55974a477520 'char'
|-TypedefDecl 0x55974ab63690 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55974ab63600 'int (StringAccum::*)() const'
|   |-RecordType 0x55974a73b410 'StringAccum'
|   | `-CXXRecord 0x55974ab63320 'StringAccum'
|   `-ParenType 0x55974a7aab60 'int () const' sugar
|     `-FunctionProtoType 0x55974a77e6f0 'int () const' const cdecl
|       `-BuiltinType 0x55974a477580 'int'
|-CXXConstructorDecl 0x55974ab63750 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55974ab638a0 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55974ab63810 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55974ab639f0 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55974ab63960 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55974ab63b98 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55974ab63ad8 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55974ab63d48 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55974ab63c88 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55974ab63e40 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55974ab63ff8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55974ab63f30 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55974ab64178 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55974ab640b0 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55974ab64270 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55974ab64338 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55974ab64400 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55974ab644c8 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55974ab64590 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55974ab646f8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55974ab647c8 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55974ab64888 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55974ab64998 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55974ab64aa8 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55974ab64b68 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55974ab64c28 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55974ab64d70 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55974ab64ce0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55974ab64f00 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55974ab64e30 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55974ab64fc8 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55974ab650c0 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55974ab65180 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55974ab65248 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55974ab65308 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55974a9931f0 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55974a9932b0 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55974a993400 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55974a993368 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55974a993550 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55974a9934c0 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55974a9936a8 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55974a993610 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55974a9937f8 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55974a993768 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55974a993a10 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55974a9938b8 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55974a993938 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55974a996988 <col:53> 'int' 0
|-CXXMethodDecl 0x55974a993b68 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55974a993ad8 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55974a9969a8 <col:34> 'int' 1
|-CXXMethodDecl 0x55974a993cb0 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55974a993c20 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55974a993e00 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55974a993d70 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55974a993f50 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55974a993ec0 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55974a9940a0 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55974a994010 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55974a994278 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55974a994160 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55974a9941e0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55974a994458 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55974a994340 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55974a9943c0 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55974a994638 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55974a994520 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55974a9945a0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55974a994818 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55974a994700 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55974a994780 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55974a9949f8 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55974a9948e0 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55974a994960 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55974a994d58 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55974a994b40 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55974a994bc0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55974a9969c8 <col:56> 'int' 10
| `-ParmVarDecl 0x55974a994c38 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974a9969e8 <col:77> 'bool' true
|-CXXMethodDecl 0x55974a9950b8 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55974a994ea0 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55974a994f20 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55974a9969f8 <col:57> 'int' 10
| `-ParmVarDecl 0x55974a994f98 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55974a996a18 <col:78> 'bool' true
|-CXXMethodDecl 0x55974a9952e0 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55974a995188 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55974a995208 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55974a9953d8 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x55974a995548 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55974a995488 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55974a995698 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55974a995608 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55974a995740 <col:51> "" ""
|-AccessSpecDecl 0x55974a9957b0 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55974a9957d8 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55974a995928 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55974a995978 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55974a995908 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55974a9958d8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55974a7b38c8 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55974a995990 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55974a995aa8 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55974a995b50 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55974a995bb8 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55974a995c20 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55974a995cd0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55974a995b50 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55974a996b50 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55974a996b08 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55974a996ad0 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55974a996ab8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55974a996a60 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55974a7d0b50 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55974a995bb8 'len' 'int'
| | | `-IntegerLiteral 0x55974a996bc8 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55974a995c20 'cap' 'int'
| | | `-IntegerLiteral 0x55974a996c30 <col:20> 'int' 0
| | `-CompoundStmt 0x55974a996cb0 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55974a995e48 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55974a995d88 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55974a996cc0 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55974a998ed8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55974a998fe8 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55974a995b50 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55974a99a920 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55974a99a8f0 <col:12> 'unsigned char *const' lvalue .s 0x55974a995b50
| | |     `-DeclRefExpr 0x55974a99a8d0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55974a998fe8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55974a995bb8 'len' 'int'
| | | `-ImplicitCastExpr 0x55974a99a9b0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55974a99a980 <col:12> 'const int' lvalue .len 0x55974a995bb8
| | |     `-DeclRefExpr 0x55974a99a960 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55974a998fe8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55974a995c20 'cap' 'int'
| | | `-ImplicitCastExpr 0x55974a99aa40 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55974a99aa10 <col:12> 'const int' lvalue .cap 0x55974a995c20
| | |     `-DeclRefExpr 0x55974a99a9f0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55974a998fe8 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55974a99aa98 <col:12>
| |-CXXConstructorDecl 0x55974a999088 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55974a999088
| | `-ParmVarDecl 0x55974a999198 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55974a99ad50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55974a995f20 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55974a996020 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55974a995f88 <col:16> col:19 'int'
|-CXXMethodDecl 0x55974a996200 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55974a9960e0 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55974a996160 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55974a9963e0 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55974a9962c8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55974a996348 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55974a996538 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55974a9964a8 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55974a996688 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55974a9965f8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55974a996948 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55974a996888 parent 0x55974a477488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55974a996740 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55974a9967b8 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ab8ceb0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55974ad00498 <line:167:18>
|-CXXRecordDecl 0x55974ad00558 prev 0x55974ab8ceb0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55974ad00668 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class Timestamp>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class Timestamp * _ptr
        24 |   class Timestamp _slot
        24 |     union Timestamp::rep_t _t
        24 |       int64_t x
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class IPAddress>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class IPAddress * _ptr
        24 |   class IPAddress _slot
        24 |     uint32_t _addr
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a5d2ca8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a5d2dc8 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55974a7e4c40 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55974a7e4d20 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55974a7e4d20
| `-ParmVarDecl 0x55974a7e4e08 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55974a7e4ea8 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55974a7e4ea8
| `-ParmVarDecl 0x55974a7e4fb8 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55974a981ca0 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<unsigned int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab3e200 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974ab3e318 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55974ab3e3a8 <col:16, col:22> col:16 public
|-EnumDecl 0x55974ab3e3d0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55974ab3e4d0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55974ab3e720 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ab3e4b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55974ab3e490 <col:21> 'int' 0
| |-EnumConstantDecl 0x55974ab3e560 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55974ab3e738 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ab3e540 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55974ab3e520 <col:24> 'int' 22
| |-EnumConstantDecl 0x55974ab3e5f0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55974ab3e750 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ab3e5d0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55974ab3e5b0 <col:24> 'int' 34
| |-EnumConstantDecl 0x55974ab3e680 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55974ab3e768 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55974ab3e660 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55974ab3e640 <col:25> 'int' 95
| `-EnumConstantDecl 0x55974ab3e6d0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55974ab400e0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55974ab40518 <col:7>
|-CXXConstructorDecl 0x55974ab401e8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55974ab401e8
| `-ParmVarDecl 0x55974ab402f8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55974ab40398 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974ab404a8 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x55974ad092c0 <col:7>
`-CXXDestructorDecl 0x55974ab426b8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974ab3e798 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55974ab3e8f8 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55974ab3e988 <col:32, col:38> col:32 public
|-TypedefDecl 0x55974ab3e9c0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55974a5d3030 'uint32_t' sugar
|   |-Typedef 0x55974a4e04c8 'uint32_t'
|   `-TypedefType 0x55974a4b95a0 '__uint32_t' sugar
|     |-Typedef 0x55974a4b9198 '__uint32_t'
|     `-BuiltinType 0x55974a477620 'unsigned int'
|-CXXConstructorDecl 0x55974ab3eb08 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55974ab3ea30 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55974ab3ffe8 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55974ab40528 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55974ab3f8a0 'base' 'int'
| | `-ImplicitCastExpr 0x55974ab40088 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55974ab40048 <col:16> 'int' lvalue ParmVar 0x55974ab3ea30 'b' 'int'
| `-CompoundStmt 0x55974ab40598 <col:19, line:1046:5>
|-CXXMethodDecl 0x55974ab3f000 <line:1048:5, line:1050:50> line:1048:17 used parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55974ab3ebd0 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55974ab3ec50 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55974ab3ecc8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55974ab3ed48 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55974ab3ee08 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55974ab3ee88 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55974ab3f458 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55974ab3f0d0 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55974ab3f3b8 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55974ab3f178 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x55974ab3f218 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x55974ab3f290 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55974ab40008 <col:82> 'const ArgContext' lvalue Var 0x55974ab35ad8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55974ab41508 <col:94, line:1067:5>
| |   |-DeclStmt 0x55974ab40728 <line:1054:9, col:64>
| |   | `-VarDecl 0x55974ab405b8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x55974ab406e0 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x55974ab40948 <line:1055:9, col:91>
| |   | `-VarDecl 0x55974ab40758 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x55974ab40920 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x55974ab40900 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x55974ab408b0 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x55974ab40890 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x55974ab40838 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x55974ab407e8 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x55974ab40818 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x55974ab40878 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x55974ab40858 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x55974ab408e0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x55974ab40aa8 <line:1056:9, col:27>
| |   | `-VarDecl 0x55974ab40a40 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x55974ab40f00 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x55974ab40e30 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x55974ab40da0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55974aa57d48 0x55974a9fcc10 0x55974a99d018 0x55974a7e65f8 0x55974a7e62d0 0x55974a7d7ab0 0x55974a7d7760 0x55974a7d7050 0x55974a7a99c0 0x55974a735e80
| |   | | |-CallExpr 0x55974ab40ce0 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x55974ab40ad0 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x55974ab40b80 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55974ab40b50 <col:19, col:23> '<bound member function type>' .begin 0x55974a7c6cb8
| |   | | | |   `-DeclRefExpr 0x55974ab40b30 <col:19> 'const String' lvalue ParmVar 0x55974ab3f178 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x55974ab40bf0 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55974ab40bc0 <col:32, col:36> '<bound member function type>' .end 0x55974a7c6ed0
| |   | | | |   `-DeclRefExpr 0x55974ab40ba0 <col:32> 'const String' lvalue ParmVar 0x55974ab3f178 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x55974ab40c10 <col:43> 'const bool' lvalue Var 0x55974ab405b8 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x55974ab40c78 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x55974ab40c58 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x55974ab40ca0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55974ab40a40 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x55974ab40cc0 <col:73> 'const int' lvalue Var 0x55974ab40758 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x55974ab40d80 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x55974ab40d50 <col:16, col:20> '<bound member function type>' .end 0x55974a7c6ed0
| |   | |     `-DeclRefExpr 0x55974ab40d30 <col:16> 'const String' lvalue ParmVar 0x55974ab3f178 'str' 'const String &'
| |   | `-BinaryOperator 0x55974ab40ee0 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x55974ab40e78 <col:13> 'int' lvalue ->status 0x55974ab3f908
| |   |   | `-CXXThisExpr 0x55974ab40e68 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x55974ab40ec8 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x55974ab40ea8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55974ab3e560 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x55974ab41180 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x55974ab41068 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x55974ab41050 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x55974ab41038 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x55974ab40f28 <col:13> 'int' lvalue ->status 0x55974ab3f908
| |   | | |     `-CXXThisExpr 0x55974ab40f18 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x55974ab41018 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x55974ab40fe8 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x55974ab40f68 <col:23> 'int' lvalue ->status 0x55974ab3f908
| |   | |   |   `-CXXThisExpr 0x55974ab40f58 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x55974ab41000 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x55974ab40f98 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55974ab3e5f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x55974ab41160 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x55974ab41100 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x55974ab410a8 <col:13, col:18> '<bound member function type>' .error 0x55974aadf260
| |   |   | | `-DeclRefExpr 0x55974ab41088 <col:13> 'const ArgContext' lvalue ParmVar 0x55974ab3f290 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x55974ab41128 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x55974ab410d8 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x55974ab41150 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x55974ab41140 <col:20> 'bool' false
| |   |-DeclStmt 0x55974ab41358 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x55974ab41300 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x55974ab41290 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x55974ab414b8 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x55974ab41370 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55974a769e48
| |   | |-DeclRefExpr 0x55974ab413b8 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55974ab40a40 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x55974ab41488 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x55974ab41400 <col:64> 'V' lvalue ParmVar 0x55974ab3f218 'result' 'V &'
| |   `-ReturnStmt 0x55974ab414f8 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x55974ab414e8 <col:16> 'bool' true
| `-CXXMethodDecl 0x55974ad0ca48 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, unsigned int &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55974ad0c820 <col:27, col:41> col:41 used str 'const String &'
|   |-ParmVarDecl 0x55974ad0c8f8 <col:46, col:49> col:49 used result 'unsigned int &'
|   |-ParmVarDecl 0x55974ad0c960 <col:57, col:82> col:75 used args 'const ArgContext &'
|   `-CompoundStmt 0x55974ad0e880 <col:94, line:1067:5>
|     |-DeclStmt 0x55974ad0d2b8 <line:1054:9, col:64>
|     | `-VarDecl 0x55974ad0d0d8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-ImplicitCastExpr 0x55974ad0d248 <col:36, col:55> 'bool' <LValueToRValue>
|     |     `-DeclRefExpr 0x55974ad0d218 <col:36, col:55> 'const bool' lvalue Var 0x55974a759060 'is_signed' 'const bool' non_odr_use_constant
|     |-DeclStmt 0x55974ad0d498 <line:1055:9, col:91>
|     | `-VarDecl 0x55974ad0d2d0 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55974ad0d418 <col:31, col:90> 'int' functional cast to int <NoOp>
|     |     `-ImplicitCastExpr 0x55974ad0d400 <col:35, col:89> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-BinaryOperator 0x55974ad0d3e0 <col:35, col:89> 'unsigned long' '/'
|     |         |-ParenExpr 0x55974ad0d3c0 <col:35, col:69> 'unsigned long'
|     |         | `-BinaryOperator 0x55974ad0d3a0 <col:36, col:68> 'unsigned long' '-'
|     |         |   |-BinaryOperator 0x55974ad0d368 <col:36, col:64> 'unsigned long' '+'
|     |         |   | |-UnaryExprOrTypeTraitExpr 0x55974ad0d348 <col:36, col:44> 'unsigned long' sizeof 'unsigned int':'unsigned int'
|     |         |   | `-UnaryExprOrTypeTraitExpr 0x55974ab40818 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |         |   `-ImplicitCastExpr 0x55974ad0d388 <col:68> 'unsigned long' <IntegralCast>
|     |         |     `-IntegerLiteral 0x55974ab40858 <col:68> 'int' 1
|     |         `-UnaryExprOrTypeTraitExpr 0x55974ab408e0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55974ad0d630 <line:1056:9, col:27>
|     | `-VarDecl 0x55974ad0d5c8 <col:9, col:26> col:19 used x 'IntArg::limb_type [1]'
|     |-IfStmt 0x55974ad0dac8 <line:1057:9, line:1059:22>
|     | |-BinaryOperator 0x55974ad0da70 <line:1057:13, line:1058:24> 'bool' '!='
|     | | |-CXXMemberCallExpr 0x55974ad0d928 <line:1057:13, col:78> 'const char *'
|     | | | |-MemberExpr 0x55974ad0d8f8 <col:13> '<bound member function type>' ->parse 0x55974ab3f000
|     | | | | `-CXXThisExpr 0x55974ad0d8e8 <col:13> 'IntArg *' implicit this
|     | | | |-CXXMemberCallExpr 0x55974ad0d788 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55974ad0d758 <col:19, col:23> '<bound member function type>' .begin 0x55974a7c6cb8
|     | | | |   `-DeclRefExpr 0x55974ad0d738 <col:19> 'const String' lvalue ParmVar 0x55974ad0c820 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55974ad0d7f8 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55974ad0d7c8 <col:32, col:36> '<bound member function type>' .end 0x55974a7c6ed0
|     | | | |   `-DeclRefExpr 0x55974ad0d7a8 <col:32> 'const String' lvalue ParmVar 0x55974ad0c820 'str' 'const String &'
|     | | | |-ImplicitCastExpr 0x55974ad0d998 <col:43> 'bool' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x55974ad0d978 <col:43> 'const bool' lvalue Var 0x55974ad0d0d8 'is_signed' 'const bool' non_odr_use_constant
|     | | | |-CXXFunctionalCastExpr 0x55974ad0d880 <col:54, col:67> 'int' functional cast to int <NoOp>
|     | | | | `-ImplicitCastExpr 0x55974ad0d868 <col:58, col:66> 'int' <IntegralCast> part_of_explicit_cast
|     | | | |   `-UnaryExprOrTypeTraitExpr 0x55974ad0d848 <col:58, col:66> 'unsigned long' sizeof 'unsigned int':'unsigned int'
|     | | | |-ImplicitCastExpr 0x55974ad0d9b0 <col:70> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | | | | `-DeclRefExpr 0x55974ad0d8a8 <col:70> 'IntArg::limb_type [1]' lvalue Var 0x55974ad0d5c8 'x' 'IntArg::limb_type [1]'
|     | | | `-ImplicitCastExpr 0x55974ad0d9e8 <col:73> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x55974ad0d9c8 <col:73> 'const int' lvalue Var 0x55974ad0d2d0 'nlimb' 'const int' non_odr_use_constant
|     | | `-CXXMemberCallExpr 0x55974ad0da50 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55974ad0da20 <col:16, col:20> '<bound member function type>' .end 0x55974a7c6ed0
|     | |     `-DeclRefExpr 0x55974ad0da00 <col:16> 'const String' lvalue ParmVar 0x55974ad0c820 'str' 'const String &'
|     | `-BinaryOperator 0x55974ad0daa8 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55974ab40e78 <col:13> 'int' lvalue ->status 0x55974ab3f908
|     |   | `-CXXThisExpr 0x55974ab40e68 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55974ad0da90 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55974ab40ea8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55974ab3e560 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55974ad0dc70 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55974ad0db90 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55974ad0db78 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55974ad0db60 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55974ab40f28 <col:13> 'int' lvalue ->status 0x55974ab3f908
|     | | |     `-CXXThisExpr 0x55974ab40f18 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55974ad0db40 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55974ad0db10 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55974ab40f68 <col:23> 'int' lvalue ->status 0x55974ab3f908
|     | |   |   `-CXXThisExpr 0x55974ab40f58 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55974ad0db28 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55974ab40f98 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55974ab3e5f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55974ad0dc50 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55974ad0dc00 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55974ad0dbd0 <col:13, col:18> '<bound member function type>' .error 0x55974aadf260
|     |   | | `-DeclRefExpr 0x55974ad0dbb0 <col:13> 'const ArgContext' lvalue ParmVar 0x55974ad0c960 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55974ad0dc28 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55974ab410d8 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55974ad0dc40 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55974ab41140 <col:20> 'bool' false
|     |-DeclStmt 0x55974ad0e1b8 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55974ad0e160 <col:9, col:49> col:49 unsigned_v_type 'typename make_unsigned<unsigned int>::type':'unsigned int'
|     |   `-ElaboratedType 0x55974ad0e110 'typename make_unsigned<unsigned int>::type' sugar
|     |     `-TypedefType 0x55974ad0e0f0 'make_unsigned<unsigned int>::type' sugar
|     |       |-Typedef 0x55974ad0e080 'type'
|     |       `-ElaboratedType 0x55974ad0e030 'typename integer_traits<unsigned int>::unsigned_type' sugar
|     |         `-TypedefType 0x55974ad0e010 'integer_traits<unsigned int>::unsigned_type' sugar
|     |           |-Typedef 0x55974a7591b8 'unsigned_type'
|     |           `-BuiltinType 0x55974a477620 'unsigned int'
|     |-CallExpr 0x55974ad0e810 <line:1065:9, col:71> 'void'
|     | |-ImplicitCastExpr 0x55974ad0e7f8 <col:9> 'void (*)(const unsigned int *, unsigned int &)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55974ad0e778 <col:9> 'void (const unsigned int *, unsigned int &)' lvalue Function 0x55974ad0e658 'extract_integer' 'void (const unsigned int *, unsigned int &)' (FunctionTemplate 0x55974a769e48 'extract_integer')
|     | |-ImplicitCastExpr 0x55974ad0e858 <col:25> 'const unsigned int *' <NoOp>
|     | | `-ImplicitCastExpr 0x55974ad0e840 <col:25> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | |   `-DeclRefExpr 0x55974ad0e218 <col:25> 'IntArg::limb_type [1]' lvalue Var 0x55974ad0d5c8 'x' 'IntArg::limb_type [1]'
|     | `-CXXReinterpretCastExpr 0x55974ad0e2e8 <col:28, col:70> 'unsigned_v_type':'unsigned int' lvalue reinterpret_cast<unsigned_v_type &> <NoOp>
|     |   `-DeclRefExpr 0x55974ad0e298 <col:64> 'unsigned int':'unsigned int' lvalue ParmVar 0x55974ad0c8f8 'result' 'unsigned int &'
|     `-ReturnStmt 0x55974ad0e870 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55974ab414e8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55974ab3f818 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55974ab3f4c8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55974ab3f778 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55974ab3f578 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55974ab3f618 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55974ab3f690 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55974ab40028 <col:71> 'const ArgContext' lvalue Var 0x55974ab35ad8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55974ab41cd8 <col:83, line:1083:5>
| |   |-DeclStmt 0x55974ab415d0 <line:1071:9, col:12>
| |   | `-VarDecl 0x55974ab41568 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55974ab41cb0 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55974ab41890 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55974ab416e8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55974ab416b0 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55974ab415f8 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55974ab41650 <col:31> 'const String' lvalue ParmVar 0x55974ab3f578 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55974ab41670 <col:36> 'V' lvalue Var 0x55974ab41568 'x' 'V'
| |     | |   `-DeclRefExpr 0x55974ab41690 <col:39> 'const ArgContext' lvalue ParmVar 0x55974ab3f690 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55974ab41870 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55974ab41850 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55974ab41838 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55974ab41820 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55974ab41710 <col:17> 'int' lvalue ->status 0x55974ab3f908
| |     |     |     `-CXXThisExpr 0x55974ab41700 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55974ab41800 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55974ab417d0 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55974ab41750 <col:27> 'int' lvalue ->status 0x55974ab3f908
| |     |       |   `-CXXThisExpr 0x55974ab41740 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55974ab417e8 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55974ab41780 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55974ab3e5f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55974ab418c0 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55974ab418b0 <col:20> 'bool' false
| |     `-IfStmt 0x55974ab41c88 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55974ab41990 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55974ab41960 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55974ab418e0 <col:18> 'int' lvalue ->status 0x55974ab3f908
| |       | |   `-CXXThisExpr 0x55974ab418d0 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55974ab41978 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55974ab41910 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55974ab3e5f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55974ab41bc8 <col:42, line:1079:9>
| |       | |-CallExpr 0x55974ab41b70 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55974ab419c0 <line:1076:13> '<bound member function type>' ->range_error 0x55974ab3ff18
| |       | | | `-CXXThisExpr 0x55974ab419b0 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55974ab419f0 <col:25> 'const ArgContext' lvalue ParmVar 0x55974ab3f690 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55974ab41ad0 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55974ab41b48 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55974ab41b28 <col:43> 'V' lvalue Var 0x55974ab41568 'x' 'V'
| |       | `-ReturnStmt 0x55974ab41bb8 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55974ab41ba8 <col:20> 'bool' false
| |       `-CompoundStmt 0x55974ab41c68 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55974ab41c28 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55974ab41be8 <col:13> 'V' lvalue ParmVar 0x55974ab3f618 'result' 'V &'
| |         | `-DeclRefExpr 0x55974ab41c08 <col:22> 'V' lvalue Var 0x55974ab41568 'x' 'V'
| |         `-ReturnStmt 0x55974ab41c58 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55974ab41c48 <col:20> 'bool' true
| `-CXXMethodDecl 0x55974ad0c408 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, unsigned int &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55974ad0c1e0 <col:16, col:30> col:30 used str 'const String &'
|   |-ParmVarDecl 0x55974ad0c2b8 <col:35, col:38> col:38 used result 'unsigned int &'
|   |-ParmVarDecl 0x55974ad0c320 <col:46, col:71> col:64 used args 'const ArgContext &'
|   `-CompoundStmt 0x55974ad0d0b8 <col:83, line:1083:5>
|     |-DeclStmt 0x55974ad0c690 <line:1071:9, col:12>
|     | `-VarDecl 0x55974ad0c628 <col:9, col:11> col:11 used x 'unsigned int':'unsigned int'
|     `-IfStmt 0x55974ad0d090 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x55974ad0ccf0 <line:1072:13, line:1073:49> 'bool' '||'
|       | |-UnaryOperator 0x55974ad0cbe8 <line:1072:13, col:43> 'bool' prefix '!' cannot overflow
|       | | `-CXXMemberCallExpr 0x55974ad0cbb0 <col:14, col:43> 'bool'
|       | |   |-MemberExpr 0x55974ad0cb68 <col:14> '<bound member function type>' ->parse_saturating 0x55974ad0ca48
|       | |   | `-CXXThisExpr 0x55974ad0cb58 <col:14> 'IntArg *' implicit this
|       | |   |-DeclRefExpr 0x55974ad0c700 <col:31> 'const String' lvalue ParmVar 0x55974ad0c1e0 'str' 'const String &'
|       | |   |-DeclRefExpr 0x55974ad0c720 <col:36> 'unsigned int':'unsigned int' lvalue Var 0x55974ad0c628 'x' 'unsigned int':'unsigned int'
|       | |   `-DeclRefExpr 0x55974ad0c740 <col:39> 'const ArgContext' lvalue ParmVar 0x55974ad0c320 'args' 'const ArgContext &'
|       | `-ParenExpr 0x55974ad0ccd0 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x55974ad0ccb0 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x55974ad0cc98 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x55974ad0cc80 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x55974ab41710 <col:17> 'int' lvalue ->status 0x55974ab3f908
|       |     |     `-CXXThisExpr 0x55974ab41700 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x55974ad0cc60 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x55974ad0cc30 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x55974ab41750 <col:27> 'int' lvalue ->status 0x55974ab3f908
|       |       |   `-CXXThisExpr 0x55974ab41740 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x55974ad0cc48 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x55974ab41780 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55974ab3e5f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x55974ad0cd10 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x55974ab418b0 <col:20> 'bool' false
|       `-IfStmt 0x55974ad0d068 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x55974ad0cd80 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x55974ad0cd50 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x55974ab418e0 <col:18> 'int' lvalue ->status 0x55974ab3f908
|         | |   `-CXXThisExpr 0x55974ab418d0 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x55974ad0cd68 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55974ab41910 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55974ab3e5f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x55974ad0cfa0 <col:42, line:1079:9>
|         | |-CXXMemberCallExpr 0x55974ad0cf10 <line:1076:13, line:1077:45> 'void'
|         | | |-MemberExpr 0x55974ab419c0 <line:1076:13> '<bound member function type>' ->range_error 0x55974ab3ff18
|         | | | `-CXXThisExpr 0x55974ab419b0 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x55974ad0cda0 <col:25> 'const ArgContext' lvalue ParmVar 0x55974ad0c320 'args' 'const ArgContext &'
|         | | |-ImplicitCastExpr 0x55974ad0cf78 <col:31, col:50> 'bool' <LValueToRValue>
|         | | | `-DeclRefExpr 0x55974ad0cf48 <col:31, col:50> 'const bool' lvalue Var 0x55974a759060 'is_signed' 'const bool' non_odr_use_constant
|         | | `-CXXFunctionalCastExpr 0x55974ad0cee8 <line:1077:25, col:44> 'click_int_large_t':'long long' functional cast to click_int_large_t <NoOp>
|         | |   `-ImplicitCastExpr 0x55974ad0ced0 <col:43> 'click_int_large_t':'long long' <IntegralCast> part_of_explicit_cast
|         | |     `-ImplicitCastExpr 0x55974ad0ceb8 <col:43> 'unsigned int':'unsigned int' <LValueToRValue> part_of_explicit_cast
|         | |       `-DeclRefExpr 0x55974ad0ce98 <col:43> 'unsigned int':'unsigned int' lvalue Var 0x55974ad0c628 'x' 'unsigned int':'unsigned int'
|         | `-ReturnStmt 0x55974ad0cf90 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x55974ab41ba8 <col:20> 'bool' false
|         `-CompoundStmt 0x55974ad0d048 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x55974ad0d018 <line:1080:13, col:22> 'unsigned int':'unsigned int' lvalue '='
|           | |-DeclRefExpr 0x55974ad0cfc0 <col:13> 'unsigned int':'unsigned int' lvalue ParmVar 0x55974ad0c2b8 'result' 'unsigned int &'
|           | `-ImplicitCastExpr 0x55974ad0d000 <col:22> 'unsigned int':'unsigned int' <LValueToRValue>
|           |   `-DeclRefExpr 0x55974ad0cfe0 <col:22> 'unsigned int':'unsigned int' lvalue Var 0x55974ad0c628 'x' 'unsigned int':'unsigned int'
|           `-ReturnStmt 0x55974ad0d038 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x55974ab41c48 <col:20> 'bool' true
|-FieldDecl 0x55974ab3f8a0 <line:1085:5, col:9> col:9 referenced base 'int'
|-FieldDecl 0x55974ab3f908 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55974ab3f958 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55974ab3fc10 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55974ab3f998 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55974ab3fa18 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55974ab3fa90 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55974ab3fb10 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55974ab3ff18 <line:1092:5, line:1093:45> line:1092:10 used range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55974ab3fce0 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55974ab3fd58 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55974ab3fdf0 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55974ab42538 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55974ab42538
| `-ParmVarDecl 0x55974ab42648 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55974ab427c8 <col:7> col:7 implicit used constexpr IntArg 'void (IntArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974ab428d8 <col:7> col:7 used 'IntArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55974ad092d0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55974ad092a0 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55974ad09270 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55974ad09240 <col:7> 'IntArg' lvalue ParmVar 0x55974ab428d8 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x55974ab3f8a0 'base' 'int'
| | `-ImplicitCastExpr 0x55974ad093c8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55974ad09398 <col:7> 'int' xvalue .base 0x55974ab3f8a0
| |     `-CXXStaticCastExpr 0x55974ad09368 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55974ad09338 <col:7> 'IntArg' lvalue ParmVar 0x55974ab428d8 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x55974ab3f908 'status' 'int'
| | `-ImplicitCastExpr 0x55974ad09498 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55974ad09468 <col:7> 'int' xvalue .status 0x55974ab3f908
| |     `-CXXStaticCastExpr 0x55974ad09438 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55974ad09408 <col:7> 'IntArg' lvalue ParmVar 0x55974ab428d8 '' 'IntArg &&'
| `-CompoundStmt 0x55974ad094f0 <col:7>
`-CXXDestructorDecl 0x55974ad08430 <col:7> col:7 implicit ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974ab46ae0 <../dummy_inc/click/args.hh:1182:1, col:61> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55974ab46d38 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55974ad08358 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55974ad088d0 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55974ad088b0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55974ad08940 <col:19>
|-CXXConstructorDecl 0x55974ad08538 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<unsigned int> &)' inline default trivial noexcept-unevaluated 0x55974ad08538
| `-ParmVarDecl 0x55974ad08648 <col:19> col:19 'const DefaultArg<unsigned int> &'
|-CXXConstructorDecl 0x55974ad086e8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<unsigned int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974ad087f8 <col:19> col:19 used 'DefaultArg<unsigned int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55974ad09500 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55974ad09220 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x55974ad091f0 <col:19> 'DefaultArg<unsigned int>' xvalue static_cast<struct DefaultArg<unsigned int> &&> <NoOp>
| |       `-DeclRefExpr 0x55974ad091c0 <col:19> 'DefaultArg<unsigned int>' lvalue ParmVar 0x55974ad087f8 '' 'DefaultArg<unsigned int> &&'
| `-CompoundStmt 0x55974ad09570 <col:19>
`-CXXDestructorDecl 0x55974ad08980 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TimestampArg
         0 |   _Bool is_signed
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class Timestamp>
         0 |   class TimestampArg (base)
         0 |     _Bool is_signed
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9a4ef0 <../dummy_inc/click/timestamp.hh:1525:1, line:1534:1> line:1525:7 referenced class TimestampArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a9a5008 <col:1, col:7> col:7 implicit referenced class TimestampArg
|-AccessSpecDecl 0x55974a9a5098 <col:22, col:28> col:22 public
|-CXXConstructorDecl 0x55974a9a51a8 <line:1526:5, line:1528:5> line:1526:5 used TimestampArg 'void (bool)'
| |-ParmVarDecl 0x55974a9a50d0 <col:18, col:35> col:23 used is_signed 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55974a9a5568 <col:35> 'bool' false
| |-CXXCtorInitializer Field 0x55974a9a5500 'is_signed' 'bool'
| | `-ImplicitCastExpr 0x55974a9a55d8 <line:1527:21> 'bool' <LValueToRValue>
| |   `-DeclRefExpr 0x55974a9a5598 <col:21> 'bool' lvalue ParmVar 0x55974a9a50d0 'is_signed' 'bool'
| `-CompoundStmt 0x55974a9a5620 <col:32, line:1528:5>
|-CXXMethodDecl 0x55974a9a5438 <line:1529:5, line:1532:5> line:1529:10 used parse 'bool (const String &, Timestamp &, const ArgContext &)'
| |-ParmVarDecl 0x55974a9a5268 <col:16, col:30> col:30 used str 'const String &'
| |-ParmVarDecl 0x55974a9a52e0 <col:35, col:46> col:46 used value 'Timestamp &'
| |-ParmVarDecl 0x55974a9a5358 <col:53, col:78> col:71 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55974a9a5578 <col:78> 'const ArgContext' lvalue Var 0x55974a9a4be8 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55974a9a5830 <col:90, line:1532:5>
|   |-CStyleCastExpr 0x55974a9a5660 <line:1530:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55974a9a5630 <col:16> 'const ArgContext' lvalue ParmVar 0x55974a9a5358 'args' 'const ArgContext &'
|   `-ReturnStmt 0x55974a9a5820 <line:1531:9, col:46>
|     `-CallExpr 0x55974a9a57d0 <col:16, col:46> 'bool'
|       |-ImplicitCastExpr 0x55974a9a57b8 <col:16> 'bool (*)(const String &, Timestamp *, bool)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a9a5768 <col:16> 'bool (const String &, Timestamp *, bool)' lvalue Function 0x55974a9a4e38 'cp_time' 'bool (const String &, Timestamp *, bool)'
|       |-DeclRefExpr 0x55974a9a56d0 <col:24> 'const String' lvalue ParmVar 0x55974a9a5268 'str' 'const String &'
|       |-UnaryOperator 0x55974a9a5710 <col:29, col:30> 'Timestamp *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55974a9a56f0 <col:30> 'Timestamp' lvalue ParmVar 0x55974a9a52e0 'value' 'Timestamp &'
|       `-ImplicitCastExpr 0x55974a9a5808 <col:37> 'bool' <LValueToRValue>
|         `-MemberExpr 0x55974a9a5738 <col:37> 'bool' lvalue ->is_signed 0x55974a9a5500
|           `-CXXThisExpr 0x55974a9a5728 <col:37> 'TimestampArg *' implicit this
|-FieldDecl 0x55974a9a5500 <line:1533:5, col:10> col:10 referenced is_signed 'bool'
|-CXXDestructorDecl 0x55974ad19820 <line:1525:7> col:7 implicit ~TimestampArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55974ad19958 <col:7> col:7 implicit constexpr TimestampArg 'void (const TimestampArg &)' inline default trivial noexcept-unevaluated 0x55974ad19958
| `-ParmVarDecl 0x55974ad19a68 <col:7> col:7 'const TimestampArg &'
`-CXXConstructorDecl 0x55974ad19b08 <col:7> col:7 implicit used constexpr TimestampArg 'void (TimestampArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55974ad19c18 <col:7> col:7 used 'TimestampArg &&'
  |-CXXCtorInitializer Field 0x55974a9a5500 'is_signed' 'bool'
  | `-ImplicitCastExpr 0x55974ad1a9e0 <col:7> 'bool' <LValueToRValue>
  |   `-MemberExpr 0x55974ad1a9b0 <col:7> 'bool' xvalue .is_signed 0x55974a9a5500
  |     `-CXXStaticCastExpr 0x55974ad1a980 <col:7> 'TimestampArg' xvalue static_cast<class TimestampArg &&> <NoOp>
  |       `-DeclRefExpr 0x55974ad1a950 <col:7> 'TimestampArg' lvalue ParmVar 0x55974ad19c18 '' 'TimestampArg &&'
  `-CompoundStmt 0x55974ad1aa28 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.TimestampArg = type { i8 }
  NonVirtualBaseLLVMType:%class.TimestampArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974a9a5878 <../dummy_inc/click/timestamp.hh:1536:1, col:64> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'TimestampArg'
|-TemplateArgument type 'Timestamp'
|-CXXRecordDecl 0x55974a9a5ad8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55974ad19748 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'TimestampArg'
| | `-CXXConstructExpr 0x55974ad1a020 <col:19> 'TimestampArg' 'void (bool)'
| |   `-CXXDefaultArgExpr 0x55974ad1a000 <<invalid sloc>> 'bool'
| `-CompoundStmt 0x55974ad1a090 <col:19>
|-CXXConstructorDecl 0x55974ad19c88 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<Timestamp> &)' inline default trivial noexcept-unevaluated 0x55974ad19c88
| `-ParmVarDecl 0x55974ad19d98 <col:19> col:19 'const DefaultArg<Timestamp> &'
|-CXXConstructorDecl 0x55974ad19e38 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<Timestamp> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974ad19f48 <col:19> col:19 used 'DefaultArg<Timestamp> &&'
| |-CXXCtorInitializer 'TimestampArg'
| | `-CXXConstructExpr 0x55974ad1aa38 <col:19> 'TimestampArg' 'void (TimestampArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55974ad1a930 <col:19> 'TimestampArg' xvalue <UncheckedDerivedToBase (TimestampArg)>
| |     `-CXXStaticCastExpr 0x55974ad1a900 <col:19> 'DefaultArg<Timestamp>' xvalue static_cast<struct DefaultArg<class Timestamp> &&> <NoOp>
| |       `-DeclRefExpr 0x55974ad1a8d0 <col:19> 'DefaultArg<Timestamp>' lvalue ParmVar 0x55974ad19f48 '' 'DefaultArg<Timestamp> &&'
| `-CompoundStmt 0x55974ad1aaa8 <col:19>
`-CXXDestructorDecl 0x55974ad1a0d0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.20 = type { %class.TimestampArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.20 = type { %class.TimestampArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPAddressArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class IPAddress> (empty)
         0 |   class IPAddressArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a7ece00 prev 0x55974a7e01f8 <../dummy_inc/click/ipaddress.hh:367:1, line:378:1> line:367:7 referenced class IPAddressArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a7ecef8 <col:1, col:7> col:7 implicit class IPAddressArg
|-AccessSpecDecl 0x55974a7ecf88 <col:22, col:28> col:22 public
|-CXXMethodDecl 0x55974a7ed3b0 <line:368:5, line:369:43> line:368:24 basic_parse 'const char *(const char *, const char *, unsigned char *, int &)' static
| |-ParmVarDecl 0x55974a7ecfc8 <col:36, col:48> col:48 begin 'const char *'
| |-ParmVarDecl 0x55974a7ed048 <col:55, col:67> col:67 end 'const char *'
| |-ParmVarDecl 0x55974a7ed180 <line:369:8, col:29> col:22 value 'unsigned char *':'unsigned char *'
| `-ParmVarDecl 0x55974a7ed230 <col:32, col:37> col:37 nbytes 'int &'
|-CXXMethodDecl 0x55974a7ed678 <line:370:5, line:371:44> line:370:17 used parse 'bool (const String &, IPAddress &, const ArgContext &)' static
| |-ParmVarDecl 0x55974a7ed480 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55974a7ed4f8 <col:42, col:53> col:53 result 'IPAddress &'
| `-ParmVarDecl 0x55974a7ed598 <line:371:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55974a7f2018 <col:34> 'const ArgContext' lvalue Var 0x55974a7e0190 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55974a7f1a70 <line:372:5, line:375:5> line:372:17 parse 'bool (const String &, struct in_addr &, const ArgContext &)' static
| |-ParmVarDecl 0x55974a7ed740 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55974a7ed830 <col:42, col:58> col:58 used result 'struct in_addr &'
| |-ParmVarDecl 0x55974a7ed8a8 <line:373:9, col:34> col:27 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55974a7f2038 <col:34> 'const ArgContext' lvalue Var 0x55974a7e0190 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55974a7f2218 <col:46, line:375:5>
|   `-ReturnStmt 0x55974a7f2208 <line:374:2, col:63>
|     `-CallExpr 0x55974a7f21d0 <col:9, col:63> 'bool'
|       |-ImplicitCastExpr 0x55974a7f21b8 <col:9> 'bool (*)(const String &, IPAddress &, const ArgContext &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a7f2170 <col:9> 'bool (const String &, IPAddress &, const ArgContext &)' lvalue CXXMethod 0x55974a7ed678 'parse' 'bool (const String &, IPAddress &, const ArgContext &)'
|       |-DeclRefExpr 0x55974a7f20d0 <col:15> 'const String' lvalue ParmVar 0x55974a7ed740 'str' 'const String &'
|       |-CXXReinterpretCastExpr 0x55974a7f2120 <col:20, col:56> 'IPAddress' lvalue reinterpret_cast<class IPAddress &> <LValueBitCast>
|       | `-DeclRefExpr 0x55974a7f20f0 <col:50> 'struct in_addr':'in_addr' lvalue ParmVar 0x55974a7ed830 'result' 'struct in_addr &'
|       `-DeclRefExpr 0x55974a7f2150 <col:59> 'const ArgContext' lvalue ParmVar 0x55974a7ed8a8 'args' 'const ArgContext &'
|-CXXMethodDecl 0x55974a7f1f48 <line:376:5, line:377:44> line:376:17 parse 'bool (const String &, Vector<IPAddress> &, const ArgContext &)' static
| |-ParmVarDecl 0x55974a7f1b38 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55974a7f1db0 <col:42, col:61> col:61 result 'Vector<IPAddress> &'
| `-ParmVarDecl 0x55974a7f1e28 <line:377:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55974a7f2058 <col:34> 'const ArgContext' lvalue Var 0x55974a7e0190 'blank_args' 'const ArgContext'
|-CXXConstructorDecl 0x55974ad32a18 <line:367:7> col:7 implicit constexpr IPAddressArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55974ad32af0 <col:7> col:7 implicit ~IPAddressArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55974ad32c28 <col:7> col:7 implicit constexpr IPAddressArg 'void (const IPAddressArg &)' inline default trivial noexcept-unevaluated 0x55974ad32c28
| `-ParmVarDecl 0x55974ad32d38 <col:7> col:7 'const IPAddressArg &'
`-CXXConstructorDecl 0x55974ad32dd8 <col:7> col:7 implicit used constexpr IPAddressArg 'void (IPAddressArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55974ad32ee8 <col:7> col:7 'IPAddressArg &&'
  `-CompoundStmt 0x55974ad33b40 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.IPAddressArg = type { i8 }
  NonVirtualBaseLLVMType:%class.IPAddressArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974a7f3048 <../dummy_inc/click/ipaddress.hh:398:1, col:64> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IPAddressArg'
|-TemplateArgument type 'IPAddress'
|-CXXRecordDecl 0x55974a7f32a8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55974ad32928 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55974ad32f58 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<IPAddress> &)' inline default trivial noexcept-unevaluated 0x55974ad32f58
| `-ParmVarDecl 0x55974ad33068 <col:19> col:19 'const DefaultArg<IPAddress> &'
|-CXXConstructorDecl 0x55974ad33108 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<IPAddress> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974ad33218 <col:19> col:19 used 'DefaultArg<IPAddress> &&'
| |-CXXCtorInitializer 'IPAddressArg'
| | `-CXXConstructExpr 0x55974ad33b50 <col:19> 'IPAddressArg' 'void (IPAddressArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55974ad33b20 <col:19> 'IPAddressArg' xvalue <UncheckedDerivedToBase (IPAddressArg)>
| |     `-CXXStaticCastExpr 0x55974ad33af0 <col:19> 'DefaultArg<IPAddress>' xvalue static_cast<struct DefaultArg<class IPAddress> &&> <NoOp>
| |       `-DeclRefExpr 0x55974ad33ac0 <col:19> 'DefaultArg<IPAddress>' lvalue ParmVar 0x55974ad33218 '' 'DefaultArg<IPAddress> &&'
| `-CompoundStmt 0x55974ad33bc0 <col:19>
`-CXXDestructorDecl 0x55974ad332b8 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.21 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.21 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class EtherAddressArg
         0 |   int flags_
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class EtherAddress>
         0 |   class EtherAddressArg (base)
         0 |     int flags_
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55974a9fd3a8 <../dummy_inc/click/etheraddress.hh:205:1, line:224:1> line:205:7 referenced class EtherAddressArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55974a9fd4c8 <col:1, col:7> col:7 implicit referenced class EtherAddressArg
|-AccessSpecDecl 0x55974a9fd558 <col:25, col:31> col:25 public
|-TypedefDecl 0x55974a9fd590 <line:206:5, col:18> col:18 referenced enable_direct_parse 'void'
| `-BuiltinType 0x55974a4774e0 'void'
|-CXXConstructorDecl 0x55974a9fd6d8 <line:207:5, col:53> col:5 used EtherAddressArg 'void (int)'
| |-ParmVarDecl 0x55974a9fd600 <col:21, col:33> col:25 used flags 'int' cinit
| | `-IntegerLiteral 0x55974a9fe960 <col:33> 'int' 0
| |-CXXCtorInitializer Field 0x55974a9fe290 'flags_' 'int'
| | `-ImplicitCastExpr 0x55974a9fea00 <col:45> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55974a9fe9c0 <col:45> 'int' lvalue ParmVar 0x55974a9fd600 'flags' 'int'
| `-CompoundStmt 0x55974a9fea48 <col:52, col:53>
|-CXXMethodDecl 0x55974a9fd998 <line:208:5, line:210:5> line:208:17 used parse 'bool (const String &, EtherAddress &, const ArgContext &)' inline
| |-ParmVarDecl 0x55974a9fd798 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55974a9fd838 <col:42, col:56> col:56 used value 'EtherAddress &'
| |-ParmVarDecl 0x55974a9fd8b0 <col:63, col:88> col:81 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55974a9fe980 <col:88> 'const ArgContext' lvalue Var 0x55974a9fd340 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55974a95e6d8 <col:100, line:210:5>
|   `-ReturnStmt 0x55974a95e6c8 <line:209:9, col:46>
|     `-CallExpr 0x55974a95e670 <col:16, col:46> 'bool'
|       |-ImplicitCastExpr 0x55974a95e658 <col:16> 'bool (*)(const String &, EtherAddress &, const ArgContext &, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a95e610 <col:16> 'bool (const String &, EtherAddress &, const ArgContext &, int)' lvalue CXXMethod 0x55974a9fe558 'parse' 'bool (const String &, EtherAddress &, const ArgContext &, int)'
|       |-DeclRefExpr 0x55974a9feac0 <col:22> 'const String' lvalue ParmVar 0x55974a9fd798 'str' 'const String &'
|       |-DeclRefExpr 0x55974a9feae0 <col:27> 'EtherAddress' lvalue ParmVar 0x55974a9fd838 'value' 'EtherAddress &'
|       |-DeclRefExpr 0x55974a9feb00 <col:34> 'const ArgContext' lvalue ParmVar 0x55974a9fd8b0 'args' 'const ArgContext &'
|       `-ImplicitCastExpr 0x55974a95e6b0 <col:40> 'int' <LValueToRValue>
|         `-MemberExpr 0x55974a9feb30 <col:40> 'int' lvalue ->flags_ 0x55974a9fe290
|           `-CXXThisExpr 0x55974a9feb20 <col:40> 'EtherAddressArg *' implicit this
|-CXXMethodDecl 0x55974a9fdc38 <line:211:5, line:213:5> line:211:17 parse 'bool (const String &, unsigned char *, const ArgContext &)' inline
| |-ParmVarDecl 0x55974a9fda60 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55974a9fdae0 <col:42, col:57> col:57 used value 'unsigned char *'
| |-ParmVarDecl 0x55974a9fdb58 <col:64, col:89> col:82 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55974a9fe9a0 <col:89> 'const ArgContext' lvalue Var 0x55974a9fd340 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55974a95e8b0 <col:101, line:213:5>
|   `-ReturnStmt 0x55974a95e8a0 <line:212:2, col:66>
|     `-CXXMemberCallExpr 0x55974a95e868 <col:9, col:66> 'bool'
|       |-MemberExpr 0x55974a95e838 <col:9> '<bound member function type>' ->parse 0x55974a9fd998
|       | `-CXXThisExpr 0x55974a95e828 <col:9> 'EtherAddressArg *' implicit this
|       |-DeclRefExpr 0x55974a95e758 <col:15> 'const String' lvalue ParmVar 0x55974a9fda60 'str' 'const String &'
|       |-UnaryOperator 0x55974a95e7f0 <col:20, col:59> 'EtherAddress' lvalue prefix '*' cannot overflow
|       | `-CXXReinterpretCastExpr 0x55974a95e7c0 <col:21, col:59> 'EtherAddress *' reinterpret_cast<class EtherAddress *> <BitCast>
|       |   `-ImplicitCastExpr 0x55974a95e7a8 <col:54> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|       |     `-DeclRefExpr 0x55974a95e778 <col:54> 'unsigned char *' lvalue ParmVar 0x55974a9fdae0 'value' 'unsigned char *'
|       `-DeclRefExpr 0x55974a95e808 <col:62> 'const ArgContext' lvalue ParmVar 0x55974a9fdb58 'args' 'const ArgContext &'
|-CXXMethodDecl 0x55974a9fdef8 <line:214:5, line:216:5> line:214:17 used direct_parse 'bool (const String &, EtherAddress &, Args &)' inline
| |-ParmVarDecl 0x55974a9fdd00 <col:30, col:44> col:44 used str 'const String &'
| |-ParmVarDecl 0x55974a9fdd78 <col:49, col:63> col:63 used value 'EtherAddress &'
| |-ParmVarDecl 0x55974a9fde18 <col:70, col:76> col:76 used args 'Args &'
| `-CompoundStmt 0x55974a95ea98 <col:82, line:216:5>
|   `-ReturnStmt 0x55974a95ea88 <line:215:9, col:53>
|     `-CallExpr 0x55974a95ea30 <col:16, col:53> 'bool'
|       |-ImplicitCastExpr 0x55974a95ea18 <col:16> 'bool (*)(const String &, EtherAddress &, Args &, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55974a95e9d0 <col:16> 'bool (const String &, EtherAddress &, Args &, int)' lvalue CXXMethod 0x55974a9fe888 'direct_parse' 'bool (const String &, EtherAddress &, Args &, int)'
|       |-DeclRefExpr 0x55974a95e930 <col:29> 'const String' lvalue ParmVar 0x55974a9fdd00 'str' 'const String &'
|       |-DeclRefExpr 0x55974a95e950 <col:34> 'EtherAddress' lvalue ParmVar 0x55974a9fdd78 'value' 'EtherAddress &'
|       |-DeclRefExpr 0x55974a95e970 <col:41> 'Args' lvalue ParmVar 0x55974a9fde18 'args' 'Args &'
|       `-ImplicitCastExpr 0x55974a95ea70 <col:47> 'int' <LValueToRValue>
|         `-MemberExpr 0x55974a95e9a0 <col:47> 'int' lvalue ->flags_ 0x55974a9fe290
|           `-CXXThisExpr 0x55974a95e990 <col:47> 'EtherAddressArg *' implicit this
|-CXXMethodDecl 0x55974a9fe198 <line:217:5, line:219:5> line:217:17 direct_parse 'bool (const String &, unsigned char *, Args &)' inline
| |-ParmVarDecl 0x55974a9fdfc0 <col:30, col:44> col:44 used str 'const String &'
| |-ParmVarDecl 0x55974a9fe040 <col:49, col:64> col:64 used value 'unsigned char *'
| |-ParmVarDecl 0x55974a9fe0b8 <col:71, col:77> col:77 used args 'Args &'
| `-CompoundStmt 0x55974a95ec70 <col:83, line:219:5>
|   `-ReturnStmt 0x55974a95ec60 <line:218:2, col:73>
|     `-CXXMemberCallExpr 0x55974a95ec28 <col:9, col:73> 'bool'
|       |-MemberExpr 0x55974a95ebf8 <col:9> '<bound member function type>' ->direct_parse 0x55974a9fdef8
|       | `-CXXThisExpr 0x55974a95ebe8 <col:9> 'EtherAddressArg *' implicit this
|       |-DeclRefExpr 0x55974a95eb18 <col:22> 'const String' lvalue ParmVar 0x55974a9fdfc0 'str' 'const String &'
|       |-UnaryOperator 0x55974a95ebb0 <col:27, col:66> 'EtherAddress' lvalue prefix '*' cannot overflow
|       | `-CXXReinterpretCastExpr 0x55974a95eb80 <col:28, col:66> 'EtherAddress *' reinterpret_cast<class EtherAddress *> <BitCast>
|       |   `-ImplicitCastExpr 0x55974a95eb68 <col:61> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|       |     `-DeclRefExpr 0x55974a95eb38 <col:61> 'unsigned char *' lvalue ParmVar 0x55974a9fe040 'value' 'unsigned char *'
|       `-DeclRefExpr 0x55974a95ebc8 <col:69> 'Args' lvalue ParmVar 0x55974a9fe0b8 'args' 'Args &'
|-AccessSpecDecl 0x55974a9fe250 <line:220:3, col:10> col:3 private
|-FieldDecl 0x55974a9fe290 <line:221:5, col:9> col:9 referenced flags_ 'int'
|-CXXMethodDecl 0x55974a9fe558 <line:222:5, col:96> col:17 used parse 'bool (const String &, EtherAddress &, const ArgContext &, int)' static
| |-ParmVarDecl 0x55974a9fe2f0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55974a9fe368 <col:42, col:56> col:56 value 'EtherAddress &'
| |-ParmVarDecl 0x55974a9fe3e0 <col:63, col:81> col:81 args 'const ArgContext &'
| `-ParmVarDecl 0x55974a9fe460 <col:87, col:91> col:91 flags 'int'
|-CXXMethodDecl 0x55974a9fe888 <line:223:5, col:91> col:17 used direct_parse 'bool (const String &, EtherAddress &, Args &, int)' static
| |-ParmVarDecl 0x55974a9fe628 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55974a9fe6a0 <col:49, col:63> col:63 value 'EtherAddress &'
| |-ParmVarDecl 0x55974a9fe718 <col:70, col:76> col:76 args 'Args &'
| `-ParmVarDecl 0x55974a9fe798 <col:82, col:86> col:86 flags 'int'
|-CXXDestructorDecl 0x55974ad3e6c0 <line:205:7> col:7 implicit ~EtherAddressArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55974ad3e7f8 <col:7> col:7 implicit constexpr EtherAddressArg 'void (const EtherAddressArg &)' inline default trivial noexcept-unevaluated 0x55974ad3e7f8
| `-ParmVarDecl 0x55974ad3e908 <col:7> col:7 'const EtherAddressArg &'
`-CXXConstructorDecl 0x55974ad3e9a8 <col:7> col:7 implicit used constexpr EtherAddressArg 'void (EtherAddressArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55974ad3eab8 <col:7> col:7 used 'EtherAddressArg &&'
  |-CXXCtorInitializer Field 0x55974a9fe290 'flags_' 'int'
  | `-ImplicitCastExpr 0x55974ad3f898 <col:7> 'int' <LValueToRValue>
  |   `-MemberExpr 0x55974ad3f850 <col:7> 'int' xvalue .flags_ 0x55974a9fe290
  |     `-CXXStaticCastExpr 0x55974ad3f820 <col:7> 'EtherAddressArg' xvalue static_cast<class EtherAddressArg &&> <NoOp>
  |       `-DeclRefExpr 0x55974ad3f7f0 <col:7> 'EtherAddressArg' lvalue ParmVar 0x55974ad3eab8 '' 'EtherAddressArg &&'
  `-CompoundStmt 0x55974ad3f8e0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddressArg = type { i32 }
  NonVirtualBaseLLVMType:%class.EtherAddressArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55974a95ecb0 <../dummy_inc/click/etheraddress.hh:226:1, col:70> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'EtherAddressArg'
|-TemplateArgument type 'EtherAddress'
|-CXXRecordDecl 0x55974a95ef08 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55974ad3e5e8 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'EtherAddressArg'
| | `-CXXConstructExpr 0x55974ad3eec0 <col:19> 'EtherAddressArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55974ad3eea0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55974ad3ef30 <col:19>
|-CXXConstructorDecl 0x55974ad3eb28 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<EtherAddress> &)' inline default trivial noexcept-unevaluated 0x55974ad3eb28
| `-ParmVarDecl 0x55974ad3ec38 <col:19> col:19 'const DefaultArg<EtherAddress> &'
|-CXXConstructorDecl 0x55974ad3ecd8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<EtherAddress> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55974ad3ede8 <col:19> col:19 used 'DefaultArg<EtherAddress> &&'
| |-CXXCtorInitializer 'EtherAddressArg'
| | `-CXXConstructExpr 0x55974ad3f8f0 <col:19> 'EtherAddressArg' 'void (EtherAddressArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55974ad3f7d0 <col:19> 'EtherAddressArg' xvalue <UncheckedDerivedToBase (EtherAddressArg)>
| |     `-CXXStaticCastExpr 0x55974ad3f7a0 <col:19> 'DefaultArg<EtherAddress>' xvalue static_cast<struct DefaultArg<class EtherAddress> &&> <NoOp>
| |       `-DeclRefExpr 0x55974ad3f770 <col:19> 'DefaultArg<EtherAddress>' lvalue ParmVar 0x55974ad3ede8 '' 'DefaultArg<EtherAddress> &&'
| `-CompoundStmt 0x55974ad3f960 <col:19>
`-CXXDestructorDecl 0x55974ad3ef70 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.22 = type { %class.EtherAddressArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.22 = type { %class.EtherAddressArg }
  IsZeroInitializable:1
  BitFields:[
]>
