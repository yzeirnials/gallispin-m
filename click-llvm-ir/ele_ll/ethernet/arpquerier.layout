
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class EtherAddress
         0 |   uint16_t [3] _data
           | [sizeof=6, dsize=6, align=1,
           |  nvsize=6, nvalign=1]

*** Dumping AST Record Layout
         0 | class List_member<struct ARPTable::ARPEntry>
         0 |   struct ARPTable::ARPEntry * _next
         8 |   struct ARPTable::ARPEntry * _prev
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct ARPTable::ARPEntry
         0 |   class IPAddress _ip
         0 |     uint32_t _addr
         8 |   struct ARPTable::ARPEntry * _hashnext
        16 |   class EtherAddress _eth
        16 |     uint16_t [3] _data
        22 |   _Bool _known
        23 |   uint8_t _num_polls_since_reply
        24 |   click_jiffies_t _live_at_j
        28 |   click_jiffies_t _polled_at_j
        32 |   class Packet * _head
        40 |   class Packet * _tail
        48 |   uint32_t _entry_packet_count
        56 |   class List_member<struct ARPTable::ARPEntry> _age_link
        56 |     struct ARPTable::ARPEntry * _next
        64 |     struct ARPTable::ARPEntry * _prev
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >
         0 |   struct ARPTable::ARPEntry * _element
         8 |   struct ARPTable::ARPEntry ** _pprev
        16 |   HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >
         0 |   class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > (base)
         0 |     struct ARPTable::ARPEntry * _element
         8 |     struct ARPTable::ARPEntry ** _pprev
        16 |     HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522fd33f8 prev 0x562522fcab98 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522fd34f0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x562522fd3580 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x562522fd35f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x562522fd36b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x562522fd3780 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x562522fd38f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x562522fd3830 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x562522fd39a0 <col:24>
| `-OptimizeNoneAttr 0x562522fd39f8 <col:34>
|-CXXMethodDecl 0x562522fd3a40 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x562522fd3cf8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x562522fd3af0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x562522fd3b68 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x562522fd3be8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x562522fd3db0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x562522fd3de8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x562522fd3e50 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x562522fd3ed8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x562522fd41f8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x562522fd3f90 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x562522fd4008 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x562522fd4080 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x562522fd4100 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x562522fd4310 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x562522fdbc88 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x562522fdbc88
| `-ParmVarDecl 0x562522fdbd98 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x562522fdbe38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x562522fdbe38
| `-ParmVarDecl 0x562522fdbf48 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5625232363f0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522d84ec0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522d84fd8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x562522d85068 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x562522d85138 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x562522d85220 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x562522d85438 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x562522d852e0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d855e8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x562522d854f0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x562522d85730 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x562522d856a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x562522d85878 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x562522d857e8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d859c0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x562522d85930 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d85a88 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x562522d85bd0 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x562522d85b40 <col:28> col:31 'int'
|-CXXMethodDecl 0x562522d85c98 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x562522d85de0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x562522d85d50 <col:28> col:31 'int'
|-CXXMethodDecl 0x562522d85f58 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x562522d85e98 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d860a0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x562522d86010 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d86168 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x562522d86328 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x562522d86218 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562522d86290 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d86578 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x562522d863e8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562522d86460 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522d86628 <col:86> "" ""
|-CXXMethodDecl 0x562522d86898 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x562522d86708 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x562522d86780 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d86a48 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x562522d86958 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x562522d86bf8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x562522d86b00 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x562522d86ec8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x562522d86cb0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x562522d86d28 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562522d86da0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d871a8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x562522d86f90 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x562522d87008 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562522d87080 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522d87260 <col:115> "" ""
|-AccessSpecDecl 0x562522d872d0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x562522d87308 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522d88820 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x562522d88820
| `-ParmVarDecl 0x562522d88928 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x562522d889c8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x562522d889c8
| `-ParmVarDecl 0x562522d88ad8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x562522dbe108 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x562522faff00 <col:7>
|-CXXConstructorDecl 0x562522dbe1e0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x562522dbe1e0
| `-ParmVarDecl 0x562522dbe2f8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x562522dbe368 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x562522dbe368
| `-ParmVarDecl 0x562522dbe478 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x562522fb2900 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523181220 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x5625231813f8 prev 0x562523181220 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x562523181488 <col:46, col:52> col:46 public
|-TypedefDecl 0x5625231814b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523183080 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x562523183030 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x562523181960 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x562523181860 'type'
|     `-TemplateSpecializationType 0x5625231817f0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5625231816d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x5625231816b0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x562523181690 <col:24> 'unsigned long' 8
|       `-RecordType 0x5625231817d0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x5625231816f0 'char_array'
|-TypedefDecl 0x562523183138 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x562523183100 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x5625231830e0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x562523183080 'type'
|     `-ElaboratedType 0x562523183030 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x562523181960 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x562523181860 'type'
|         `-TemplateSpecializationType 0x5625231817f0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5625231816d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x5625231816b0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x562523181690 <col:24> 'unsigned long' 8
|           `-RecordType 0x5625231817d0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x5625231816f0 'char_array'
|-CXXMethodDecl 0x5625231832b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x5625231831c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x5625231833a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x562523183488 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x562523183488
|-CXXMethodDecl 0x562523183758 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x562523183660 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x562523183998 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x562523183810 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x562523183888 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x562523183b68 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x562523183a58 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x562523183ad0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x562523183cc8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x562523183d98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x562523183fe8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x562523183e58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x562523183ed0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x562523184248 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x5625231840b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x562523184130 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x562523184408 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x562523184318 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5625231845c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5625231844d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x562523184680 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x562523184730 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x562523184968 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5625231847e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x562523184858 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x562523184c08 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x562523184b10 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x562523184cd0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x562523184d20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x562523184d70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625231daf38 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x5625231e5140 prev 0x5625231daf38 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5625231e6150 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5625231e6100 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x5625231e60e0 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x5625231e5f90 'type'
|     `-SubstTemplateTypeParmType 0x562523180df0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x562523180940 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x562523180858 'sized_array_memory'
|-FieldDecl 0x5625231e6250 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5625231e62a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5625231e62d8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x5625231e51d0 'Element *' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-PointerType 0x562522fbc940 'Element *'
|     `-RecordType 0x562522fbc6c0 'Element'
|       `-CXXRecord 0x562522fc6410 'Element'
|-TypedefDecl 0x5625231e6368 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x5625231e6330 'Element *&'
|   `-SubstTemplateTypeParmType 0x5625231e51d0 'Element *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522fbc940 'Element *'
|       `-RecordType 0x562522fbc6c0 'Element'
|         `-CXXRecord 0x562522fc6410 'Element'
|-TypedefDecl 0x5625231e6428 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x5625231e63f0 'Element *const &'
|   `-QualType 0x5625231e51d1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5625231e51d0 'Element *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522fbc940 'Element *'
|         `-RecordType 0x562522fbc6c0 'Element'
|           `-CXXRecord 0x562522fc6410 'Element'
|-TypedefDecl 0x5625231e64b8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x5625231e6480 'Element **'
|   `-SubstTemplateTypeParmType 0x5625231e51d0 'Element *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522fbc940 'Element *'
|       `-RecordType 0x562522fbc6c0 'Element'
|         `-CXXRecord 0x562522fc6410 'Element'
|-TypedefDecl 0x5625231e6578 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x5625231e6540 'Element *const *'
|   `-QualType 0x5625231e51d1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5625231e51d0 'Element *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522fbc940 'Element *'
|         `-RecordType 0x562522fbc6c0 'Element'
|           `-CXXRecord 0x562522fc6410 'Element'
|-TypedefDecl 0x5625231e7150 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x5625231e7100 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x5625231e70e0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x5625231e7070 'type'
|     `-SubstTemplateTypeParmType 0x5625231e6e30 'Element *' sugar
|       |-TemplateTypeParmType 0x562522d354f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d354a0 'T'
|       `-PointerType 0x562522fbc940 'Element *'
|         `-RecordType 0x562522fbc6c0 'Element'
|           `-CXXRecord 0x562522fc6410 'Element'
|-TypedefDecl 0x5625231e71b8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x5625231e63f0 'Element *const &'
|   `-QualType 0x5625231e51d1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5625231e51d0 'Element *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522fbc940 'Element *'
|         `-RecordType 0x562522fbc6c0 'Element'
|           `-CXXRecord 0x562522fc6410 'Element'
|-TypedefDecl 0x5625231e7210 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625231e7278 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x5625231e6480 'Element **'
|   `-SubstTemplateTypeParmType 0x5625231e51d0 'Element *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522fbc940 'Element *'
|       `-RecordType 0x562522fbc6c0 'Element'
|         `-CXXRecord 0x562522fc6410 'Element'
|-TypedefDecl 0x5625231e72e0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x5625231e6540 'Element *const *'
|   `-QualType 0x5625231e51d1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5625231e51d0 'Element *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522fbc940 'Element *'
|         `-RecordType 0x562522fbc6c0 'Element'
|           `-CXXRecord 0x562522fc6410 'Element'
|-EnumDecl 0x5625231e7338 <line:134:5> col:5
| `-EnumConstantDecl 0x5625231e7430 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5625231e7410 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x5625231e74b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5625231e7748 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231e7570 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231e7610 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x5625231e79d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5625231e78c0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x5625231e7c98 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5625231e7b80 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5625231e7fb0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5625231e7e90 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x5625231e82c0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5625231e81a0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5625231e85b0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231e83f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231e8470 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5625231e8708 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5625231e87e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231e8840 <col:30> Inherited
|-CXXMethodDecl 0x5625231e8888 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5625231e8938 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231e8990 <col:30> Inherited
|-CXXMethodDecl 0x5625231e8a58 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5625231e8b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231e8b60 <col:30> Inherited
|-CXXMethodDecl 0x5625231e8ba8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5625231e8c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231e8cb0 <col:30> Inherited
|-CXXMethodDecl 0x5625231e8cf8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5625231e8da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231e8e00 <col:30> Inherited
|-CXXMethodDecl 0x5625231e8e48 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5625231e8ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231e8f50 <col:30> Inherited
|-CXXMethodDecl 0x5625231e8f78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231e9028 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231e90d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5625231e9298 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231e9188 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231e9200 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5625231e93e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5625231e9358 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231e9598 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x5625231e94a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231e9650 <col:20>
| `-OptimizeNoneAttr 0x5625231e96a8 <col:30>
|-CXXMethodDecl 0x5625231e97c8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5625231e96d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231e9880 <col:20>
| `-OptimizeNoneAttr 0x5625231e98d8 <col:30>
|-CXXMethodDecl 0x5625231e9990 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5625231e9900 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231e9ad8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231e9a48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231e9c08 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x5625231e9d38 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x5625231e9e08 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x5625231e9ed8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x5625231ea018 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5625231e9f88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231ea160 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231ea0d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231ea2a8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5625231ea218 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231ea360 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5625231ea460 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5625231ea3d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231ea518 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5625231ea5d8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x5625231ea6d8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x5625231ea858 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5625231ea798 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x5625231eb018 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5625231ea910 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x5625231eaf78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x5625231eae78 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x5625231eb0f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5625231eb248 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5625231eb1b8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5625231eb300 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5625231eb548 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231eb3c0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5625231eb438 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5625231eb708 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x5625231eb618 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5625231eb958 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x5625231eb7d0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5625231eb848 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5625231eba18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5625231ebc78 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x5625231ebb80 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x5625231ebd48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5625231ebd48

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522d9a2b0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x562522d9a3c8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x562522d9a468 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x562522d9a4c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x562522d9a528 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x562522d9a5d8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522d9a8e0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522d9a9f8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x562522d9aaa0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x562522d9ab08 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x562522d9ab98 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x562522da0c30 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x562522da1068 <col:12>
|-CXXConstructorDecl 0x562522da0d38 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x562522da0e48 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x562522d9aaa0 'data' 'const char *'
| | `-ImplicitCastExpr 0x562522da35f0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x562522da35c0 <col:12> 'const char *const' lvalue .data 0x562522d9aaa0
| |     `-DeclRefExpr 0x562522da35a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522da0e48 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x562522d9ab08 'length' 'int'
| | `-ImplicitCastExpr 0x562522da3680 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x562522da3650 <col:12> 'const int' lvalue .length 0x562522d9ab08
| |     `-DeclRefExpr 0x562522da3630 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522da0e48 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x562522d9ab98 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x562522da3710 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x562522da36e0 <col:12> 'String::memo_t *const' lvalue .memo 0x562522d9ab98
| |     `-DeclRefExpr 0x562522da36c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522da0e48 '' 'const String::rep_t &'
| `-CompoundStmt 0x562522da3768 <col:12>
|-CXXConstructorDecl 0x562522da0ee8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x562522da0ee8
| `-ParmVarDecl 0x562522da0ff8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x562522da6550 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x562522db1f68 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x562522db2078 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x562522db2590 <col:12>
|   |-BinaryOperator 0x562522db23a8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x562522db2360 <col:12> 'const char *' lvalue ->data 0x562522d9aaa0
|   | | `-CXXThisExpr 0x562522db2350 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x562522db2390 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x562522db2320 <col:12> 'const char *const' lvalue .data 0x562522d9aaa0
|   |     `-DeclRefExpr 0x562522db2300 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522db2078 '' 'const String::rep_t &'
|   |-BinaryOperator 0x562522db2470 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x562522db2428 <col:12> 'int' lvalue ->length 0x562522d9ab08
|   | | `-CXXThisExpr 0x562522db2418 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x562522db2458 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x562522db23e8 <col:12> 'const int' lvalue .length 0x562522d9ab08
|   |     `-DeclRefExpr 0x562522db23c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522db2078 '' 'const String::rep_t &'
|   |-BinaryOperator 0x562522db2538 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x562522db24f0 <col:12> 'String::memo_t *' lvalue ->memo 0x562522d9ab98
|   | | `-CXXThisExpr 0x562522db24e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x562522db2520 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x562522db24b0 <col:12> 'String::memo_t *const' lvalue .memo 0x562522d9ab98
|   |     `-DeclRefExpr 0x562522db2490 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522db2078 '' 'const String::rep_t &'
|   `-ReturnStmt 0x562522db2580 <col:12>
|     `-UnaryOperator 0x562522db2568 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x562522db2558 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x562522db20e8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x562522db20e8
  `-ParmVarDecl 0x562522db21f8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522d91820 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562522d91938 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x562522d919c8 <col:16, col:22> col:16 public
|-TypedefDecl 0x562522d91a08 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x562522a5edc0 'const char *'
|   `-QualType 0x562522a5e311 'const char' const
|     `-BuiltinType 0x562522a5e310 'char'
|-TypedefDecl 0x562522d91a90 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x562522d91a60 'String::const_iterator' sugar
|   |-Typedef 0x562522d91a08 'const_iterator'
|   `-PointerType 0x562522a5edc0 'const char *'
|     `-QualType 0x562522a5e311 'const char' const
|       `-BuiltinType 0x562522a5e310 'char'
|-TypedefDecl 0x562522d91c00 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x562522d91b70 'int (String::*)() const'
|   |-RecordType 0x562522d918b0 'String'
|   | `-CXXRecord 0x562522d91820 'String'
|   `-ParenType 0x562522d91b10 'int () const' sugar
|     `-FunctionProtoType 0x562522d656a0 'int () const' const cdecl
|       `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562522d91c68 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x562522bba280 'int64_t' sugar
|   |-Typedef 0x562522ac72d0 'int64_t'
|   `-TypedefType 0x562522aa04d0 '__int64_t' sugar
|     |-Typedef 0x562522aa00a8 '__int64_t'
|     `-BuiltinType 0x562522a5e390 'long'
|-TypedefDecl 0x562522d91cd0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x562522bba1a0 'uint64_t' sugar
|   |-Typedef 0x562522ac7470 'uint64_t'
|   `-TypedefType 0x562522aa0560 '__uint64_t' sugar
|     |-Typedef 0x562522aa0118 '__uint64_t'
|     `-BuiltinType 0x562522a5e430 'unsigned long'
|-TypedefDecl 0x562522d91d60 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x562522d91d30 'String::intmax_t' sugar
|   |-Typedef 0x562522d91c68 'intmax_t'
|   `-TypedefType 0x562522bba280 'int64_t' sugar
|     |-Typedef 0x562522ac72d0 'int64_t'
|     `-TypedefType 0x562522aa04d0 '__int64_t' sugar
|       |-Typedef 0x562522aa00a8 '__int64_t'
|       `-BuiltinType 0x562522a5e390 'long'
|-TypedefDecl 0x562522d91df0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x562522d91dc0 'String::uintmax_t' sugar
|   |-Typedef 0x562522d91cd0 'uintmax_t'
|   `-TypedefType 0x562522bba1a0 'uint64_t' sugar
|     |-Typedef 0x562522ac7470 'uint64_t'
|     `-TypedefType 0x562522aa0560 '__uint64_t' sugar
|       |-Typedef 0x562522aa0118 '__uint64_t'
|       `-BuiltinType 0x562522a5e430 'unsigned long'
|-CXXConstructorDecl 0x562522d91eb0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x562522d92058 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x562522d91f98 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x562522d92208 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x562522d92148 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x562522d92360 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x562522d922d0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x562522d92578 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x562522d92428 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x562522d924a8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x562522d92798 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x562522d92648 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x562522d926c8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x562522d929b8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x562522d92868 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x562522d928e8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x562522d92bd8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x562522d92a88 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x562522d92b08 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x562522d92d68 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x562522d92ca0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x562522d92ee8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x562522d92e28 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x562522d93078 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x562522d92fb0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x562522d931d0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x562522d93140 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x562522d93328 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x562522d93298 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x562522d93480 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x562522d933f0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x562522d93608 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x562522d93548 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x562522d93798 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x562522d936d0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x562522d93928 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x562522d93860 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x562522d93ab8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x562522d939f0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x562522d93bb0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x562522d93cd8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x562522d93e58 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x562522d93d90 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x562522d93fa8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x562522d93f18 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x562522d94060 <col:63> "" ""
|-CXXMethodDecl 0x562522d941a8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x562522d940e8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x562522d943b8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x562522d94268 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x562522d942e8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x562522d945d8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x562522d94480 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x562522d94500 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x562522d948b8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x562522d94698 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x562522d94718 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x562522da0700 <col:55> 'int' 10
| `-ParmVarDecl 0x562522d94790 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562522da0720 <col:76> 'bool' true
|-CXXMethodDecl 0x562522d94b98 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x562522d94980 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x562522d94a00 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x562522da0730 <col:56> 'int' 10
| `-ParmVarDecl 0x562522d94a78 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562522da0750 <col:77> 'bool' true
|-CXXMethodDecl 0x562522d94ca0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x562522d94d68 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x562522d94e30 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x562522d94ed0 <col:20>
| `-OptimizeNoneAttr 0x562522d94f28 <col:30>
|-CXXConversionDecl 0x562522d95018 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x562522d950e8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x562522d951a8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x562522d95298 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x562522d95358 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x562522d954d8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x562522d95410 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x562522d95628 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x562522d95598 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x562522d95718 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x562522d957d8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x562522d95a28 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x562522d95890 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x562522d95910 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x562522d95c88 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x562522d95af0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x562522d95b70 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x562522d95d58 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x562522d95f68 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x562522d95e10 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x562522d95e90 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x562522d96188 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x562522d96030 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x562522d960b0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x562522d96318 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x562522d96250 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x562522d96408 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x562522d96578 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x562522d964b8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x562522d96788 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x562522d96638 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x562522d966b8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x562522d969a0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x562522d96848 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x562522d968c0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x562522d96b30 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x562522d96a60 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x562522d96d50 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x562522d96bf0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x562522d96c70 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x562522d96ea0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x562522d96e10 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x562522d97078 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x562522d96f60 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x562522d96fe0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x562522d971c8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x562522d97138 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x562522d973e0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x562522d97280 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x562522d97300 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x562522da0760 <col:39> 'int' 0
|-CXXMethodDecl 0x562522d97600 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x562522d974a0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x562522d97520 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x562522da0780 <col:48> 'int' 0
|-CXXMethodDecl 0x562522d977e0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x562522d976c0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x562522d97740 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x562522da07a0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x562522d978b0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x562522d97970 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x562522d97a30 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x562522d97af0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x562522d97bb0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x562522d97d58 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x562522d97c60 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x562522d97ed8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x562522d97e10 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x562522d980b0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x562522d97f98 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x562522d98228 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x562522d98168 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x562522d98370 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x562522d982e0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x562522d984c0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x562522d98430 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x562522d98698 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x562522d98580 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x562522d98600 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x562522d98878 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x562522d98760 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x562522d987e0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x562522d989c8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x562522d98938 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x562522d98bd8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x562522d98a88 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x562522d98b08 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x562522d98d38 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x562522d98ca0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x562522d98e90 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x562522d98df8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x562522d98f38 <col:57> "" ""
|-CXXMethodDecl 0x562522d99048 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x562522d98fb8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x562522d99198 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x562522d99108 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x562522d99318 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x562522d99250 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x562522d993e0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x562522d994a0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x562522d99560 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x562522d99600 <col:49> "" ""
|-CXXMethodDecl 0x562522d99690 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x562522d99750 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x562522d99840 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x562522d99908 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x562522d999c8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x562522d99a88 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x562522d99b80 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x562522d99c48 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x562522d99d10 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x562522d99ee8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x562522d99dc8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x562522d99e48 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x562522d9a110 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x562522d99fb0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x562522d9a030 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x562522d9a220 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x562522d9a288 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x562522d9a2b0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x562522d9a3c8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x562522d9a468 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x562522d9a4c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x562522d9a528 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x562522d9a5d8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x562522d9a640 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x562522d9a878 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x562522d9a8c8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522d9a858 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x562522d9a768 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x562522d9a710 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x562522d9a750 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x562522d9a730 <col:32> 'int' 8
|-CXXRecordDecl 0x562522d9a8e0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562522d9a9f8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x562522d9aaa0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x562522d9ab08 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x562522d9ab98 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x562522da0c30 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x562522da1068 <col:12>
| |-CXXConstructorDecl 0x562522da0d38 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x562522da0e48 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x562522d9aaa0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x562522da35f0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x562522da35c0 <col:12> 'const char *const' lvalue .data 0x562522d9aaa0
| | |     `-DeclRefExpr 0x562522da35a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522da0e48 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x562522d9ab08 'length' 'int'
| | | `-ImplicitCastExpr 0x562522da3680 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x562522da3650 <col:12> 'const int' lvalue .length 0x562522d9ab08
| | |     `-DeclRefExpr 0x562522da3630 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522da0e48 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x562522d9ab98 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x562522da3710 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x562522da36e0 <col:12> 'String::memo_t *const' lvalue .memo 0x562522d9ab98
| | |     `-DeclRefExpr 0x562522da36c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522da0e48 '' 'const String::rep_t &'
| | `-CompoundStmt 0x562522da3768 <col:12>
| |-CXXConstructorDecl 0x562522da0ee8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x562522da0ee8
| | `-ParmVarDecl 0x562522da0ff8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x562522da6550 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x562522db1f68 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x562522db2078 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x562522db2590 <col:12>
| |   |-BinaryOperator 0x562522db23a8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x562522db2360 <col:12> 'const char *' lvalue ->data 0x562522d9aaa0
| |   | | `-CXXThisExpr 0x562522db2350 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x562522db2390 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x562522db2320 <col:12> 'const char *const' lvalue .data 0x562522d9aaa0
| |   |     `-DeclRefExpr 0x562522db2300 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522db2078 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x562522db2470 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x562522db2428 <col:12> 'int' lvalue ->length 0x562522d9ab08
| |   | | `-CXXThisExpr 0x562522db2418 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x562522db2458 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x562522db23e8 <col:12> 'const int' lvalue .length 0x562522d9ab08
| |   |     `-DeclRefExpr 0x562522db23c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522db2078 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x562522db2538 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x562522db24f0 <col:12> 'String::memo_t *' lvalue ->memo 0x562522d9ab98
| |   | | `-CXXThisExpr 0x562522db24e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x562522db2520 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x562522db24b0 <col:12> 'String::memo_t *const' lvalue .memo 0x562522d9ab98
| |   |     `-DeclRefExpr 0x562522db2490 <col:12> 'const String::rep_t' lvalue ParmVar 0x562522db2078 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x562522db2580 <col:12>
| |     `-UnaryOperator 0x562522db2568 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x562522db2558 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x562522db20e8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x562522db20e8
|   `-ParmVarDecl 0x562522db21f8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x562522d9ac10 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x562522d9ae58 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x562522d9ac78 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x562522d9acf8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x562522d9ad70 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x562522da0bf0 <col:79, line:261:5>
|   |-BinaryOperator 0x562522da0868 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x562522da0800 <col:2, col:5> 'const char *' lvalue .data 0x562522d9aaa0
|   | | `-MemberExpr 0x562522da07d0 <col:2> 'String::rep_t' lvalue ->_r 0x562522d9ac10
|   | |   `-CXXThisExpr 0x562522da07c0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x562522da0850 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x562522da0830 <col:12> 'const char *' lvalue ParmVar 0x562522d9ac78 'data' 'const char *'
|   |-BinaryOperator 0x562522da0930 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x562522da08c8 <col:2, col:5> 'int' lvalue .length 0x562522d9ab08
|   | | `-MemberExpr 0x562522da0898 <col:2> 'String::rep_t' lvalue ->_r 0x562522d9ac10
|   | |   `-CXXThisExpr 0x562522da0888 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x562522da0918 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562522da08f8 <col:14> 'int' lvalue ParmVar 0x562522d9acf8 'length' 'int'
|   `-IfStmt 0x562522da0bd8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x562522da0a50 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x562522da0a38 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x562522da0a18 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x562522da09f8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x562522da0990 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x562522d9ab98
|     |       | `-MemberExpr 0x562522da0960 <col:7> 'String::rep_t' lvalue ->_r 0x562522d9ac10
|     |       |   `-CXXThisExpr 0x562522da0950 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x562522da09e0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x562522da09c0 <col:17> 'String::memo_t *' lvalue ParmVar 0x562522d9ad70 'memo' 'String::memo_t *'
|     `-CallExpr 0x562522da0bb0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x562522da0b98 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522da0aa0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x562522d89888 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x562522da0b08 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x562522d9a468
|         `-ImplicitCastExpr 0x562522da0af0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x562522da0ad0 <col:27> 'String::memo_t *' lvalue ParmVar 0x562522d9ad70 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x562522d9b108 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x562522d9af28 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x562522d9afa8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x562522d9b020 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x562522d9ac10 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x562522da1078 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x562522da1208 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x562522da1170 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x562522da10e0 <col:2> '<bound member function type>' ->assign_memo 0x562522d9ae58
|     | `-ImplicitCastExpr 0x562522da11a8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x562522da10d0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x562522da11c0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x562522da1110 <col:14> 'const char *' lvalue ParmVar 0x562522d9af28 'data' 'const char *'
|     |-ImplicitCastExpr 0x562522da11d8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x562522da1130 <col:20> 'int' lvalue ParmVar 0x562522d9afa8 'length' 'int'
|     `-ImplicitCastExpr 0x562522da11f0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x562522da1150 <col:28> 'String::memo_t *' lvalue ParmVar 0x562522d9b020 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x562522d9b298 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x562522d9b1d8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x562522da1460 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x562522da13e0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x562522da1230 <col:2> '<bound member function type>' ->assign_memo 0x562522d9ae58
|     | `-CXXThisExpr 0x562522da1220 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x562522da1418 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x562522da12b0 <col:14, col:19> 'const char *' lvalue .data 0x562522d9aaa0
|     |   `-MemberExpr 0x562522da1280 <col:14, col:16> 'String::rep_t' lvalue ._r 0x562522d9ac10
|     |     `-DeclRefExpr 0x562522da1260 <col:14> 'const String' lvalue ParmVar 0x562522d9b1d8 'x' 'const String &'
|     |-ImplicitCastExpr 0x562522da1430 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x562522da1330 <col:25, col:30> 'int' lvalue .length 0x562522d9ab08
|     |   `-MemberExpr 0x562522da1300 <col:25, col:27> 'String::rep_t' lvalue ._r 0x562522d9ac10
|     |     `-DeclRefExpr 0x562522da12e0 <col:25> 'const String' lvalue ParmVar 0x562522d9b1d8 'x' 'const String &'
|     `-ImplicitCastExpr 0x562522da1448 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x562522da13b0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x562522d9ab98
|         `-MemberExpr 0x562522da1380 <col:38, col:40> 'String::rep_t' lvalue ._r 0x562522d9ac10
|           `-DeclRefExpr 0x562522da1360 <col:38> 'const String' lvalue ParmVar 0x562522d9b1d8 'x' 'const String &'
|-CXXMethodDecl 0x562522d9b360 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x562522da1e20 <col:31, line:278:5>
|   `-IfStmt 0x562522da1e08 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x562522da1500 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x562522da14e8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x562522da14b8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x562522d9ab98
|     |     `-MemberExpr 0x562522da1488 <col:6> 'String::rep_t' lvalue ->_r 0x562522d9ac10
|     |       `-CXXThisExpr 0x562522da1478 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x562522da1de0 <col:15, line:277:2>
|       |-ParenExpr 0x562522da19b0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x562522da1980 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x562522da1610 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x562522da15f8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x562522da15e0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x562522da15a0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x562522d9a468
|       |   |       `-ImplicitCastExpr 0x562522da1588 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x562522da1558 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x562522d9ab98
|       |   |           `-MemberExpr 0x562522da1528 <col:27> 'String::rep_t' lvalue ->_r 0x562522d9ac10
|       |   |             `-CXXThisExpr 0x562522da1518 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x562522da1670 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x562522da1650 <col:54> 'int' 0
|       |   `-CallExpr 0x562522da18e0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x562522da18c8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x562522da1848 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x562522da1920 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x562522da1758 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x562522da1938 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x562522da1788 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x562522da1950 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x562522da17c0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x562522da1968 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x562522da1830 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x562522da1818 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x562522da17e0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x562522da1d00 <line:274:6, line:275:22>
|       | |-CallExpr 0x562522da1bc0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x562522da1ba8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x562522da1b20 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x562522d8acd0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x562522da1af0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x562522d9a468
|       | |   `-ImplicitCastExpr 0x562522da1ad8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x562522da1aa8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x562522d9ab98
|       | |       `-MemberExpr 0x562522da1a78 <col:40> 'String::rep_t' lvalue ->_r 0x562522d9ac10
|       | |         `-CXXThisExpr 0x562522da1a68 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x562522da1cc0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x562522da1ca8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x562522da1be8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x562522d9fb40 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x562522da1ce8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x562522da1c48 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x562522d9ab98
|       |       `-MemberExpr 0x562522da1c18 <col:15> 'String::rep_t' lvalue ->_r 0x562522d9ac10
|       |         `-CXXThisExpr 0x562522da1c08 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x562522da1dc0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x562522da1d58 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x562522d9ab98
|         | `-MemberExpr 0x562522da1d28 <col:6> 'String::rep_t' lvalue ->_r 0x562522d9ac10
|         |   `-CXXThisExpr 0x562522da1d18 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x562522da1da8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x562522da1d88 <col:16> 'int' 0
|-CXXMethodDecl 0x562522d9b5f8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x562522d9b418 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x562522d9b498 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x562522d9b510 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x562522d9b6d0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x562522d9b920 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x562522d9b788 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x562522d9b808 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x562522d9b880 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x562522d9bb08 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x562522d9b9f0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x562522d9ba70 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x562522d9bc08 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x562522da1ef8 <col:41, line:286:5>
|   `-ReturnStmt 0x562522da1ee8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x562522da1eb8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x562522da1e80 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x562522da1e68 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x562522da1e48 <col:46> 'int' 1
|-CXXMethodDecl 0x562522d9bea8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x562522d9bcc0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x562522d9bd40 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x562522d9bdc0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x562522d9fb40 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x562522d9bf70 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x562522d9fc10 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x562522d9fde0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x562522d9fcc8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x562522d9fd48 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x562522d9fea0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x562522d9ff68 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x562522da0068 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x562522da00e0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x562522da0158 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x562522da01c0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x562522da02c0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x562522da0310 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522da02a0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x562522da0280 <col:22> 'int' 14
|-CXXMethodDecl 0x562522da0528 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x562522da0340 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x562522da03c0 <col:38> col:41 'int'
| `-ParmVarDecl 0x562522da0440 <col:43> col:46 'int'
|-FriendDecl 0x562522da0630 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x562522da06c0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625230af520 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5625230af6f8 prev 0x5625230af520 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5625230af788 <col:46, col:52> col:46 public
|-TypedefDecl 0x5625230af7b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625230b1110 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5625230b10c0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5625230b10a0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5625230af9c8 'type'
|     `-SubstTemplateTypeParmType 0x5625230af990 'String' sugar
|       |-TemplateTypeParmType 0x562522d550c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d55070 'T'
|       `-RecordType 0x562522d918b0 'String'
|         `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b11c8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5625230b1190 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5625230b1170 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5625230b1110 'type'
|     `-ElaboratedType 0x5625230b10c0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5625230b10a0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5625230af9c8 'type'
|         `-SubstTemplateTypeParmType 0x5625230af990 'String' sugar
|           |-TemplateTypeParmType 0x562522d550c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x562522d55070 'T'
|           `-RecordType 0x562522d918b0 'String'
|             `-CXXRecord 0x562522d91820 'String'
|-CXXMethodDecl 0x5625230b1348 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5625230b1258 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5625230b1438 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5625230b1518 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5625230b1518
|-CXXMethodDecl 0x5625230b17e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5625230b16f0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5625230b1a28 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5625230b18a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625230b1918 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5625230b1bf8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5625230b1ae8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625230b1b60 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5625230b1d58 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5625230b1e28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5625230b2078 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5625230b1ee8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5625230b1f60 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5625230b22d8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5625230b2148 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5625230b21c0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5625230b2498 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5625230b23a8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5625230b2658 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5625230b2560 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5625230b2710 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5625230b27c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5625230b29f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5625230b2870 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625230b28e8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5625230b2c98 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5625230b2ba0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5625230b2d60 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5625230b2db0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5625230b2e00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562522fc9050 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5625230adf88 prev 0x562522fc9050 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5625230af490 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5625230af440 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5625230af420 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5625230af2d0 'type'
|     `-SubstTemplateTypeParmType 0x5625230af160 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x562522d2ae70 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x562522d2ae18 'F'
|       `-RecordType 0x5625230aedc0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5625230aece0 'typed_array_memory'
|-FieldDecl 0x5625230b2e50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5625230b2ea0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5625230b2ed8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5625230ae020 'String' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-RecordType 0x562522d918b0 'String'
|     `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b2f68 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5625230b2f30 'String &'
|   `-SubstTemplateTypeParmType 0x5625230ae020 'String' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x562522d918b0 'String'
|       `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b2ff8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5625230b2fc0 'const String &'
|   `-QualType 0x5625230ae021 'const String' const
|     `-SubstTemplateTypeParmType 0x5625230ae020 'String' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x562522d918b0 'String'
|         `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b3088 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5625230b3050 'String *'
|   `-SubstTemplateTypeParmType 0x5625230ae020 'String' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x562522d918b0 'String'
|       `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b3118 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5625230b30e0 'const String *'
|   `-QualType 0x5625230ae021 'const String' const
|     `-SubstTemplateTypeParmType 0x5625230ae020 'String' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x562522d918b0 'String'
|         `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b3d70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5625230b3d20 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5625230b3d00 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5625230b3c38 'type'
|     `-LValueReferenceType 0x5625230b3c00 'const String &'
|       `-QualType 0x5625230b39a1 'const String' const
|         `-SubstTemplateTypeParmType 0x5625230b39a0 'String' sugar
|           |-TemplateTypeParmType 0x562522d34dc0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x562522d34d68 'T'
|           `-RecordType 0x562522d918b0 'String'
|             `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b3dd8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5625230b2fc0 'const String &'
|   `-QualType 0x5625230ae021 'const String' const
|     `-SubstTemplateTypeParmType 0x5625230ae020 'String' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x562522d918b0 'String'
|         `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b3e30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625230b3e98 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5625230b3050 'String *'
|   `-SubstTemplateTypeParmType 0x5625230ae020 'String' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x562522d918b0 'String'
|       `-CXXRecord 0x562522d91820 'String'
|-TypedefDecl 0x5625230b3f00 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5625230b30e0 'const String *'
|   `-QualType 0x5625230ae021 'const String' const
|     `-SubstTemplateTypeParmType 0x5625230ae020 'String' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x562522d918b0 'String'
|         `-CXXRecord 0x562522d91820 'String'
|-EnumDecl 0x5625230b3f58 <line:134:5> col:5
| `-EnumConstantDecl 0x5625230b4050 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5625230b4030 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x5625230b40d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5625230b4368 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5625230b4190 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625230b4230 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5625230b45f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5625230b44e0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5625230b48b8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5625230b47a0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5625230b4bd0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5625230b4ab0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5625230b4ee0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5625230b4dc0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5625230b51d0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5625230b5018 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625230b5090 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5625230b52f8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5625230b53a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625230b5400 <col:30> Inherited
|-CXXMethodDecl 0x5625230b5448 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5625230b54f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625230b5550 <col:30> Inherited
|-CXXMethodDecl 0x5625230b5618 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5625230b56c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625230b5720 <col:30> Inherited
|-CXXMethodDecl 0x5625230b5768 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5625230b5818 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625230b5870 <col:30> Inherited
|-CXXMethodDecl 0x5625230b58b8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5625230b5968 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625230b59c0 <col:30> Inherited
|-CXXMethodDecl 0x5625230b5a08 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5625230b5ab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625230b5b10 <col:30> Inherited
|-CXXMethodDecl 0x5625230b5b38 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625230b5be8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625230b5c98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5625230b5e58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5625230b5d48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625230b5dc0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5625230b83e0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5625230b8350 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625230b8588 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5625230b8498 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625230b8640 <col:20>
| `-OptimizeNoneAttr 0x5625230b8698 <col:30>
|-CXXMethodDecl 0x5625230b87b8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5625230b86c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625230b8870 <col:20>
| `-OptimizeNoneAttr 0x5625230b88c8 <col:30>
|-CXXMethodDecl 0x5625230b8980 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625230b88f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625230b8ac8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625230b8a38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625230b8bf8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5625230b8cf8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5625230b8dc8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5625230b8e98 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5625230b8fd8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625230b8f48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625230b9120 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625230b9090 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625230b9268 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5625230b91d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625230b9320 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5625230b9420 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5625230b9390 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625230b94d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5625230b9598 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5625230b9698 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5625230b9818 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5625230b9758 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5625230b9fd8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5625230b98d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5625230b9f38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5625230b9e38 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5625230ba0b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5625230ba208 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5625230ba178 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5625230ba2c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5625230ba508 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5625230ba380 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5625230ba3f8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5625230ba698 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5625230ba5d8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5625230ba8a8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5625230ba760 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5625230ba7d8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5625230ba968 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x5625230babc8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5625230baad0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5625230bac98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5625230bac98

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625230fd330 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x5625230fd508 prev 0x5625230fd330 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5625230fd598 <col:46, col:52> col:46 public
|-TypedefDecl 0x5625230fd5c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625230ff190 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x5625230ff140 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x5625230fda70 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x5625230fd970 'type'
|     `-TemplateSpecializationType 0x5625230fd900 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5625230fd7e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x5625230fd7c0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5625230fd7a0 <col:24> 'unsigned long' 4
|       `-RecordType 0x5625230fd8e0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x5625230fd800 'char_array'
|-TypedefDecl 0x5625230ff248 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x5625230ff210 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x5625230ff1f0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x5625230ff190 'type'
|     `-ElaboratedType 0x5625230ff140 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x5625230fda70 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x5625230fd970 'type'
|         `-TemplateSpecializationType 0x5625230fd900 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5625230fd7e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x5625230fd7c0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5625230fd7a0 <col:24> 'unsigned long' 4
|           `-RecordType 0x5625230fd8e0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x5625230fd800 'char_array'
|-CXXMethodDecl 0x5625230ff3c8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x5625230ff2d8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x5625230ff4b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5625230ff598 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5625230ff598
|-CXXMethodDecl 0x5625230ff868 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5625230ff770 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x5625230ffaa8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5625230ff920 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625230ff998 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5625230ffc78 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5625230ffb68 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625230ffbe0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5625230ffdd8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5625230ffea8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5625231000f8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5625230fff68 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5625230fffe0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x562523100358 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x5625231001c8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x562523100240 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x562523100518 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x562523100428 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5625231006d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5625231005e0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x562523100790 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x562523100840 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x562523100a78 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5625231008f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x562523100968 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x562523100d18 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x562523100c20 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x562523100de0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x562523100e30 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x562523100e80 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625231ec090 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x5625231ec298 prev 0x5625231ec090 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5625231ed310 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5625231ed2c0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x5625231ed2a0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x5625231ed150 'type'
|     `-SubstTemplateTypeParmType 0x5625230fcf00 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x5625230f5bf0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5625230f5b08 'sized_array_memory'
|-FieldDecl 0x5625231ed410 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5625231ed460 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5625231ed498 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x5625231ec330 'unsigned int' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-BuiltinType 0x562522a5e410 'unsigned int'
|-TypedefDecl 0x5625231ed528 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x5625231ed4f0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x5625231ec330 'unsigned int' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-BuiltinType 0x562522a5e410 'unsigned int'
|-TypedefDecl 0x5625231ed5b8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x5625231ed580 'const unsigned int &'
|   `-QualType 0x5625231ec331 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5625231ec330 'unsigned int' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-BuiltinType 0x562522a5e410 'unsigned int'
|-TypedefDecl 0x5625231ed648 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x5625231ed610 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5625231ec330 'unsigned int' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-BuiltinType 0x562522a5e410 'unsigned int'
|-TypedefDecl 0x5625231ed6d8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x5625231ed6a0 'const unsigned int *'
|   `-QualType 0x5625231ec331 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5625231ec330 'unsigned int' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-BuiltinType 0x562522a5e410 'unsigned int'
|-TypedefDecl 0x5625231ee2c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x5625231ee270 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x5625231ee250 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x5625231ee1e0 'type'
|     `-SubstTemplateTypeParmType 0x5625231edfa0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x562522d354f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d354a0 'T'
|       `-BuiltinType 0x562522a5e410 'unsigned int'
|-TypedefDecl 0x5625231ee328 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x5625231ed580 'const unsigned int &'
|   `-QualType 0x5625231ec331 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5625231ec330 'unsigned int' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-BuiltinType 0x562522a5e410 'unsigned int'
|-TypedefDecl 0x5625231ee380 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625231ee3e8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x5625231ed610 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5625231ec330 'unsigned int' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-BuiltinType 0x562522a5e410 'unsigned int'
|-TypedefDecl 0x5625231ee450 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x5625231ed6a0 'const unsigned int *'
|   `-QualType 0x5625231ec331 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5625231ec330 'unsigned int' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-BuiltinType 0x562522a5e410 'unsigned int'
|-EnumDecl 0x5625231ee4a8 <line:134:5> col:5
| `-EnumConstantDecl 0x5625231ee5a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5625231ee580 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x5625231ee628 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5625231ee878 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231ee6e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231ee780 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x5625231eeb38 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5625231eea20 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x5625231eedf8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5625231eece0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5625231ef140 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5625231ef020 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x5625231ef450 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5625231ef330 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5625231ef740 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231ef588 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231ef600 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5625231ef868 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x5625231ef948 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231ef9a0 <col:30> Inherited
|-CXXMethodDecl 0x5625231ef9e8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x5625231efa98 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231efaf0 <col:30> Inherited
|-CXXMethodDecl 0x5625231efb88 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5625231efc38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231efc90 <col:30> Inherited
|-CXXMethodDecl 0x5625231efcd8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5625231efd88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231efde0 <col:30> Inherited
|-CXXMethodDecl 0x5625231efe28 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5625231efed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231eff30 <col:30> Inherited
|-CXXMethodDecl 0x5625231eff78 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5625231f0028 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231f0080 <col:30> Inherited
|-CXXMethodDecl 0x5625231f00a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231f0158 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231f0208 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5625231f03c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231f02b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231f0330 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5625231f0518 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5625231f0488 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231f06c8 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x5625231f05d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231f0780 <col:20>
| `-OptimizeNoneAttr 0x5625231f07d8 <col:30>
|-CXXMethodDecl 0x5625231f08f8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x5625231f0800 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231f09b0 <col:20>
| `-OptimizeNoneAttr 0x5625231f0a08 <col:30>
|-CXXMethodDecl 0x5625231f0ac0 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625231f0a30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231f0c08 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231f0b78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231f0d38 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x5625231f0e68 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5625231f0f38 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x5625231f1008 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5625231f1148 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625231f10b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231f1290 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231f1200 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231f13d8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5625231f1348 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231f1490 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5625231f1590 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5625231f1500 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231f1648 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5625231f1708 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x5625231f1808 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x5625231f1988 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x5625231f18c8 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x5625231f2148 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5625231f1a40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x5625231f20a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x5625231f1fa8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x5625231f2228 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5625231f2378 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x5625231f22e8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5625231f2430 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5625231f2678 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231f24f0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x5625231f2568 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5625231f2838 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x5625231f2748 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x5625231f2a88 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x5625231f2900 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x5625231f2978 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x5625231f2b48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5625231f2da8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5625231f2cb0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x5625231f2e78 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5625231f2e78

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625230f4ed8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x5625230f50e8 prev 0x5625230f4ed8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5625230fd2a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5625230fd250 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x5625230fd230 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x5625230fd0e0 'type'
|     `-SubstTemplateTypeParmType 0x5625230fcf00 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x5625230f5bf0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5625230f5b08 'sized_array_memory'
|-FieldDecl 0x562523100ed0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x562523100f20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x562523100f58 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x5625230f5180 'int' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523100fe8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x562523100fb0 'int &'
|   `-SubstTemplateTypeParmType 0x5625230f5180 'int' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523101078 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x562523101040 'const int &'
|   `-QualType 0x5625230f5181 'const int' const
|     `-SubstTemplateTypeParmType 0x5625230f5180 'int' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523101108 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x5625231010d0 'int *'
|   `-SubstTemplateTypeParmType 0x5625230f5180 'int' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523101198 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x562523101160 'const int *'
|   `-QualType 0x5625230f5181 'const int' const
|     `-SubstTemplateTypeParmType 0x5625230f5180 'int' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523101d80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x562523101d30 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x562523101d10 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x562523101ca0 'type'
|     `-SubstTemplateTypeParmType 0x562523101a60 'int' sugar
|       |-TemplateTypeParmType 0x562522d354f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d354a0 'T'
|       `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523101de8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x562523101040 'const int &'
|   `-QualType 0x5625230f5181 'const int' const
|     `-SubstTemplateTypeParmType 0x5625230f5180 'int' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523101e40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523101ea8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x5625231010d0 'int *'
|   `-SubstTemplateTypeParmType 0x5625230f5180 'int' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523101f10 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x562523101160 'const int *'
|   `-QualType 0x5625230f5181 'const int' const
|     `-SubstTemplateTypeParmType 0x5625230f5180 'int' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-BuiltinType 0x562522a5e370 'int'
|-EnumDecl 0x562523101f68 <line:134:5> col:5
| `-EnumConstantDecl 0x562523102060 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x562523102040 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x5625231020e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x562523102338 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231021a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562523102240 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x5625231025f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x5625231024e0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x5625231028b8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x5625231027a0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x562523102c00 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x562523102ae0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x562523102f10 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x562523102df0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x562523103200 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x562523103048 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231030c0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x562523103328 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x562523103408 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523103460 <col:30> Inherited
|-CXXMethodDecl 0x5625231034a8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x562523103558 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231035b0 <col:30> Inherited
|-CXXMethodDecl 0x562523103678 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x562523103728 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523103780 <col:30> Inherited
|-CXXMethodDecl 0x5625231037c8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x562523103878 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231038d0 <col:30> Inherited
|-CXXMethodDecl 0x562523103918 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5625231039c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523103a20 <col:30> Inherited
|-CXXMethodDecl 0x562523103a68 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x562523103b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523103b70 <col:30> Inherited
|-CXXMethodDecl 0x562523103b98 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x562523103c48 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x562523103cf8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x562523103eb8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x562523103da8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562523103e20 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x562523104008 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x562523103f78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231041b8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x5625231040c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x562523104270 <col:20>
| `-OptimizeNoneAttr 0x5625231042c8 <col:30>
|-CXXMethodDecl 0x5625231043e8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x5625231042f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231044a0 <col:20>
| `-OptimizeNoneAttr 0x5625231044f8 <col:30>
|-CXXMethodDecl 0x5625231045b0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x562523104520 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231046f8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x562523104668 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562523104828 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x562523104958 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x562523104a28 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x5625231060b0 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x5625231061f0 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x562523106160 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562523106338 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231062a8 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562523106480 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5625231063f0 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x562523106538 <col:48> Inherited "" ""
|-CXXMethodDecl 0x562523106638 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5625231065a8 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231066f0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5625231067a8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x5625231068a8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x562523106a28 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x562523106968 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x5625231071e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x562523106ae0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x562523107148 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x562523107048 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x5625231072c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x562523107418 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x562523107388 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5625231074d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x562523107718 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x562523107590 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x562523107608 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5625231078d8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x5625231077e8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x562523107b28 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x5625231079a0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x562523107a18 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x562523107be8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x562523107e48 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x562523107d50 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x562523107f18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x562523107f18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625231f30c0 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5625231f31d8 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x5625231f3278 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x5625231f32d8 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x5625231f3370 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5625231f3370
| `-ParmVarDecl 0x5625231f3488 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x5625231f3528 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5625231f3528
| `-ParmVarDecl 0x5625231f3638 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x5625231f36d8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5625231f36d8
| `-ParmVarDecl 0x5625231f37e8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5625231f3858 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5625231f3858
| `-ParmVarDecl 0x5625231f3968 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x5625231f39f0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x5625231f39f0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625231f4f80 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x5625231f61d8 prev 0x5625231f4f80 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5625231f6268 <col:46, col:52> col:46 public
|-TypedefDecl 0x5625231f6290 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625231f7c50 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x5625231f7c00 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5625231f7be0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x5625231f64a8 'type'
|     `-SubstTemplateTypeParmType 0x5625231f6470 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x562522d550c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d55070 'T'
|       `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|         `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231f7d08 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x5625231f7cd0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x5625231f7cb0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x5625231f7c50 'type'
|     `-ElaboratedType 0x5625231f7c00 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x5625231f7be0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x5625231f64a8 'type'
|         `-SubstTemplateTypeParmType 0x5625231f6470 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x562522d550c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x562522d55070 'T'
|           `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|             `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-CXXMethodDecl 0x5625231f7e88 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x5625231f7d98 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x5625231f7f78 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5625231f8058 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5625231f8058
|-CXXMethodDecl 0x5625231f8328 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5625231f8230 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x5625231f8568 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5625231f83e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625231f8458 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5625231f8738 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5625231f8628 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625231f86a0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5625231f8898 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x5625231f8968 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x5625231f8bb8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5625231f8a28 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x5625231f8aa0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5625231f8e18 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x5625231f8c88 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x5625231f8d00 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5625231f8fd8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5625231f8ee8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5625231f9198 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5625231f90a0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5625231f9250 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5625231f9300 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5625231f9538 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5625231f93b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625231f9428 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5625231f97d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5625231f96e0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x5625231f98a0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x5625231f98f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5625231f9940 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625231f3ae0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x5625231f3ce8 prev 0x5625231f3ae0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5625231f4ef0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x5625231f4ea0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5625231f4e80 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x5625231f4d30 'type'
|     `-SubstTemplateTypeParmType 0x5625231f4bc0 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x562522d2ae70 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x562522d2ae18 'F'
|       `-RecordType 0x5625231f4820 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x5625231f4740 'typed_array_memory'
|-FieldDecl 0x5625231f9990 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x5625231f99e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5625231f9a18 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x5625231f3d80 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|     `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231f9aa8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x5625231f9a70 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x5625231f3d80 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|       `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231f9b38 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x5625231f9b00 'const Router::element_landmark_t &'
|   `-QualType 0x5625231f3d81 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5625231f3d80 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|         `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231f9bc8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x5625231f9b90 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x5625231f3d80 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|       `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231f9c58 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x5625231f9c20 'const Router::element_landmark_t *'
|   `-QualType 0x5625231f3d81 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5625231f3d80 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|         `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231fa8b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x5625231fa860 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x5625231fa840 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x5625231fa778 'type'
|     `-LValueReferenceType 0x5625231fa740 'const Router::element_landmark_t &'
|       `-QualType 0x5625231fa4e1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x5625231fa4e0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x562522d34dc0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x562522d34d68 'T'
|           `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|             `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231fa918 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x5625231f9b00 'const Router::element_landmark_t &'
|   `-QualType 0x5625231f3d81 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5625231f3d80 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|         `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231fa970 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625231fa9d8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x5625231f9b90 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x5625231f3d80 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|       `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-TypedefDecl 0x5625231faa40 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x5625231f9c20 'const Router::element_landmark_t *'
|   `-QualType 0x5625231f3d81 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5625231f3d80 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231f3150 'Router::element_landmark_t'
|         `-CXXRecord 0x5625231f30c0 'element_landmark_t'
|-EnumDecl 0x5625231faa98 <line:134:5> col:5
| `-EnumConstantDecl 0x5625231fab90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5625231fab70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x5625231fac18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5625231faea8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231facd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231fad70 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x5625231fb168 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5625231fb050 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x5625231fb428 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x5625231fb310 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x5625231fb770 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5625231fb650 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x5625231fba80 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x5625231fb960 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x5625231fbd70 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231fbbb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231fbc30 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5625231fbe98 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x5625231fbf78 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231fbfd0 <col:30> Inherited
|-CXXMethodDecl 0x5625231fc018 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x5625231fc0c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231fc120 <col:30> Inherited
|-CXXMethodDecl 0x5625231fc1e8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5625231fc298 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231fc2f0 <col:30> Inherited
|-CXXMethodDecl 0x5625231fc338 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5625231fc3e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231fc440 <col:30> Inherited
|-CXXMethodDecl 0x5625231fc488 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5625231fc538 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231fc590 <col:30> Inherited
|-CXXMethodDecl 0x5625231fc5d8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5625231fc688 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231fc6e0 <col:30> Inherited
|-CXXMethodDecl 0x5625231fc708 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231fc7b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231fc868 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5625231fca28 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231fc918 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231fc990 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5625231fcb78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5625231fcae8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231fcd28 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x5625231fcc30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231fcde0 <col:20>
| `-OptimizeNoneAttr 0x5625231fce38 <col:30>
|-CXXMethodDecl 0x5625231fcf58 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x5625231fce60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231fd010 <col:20>
| `-OptimizeNoneAttr 0x5625231fd068 <col:30>
|-CXXMethodDecl 0x5625231fd120 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625231fd090 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231fd268 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231fd1d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231fd398 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x5625231fd4c8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x5625231fd598 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x5625231fd668 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x5625231fd7a8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625231fd718 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231fd8f0 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231fd860 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231fda38 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x5625231fd9a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231fdaf0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5625231fdbf0 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5625231fdb60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231fdca8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5625231fdd68 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x5625231fde68 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x5625231fdfe8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x5625231fdf28 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x5625231ff3a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5625231fe0a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x5625231ff308 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x5625231ff208 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x5625231ff488 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5625231ff5d8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x5625231ff548 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5625231ff690 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5625231ff8d8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231ff750 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x5625231ff7c8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5625231ffa68 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x5625231ff9a8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5625231ffc78 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x5625231ffb30 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x5625231ffba8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5625231ffd38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5625231fff98 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5625231ffea0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x562523200068 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x562523200068

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523173990 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x562523173b68 prev 0x562523173990 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x562523173bf8 <col:46, col:52> col:46 public
|-TypedefDecl 0x562523173c20 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625231771a0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x562523177150 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x5625231740d0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x562523173fd0 'type'
|     `-TemplateSpecializationType 0x562523173f60 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x562523173e40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x562523173e20 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x562523173e00 <col:24> 'unsigned long' 16
|       `-RecordType 0x562523173f40 'char_array<16>'
|         `-ClassTemplateSpecialization 0x562523173e60 'char_array'
|-TypedefDecl 0x562523177258 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x562523177220 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x562523177200 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x5625231771a0 'type'
|     `-ElaboratedType 0x562523177150 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x5625231740d0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x562523173fd0 'type'
|         `-TemplateSpecializationType 0x562523173f60 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x562523173e40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x562523173e20 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x562523173e00 <col:24> 'unsigned long' 16
|           `-RecordType 0x562523173f40 'char_array<16>'
|             `-ClassTemplateSpecialization 0x562523173e60 'char_array'
|-CXXMethodDecl 0x5625231773d8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x5625231772e8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x5625231774c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5625231775a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5625231775a8
|-CXXMethodDecl 0x562523177878 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x562523177780 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x562523177ab8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x562523177930 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625231779a8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x562523177c88 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x562523177b78 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x562523177bf0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x562523177de8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x562523177eb8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x562523178108 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x562523177f78 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x562523177ff0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x562523178368 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x5625231781d8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x562523178250 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x562523178528 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x562523178438 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5625231786e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5625231785f0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5625231787a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x562523178850 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x562523178a88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x562523178900 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x562523178978 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x562523178d28 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x562523178c30 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x562523178df0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x562523178e40 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x562523178e90 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523200780 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x562523200988 prev 0x562523200780 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x562523201a50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x562523201a00 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x5625232019e0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x562523201890 'type'
|     `-SubstTemplateTypeParmType 0x562523173560 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x5625231730b0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x562523172fc8 'sized_array_memory'
|-FieldDecl 0x562523201b50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x562523201ba0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x562523201bd8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x562523200a20 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-RecordType 0x5625231e3750 'Router::Connection'
|     `-CXXRecord 0x5625231e36c0 'Connection'
|-TypedefDecl 0x562523201c98 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x562523201c60 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x562523200a20 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231e3750 'Router::Connection'
|       `-CXXRecord 0x5625231e36c0 'Connection'
|-TypedefDecl 0x562523201d28 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x562523201cf0 'const Router::Connection &'
|   `-QualType 0x562523200a21 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x562523200a20 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231e3750 'Router::Connection'
|         `-CXXRecord 0x5625231e36c0 'Connection'
|-TypedefDecl 0x562523201db8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x562523201d80 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x562523200a20 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231e3750 'Router::Connection'
|       `-CXXRecord 0x5625231e36c0 'Connection'
|-TypedefDecl 0x562523201e48 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x562523201e10 'const Router::Connection *'
|   `-QualType 0x562523200a21 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x562523200a20 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231e3750 'Router::Connection'
|         `-CXXRecord 0x5625231e36c0 'Connection'
|-TypedefDecl 0x562523202aa0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x562523202a50 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x562523202a30 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x562523202968 'type'
|     `-LValueReferenceType 0x562523202930 'const Router::Connection &'
|       `-QualType 0x5625232026d1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x5625232026d0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x562522d34dc0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x562522d34d68 'T'
|           `-RecordType 0x5625231e3750 'Router::Connection'
|             `-CXXRecord 0x5625231e36c0 'Connection'
|-TypedefDecl 0x562523202b08 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x562523201cf0 'const Router::Connection &'
|   `-QualType 0x562523200a21 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x562523200a20 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231e3750 'Router::Connection'
|         `-CXXRecord 0x5625231e36c0 'Connection'
|-TypedefDecl 0x562523202b60 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523202bc8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x562523201d80 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x562523200a20 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231e3750 'Router::Connection'
|       `-CXXRecord 0x5625231e36c0 'Connection'
|-TypedefDecl 0x562523202c30 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x562523201e10 'const Router::Connection *'
|   `-QualType 0x562523200a21 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x562523200a20 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231e3750 'Router::Connection'
|         `-CXXRecord 0x5625231e36c0 'Connection'
|-EnumDecl 0x562523202c88 <line:134:5> col:5
| `-EnumConstantDecl 0x562523202d80 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x562523202d60 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x562523202e08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x562523203098 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x562523202ec0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562523202f60 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x562523203358 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x562523203240 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x562523203618 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x562523203500 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x562523203960 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x562523203840 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x562523203c70 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x562523203b50 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x562523203f60 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x562523203da8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562523203e20 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5625232040b8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x562523204198 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625232041f0 <col:30> Inherited
|-CXXMethodDecl 0x562523204238 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x5625232042e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523204340 <col:30> Inherited
|-CXXMethodDecl 0x562523204408 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5625232044b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523204510 <col:30> Inherited
|-CXXMethodDecl 0x562523204558 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x562523204608 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523204660 <col:30> Inherited
|-CXXMethodDecl 0x5625232046a8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x562523204758 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625232047b0 <col:30> Inherited
|-CXXMethodDecl 0x5625232047f8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5625232048a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523204900 <col:30> Inherited
|-CXXMethodDecl 0x562523204928 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625232049d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x562523204a88 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x562523204c48 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x562523204b38 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562523204bb0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x562523204d98 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x562523204d08 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x562523204f48 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x562523204e50 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x562523205000 <col:20>
| `-OptimizeNoneAttr 0x562523205058 <col:30>
|-CXXMethodDecl 0x562523205178 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x562523205080 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x562523205230 <col:20>
| `-OptimizeNoneAttr 0x562523205288 <col:30>
|-CXXMethodDecl 0x562523205340 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625232052b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562523205488 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625232053f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625232055b8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x5625232056e8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5625232057b8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x562523205888 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5625232059c8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x562523205938 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562523205b10 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x562523205a80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562523205c58 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x562523205bc8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x562523205d10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x562523205e10 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x562523205d80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x562523205ec8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x562523205f88 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x562523206088 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x562523206238 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x562523206148 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x5625232069f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5625232062f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x562523206958 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x562523206858 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x562523206ad8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x562523206c28 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x562523206b98 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x562523208550 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x562523208798 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x562523208610 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x562523208688 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x562523208958 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x562523208868 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x562523208ba8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x562523208a20 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x562523208a98 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x562523208c68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x562523208ec8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x562523208dd0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x562523208f98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x562523208f98

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625232225d0 prev 0x5625230c5848 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5625232226c8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x562523222758 <col:22, col:28> col:22 public
|-EnumDecl 0x562523222780 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x562523222898 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x562523222878 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x562523222860 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x562523222840 <col:14> 'int' 999
| |-EnumConstantDecl 0x562523222940 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x562523222920 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x562523222908 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5625232228e8 <col:14> 'int' 1
| |-EnumConstantDecl 0x5625232229d0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5625232229b0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x562523222990 <col:17> 'int' 0
| |-EnumConstantDecl 0x562523222a60 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x562523222a40 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x562523222a20 <col:13> 'int' 1
| |-EnumConstantDecl 0x562523222af0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x562523222ad0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x562523222ab0 <col:16> 'int' 2
| |-EnumConstantDecl 0x562523222b80 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x562523222b60 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x562523222b40 <col:13> 'int' 3
| |-EnumConstantDecl 0x562523222c10 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x562523222bf0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x562523222bd0 <col:15> 'int' 4
| |-EnumConstantDecl 0x562523222ca0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x562523222c80 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x562523222c60 <col:14> 'int' 5
| |-EnumConstantDecl 0x562523222d30 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x562523222d10 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x562523222cf0 <col:12> 'int' 6
| `-EnumConstantDecl 0x562523222dc0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x562523222da0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x562523222d80 <col:13> 'int' 7
|-VarDecl 0x562523222e30 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x562523222eb8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x562523222f40 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x562523222fc8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x562523223050 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5625232230d8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x562523223160 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5625232231e8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x562523223270 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5625232232f8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x562523223380 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x562523223480 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5625232287a8 '_nerrors' 'int'
| | `-IntegerLiteral 0x562523228f38 <line:128:13> 'int' 0
| `-CompoundStmt 0x562523228fa8 <col:16, line:129:5>
|-CXXDestructorDecl 0x562523223570 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x562523228fb8 <col:29, line:132:5>
|-CXXMethodDecl 0x562523223728 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x562523223660 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5625232237f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5625232238d8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x562523229010 <col:44, line:161:5>
|   `-ReturnStmt 0x562523229000 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x562523228fe8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x562523228fc8 <col:9> 'ErrorHandler *' lvalue Var 0x562523228808 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x562523223a18 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x562523223988 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562523223ae0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x562523229070 <col:43, line:173:5>
|   `-ReturnStmt 0x562523229060 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x562523229048 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x562523229028 <col:9> 'ErrorHandler *' lvalue Var 0x562523228880 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x562523223b98 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x562523223c18 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x562523223d28 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x562523223c98 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x562523223e78 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x562523223de8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x562523223fd0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x562523223f38 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x562523224128 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x562523224090 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x562523224280 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5625232241e8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x562523224490 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x562523224338 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5625232243b8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x562523224668 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x562523224550 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5625232245d0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x562523224888 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x562523224728 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5625232247a8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x562523224a68 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x562523224948 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5625232249c8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x562523224c48 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x562523224b28 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x562523224ba8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x562523224dd0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x562523224d08 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x562523224fe0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x562523224e88 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x562523224f00 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5625232292c8 <col:57, line:234:5>
|   `-ReturnStmt 0x5625232292b8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5625232292a0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x562523229248 <col:9, col:41> 'int'
|         |-MemberExpr 0x562523229218 <col:9> '<bound member function type>' ->xmessage 0x562523224dd0
|         | `-CXXThisExpr 0x562523229208 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x562523229288 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x562523229270 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5625232291e8 <col:18, col:40> 'String' (CXXTemporary 0x5625232291e8)
|               `-CallExpr 0x5625232291b0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x562523229198 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x562523229110 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x562523226fd8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x562523229130 <col:31> 'const String' lvalue ParmVar 0x562523224f00 'str' 'const String &'
|                 `-DeclRefExpr 0x562523229150 <col:36> 'const String' lvalue ParmVar 0x562523224e88 'anno' 'const String &'
|-CXXMethodDecl 0x5625232252c0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5625232250a0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x562523225120 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x562523225198 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x562523229558 <col:68, line:243:5>
|   `-ReturnStmt 0x562523229548 <line:242:2, col:41>
|     `-ExprWithCleanups 0x562523229530 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5625232294d0 <col:9, col:41> 'int'
|         |-MemberExpr 0x5625232294a0 <col:9> '<bound member function type>' ->xmessage 0x562523224fe0
|         | `-CXXThisExpr 0x562523229490 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x562523229368 <col:18> 'const String' lvalue ParmVar 0x5625232250a0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x562523229518 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x562523229500 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x562523229470 <col:24, col:40> 'String' (CXXTemporary 0x562523229470)
|               `-CXXMemberCallExpr 0x562523229408 <col:24, col:40> 'String'
|                 |-MemberExpr 0x562523229398 <col:24> '<bound member function type>' ->vformat 0x5625232264a0
|                 | `-CXXThisExpr 0x562523229388 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x562523229438 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5625232293c8 <col:32> 'const char *' lvalue ParmVar 0x562523225120 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x562523229450 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5625232293e8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x562523225198 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x562523225560 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x562523225388 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x562523225400 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x562523225478 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x562523229898 <col:23, line:254:5>
|   `-ReturnStmt 0x562523229888 <line:253:2, col:71>
|     `-ExprWithCleanups 0x562523229870 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x562523229810 <col:9, col:71> 'int'
|         |-MemberExpr 0x5625232297e0 <col:9> '<bound member function type>' ->xmessage 0x562523224fe0
|         | `-CXXThisExpr 0x5625232297d0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x562523229858 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x562523229840 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x562523229790 <col:18, col:65> 'String' (CXXTemporary 0x562523229790)
|         |     `-CallExpr 0x562523229728 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x562523229710 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5625232295f8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x562523226fd8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x562523229618 <col:31> 'const String' lvalue ParmVar 0x562523225400 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x562523229770 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x562523229758 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5625232296f0 <col:37, col:64> 'String' (CXXTemporary 0x5625232296f0)
|         |             `-CallExpr 0x5625232296c0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5625232296a8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x562523229638 <col:37> 'String (const String &)' lvalue CXXMethod 0x562523227628 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x562523229658 <col:56> 'const String' lvalue ParmVar 0x562523225388 'landmark' 'const String &'
|         `-DeclRefExpr 0x5625232297b0 <col:68> 'const String' lvalue ParmVar 0x562523225478 'str' 'const String &'
|-CXXMethodDecl 0x5625232258e0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x562523225628 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5625232256a0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x562523225720 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x562523225798 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x562523229b50 <col:34, line:267:5>
|   `-ReturnStmt 0x562523229b40 <line:266:2, col:51>
|     `-ExprWithCleanups 0x562523229b28 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x562523229ac0 <col:9, col:51> 'int'
|         |-MemberExpr 0x562523229a90 <col:9> '<bound member function type>' ->xmessage 0x562523225560
|         | `-CXXThisExpr 0x562523229a80 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x562523229938 <col:18> 'const String' lvalue ParmVar 0x562523225628 'landmark' 'const String &'
|         |-DeclRefExpr 0x562523229958 <col:28> 'const String' lvalue ParmVar 0x5625232256a0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x562523229b10 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x562523229af8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x562523229a60 <col:34, col:50> 'String' (CXXTemporary 0x562523229a60)
|               `-CXXMemberCallExpr 0x5625232299f8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x562523229988 <col:34> '<bound member function type>' ->vformat 0x5625232264a0
|                 | `-CXXThisExpr 0x562523229978 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x562523229a28 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5625232299b8 <col:42> 'const char *' lvalue ParmVar 0x562523225720 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x562523229a40 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5625232299d8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x562523225798 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5625232259f0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x562523229bd0 <col:25, line:288:5>
|   `-ReturnStmt 0x562523229bc0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x562523229ba8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x562523229b78 <col:9> 'const int' lvalue ->_nerrors 0x5625232287a8
|         `-CXXThisExpr 0x562523229b68 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x562523225c00 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x562523225aa8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x562523225b28 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x562523225ee8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x562523225cc8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x562523225d48 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x562523225dc0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x562523226080 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x562523225fb8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5625232262c8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x562523226140 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5625232261b8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x562523229e30 <col:58, line:357:5>
|   `-ReturnStmt 0x562523229e20 <line:356:2, col:29>
|     `-ExprWithCleanups 0x562523229e08 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x562523229dd8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x562523229dc0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x562523229da0 <col:9, col:29> 'String' (CXXTemporary 0x562523229da0)
|             `-CallExpr 0x562523229d30 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x562523229d18 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x562523229c98 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x562523225ee8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x562523229c38 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x562523229d68 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x562523229c58 <col:21> 'const char *' lvalue ParmVar 0x562523226140 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x562523229d80 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x562523229c78 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5625232261b8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5625232264a0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x562523226390 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x562523226408 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5625232265f8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x562523226568 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x562523226740 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5625232266b0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5625232269e0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5625232267f8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x562523226878 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5625232268f0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x562523226b40 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x562523226ab0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x562523229f48 <col:37, line:441:5>
|   `-IfStmt 0x562523229f30 <line:439:2, line:440:8>
|     |-BinaryOperator 0x562523229eb8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x562523229e88 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x562523229e48 <col:6> 'int' lvalue ParmVar 0x562523226ab0 'level' 'int'
|     | `-ImplicitCastExpr 0x562523229ea0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x562523229e68 <col:15> 'ErrorHandler::Level' EnumConstant 0x562523222b80 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x562523229f18 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x562523229ee8 <col:8> 'int' lvalue ->_nerrors 0x5625232287a8
|         `-CXXThisExpr 0x562523229ed8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x562523226c08 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x562523229fe0 <col:26, line:448:5>
|   `-BinaryOperator 0x562523229fc0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x562523229f70 <col:2> 'int' lvalue ->_nerrors 0x5625232287a8
|     | `-CXXThisExpr 0x562523229f60 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x562523229fa0 <col:13> 'int' 0
|-CXXMethodDecl 0x562523226dd0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x562523226cc0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x562523226d38 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x562523226fd8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x562523226e90 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x562523226f08 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x562523227288 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x562523227098 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x562523227118 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x562523227198 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x562523227340 <col:59> 0 0
|-CXXMethodDecl 0x5625232274d8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5625232273b8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x562523227438 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x56252322a650 <col:70, line:534:5>
|   |-DeclStmt 0x56252322a150 <line:528:2, col:20>
|   | |-VarDecl 0x56252322a008 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x56252322a070 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x56252322a0a8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x56252322a110 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x56252322a220 <line:529:2, col:23>
|   | `-VarDecl 0x56252322a180 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x56252322a208 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56252322a1e8 <col:18> 'const char *' lvalue ParmVar 0x5625232273b8 'begin' 'const char *'
|   |-DoStmt 0x56252322a5e8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x56252322a518 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x56252322a500 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x56252322a4e0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x56252322a238 <col:6> 'const char *' lvalue Var 0x56252322a180 'x' 'const char *'
|   | |     `-CallExpr 0x56252322a430 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x56252322a418 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x56252322a3d0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x562523228c80 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x56252322a498 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x56252322a480 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x56252322a2f0 <col:20, col:27> 'String' (CXXTemporary 0x56252322a2f0)
|   | |       |     `-CXXTemporaryObjectExpr 0x56252322a2b8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x56252322a4b0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56252322a310 <col:30> 'const char *' lvalue Var 0x56252322a180 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x56252322a4c8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56252322a330 <col:33> 'const char *' lvalue ParmVar 0x562523227438 'end' 'const char *'
|   | |       |-UnaryOperator 0x56252322a370 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56252322a350 <col:39> 'String' lvalue Var 0x56252322a008 'name' 'String'
|   | |       |-UnaryOperator 0x56252322a3a8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56252322a388 <col:46> 'String' lvalue Var 0x56252322a0a8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x56252322a3c0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x56252322a5d0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x56252322a5b8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x56252322a598 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x56252322a568 <col:11> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|   |         `-ImplicitCastExpr 0x56252322a550 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x56252322a530 <col:11> 'String' lvalue Var 0x56252322a008 'name' 'String'
|   `-ReturnStmt 0x56252322a640 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x56252322a628 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56252322a608 <col:9> 'const char *' lvalue Var 0x56252322a180 'x' 'const char *'
|-CXXMethodDecl 0x562523227628 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x562523227598 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x56252322ac58 <col:55, line:550:5>
|   `-IfStmt 0x56252322ac30 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x56252322a890 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x56252322a878 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56252322a860 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56252322a840 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56252322a810 <col:6> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|     | |       `-DeclRefExpr 0x56252322a6b0 <col:6> 'const String' lvalue ParmVar 0x562523227598 'x' 'const String &'
|     | `-BinaryOperator 0x56252322a7f0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x56252322a7c0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x56252322a770 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x56252322a758 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x56252322a710 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x562522dae850 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x56252322a6d0 <col:11> 'const String' lvalue ParmVar 0x562523227598 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x56252322a6f0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x56252322a7d8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x56252322a7a8 <col:19> 'char' 123
|     |-ReturnStmt 0x56252322a900 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x56252322a8d0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x56252322a8b0 <col:13> 'const String' lvalue ParmVar 0x562523227598 'x' 'const String &'
|     `-IfStmt 0x56252322ac08 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x56252322a998 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56252322a980 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56252322a960 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56252322a930 <col:11> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|       |       `-DeclRefExpr 0x56252322a910 <col:11> 'const String' lvalue ParmVar 0x562523227598 'x' 'const String &'
|       |-ReturnStmt 0x56252322ab20 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x56252322ab08 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x56252322aad8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x56252322aac0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x56252322aaa0 <col:13, col:29> 'String' (CXXTemporary 0x56252322aaa0)
|       |         `-CallExpr 0x56252322aa50 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x56252322aa38 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x56252322a9b0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x562523226dd0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x56252322aa80 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x56252322a9d0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x56252322a9f0 <col:28> 'const String' lvalue ParmVar 0x562523227598 'x' 'const String &'
|       `-ReturnStmt 0x56252322abf8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x56252322abe0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x56252322abb0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x56252322ab98 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x56252322ab78 <col:13, col:20> 'String' (CXXTemporary 0x56252322ab78)
|                 `-CXXTemporaryObjectExpr 0x56252322ab40 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5625232277f0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5625232276e0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x562523227758 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562523228f28 <col:71> 'bool' false
|-CXXRecordDecl 0x5625232278a0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x562523227b98 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x562523227b30 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x562523227ad0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x562523227a90 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x562522d918b0 'String'
|       | `-CXXRecord 0x562522d91820 'String'
|       |-BuiltinType 0x562522a5e370 'int'
|       `-DecayedType 0x5625230c6890 '__va_list_tag *' sugar
|         |-TypedefType 0x5625230c6860 'va_list' sugar
|         | |-Typedef 0x562522c82990 'va_list'
|         | `-TypedefType 0x562522c82940 '__gnuc_va_list' sugar
|         |   |-Typedef 0x562522bba538 '__gnuc_va_list'
|         |   `-TypedefType 0x562522bba4a0 '__builtin_va_list' sugar
|         |     |-Typedef 0x562522a9fbd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x562522a9fb80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x562522a5f0c0 '__va_list_tag'
|         |         `-CXXRecord 0x562522a5f028 '__va_list_tag'
|         `-PointerType 0x562522c88230 '__va_list_tag *'
|           `-RecordType 0x562522a5f0c0 '__va_list_tag'
|             `-CXXRecord 0x562522a5f028 '__va_list_tag'
|-EnumDecl 0x562523227bf0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x562523227cf0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x562523228250 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523227cd0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x562523227cb0 <col:16> 'int' 1
| |-EnumConstantDecl 0x562523227d80 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x562523228268 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523227d60 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x562523227d40 <col:21> 'int' 2
| |-EnumConstantDecl 0x562523227e10 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x562523228280 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523227df0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x562523227dd0 <col:22> 'int' 4
| |-EnumConstantDecl 0x562523227ea0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x562523228298 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523227e80 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x562523227e60 <col:17> 'int' 8
| |-EnumConstantDecl 0x562523227f30 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5625232282b0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523227f10 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x562523227ef0 <col:22> 'int' 16
| |-EnumConstantDecl 0x562523227fc0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5625232282c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523227fa0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x562523227f80 <col:19> 'int' 32
| |-EnumConstantDecl 0x562523228050 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5625232282e0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523228030 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x562523228010 <col:17> 'int' 64
| |-EnumConstantDecl 0x5625232280e0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5625232282f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5625232280c0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5625232280a0 <col:14> 'int' 128
| |-EnumConstantDecl 0x562523228170 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x562523228310 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523228150 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x562523228130 <col:16> 'int' 256
| `-EnumConstantDecl 0x562523228200 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x562523228328 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5625232281e0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5625232281c0 <col:12> 'int' 1024
|-CXXMethodDecl 0x562523228538 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x562523228350 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5625232283f0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5625232286c0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5625232285f8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x562523228768 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5625232287a8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x562523228808 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x562523228880 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x562523228c80 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5625232288f8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x562523228978 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5625232289f8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x562523228a70 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x562523228ae8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x562523228b60 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x562523228da8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x562523228da8
| `-ParmVarDecl 0x562523228eb8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x56252322afb8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x56252322afb8
  `-ParmVarDecl 0x56252322b0c8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522fc1970 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x562522fc1ac0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x562522fc1b40 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x562522fc2938 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x562522fc2938
| `-ParmVarDecl 0x562522fc2a48 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x562522fc2ae8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x562522fc2ae8
| `-ParmVarDecl 0x562522fc2bf8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x562522fc2c68 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x562522fc2c68
|-CXXMethodDecl 0x562522fc3538 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x562522fc3538
| `-ParmVarDecl 0x562522fc3648 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x562522fc36b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x562522fc36b8
| `-ParmVarDecl 0x562522fc37c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x562523222168 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x562523222240 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522fc1c70 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x562522fc1d98 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x562522fc1e20 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x562522fc2d98 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x562522fc2d98
| `-ParmVarDecl 0x562522fc2ea8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x562522fc2f48 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x562522fc2f48
| `-ParmVarDecl 0x562522fc3058 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x562522fc30c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x562522fc30c8
|-CXXMethodDecl 0x562522fc3868 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x562522fc3868
| `-ParmVarDecl 0x562522fc3978 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x562522fc39e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x562522fc39e8
| `-ParmVarDecl 0x562522fc3af8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x5625232222a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x562523222380 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522fbd2f8 prev 0x562522fbc790 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x562522fbd3f0 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x562522fbd480 <col:17, col:23> col:17 public
|-EnumDecl 0x562522fbd4a8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x562522fbd5b0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe300 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbd590 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x562522fbd570 <col:11> 'int' 1
| |-EnumConstantDecl 0x562522fbd640 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe318 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbd620 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x562522fbd600 <col:12> 'int' 2
| |-EnumConstantDecl 0x562522fbd6d0 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe330 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbd6b0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x562522fbd690 <col:17> 'int' 4
| |-EnumConstantDecl 0x562522fbd760 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe348 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbd740 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x562522fbd720 <col:16> 'int' 0
| |-EnumConstantDecl 0x562522fbd7f0 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe360 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbd7d0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x562522fbd7b0 <col:19> 'int' 32
| |-EnumConstantDecl 0x562522fbd880 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe378 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbd860 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x562522fbd840 <col:10> 'int' 64
| |-EnumConstantDecl 0x562522fbd910 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe390 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbd8f0 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x562522fbd8d0 <col:19> 'int' 128
| |-EnumConstantDecl 0x562522fbd9a0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe3a8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbd980 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x562522fbd960 <col:20> 'int' 256
| |-EnumConstantDecl 0x562522fbda30 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe3c0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbda10 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x562522fbd9f0 <col:17> 'int' 512
| |-EnumConstantDecl 0x562522fbdac0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe3d8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbdaa0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x562522fbda80 <col:15> 'int' 1024
| |-EnumConstantDecl 0x562522fbdb50 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe3f0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbdb30 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x562522fbdb10 <col:11> 'int' 2048
| |-EnumConstantDecl 0x562522fbdbe0 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe408 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbdbc0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x562522fbdba0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x562522fbdc70 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe420 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbdc50 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x562522fbdc30 <col:13> 'int' 8192
| |-EnumConstantDecl 0x562522fbdd00 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe438 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbdce0 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x562522fbdcc0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x562522fbddd0 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x562522fbddb0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x562522fbdd90 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x562522fbdd50 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x562522fbdd70 <col:20> 'int' 26
| |-EnumConstantDecl 0x562522fbdea0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x562522fbde80 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x562522fbde60 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x562522fbde20 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x562522fbde40 <col:27> 'int' 27
| |-EnumConstantDecl 0x562522fbdf30 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe450 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbdf10 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x562522fbdef0 <col:17> 'int' 28
| |-EnumConstantDecl 0x562522fbe000 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x562522fbdfe0 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x562522fbdfc0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x562522fbdf80 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x562522fbdfa0 <col:18> 'int' EnumConstant 0x562522fbdf30 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fbe090 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe468 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbe070 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x562522fbe050 <col:25> 'int' 8
| |-EnumConstantDecl 0x562522fbe120 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x562522fbe480 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbe100 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x562522fbe0e0 <col:26> 'int' 16
| `-EnumConstantDecl 0x562522fbe2b0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x562522fbe498 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522fbe290 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x562522fbe270 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x562522fbe230 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x562522fbe1f0 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x562522fbe1b0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x562522fbe170 <col:14> 'int' EnumConstant 0x562522fbd5b0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x562522fbe190 <col:23> 'int' EnumConstant 0x562522fbd640 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x562522fbe1d0 <col:33> 'int' EnumConstant 0x562522fbd6d0 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x562522fbe210 <col:48> 'int' EnumConstant 0x562522fbe090 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x562522fbe250 <col:71> 'int' EnumConstant 0x562522fbe120 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbe4f8 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x562522fc3f18 <col:39, line:64:5>
|   `-ReturnStmt 0x562522fc3f08 <line:63:2, col:9>
|     `-MemberExpr 0x562522fc3ed8 <col:9> 'const String' lvalue ->_name 0x562522fc1920
|       `-CXXThisExpr 0x562522fc3ec8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x562522fbe5b8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x562522fc3f98 <col:35, line:71:5>
|   `-ReturnStmt 0x562522fc3f88 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x562522fc3f70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x562522fc3f40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|         `-CXXThisExpr 0x562522fc3f30 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x562522fbe708 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x562522fbe670 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x562522fc4118 <col:42, line:77:5>
|   `-ReturnStmt 0x562522fc4108 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x562522fc40f0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x562522fc40c0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x562522fc4020 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x562522fc3ff0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x562522fc3fb0 <col:9> 'int' lvalue ParmVar 0x562522fbe670 'op' 'int'
|         | `-ImplicitCastExpr 0x562522fc4008 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x562522fc3fd0 <col:15> 'Handler::Flags' EnumConstant 0x562522fbd640 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x562522fc4050 <col:25> 'void *const' lvalue ->_write_user_data 0x562522fc1fd0
|         | `-CXXThisExpr 0x562522fc4040 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x562522fc4090 <col:44> 'void *const' lvalue ->_read_user_data 0x562522fc1f68
|           `-CXXThisExpr 0x562522fc4080 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x562522fbe7d8 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x562522fc4198 <col:41, line:82:5>
|   `-ReturnStmt 0x562522fc4188 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x562522fc4170 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x562522fc4140 <col:9> 'void *const' lvalue ->_read_user_data 0x562522fc1f68
|         `-CXXThisExpr 0x562522fc4130 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x562522fbe8a0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x562522fc4218 <col:42, line:87:5>
|   `-ReturnStmt 0x562522fc4208 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x562522fc41f0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x562522fc41c0 <col:9> 'void *const' lvalue ->_write_user_data 0x562522fc1fd0
|         `-CXXThisExpr 0x562522fc41b0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x562522fbe968 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x562522fbea08 <col:52> "" ""
|-CXXMethodDecl 0x562522fbeaa0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x562522fbeb40 <col:52> "" ""
|-CXXMethodDecl 0x562522fbebd0 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x562522fc4308 <col:34, line:98:5>
|   `-ReturnStmt 0x562522fc42f8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x562522fc42e0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x562522fc42c0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x562522fc4290 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x562522fc4240 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|         |   `-CXXThisExpr 0x562522fc4230 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x562522fc42a8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x562522fc4270 <col:18> 'Handler::Flags' EnumConstant 0x562522fbd5b0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbec90 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x562522fc43f8 <col:36, line:104:5>
|   `-ReturnStmt 0x562522fc43e8 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x562522fc43d0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x562522fc43b0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x562522fc4380 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x562522fc4330 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|         |   `-CXXThisExpr 0x562522fc4320 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x562522fc4398 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x562522fc4360 <col:18> 'Handler::Flags' EnumConstant 0x562522fbd6d0 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbed50 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x562522fc45d8 <col:38, line:113:5>
|   `-ReturnStmt 0x562522fc45c8 <line:112:2, col:49>
|     `-BinaryOperator 0x562522fc45a8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x562522fc4550 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x562522fc4530 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x562522fc4500 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x562522fc4420 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|       |   |   `-CXXThisExpr 0x562522fc4410 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x562522fc4518 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x562522fc44e0 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x562522fc44c0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x562522fc4490 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x562522fc4450 <col:20> 'Handler::Flags' EnumConstant 0x562522fbd5b0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x562522fc44a8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x562522fc4470 <col:29> 'Handler::Flags' EnumConstant 0x562522fbd910 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x562522fc4590 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x562522fc4570 <col:49> 'Handler::Flags' EnumConstant 0x562522fbd5b0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbee10 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x562522fc46c8 <col:34, line:118:5>
|   `-ReturnStmt 0x562522fc46b8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x562522fc46a0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x562522fc4680 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x562522fc4650 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x562522fc4600 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|         |   `-CXXThisExpr 0x562522fc45f0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x562522fc4668 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x562522fc4630 <col:18> 'Handler::Flags' EnumConstant 0x562522fbd640 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbeed0 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x562522fc48a8 <col:39, line:127:5>
|   `-ReturnStmt 0x562522fc4898 <line:126:2, col:51>
|     `-BinaryOperator 0x562522fc4878 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x562522fc4820 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x562522fc4800 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x562522fc47d0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x562522fc46f0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|       |   |   `-CXXThisExpr 0x562522fc46e0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x562522fc47e8 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x562522fc47b0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x562522fc4790 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x562522fc4760 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x562522fc4720 <col:20> 'Handler::Flags' EnumConstant 0x562522fbd640 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x562522fc4778 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x562522fc4740 <col:30> 'Handler::Flags' EnumConstant 0x562522fbd9a0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x562522fc4860 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x562522fc4840 <col:51> 'Handler::Flags' EnumConstant 0x562522fbd640 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbef90 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x562522fc49b0 <col:33, line:132:5>
|   `-ReturnStmt 0x562522fc49a0 <line:131:2, col:41>
|     `-BinaryOperator 0x562522fc4980 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x562522fc4900 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x562522fc48d0 <col:9> '<bound member function type>' ->read_visible 0x562522fbed50
|       |   `-CXXThisExpr 0x562522fc48c0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x562522fc4960 <col:27, col:41> 'bool'
|         `-MemberExpr 0x562522fc4930 <col:27> '<bound member function type>' ->write_visible 0x562522fbeed0
|           `-CXXThisExpr 0x562522fc4920 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x562522fbf050 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x562522fc4ae8 <col:51, line:138:5>
|   `-ReturnStmt 0x562522fc4ad8 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x562522fc4ac0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x562522fc4aa0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x562522fc4a58 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x562522fc4a28 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x562522fc49d8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|           |   `-CXXThisExpr 0x562522fc49c8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x562522fc4a40 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x562522fc4a08 <col:26> 'Handler::Flags' EnumConstant 0x562522fbd7f0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbf110 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x562522fc4bf8 <col:50, line:144:5>
|   `-ReturnStmt 0x562522fc4be8 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x562522fc4bd0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x562522fc4bb0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x562522fc4b90 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x562522fc4b60 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x562522fc4b10 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|           |   `-CXXThisExpr 0x562522fc4b00 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x562522fc4b78 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x562522fc4b40 <col:26> 'Handler::Flags' EnumConstant 0x562522fbd7f0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbf1d0 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x562522fc4ce8 <col:29, line:166:5>
|   `-ReturnStmt 0x562522fc4cd8 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x562522fc4cc0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x562522fc4ca0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x562522fc4c70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x562522fc4c20 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|         |   `-CXXThisExpr 0x562522fc4c10 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x562522fc4c88 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x562522fc4c50 <col:18> 'Handler::Flags' EnumConstant 0x562522fbd880 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x562522fbf458 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x562522fbf280 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x562522fbf2f8 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x562522fbf370 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562522fbf668 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x562522fbf520 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x562522fbf598 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x562522fc3e00 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x562522fc3de0 <col:62> 'int' 0
| `-CompoundStmt 0x562522fc4f88 <col:71, line:188:5>
|   `-ReturnStmt 0x562522fc4f78 <line:187:2, col:36>
|     `-ExprWithCleanups 0x562522fc4f60 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x562522fc4f30 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x562522fc4f18 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x562522fc4ef8 <col:9, col:36> 'String' (CXXTemporary 0x562522fc4ef8)
|             `-CXXMemberCallExpr 0x562522fc4e58 <col:9, col:36> 'String'
|               |-MemberExpr 0x562522fc4e28 <col:9> '<bound member function type>' ->call_read 0x562522fbf458
|               | `-CXXThisExpr 0x562522fc4e18 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x562522fc4e90 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x562522fc4d70 <col:19> 'Element *' lvalue ParmVar 0x562522fbf520 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x562522fc4ec0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x562522fc4ea8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x562522fc4dd8 <col:22, col:29> 'String' (CXXTemporary 0x562522fc4dd8)
|               |     `-CXXTemporaryObjectExpr 0x562522fc4da0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x562522fc4ed8 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x562522fc4df8 <col:32> 'ErrorHandler *' lvalue ParmVar 0x562522fbf598 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x562522fbf900 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x562522fbf728 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x562522fbf7a0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x562522fbf818 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562522fbfa88 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x562522fbf9c8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x562522fbfcb8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x562522fbfb40 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x562522fbfbb8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x562522fbfdb8 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x562522fc4fe8 <col:50, line:225:5>
|   `-ReturnStmt 0x562522fc4fd8 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x562522fc4fc0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x562522fc4fa0 <col:9> 'const Handler *' lvalue Var 0x562522fc2160 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x562522fbfe58 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x562522fbff60 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0b00 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbff40 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x562522fbff20 <col:11> 'Handler::Flags' EnumConstant 0x562522fbd5b0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fbfff0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0b18 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fbffd0 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x562522fbffb0 <col:12> 'Handler::Flags' EnumConstant 0x562522fbd640 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0080 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0b30 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0060 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x562522fc0040 <col:17> 'Handler::Flags' EnumConstant 0x562522fbd6d0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0110 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0b48 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc00f0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x562522fc00d0 <col:16> 'Handler::Flags' EnumConstant 0x562522fbd760 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc01a0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0b60 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0180 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x562522fc0160 <col:19> 'Handler::Flags' EnumConstant 0x562522fbd7f0 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0230 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0b78 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0210 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x562522fc01f0 <col:10> 'Handler::Flags' EnumConstant 0x562522fbd880 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc02c0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0b90 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc02a0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x562522fc0280 <col:19> 'Handler::Flags' EnumConstant 0x562522fbd910 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0350 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0ba8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0330 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x562522fc0310 <col:20> 'Handler::Flags' EnumConstant 0x562522fbd9a0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc03e0 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0bc0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc03c0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x562522fc03a0 <col:17> 'Handler::Flags' EnumConstant 0x562522fbda30 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0470 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0bd8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0450 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x562522fc0430 <col:15> 'Handler::Flags' EnumConstant 0x562522fbdac0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0500 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0bf0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc04e0 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x562522fc04c0 <col:11> 'Handler::Flags' EnumConstant 0x562522fbdb50 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0590 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0c08 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0570 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x562522fc0550 <col:16> 'Handler::Flags' EnumConstant 0x562522fbdbe0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0620 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0c20 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0600 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x562522fc05e0 <col:13> 'Handler::Flags' EnumConstant 0x562522fbdc70 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc06b0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0c38 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0690 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x562522fc0670 <col:15> 'Handler::Flags' EnumConstant 0x562522fbdd00 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0740 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0c50 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0720 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x562522fc0700 <col:20> 'Handler::Flags' EnumConstant 0x562522fbddd0 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc07d0 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0c68 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc07b0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x562522fc0790 <col:27> 'Handler::Flags' EnumConstant 0x562522fbdea0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0860 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0c80 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0840 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x562522fc0820 <col:22> 'Handler::Flags' EnumConstant 0x562522fbdf30 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc08f0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0c98 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc08d0 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x562522fc08b0 <col:18> 'Handler::Flags' EnumConstant 0x562522fbe000 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0980 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0cb0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0960 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x562522fc0940 <col:25> 'Handler::Flags' EnumConstant 0x562522fbe090 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0a10 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x562522fc0cc8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc09f0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x562522fc09d0 <col:26> 'Handler::Flags' EnumConstant 0x562522fbe120 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x562522fc0ab0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x562522fc0ce0 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522fc0a90 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x562522fc0a60 <col:20> 'Handler::Flags' EnumConstant 0x562522fbe2b0 'f_special' 'Handler::Flags'
|-EnumDecl 0x562522fc0cf8 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x562522fc0e00 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc1360 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0de0 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x562522fc0dc0 <col:12> 'Handler::Flags' EnumConstant 0x562522fbd5b0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0e90 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc1378 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0e70 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x562522fc0e50 <col:13> 'Handler::Flags' EnumConstant 0x562522fbd640 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0f20 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc1390 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0f00 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x562522fc0ee0 <col:15> 'Handler::Flags' EnumConstant 0x562522fbd6d0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc0fb0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc13a8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc0f90 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x562522fc0f70 <col:8> 'Handler::Flags' EnumConstant 0x562522fbd880 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc1040 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc13c0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc1020 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x562522fc1000 <col:9> 'Handler::Flags' EnumConstant 0x562522fbdb50 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc10d0 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc13d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc10b0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x562522fc1090 <col:14> 'Handler::Flags' EnumConstant 0x562522fbdbe0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc1160 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc13f0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc1140 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x562522fc1120 <col:11> 'Handler::Flags' EnumConstant 0x562522fbdc70 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc11f0 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc1408 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc11d0 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x562522fc11b0 <col:13> 'Handler::Flags' EnumConstant 0x562522fbdd00 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x562522fc1280 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x562522fc1420 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc1260 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x562522fc1240 <col:20> 'Handler::Flags' EnumConstant 0x562522fbdf30 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x562522fc1310 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x562522fc1438 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522fc12f0 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x562522fc12d0 <col:16> 'Handler::Flags' EnumConstant 0x562522fbe000 'f_user0' 'Handler::Flags'
|-EnumDecl 0x562522fc1450 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x562522fc1510 <col:25> "" ""
| |-EnumConstantDecl 0x562522fc15c0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x562522fc16a0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc15a0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x562522fc1580 <col:14> 'Handler::Flags' EnumConstant 0x562522fbd760 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x562522fc1650 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x562522fc16b8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522fc1630 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x562522fc1610 <col:17> 'Handler::Flags' EnumConstant 0x562522fbd7f0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x562522fc1838 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x562522fc16e0 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x562522fc1760 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x562522fc56a8 <col:70, line:284:5>
|   |-ParenExpr 0x562522fc54c8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x562522fc5498 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x562522fc51c8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522fc5198 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x562522fc5140 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x562522fc5120 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x562522fc50f0 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x562522fc5010 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x562522fc2030
|   |   |   |   |   `-CXXThisExpr 0x562522fc5000 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x562522fc5108 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x562522fc50d0 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x562522fc50b0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x562522fc5080 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x562522fc5040 <col:34> 'Handler::Flags' EnumConstant 0x562522fbd5b0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x562522fc5098 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x562522fc5060 <col:43> 'Handler::Flags' EnumConstant 0x562522fbe090 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x562522fc5180 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x562522fc5160 <col:69> 'Handler::Flags' EnumConstant 0x562522fbd5b0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x562522fc5228 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fc5208 <col:85> 'int' 0
|   |   `-CallExpr 0x562522fc53f8 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x562522fc53e0 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fc53c0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fc5438 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fc5298 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x562522fc5450 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fc52e8 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x562522fc5468 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fc5320 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x562522fc5480 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fc53a8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fc5390 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fc5340 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x562522fc5698 <line:283:2, col:38>
|     `-ExprWithCleanups 0x562522fc5680 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x562522fc5650 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x562522fc5638 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x562522fc5618 <col:9, col:38> 'String' (CXXTemporary 0x562522fc5618)
|             `-CallExpr 0x562522fc55b0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x562522fc5598 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x562522fc5528 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x562522fc1b40
|               |   `-MemberExpr 0x562522fc54f8 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x562522fc1c08
|               |     `-CXXThisExpr 0x562522fc54e8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x562522fc55e0 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x562522fc5558 <col:22> 'Element *' lvalue ParmVar 0x562522fc16e0 'e' 'Element *'
|               `-ImplicitCastExpr 0x562522fc55f8 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x562522fc5578 <col:25> 'void *' lvalue ParmVar 0x562522fc1760 'new_user_data' 'void *'
|-AccessSpecDecl 0x562522fc18e8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x562522fc1920 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x562522fc1970 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x562522fc1ac0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x562522fc1b40 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x562522fc2938 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x562522fc2938
| | `-ParmVarDecl 0x562522fc2a48 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x562522fc2ae8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x562522fc2ae8
| | `-ParmVarDecl 0x562522fc2bf8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x562522fc2c68 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x562522fc2c68
| |-CXXMethodDecl 0x562522fc3538 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x562522fc3538
| | `-ParmVarDecl 0x562522fc3648 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x562522fc36b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x562522fc36b8
| | `-ParmVarDecl 0x562522fc37c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x562523222168 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x562523222240 <col:5>
|-FieldDecl 0x562522fc1c08 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x562522fc1c70 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x562522fc1d98 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x562522fc1e20 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x562522fc2d98 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x562522fc2d98
| | `-ParmVarDecl 0x562522fc2ea8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x562522fc2f48 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x562522fc2f48
| | `-ParmVarDecl 0x562522fc3058 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x562522fc30c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x562522fc30c8
| |-CXXMethodDecl 0x562522fc3868 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x562522fc3868
| | `-ParmVarDecl 0x562522fc3978 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x562522fc39e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x562522fc39e8
| | `-ParmVarDecl 0x562522fc3af8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x5625232222a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x562523222380 <col:5>
|-FieldDecl 0x562522fc1ee8 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x562522fc1f68 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x562522fc1fd0 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x562522fc2030 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x562522fc2098 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x562522fc2100 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x562522fc2160 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x562522fc2280 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x562522fc21d8 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x562522fc3eb0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x562522fc3e98 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x562522fc3e80 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x562522fc3e60 <col:30, col:37> 'String' (CXXTemporary 0x562522fc3e60)
|           `-CXXTemporaryObjectExpr 0x562522fc3e28 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x562522fc2428 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x562522fc2368 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x562522fc25a8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x562522fc24e0 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x562522fc2768 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x562522fc27a8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x562522fc27a8
| `-ParmVarDecl 0x562522fc2888 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x562522fc31d8 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x562522fc31d8
| `-ParmVarDecl 0x562522fc32e8 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x562522fc3388 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x562522fc3388
| `-ParmVarDecl 0x562522fc3498 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x562522fc3b68 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x562522fc3b68
| `-ParmVarDecl 0x562522fc3c78 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x562522fc3d00 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x562522fc3d00

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523209b08 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x562523209d18 prev 0x562523209b08 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56252320ad30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56252320ace0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x56252320acc0 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x56252320ab70 'type'
|     `-SubstTemplateTypeParmType 0x562523180df0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x562523180940 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x562523180858 'sized_array_memory'
|-FieldDecl 0x56252320ae30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56252320ae80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56252320aeb8 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x562523209db0 'void *' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-PointerType 0x562522a5ead0 'void *'
|     `-BuiltinType 0x562522a5e2d0 'void'
|-TypedefDecl 0x56252320af48 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x56252320af10 'void *&'
|   `-SubstTemplateTypeParmType 0x562523209db0 'void *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522a5ead0 'void *'
|       `-BuiltinType 0x562522a5e2d0 'void'
|-TypedefDecl 0x56252320b008 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x56252320afd0 'void *const &'
|   `-QualType 0x562523209db1 'void *const' const
|     `-SubstTemplateTypeParmType 0x562523209db0 'void *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522a5ead0 'void *'
|         `-BuiltinType 0x562522a5e2d0 'void'
|-TypedefDecl 0x56252320b098 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x56252320b060 'void **'
|   `-SubstTemplateTypeParmType 0x562523209db0 'void *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522a5ead0 'void *'
|       `-BuiltinType 0x562522a5e2d0 'void'
|-TypedefDecl 0x56252320b128 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x56252320b0f0 'void *const *'
|   `-QualType 0x562523209db1 'void *const' const
|     `-SubstTemplateTypeParmType 0x562523209db0 'void *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522a5ead0 'void *'
|         `-BuiltinType 0x562522a5e2d0 'void'
|-TypedefDecl 0x56252320bd10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x56252320bcc0 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x56252320bca0 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x56252320bc30 'type'
|     `-SubstTemplateTypeParmType 0x56252320b9f0 'void *' sugar
|       |-TemplateTypeParmType 0x562522d354f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d354a0 'T'
|       `-PointerType 0x562522a5ead0 'void *'
|         `-BuiltinType 0x562522a5e2d0 'void'
|-TypedefDecl 0x56252320bd78 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x56252320afd0 'void *const &'
|   `-QualType 0x562523209db1 'void *const' const
|     `-SubstTemplateTypeParmType 0x562523209db0 'void *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522a5ead0 'void *'
|         `-BuiltinType 0x562522a5e2d0 'void'
|-TypedefDecl 0x56252320bdd0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x56252320be38 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x56252320b060 'void **'
|   `-SubstTemplateTypeParmType 0x562523209db0 'void *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522a5ead0 'void *'
|       `-BuiltinType 0x562522a5e2d0 'void'
|-TypedefDecl 0x56252320bea0 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x56252320b0f0 'void *const *'
|   `-QualType 0x562523209db1 'void *const' const
|     `-SubstTemplateTypeParmType 0x562523209db0 'void *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522a5ead0 'void *'
|         `-BuiltinType 0x562522a5e2d0 'void'
|-EnumDecl 0x56252320bef8 <line:134:5> col:5
| `-EnumConstantDecl 0x56252320bff0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56252320bfd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x56252320c078 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56252320c2c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56252320c130 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56252320c1d0 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x56252320c588 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x56252320c470 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x56252320c848 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x56252320c730 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56252320cb90 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x56252320ca70 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x56252320cea0 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x56252320cd80 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56252320d190 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56252320cfd8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56252320d050 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56252320d2e8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56252320d3c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252320d420 <col:30> Inherited
|-CXXMethodDecl 0x56252320d468 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56252320d518 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252320d570 <col:30> Inherited
|-CXXMethodDecl 0x56252320d638 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56252320d6e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252320d740 <col:30> Inherited
|-CXXMethodDecl 0x56252320d788 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56252320d838 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252320d890 <col:30> Inherited
|-CXXMethodDecl 0x56252320d8d8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56252320d988 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252320d9e0 <col:30> Inherited
|-CXXMethodDecl 0x56252320da28 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56252320dad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252320db30 <col:30> Inherited
|-CXXMethodDecl 0x56252320db58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56252320dc08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56252320dcb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56252320de78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56252320dd68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56252320dde0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56252320dfc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56252320df38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252320e178 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x56252320e080 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56252320e230 <col:20>
| `-OptimizeNoneAttr 0x56252320e288 <col:30>
|-CXXMethodDecl 0x56252320e3a8 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56252320e2b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56252320e460 <col:20>
| `-OptimizeNoneAttr 0x56252320e4b8 <col:30>
|-CXXMethodDecl 0x56252320e570 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56252320e4e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252320e6b8 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56252320e628 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252320e7e8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x56252320e918 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x56252320e9e8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x56252320eab8 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x56252320ebf8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56252320eb68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252320ed40 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56252320ecb0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252320ee88 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56252320edf8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56252320ef40 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56252320f040 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56252320efb0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56252320f0f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56252320f1b8 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x56252320f2b8 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x56252320f438 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x56252320f378 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x56252320fbf8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56252320f4f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x56252320fb58 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x56252320fa58 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x56252320fcd8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56252320fe28 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x56252320fd98 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56252320fee0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x562523210128 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56252320ffa0 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x562523210018 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5625232102e8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x5625232101f8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x562523211890 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x5625232103b0 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x562523210428 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x562523211950 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x562523211ba8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x562523211ab0 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x562523211c78 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x562523211c78

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523211e70 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x562523211f88 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x562523212018 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x562523212120 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x562523212170 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562523212100 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x5625232120e0 <col:27> 'int' 4096
|-FieldDecl 0x562523212198 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x562523212200 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x5625232123f8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x562523212488 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x562523212648 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x5625232124e8 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x562523212560 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x562523212198 'name' 'String'
| | `-CXXConstructExpr 0x56252321d160 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x56252321d120 <col:20> 'const String' lvalue ParmVar 0x5625232124e8 'n' 'const String &'
| |-CXXCtorInitializer Field 0x562523212200 'nsig' 'int'
| | `-IntegerLiteral 0x56252321d1b8 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x5625232123f8 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x56252321d2a0 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x562523212488 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x56252321d260 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x56252321d220 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x562523212560 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x56252321d530 <col:42, line:289:9>
|   `-CallExpr 0x56252321d4e0 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x56252321d4c8 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56252321d4a8 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x562522cc4da8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x56252321d518 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x56252321d3f0 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x56252321d3d0 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x56252321d3b8 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56252321d368 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x5625232123f8
|     |     |   `-CXXThisExpr 0x56252321d358 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x56252321d398 <col:25> 'int' 0
|     |-IntegerLiteral 0x56252321d408 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x56252321d488 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x56252321d468 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x56252321d438 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x5625232123f8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x56252321d428 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x562523212728 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x562523212728
| `-ParmVarDecl 0x562523212838 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x5625232128d8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5625232128d8
| `-ParmVarDecl 0x5625232129e8 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x562523212a88 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x562523212a88
| `-ParmVarDecl 0x562523212b98 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x562523212c08 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x562523212c08
| `-ParmVarDecl 0x562523212d18 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x562523212da0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x562523212da0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625231d9440 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5625231d9558 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x5625231d95e8 <col:21, col:27> col:21 public
|-EnumDecl 0x5625231d9610 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x5625231d9728 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x5625231d9708 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5625231d96f0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5625231d96d0 <col:32> 'int' 1
| `-EnumConstantDecl 0x5625231d97d0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x5625231d97b0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5625231d9798 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5625231d9778 <col:53> 'int' 1000
|-CXXConstructorDecl 0x5625231d9880 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x5625231d9db8 <col:19, col:21>
|-CXXDestructorDecl 0x5625231d9970 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x5625231d9dc8 <col:28, col:30>
|-CXXMethodDecl 0x5625231d9b30 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x5625231d9a60 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x5625231d9c38 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x5625231d9c38
  `-ParmVarDecl 0x5625231d9d48 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625231da370 prev 0x562522e76240 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5625231da468 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x5625231da4f8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x5625231da568 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5625231da628 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x5625231da6e8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x5625231da7a8 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x5625231da868 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x5625231da908 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x5625231daa68 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x5625231daa48 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x5625231daa28 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x5625231da9f0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x5625231da9d0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x5625231daa08 <col:42> 'int' 1
|-CXXMethodDecl 0x5625231dab08 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x5625231dac78 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5625231dabb8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x5625231dadc0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5625231dad30 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x5625231dae88 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x5625231db1b0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x5625231db278 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x5625231db3f8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x5625231db330 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x5625231db4c0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x5625231db6c8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x5625231db570 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x5625231db5f0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x5625231db820 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x5625231db790 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x5625231db970 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x5625231db8e0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x5625231dbac0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x5625231dba30 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x5625231dbc10 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x5625231dbb80 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x5625231dbde0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x5625231dbcd0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x5625231dbd48 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x5625231dbfe8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5625231dbea0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x5625231dbf18 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x562523216640 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x562523216620 <col:60> 'int' 0
|-CXXMethodDecl 0x5625231dc278 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x5625231dc0a8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5625231dc120 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x5625231dc198 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x562523216678 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x562523216658 <col:76> 'int' 0
|-CXXMethodDecl 0x5625231dc518 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5625231dc340 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5625231dc3b8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x5625231dc430 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5625232166b0 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x562523216690 <col:84> 'int' 0
|-CXXMethodDecl 0x5625231dc870 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5625231dc5e0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x5625231dc658 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x5625231dc6d8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x5625231dc778 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5625231dcb20 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5625231dc940 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x5625231dc9c0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x5625231dca38 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5625231dcd88 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5625231dcbe8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x5625231dcc68 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x5625231dcce0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5625231dd280 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5625231dce50 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x5625231dced0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x5625231dcf78 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x5625231dd130 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5625231dd340 <col:115> "" ""
|-CXXMethodDecl 0x5625231dd700 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5625231dd3c0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x5625231dd440 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x5625231dd4b8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x5625231dd600 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5625231dd7c0 <col:113> "" ""
|-CXXMethodDecl 0x5625231dd910 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x5625231dd848 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x5625231ddae0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x5625231dd9d0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x5625231dda48 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x5625231ddce8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x5625231ddba0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x5625231ddc18 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x5625231de0e8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5625231ddda8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5625231dde20 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5625231dde98 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5625231ddf18 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x5625231ddf90 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5625232166e8 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5625232166c8 <col:137> 'int' 0
|-CXXMethodDecl 0x5625231de4f8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5625231de1c0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x5625231de238 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x5625231de2b0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5625231de330 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x5625231de3a8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562523216720 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562523216700 <col:139> 'int' 0
|-CXXMethodDecl 0x5625231de9a8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x5625231de5d0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x5625231de648 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x5625231de6c0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5625231de738 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5625231de7b8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x562523216758 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x562523216738 <col:133> 'int' 0
| `-ParmVarDecl 0x5625231de838 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x562523216790 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x562523216770 <col:160> 'int' 0
|-CXXMethodDecl 0x5625231ded40 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5625231dea88 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5625231deb00 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5625231deb78 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5625231debf0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5625232167c8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5625232167a8 <col:116> 'int' 0
|-EnumDecl 0x5625231dee00 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x5625231def00 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x5625231def50 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5625231deee0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x5625231deec0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x5625231df0d0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x5625231def78 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x5625231deff0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x5625231df2e8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x5625231df190 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x5625231df210 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x5625231df618 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x5625231df3a8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x5625231df500 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x5625231df7a0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x5625231df6d8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x5625231df920 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x5625231df858 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x5625231dfb30 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x5625231df9d8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x5625231dfa58 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x5625231dfcb8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x5625231dfbf0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x5625231dfdd8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x5625231dfec8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x5625231e0038 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x5625231dff78 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x5625231e01c0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x5625231e00f0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x5625231e03c8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x5625231e0278 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x5625231e02f8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x5625231e04f8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x5625231e05e8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x5625231e06a8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x5625231e08a8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5625231e0758 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x5625231e07d0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x562523216878 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x562523216860 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x562523216848 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x562523216828 <col:58, col:65> 'String' (CXXTemporary 0x562523216828)
|           `-CXXTemporaryObjectExpr 0x5625232167f0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x5625231e0a78 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5625231e0968 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5625231e09e0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x562523216928 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x562523216910 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x5625232168f8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5625232168d8 <col:71, col:78> 'String' (CXXTemporary 0x5625232168d8)
|           `-CXXTemporaryObjectExpr 0x5625232168a0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5625231e0c48 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5625231e0b38 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5625231e0bb0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5625232169d8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5625232169c0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x5625232169a8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x562523216988 <col:71, col:78> 'String' (CXXTemporary 0x562523216988)
|           `-CXXTemporaryObjectExpr 0x562523216950 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5625231e0e18 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5625231e0d08 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x5625231e0d80 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x562523216a88 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x562523216a70 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x562523216a58 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x562523216a38 <col:70, col:77> 'String' (CXXTemporary 0x562523216a38)
|           `-CXXTemporaryObjectExpr 0x562523216a00 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x5625231e0f98 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x5625231e0ed8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x5625231e11b8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x5625231e1050 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x5625231e10c8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x5625231e12b8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x5625231e12b8
|-CXXMethodDecl 0x5625231e13c0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x5625231e1480 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5625231e1540 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x5625231e1600 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x5625231e17f8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x5625231e16b0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x5625231e1728 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x5625231e1bb0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x5625231e18b8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x5625231e1930 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x5625231e19a8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x5625231e1a20 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x5625231e1aa0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x5625231e1f10 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x5625231e1c90 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x5625231e1d10 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x5625231e1d90 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x5625231e1e10 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x5625231e1ff0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x5625231e2130 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x5625231e20a0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x5625231e2280 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5625231e21e8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5625231e2488 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x5625231e2338 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x5625231e23b0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5625231e25d8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x5625231e2548 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5625231e2720 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x5625231e2690 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x5625231e2960 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x5625231e27e0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5625231e2888 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x5625231e2ae8 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x5625231e2a20 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x5625231e2b90 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5625231e2ca8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x5625231e2d50 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x5625231e2db8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x5625231e2e70 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x562523216ab0 <col:16, line:150:9>
| |-CXXConstructorDecl 0x5625231e3048 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x5625231e2f30 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x5625231e2fb0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x5625231e2d50 'idx' 'int'
| | | `-ImplicitCastExpr 0x562523216b00 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x562523216ac0 <col:19> 'int' lvalue ParmVar 0x5625231e2f30 'i' 'int'
| | |-CXXCtorInitializer Field 0x5625231e2db8 'port' 'int'
| | | `-ImplicitCastExpr 0x562523216b80 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x562523216b40 <col:28> 'int' lvalue ParmVar 0x5625231e2fb0 'p' 'int'
| | `-CompoundStmt 0x562523216bd0 <col:31, line:153:9>
| |-CXXMethodDecl 0x5625231e3228 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5625231e3138 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x562523216dd0 <col:46, line:157:9>
| |   `-ReturnStmt 0x562523216dc0 <line:156:13, col:46>
| |     `-BinaryOperator 0x562523216da0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x562523216ca0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x562523216c70 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x562523216bf0 <col:20> 'const int' lvalue ->idx 0x5625231e2d50
| |       | |   `-CXXThisExpr 0x562523216be0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x562523216c88 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x562523216c40 <col:27, col:29> 'const int' lvalue .idx 0x5625231e2d50
| |       |     `-DeclRefExpr 0x562523216c20 <col:27> 'const Router::Port' lvalue ParmVar 0x5625231e3138 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x562523216d80 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x562523216d50 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x562523216cd0 <col:36> 'const int' lvalue ->port 0x5625231e2db8
| |         |   `-CXXThisExpr 0x562523216cc0 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x562523216d68 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x562523216d20 <col:44, col:46> 'const int' lvalue .port 0x5625231e2db8
| |             `-DeclRefExpr 0x562523216d00 <col:44> 'const Router::Port' lvalue ParmVar 0x5625231e3138 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5625231e3370 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5625231e32e0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x562523216fd8 <col:46, line:160:9>
| |   `-ReturnStmt 0x562523216fc8 <line:159:13, col:46>
| |     `-BinaryOperator 0x562523216fa8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x562523216ea8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x562523216e78 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x562523216df8 <col:20> 'const int' lvalue ->idx 0x5625231e2d50
| |       | |   `-CXXThisExpr 0x562523216de8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x562523216e90 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x562523216e48 <col:27, col:29> 'const int' lvalue .idx 0x5625231e2d50
| |       |     `-DeclRefExpr 0x562523216e28 <col:27> 'const Router::Port' lvalue ParmVar 0x5625231e32e0 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x562523216f88 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x562523216f58 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x562523216ed8 <col:36> 'const int' lvalue ->port 0x5625231e2db8
| |         |   `-CXXThisExpr 0x562523216ec8 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x562523216f70 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x562523216f28 <col:44, col:46> 'const int' lvalue .port 0x5625231e2db8
| |             `-DeclRefExpr 0x562523216f08 <col:44> 'const Router::Port' lvalue ParmVar 0x5625231e32e0 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5625231e34b8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5625231e3428 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x562523217300 <col:45, line:163:9>
| |   `-ReturnStmt 0x5625232172f0 <line:162:13, col:65>
| |     `-BinaryOperator 0x5625232172d0 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x5625232170b0 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x562523217080 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x562523217000 <col:20> 'const int' lvalue ->idx 0x5625231e2d50
| |       | |   `-CXXThisExpr 0x562523216ff0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x562523217098 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x562523217050 <col:26, col:28> 'const int' lvalue .idx 0x5625231e2d50
| |       |     `-DeclRefExpr 0x562523217030 <col:26> 'const Router::Port' lvalue ParmVar 0x5625231e3428 'x' 'const Router::Port &'
| |       `-ParenExpr 0x5625232172b0 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x562523217290 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x562523217190 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x562523217160 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x5625232170e0 <col:36> 'const int' lvalue ->idx 0x5625231e2d50
| |           | |   `-CXXThisExpr 0x5625232170d0 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x562523217178 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x562523217130 <col:43, col:45> 'const int' lvalue .idx 0x5625231e2d50
| |           |     `-DeclRefExpr 0x562523217110 <col:43> 'const Router::Port' lvalue ParmVar 0x5625231e3428 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x562523217270 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x562523217240 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x5625232171c0 <col:52> 'const int' lvalue ->port 0x5625231e2db8
| |             |   `-CXXThisExpr 0x5625232171b0 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x562523217258 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x562523217210 <col:59, col:61> 'const int' lvalue .port 0x5625231e2db8
| |                 `-DeclRefExpr 0x5625232171f0 <col:59> 'const Router::Port' lvalue ParmVar 0x5625231e3428 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5625231e3600 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5625231e3570 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x562523217628 <col:46, line:166:9>
| |   `-ReturnStmt 0x562523217618 <line:165:13, col:66>
| |     `-BinaryOperator 0x5625232175f8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x5625232173d8 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5625232173a8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x562523217328 <col:20> 'const int' lvalue ->idx 0x5625231e2d50
| |       | |   `-CXXThisExpr 0x562523217318 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5625232173c0 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x562523217378 <col:26, col:28> 'const int' lvalue .idx 0x5625231e2d50
| |       |     `-DeclRefExpr 0x562523217358 <col:26> 'const Router::Port' lvalue ParmVar 0x5625231e3570 'x' 'const Router::Port &'
| |       `-ParenExpr 0x5625232175d8 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x5625232175b8 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x5625232174b8 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x562523217488 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x562523217408 <col:36> 'const int' lvalue ->idx 0x5625231e2d50
| |           | |   `-CXXThisExpr 0x5625232173f8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5625232174a0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x562523217458 <col:43, col:45> 'const int' lvalue .idx 0x5625231e2d50
| |           |     `-DeclRefExpr 0x562523217438 <col:43> 'const Router::Port' lvalue ParmVar 0x5625231e3570 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x562523217598 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x562523217568 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x5625232174e8 <col:52> 'const int' lvalue ->port 0x5625231e2db8
| |             |   `-CXXThisExpr 0x5625232174d8 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x562523217580 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x562523217538 <col:60, col:62> 'const int' lvalue .port 0x5625231e2db8
| |                 `-DeclRefExpr 0x562523217518 <col:60> 'const Router::Port' lvalue ParmVar 0x5625231e3570 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x562523217640 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x562523217640
| | `-ParmVarDecl 0x562523217758 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x5625232177f8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x5625232177f8
| | `-ParmVarDecl 0x562523217908 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x5625232179a0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x562523217c70 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x562523217c70
| | `-ParmVarDecl 0x562523217d78 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x562523217de8 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x562523217ef8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x562523218218 <col:12>
|     |-BinaryOperator 0x5625232180b8 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x562523218070 <col:12> 'int' lvalue ->idx 0x5625231e2d50
|     | | `-CXXThisExpr 0x562523218060 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x5625232180a0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x562523218030 <col:12> 'int' xvalue .idx 0x5625231e2d50
|     |     `-CXXStaticCastExpr 0x562523218000 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x562523217fd0 <col:12> 'Router::Port' lvalue ParmVar 0x562523217ef8 '' 'Router::Port &&'
|     |-BinaryOperator 0x5625232181c0 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x562523218178 <col:12> 'int' lvalue ->port 0x5625231e2db8
|     | | `-CXXThisExpr 0x562523218168 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x5625232181a8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x562523218138 <col:12> 'int' xvalue .port 0x5625231e2db8
|     |     `-CXXStaticCastExpr 0x562523218108 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x5625232180d8 <col:12> 'Router::Port' lvalue ParmVar 0x562523217ef8 '' 'Router::Port &&'
|     `-ReturnStmt 0x562523218208 <col:12>
|       `-UnaryOperator 0x5625232181f0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5625232181e0 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x5625231e36c0 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5625231e37d8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x5625231e39c8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x5625231e3a80 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x5625231e39c8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x562523217978 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x562523217ab0 <col:22, line:173:9>
| |-CXXConstructorDecl 0x5625231e3db8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x5625231e3b40 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x5625231e3bc0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x5625231e3c40 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x5625231e3cc0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x5625231e39c8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x562523217ac0 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x5625232184f8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x5625232182e8 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x5625232182b0 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x562523218298 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x562523217f80 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x562523217de8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x562523217b90 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x562523217b78 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x562523217b28 <col:13> 'Router::Port [2]' lvalue ->p 0x5625231e39c8
| |   |   | |   `-CXXThisExpr 0x562523217b18 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x562523217b58 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x562523217f68 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x562523217c30 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x562523217c00 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x562523217bc0 <col:25> 'int' lvalue ParmVar 0x5625231e3c40 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x562523217c18 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x562523217be0 <col:33> 'int' lvalue ParmVar 0x5625231e3cc0 'to_port' 'int'
| |   `-ExprWithCleanups 0x5625232184e0 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x5625232184a8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x562523218490 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x562523218470 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x562523217de8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x562523218378 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x562523218360 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x562523218310 <col:13> 'Router::Port [2]' lvalue ->p 0x5625231e39c8
| |       | |   `-CXXThisExpr 0x562523218300 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x562523218340 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x562523218458 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x562523218418 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x5625232183e8 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x5625232183a8 <col:25> 'int' lvalue ParmVar 0x5625231e3b40 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x562523218400 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x5625232183c8 <col:35> 'int' lvalue ParmVar 0x5625231e3bc0 'from_port' 'int'
| |-CXXMethodDecl 0x5625231e3f88 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x5625231e3e98 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x562523218ab8 <col:45, line:182:9>
| |   |-ParenExpr 0x562523218998 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x562523218968 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x562523218638 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x562523218608 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x562523218570 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x562523218558 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x562523218518 <col:34> 'int' lvalue ParmVar 0x5625231e3e98 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x562523218538 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x5625232185e8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x5625232185d0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x562523218590 <col:44> 'int' lvalue ParmVar 0x5625231e3e98 'i' 'int'
| |   |   |     `-IntegerLiteral 0x5625232185b0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x562523218698 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x562523218678 <col:59> 'int' 0
| |   |   `-CallExpr 0x5625232188c8 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x5625232188b0 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x562523218890 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x562523218908 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x562523218708 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x562523218920 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x562523218730 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x562523218938 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x562523218768 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x562523218950 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x562523218878 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x562523218860 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x562523218808 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x562523218aa8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x562523218a88 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x562523218a58 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x5625232189c8 <col:20> 'Router::Port const[2]' lvalue ->p 0x5625231e39c8
| |       |   `-CXXThisExpr 0x5625232189b8 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x562523218a70 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x5625232189f8 <col:22> 'int' lvalue ParmVar 0x5625231e3e98 'i' 'int'
| |-CXXMethodDecl 0x5625231e4138 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x5625231e4048 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x562523218fb0 <col:33, line:186:9>
| |   |-ParenExpr 0x562523218ed0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x562523218ea0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x562523218bf8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x562523218bc8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x562523218b30 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x562523218b18 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x562523218ad8 <col:34> 'int' lvalue ParmVar 0x5625231e4048 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x562523218af8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x562523218ba8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x562523218b90 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x562523218b50 <col:44> 'int' lvalue ParmVar 0x5625231e4048 'i' 'int'
| |   |   |     `-IntegerLiteral 0x562523218b70 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x562523218c58 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x562523218c38 <col:59> 'int' 0
| |   |   `-CallExpr 0x562523218e00 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x562523218de8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x562523218dc8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x562523218e40 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x562523218cc8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x562523218e58 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x562523218cf0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x562523218e70 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x562523218d28 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x562523218e88 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x562523218db0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x562523218d98 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x562523218d48 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x562523218fa0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x562523218f80 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x562523218f50 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x562523218f00 <col:20> 'Router::Port [2]' lvalue ->p 0x5625231e39c8
| |       |   `-CXXThisExpr 0x562523218ef0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x562523218f68 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x562523218f30 <col:22> 'int' lvalue ParmVar 0x5625231e4048 'i' 'int'
| |-CXXMethodDecl 0x5625231e42d8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x5625231e4218 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x5625232193e8 <col:52, line:190:9>
| |   `-ReturnStmt 0x5625232193d8 <line:189:13, col:51>
| |     `-BinaryOperator 0x5625232193b8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x5625232191a0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x562523219188 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x562523219140 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5625231e3228 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x562523219048 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x562523219030 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x562523218fe0 <col:20> 'Router::Port const[2]' lvalue ->p 0x5625231e39c8
| |       | | |   `-CXXThisExpr 0x562523218fd0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x562523219010 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x5625232190f0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x5625232190d8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x562523219088 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x5625231e39c8
| |       |   |   `-DeclRefExpr 0x562523219068 <col:28> 'const Router::Connection' lvalue ParmVar 0x5625231e4218 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x5625232190b8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x562523219380 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x562523219368 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x562523219348 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5625231e3228 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x562523219250 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x562523219238 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x5625232191e8 <col:38> 'Router::Port const[2]' lvalue ->p 0x5625231e39c8
| |         | |   `-CXXThisExpr 0x5625232191d8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x562523219218 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x5625232192f8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x5625232192e0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x562523219290 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5625231e39c8
| |           |   `-DeclRefExpr 0x562523219270 <col:46> 'const Router::Connection' lvalue ParmVar 0x5625231e4218 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x5625232192c0 <col:50> 'int' 1
| `-CXXMethodDecl 0x5625231e4420 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x5625231e4390 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x56252321d108 <col:51, line:193:9>
|     `-ReturnStmt 0x56252321d0f8 <line:192:13, col:69>
|       `-BinaryOperator 0x56252321d0d8 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x562523219578 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x562523219560 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x562523219540 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5625231e34b8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x562523219478 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x562523219460 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x562523219410 <col:20> 'Router::Port const[2]' lvalue ->p 0x5625231e39c8
|         | | |   `-CXXThisExpr 0x562523219400 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x562523219440 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x562523219520 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x562523219508 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x5625232194b8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x5625231e39c8
|         |   |   `-DeclRefExpr 0x562523219498 <col:27> 'const Router::Connection' lvalue ParmVar 0x5625231e4390 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x5625232194e8 <col:31> 'int' 0
|         `-ParenExpr 0x56252321d0b8 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x56252321d098 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x562523219758 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x562523219740 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x562523219720 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5625231e3228 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x562523219628 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x562523219610 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x5625232195c0 <col:38> 'Router::Port const[2]' lvalue ->p 0x5625231e39c8
|             | | |   `-CXXThisExpr 0x5625232195b0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x5625232195f0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x5625232196d0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x5625232196b8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x562523219668 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5625231e39c8
|             |   |   `-DeclRefExpr 0x562523219648 <col:46> 'const Router::Connection' lvalue ParmVar 0x5625231e4390 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x562523219698 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x56252321d060 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x56252321d048 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56252321d028 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5625231e34b8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x562523219808 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x5625232197f0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x5625232197a0 <col:56> 'Router::Port const[2]' lvalue ->p 0x5625231e39c8
|               | |   `-CXXThisExpr 0x562523219790 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x5625232197d0 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x56252321d008 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x56252321cff0 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x562523219848 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x5625231e39c8
|                 |   `-DeclRefExpr 0x562523219828 <col:63> 'const Router::Connection' lvalue ParmVar 0x5625231e4390 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x56252321cfd0 <col:67> 'int' 1
|-AccessSpecDecl 0x5625231e44e0 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x5625231e4508 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x5625231e45c0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x5625231e4680 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5625231e46d0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5625231e4720 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5625231e4770 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x5625231e47c0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x5625231e4810 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x5625231e4928 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5625231e4908 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x5625231e48f0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x5625231e48d0 <col:25> 'int' 2
| |-EnumConstantDecl 0x5625231e49d0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5625231e49b0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x5625231e4998 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x5625231e4978 <col:48> 'int' 1
| |-EnumConstantDecl 0x5625231e4a60 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5625231e4a40 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x5625231e4a20 <col:71> 'int' 0
| |-EnumConstantDecl 0x5625231e4af0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5625231e4ad0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x5625231e4ab0 <col:30> 'int' 1
| `-EnumConstantDecl 0x5625231e4b80 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x5625231e4b60 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x5625231e4b40 <col:50> 'int' 2
|-FieldDecl 0x5625231e4be0 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x5625231e4c40 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x5625231e4ca8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x5625231e4d48 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x5625231e4d28 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x5625231e4cf8 <col:30> 'int' 1
|-FieldDecl 0x5625231e4de8 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x5625231e4dc8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x5625231e4d98 <col:33> 'int' 1
|-FieldDecl 0x5625231e4e88 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x5625231e4e68 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x5625231e4e38 <col:32> 'int' 1
|-FieldDecl 0x5625231e4ef0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x5625231e4f50 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x5625231ebe30 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x5625231ebf30 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5625231ec030 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5625231f2f60 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x5625231f3070 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x5625231f30c0 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5625231f31d8 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x5625231f3278 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x5625231f32d8 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x5625231f3370 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5625231f3370
| | `-ParmVarDecl 0x5625231f3488 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x5625231f3528 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5625231f3528
| | `-ParmVarDecl 0x5625231f3638 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x5625231f36d8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5625231f36d8
| | `-ParmVarDecl 0x5625231f37e8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x5625231f3858 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5625231f3858
| | `-ParmVarDecl 0x5625231f3968 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x5625231f39f0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x5625231f39f0
|-FieldDecl 0x562523200150 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x5625232001b0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x5625232002c0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x562523200618 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x562523200720 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x562523209080 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x562523209190 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x562523209290 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5625232093a0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5625232094b0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5625232095c0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5625232096d0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x562523209720 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x562523209820 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x562523209870 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562523209800 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x5625232097e0 <col:29> 'int' 256
|-FieldDecl 0x5625232098d0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x562523209938 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x5625232099a0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x562523209aa0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x562523211d60 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x562523211dc0 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x562523211e20 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x562523211e70 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x562523211f88 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x562523212018 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x562523212120 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x562523212170 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x562523212100 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x5625232120e0 <col:27> 'int' 4096
| |-FieldDecl 0x562523212198 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x562523212200 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x5625232123f8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x562523212488 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x562523212648 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x5625232124e8 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x562523212560 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x562523212198 'name' 'String'
| | | `-CXXConstructExpr 0x56252321d160 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x56252321d120 <col:20> 'const String' lvalue ParmVar 0x5625232124e8 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x562523212200 'nsig' 'int'
| | | `-IntegerLiteral 0x56252321d1b8 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x5625232123f8 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x56252321d2a0 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x562523212488 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x56252321d260 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56252321d220 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x562523212560 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x56252321d530 <col:42, line:289:9>
| |   `-CallExpr 0x56252321d4e0 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x56252321d4c8 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x56252321d4a8 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x562522cc4da8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x56252321d518 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x56252321d3f0 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x56252321d3d0 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x56252321d3b8 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x56252321d368 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x5625232123f8
| |     |     |   `-CXXThisExpr 0x56252321d358 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x56252321d398 <col:25> 'int' 0
| |     |-IntegerLiteral 0x56252321d408 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x56252321d488 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x56252321d468 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x56252321d438 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x5625232123f8 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x56252321d428 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x562523212728 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x562523212728
| | `-ParmVarDecl 0x562523212838 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x5625232128d8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5625232128d8
| | `-ParmVarDecl 0x5625232129e8 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x562523212a88 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x562523212a88
| | `-ParmVarDecl 0x562523212b98 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x562523212c08 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x562523212c08
| | `-ParmVarDecl 0x562523212d18 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x562523212da0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x562523212da0
|-FieldDecl 0x562523212e90 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x562523212ef0 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x562523212f50 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x562523212fb0 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x562523213010 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x562523213120 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x562523213220 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x562523213280 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x5625232133c8 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x562523213308 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x562523213578 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x562523213488 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x5625232136c0 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x562523213630 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x562523213a68 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x562523213778 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x5625232137f0 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x562523213870 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x5625232138e8 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x562523213960 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562523216aa0 <col:57> 'bool' false
|-CXXMethodDecl 0x562523213bd8 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x562523213b40 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x562523213d28 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x562523213c90 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x562523213e78 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x562523213de0 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x562523213fd0 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x562523213f38 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x5625232142f0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x562523214088 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x562523214100 <col:50> col:54 'bool'
| |-ParmVarDecl 0x562523214180 <col:56> col:59 'int'
| `-ParmVarDecl 0x5625232141f8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x562523214458 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5625232143c0 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x562523214520 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x5625232145e0 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x5625232147e0 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x562523214690 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x562523214708 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x5625232148b0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x5625232149f8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x562523214960 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x56252321d770 <col:42, line:326:5>
|   `-ReturnStmt 0x56252321d760 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x56252321d748 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x56252321d728 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x56252321d6f8 <col:16, col:45> '<bound member function type>' .back 0x5625231060b0
|           `-ArraySubscriptExpr 0x56252321d678 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x56252321d648 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56252321d558 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x562523200618
|             |   `-CXXThisExpr 0x56252321d548 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x56252321d660 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x56252321d588 <col:38> 'bool' lvalue ParmVar 0x562523214960 'isout' 'bool'
|-CXXMethodDecl 0x562523214bc8 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x562523214ab0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x562523214b28 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x562523214d20 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x562523214c88 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x562523214fc8 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x562523214dd8 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x562523214e50 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x562523214ed0 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x5625232151a0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x562523215090 <col:30> col:34 'bool'
| `-ParmVarDecl 0x562523215108 <col:36> col:40 'bool'
|-CXXMethodDecl 0x562523215328 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x562523215268 <col:30> col:33 'int'
|-CXXMethodDecl 0x5625232155c0 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x5625232153e8 <col:23> col:26 'int'
| |-ParmVarDecl 0x562523215460 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x5625232154d8 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x5625232157d8 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x562523215688 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x562523215700 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x5625232159e8 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x5625232158a0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x562523215918 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x562523215b68 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x562523215aa8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x562523215d68 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x562523215c20 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x562523215c98 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x562523215f40 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x562523215e28 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x562523215ea8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x562523216220 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x562523216000 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x562523216078 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5625232160f8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x562523216170 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x562523216300 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x562523216360 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x5625232165e0 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x5625232164e0 parent 0x562522fc6410 prev 0x562522fd6038 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x5625232163c0 <col:36> col:39 'int'
    `-ParmVarDecl 0x562523216440 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522fc6410 prev 0x562522fc6190 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562522fc6508 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x562522fc6598 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x562522fc65f8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x562522fc66e8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x562522fc67e8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x562522fc69b8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x562522fc6868 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x562522fc68e0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x562522fc6b48 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x562522fc6a80 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x562522fc6bf0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x562522fc6d28 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x562522fc6c60 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x562522fc6ec8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x562522fc6e08 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x562522fc7068 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x562522fc6fa8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x562522fc7110 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x562522fc7210 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x562522fc72f0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc71f0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x562522fc71d0 <col:26> 'int' 1
| `-EnumConstantDecl 0x562522fc72a0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x562522fc7308 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522fc7280 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x562522fc7260 <col:44> 'int' 2
|-CXXMethodDecl 0x562522fc7450 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x562522fc7338 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x562522fc73b8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x562522fc75a8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x562522fc7518 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x562522fc77e8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x562522fc7668 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x562522fc76e0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x562522fc7898 <col:20>
| `-OptimizeNoneAttr 0x562522fc78f0 <col:30>
|-CXXMethodDecl 0x562522fc79f8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x562522fc7930 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x562522fc7aa0 <col:20>
| `-OptimizeNoneAttr 0x562522fc7af8 <col:30>
|-CXXMethodDecl 0x562522fc7b48 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x562522fc7c10 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x562522fc7d28 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x562522fc7db0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x562522fc7e38 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x562522fc7ec0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x562522fc7f48 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x562522fc7fd8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x562522fc8098 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x562522fc8120 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x562522fc81a8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x562522fc8230 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x562522fc82b8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x562522fc8340 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x562522fc83d0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x562522fc8490 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x562522fc8520 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x562522fc8670 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x562522fc85d8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x562522fc8800 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x562522fc8730 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x562522fc8ab0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x562522fc88b8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x562522fc8938 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x562522fc89b8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x562522fc8b68 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x562522fc8c70 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x562522fc8f00 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc8c50 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x562522fc8c30 <col:33> 'int' 0
| |-EnumConstantDecl 0x562522fc8d00 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x562522fc8f18 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc8ce0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x562522fc8cc0 <col:32> 'int' 20
| |-EnumConstantDecl 0x562522fc8d90 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x562522fc8f30 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc8d70 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x562522fc8d50 <col:38> 'int' 90
| |-EnumConstantDecl 0x562522fc8e20 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x562522fc8f48 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc8e00 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x562522fc8de0 <col:35> 'int' 100
| `-EnumConstantDecl 0x562522fc8eb0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x562522fc8f60 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522fc8e90 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x562522fc8e70 <col:32> 'int' 2000
|-CXXMethodDecl 0x562522fc8fa0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x562522fc93e0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x562522fc9250 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x562522fc92c8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562522fc94b0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x562522fc9630 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x562522fc9560 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562522fc9838 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x562522fc96e8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x562522fc9760 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562522fc9938 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x562522fc99d8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x562522fc9aa0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x562522fc9b30 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x562522fc9d60 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fc9b10 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x562522fc9af0 <col:36> 'int' EnumConstant 0x562522fc9aa0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x562522fc9b80 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x562522fc9bd0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x562522fc9c20 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x562522fc9c70 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x562522fc9cc0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x562522fc9d10 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x562522fc9e48 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x562522fc9d88 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x562522fc9f10 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x562522fc9fd0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x562522fca090 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x562522fca150 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x562522fca268 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x562522fca330 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x562522fca4b0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x562522fca3e0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x562522fca5d8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x562522fca7d8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x562522fca688 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x562522fca708 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x562522fd8128 <col:54, line:127:5>
|   |-ParenExpr 0x562522fd7fd8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x562522fd7fa8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x562522fd7c98 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x562522fd7c70 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x562522fd7c58 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x562522fd7c40 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x562522fd7c10 <col:31> 'Router *' lvalue ->_router 0x562522fd5af0
|   |   |         `-CXXThisExpr 0x562522fd7c00 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x562522fd7cf8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fd7cd8 <col:48> 'int' 0
|   |   `-CallExpr 0x562522fd7f08 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x562522fd7ef0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fd7ed0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fd7f48 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fd7d68 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x562522fd7f60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fd7d88 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x562522fd7f78 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fd7dc0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x562522fd7f90 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fd7eb8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fd7ea0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fd7e58 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x562522fd8070 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x562522fd8008 <col:9> 'Router *' lvalue ->_router 0x562522fd5af0
|   | | `-CXXThisExpr 0x562522fd7ff8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x562522fd8058 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x562522fd8038 <col:19> 'Router *' lvalue ParmVar 0x562522fca688 'r' 'Router *'
|   `-BinaryOperator 0x562522fd8108 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x562522fd80a0 <col:9> 'int' lvalue ->_eindex 0x562522fd5b58
|     | `-CXXThisExpr 0x562522fd8090 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x562522fd80f0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x562522fd80d0 <col:19> 'int' lvalue ParmVar 0x562522fca708 'eindex' 'int'
|-CXXMethodDecl 0x562522fca960 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x562522fca898 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x562522fcaa30 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x562522fcaaf8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x562522fcab98 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x562522fcade8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x562522fcac60 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x562522fcace0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x562522fcae98 <col:20>
| `-OptimizeNoneAttr 0x562522fcaef0 <col:30>
|-CXXMethodDecl 0x562522fcaff8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x562522fcaf30 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x562522fcb0a0 <col:20>
| `-OptimizeNoneAttr 0x562522fcb0f8 <col:30>
|-CXXMethodDecl 0x562522fcb1c8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x562522fcb138 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x562522fcb270 <col:20>
| `-OptimizeNoneAttr 0x562522fcb2c8 <col:30>
|-CXXMethodDecl 0x562522fcb458 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x562522fcb300 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x562522fcb380 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x562522fcb5e8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x562522fcb520 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x562522fcb738 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x562522fcb6a8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x562522fcb888 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x562522fcb7f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x562522fcb9d8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x562522fcb948 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x562522fcbc98 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x562522fcba90 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x562522fcbb10 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x562522fcbbb8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x562522fcbd70 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x562522fcbe30 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x562522fcc100 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x562522fcbfb0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x562522fcc028 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x562522fcc228 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x562522fcc400 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x562522fcc2e0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x562522fcc360 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x562522fcc5e8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x562522fcc4c8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x562522fcc548 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x562522fcc958 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x562522fcc6a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x562522fcc720 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x562522fcc7a0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x562522fd7710 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x562522fd76f0 <col:106> 'int' 0
| `-ParmVarDecl 0x562522fcc818 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562522fd7748 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562522fd7728 <col:126> 'int' 0
|-CXXMethodDecl 0x562522fcccf8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x562522fcca28 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x562522fccac0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x562522fccb40 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x562522fccbb8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562522fd7780 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562522fd7760 <col:114> 'int' 0
|-CXXMethodDecl 0x562522fcd088 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x562522fccdd0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x562522fcce48 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x562522fccec8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x562522fd7798 <col:96> 'int' 0
| `-ParmVarDecl 0x562522fccf40 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562522fd77d8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562522fd77b8 <col:116> 'int' 0
|-CXXMethodDecl 0x562522fcd408 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x562522fcd158 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x562522fcd1d0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x562522fcd250 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x562522fd7810 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x562522fd77f0 <col:109> 'int' 0
| `-ParmVarDecl 0x562522fcd2c8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562522fd7848 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562522fd7828 <col:129> 'int' 0
|-CXXMethodDecl 0x562522fcd788 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x562522fcd4d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x562522fcd550 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x562522fcd5d0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x562522fcd648 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562522fd7880 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562522fd7860 <col:117> 'int' 0
|-CXXMethodDecl 0x562522fcdb18 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x562522fcd860 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fcd8d8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x562522fcd958 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x562522fd7898 <col:99> 'int' 0
| `-ParmVarDecl 0x562522fcd9d0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x562522fd78d8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x562522fd78b8 <col:119> 'int' 0
|-CXXMethodDecl 0x562522fcdf38 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x562522fcdbe8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x562522fcdc68 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x562522fcdce0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x562522fcdd60 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x562522fd7910 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x562522fd78f0 <col:108> 'int' 0
| `-ParmVarDecl 0x562522fcdde0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x562522fd7948 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x562522fd7928 <col:141> 'int' 0
|-CXXMethodDecl 0x562522fce358 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x562522fce010 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x562522fce090 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x562522fce108 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x562522fce188 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x562522fce208 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x562522fd7960 <col:121> 'int' 0
|-CXXMethodDecl 0x562522fce788 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x562522fce438 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x562522fce4b8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x562522fce530 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x562522fce5b0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x562522fd7980 <col:98> 'int' 0
| `-ParmVarDecl 0x562522fce630 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x562522fd79a0 <col:123> 'int' 0
|-CXXMethodDecl 0x562522fcea50 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x562522fce860 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x562522fce8e0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x562522fce960 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x562522fd79c0 <col:80> 'int' 0
|-EnumDecl 0x562522fceb08 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x562522fcec10 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x562522fceea0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fcebf0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x562522fcebd0 <col:42> 'int' 1
| |-EnumConstantDecl 0x562522fceca0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x562522fceeb8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fcec80 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x562522fcec60 <col:40> 'int' 2
| |-EnumConstantDecl 0x562522fced30 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x562522fceed0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fced10 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x562522fcecf0 <col:44> 'int' 4
| |-EnumConstantDecl 0x562522fcedc0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x562522fceee8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522fceda0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x562522fced80 <col:36> 'int' 7
| `-EnumConstantDecl 0x562522fcee50 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x562522fcef00 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522fcee30 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x562522fcee10 <col:34> 'int' 6
|-CXXMethodDecl 0x562522fcf1b8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x562522fcef28 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x562522fcefc8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x562522fcf048 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x562522fcf0c0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x562522fd7a78 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x562522fd7a60 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x562522fd7a48 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x562522fd7a28 <col:98, col:105> 'String' (CXXTemporary 0x562522fd7a28)
|           `-CXXTemporaryObjectExpr 0x562522fd79f0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x562522fcf458 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x562522fcf288 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x562522fcf300 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x562522fcf378 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x562522fd7b28 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x562522fd7b10 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x562522fd7af8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x562522fd7ad8 <col:94, col:101> 'String' (CXXTemporary 0x562522fd7ad8)
| |         `-CXXTemporaryObjectExpr 0x562522fd7aa0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x562522fd8310 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x562522fd8288 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x562522fd8258 <col:9> '<bound member function type>' ->add_task_handlers 0x562522fcf1b8
|     | `-CXXThisExpr 0x562522fd8248 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x562522fd82c8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x562522fd81c8 <col:27> 'Task *' lvalue ParmVar 0x562522fcf288 'task' 'Task *'
|     |-ImplicitCastExpr 0x562522fd82e0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x562522fd81e8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x562522fcf300 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x562522fd82f8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x562522fd8208 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x562522fcee50 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x562522fd8228 <col:62> 'const String' lvalue ParmVar 0x562522fcf378 'prefix' 'const String &'
|-CXXMethodDecl 0x562522fcf668 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x562522fcf520 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x562522fcf598 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x562522fd7bd8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x562522fd7bc0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x562522fd7ba8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x562522fd7b88 <col:70, col:77> 'String' (CXXTemporary 0x562522fd7b88)
| |         `-CXXTemporaryObjectExpr 0x562522fd7b50 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x562522fd84e8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x562522fd8460 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x562522fd8430 <col:9> '<bound member function type>' ->add_task_handlers 0x562522fcf1b8
|     | `-CXXThisExpr 0x562522fd8420 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x562522fd84a0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x562522fd83a0 <col:27> 'Task *' lvalue ParmVar 0x562522fcf520 'task' 'Task *'
|     |-ImplicitCastExpr 0x562522fd84b8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x562522fd83c0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x562522fd84d0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x562522fd83e0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x562522fcee50 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x562522fd8400 <col:57> 'const String' lvalue ParmVar 0x562522fcf598 'prefix' 'const String &'
|-CXXMethodDecl 0x562522fcf948 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x562522fcf730 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fcf7b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fcf828 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x562522fcfbf8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x562522fcfa18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fcfa98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fcfb18 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x562522fcfee8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x562522fcfcc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fcfd48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fcfdc0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x562522fd0198 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x562522fcffb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd0038 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd00b8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x562522fd0448 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x562522fd0268 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd02e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd0368 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x562522fd06f8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x562522fd0518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd0598 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd0610 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x562522fd09a8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x562522fd07c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd0848 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd08c8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x562522fd0cb8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x562522fd0ad0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd0b50 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd0bd0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x562522fd0f98 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x562522fd0d88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd0e08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd0eb0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x562522fd1278 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x562522fd1068 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd10e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd1190 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x562522fd14e0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x562522fd1348 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x562522fd13c8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x562522fd1440 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x562522fd1788 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x562522fd15b0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x562522fd1630 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x562522fd16a8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x562522fd1a38 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x562522fd1858 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd18d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd1958 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x562522fd1ce8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x562522fd1b08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd1b88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd1c00 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x562522fd1f98 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x562522fd1db8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd1e38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd1eb0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x562522fd2268 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x562522fd2068 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd20e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x562522fd2188 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x562522fd2598 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x562522fd2338 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x562522fd23b8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x562522fd2430 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x562522fd24a8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562522fd7bf0 <col:93> 'bool' false
|-CXXMethodDecl 0x562522fd2780 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x562522fd2668 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x562522fd26e8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x562522fd2958 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x562522fd2840 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x562522fd28c0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x562522fd2c38 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x562522fd2a18 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x562522fd2a90 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x562522fd2b10 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x562522fd2b88 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x562522fd2f28 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x562522fd2d08 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x562522fd2d80 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x562522fd2e00 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x562522fd2e78 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x562522fd3160 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x562522fd3000 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x562522fd3080 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x562522fd3348 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x562522fd3228 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x562522fd32a8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x562522fd33f8 prev 0x562522fcab98 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562522fd34f0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x562522fd3580 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x562522fd35f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x562522fd36b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x562522fd3780 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x562522fd38f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x562522fd3830 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x562522fd39a0 <col:24>
| | `-OptimizeNoneAttr 0x562522fd39f8 <col:34>
| |-CXXMethodDecl 0x562522fd3a40 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x562522fd3cf8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x562522fd3af0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x562522fd3b68 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x562522fd3be8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x562522fd3db0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x562522fd3de8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x562522fd3e50 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x562522fd3ed8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x562522fd41f8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x562522fd3f90 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x562522fd4008 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x562522fd4080 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x562522fd4100 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x562522fd4310 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x562522fdbc88 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x562522fdbc88
| | `-ParmVarDecl 0x562522fdbd98 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x562522fdbe38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x562522fdbe38
| | `-ParmVarDecl 0x562522fdbf48 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5625232363f0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x562522fd4388 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x562522fd4428 <col:38> "" ""
|-CXXMethodDecl 0x562522fd44b8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x562522fd4558 <col:44> "" ""
|-AccessSpecDecl 0x562522fd45c8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x562522fd45f0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x562522fd46f0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x562522fd4740 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522fd46d0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x562522fd46b0 <col:27> 'int' 4
|-FieldDecl 0x562522fd47f8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x562522fd49a8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x562522fd4a60 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x562522fd5af0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x562522fd5b58 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x562522fd5ca8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x562522fd5be8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x562522fd5e58 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x562522fd5d68 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x562522fd6038 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x562522fd5f18 <col:20> col:23 'int'
| `-ParmVarDecl 0x562522fd5f98 <col:25> col:28 'int'
|-CXXMethodDecl 0x562522fd62e0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x562522fd6100 <col:23> col:26 'int'
| |-ParmVarDecl 0x562522fd6180 <col:28> col:31 'int'
| `-ParmVarDecl 0x562522fd61f8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x562522fd6398 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x562522fd6460 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x562522fd64b0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x562522fd6500 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x562522fd66e0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x562522fd6590 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x562522fd6608 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562522fd6988 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x562522fd67a8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x562522fd6828 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x562522fd68a0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x562522fd6ba8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x562522fd6a58 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x562522fd6ad8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x562522fd6ee0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x562522fd6c68 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x562522fd6ce8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x562522fd6d60 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x562522fd6de0 <col:57> col:60 'int'
|-CXXMethodDecl 0x562522fd70c8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x562522fd6fb0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x562522fd7030 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x562522fd7218 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x562522fd7188 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x562522fd7598 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x562522fd72d8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x562522fd7358 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x562522fd73d0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x562522fd7450 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x562522fd76b0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ARPQuerier
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class ARPTable * _arpt
       120 |   class EtherAddress _my_en
       120 |     uint16_t [3] _data
       128 |   class IPAddress _my_ip
       128 |     uint32_t _addr
       132 |   class IPAddress _my_bcast_ip
       132 |     uint32_t _addr
       136 |   uint32_t _poll_timeout_j
       140 |   int _broadcast_poll
       144 |   class atomic_uint32_t _arp_queries
       144 |     uint32_t _val
       148 |   class atomic_uint32_t _drops
       148 |     uint32_t _val
       152 |   class atomic_uint32_t _arp_responses
       152 |     uint32_t _val
       156 |   class atomic_uint32_t _broadcasts
       156 |     uint32_t _val
       160 |   _Bool _my_arpt
       161 |   _Bool _zero_warned
           | [sizeof=168, dsize=162, align=8,
           |  nvsize=162, nvalign=8]

*** Dumping AST Record Layout
         0 | class ReadWriteLock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<struct ARPTable::ARPEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >
         0 |   class HashContainer_adapter<struct ARPTable::ARPEntry> (base) (empty)
         0 |   struct ARPTable::ARPEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> >
         0 |   class HashContainer_rep<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > _rep
         0 |     class HashContainer_adapter<struct ARPTable::ARPEntry> (base) (empty)
         0 |     struct ARPTable::ARPEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class List<struct ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>
         0 |   struct ARPTable::ARPEntry * _head
         8 |   struct ARPTable::ARPEntry * _tail
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<72>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class ARPTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class ReadWriteLock _lock (empty)
       112 |   class HashContainer<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > _table
       112 |     class HashContainer_rep<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > _rep
       112 |       class HashContainer_adapter<struct ARPTable::ARPEntry> (base) (empty)
       112 |       struct ARPTable::ARPEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class List<struct ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link> _age
       144 |     struct ARPTable::ARPEntry * _head
       152 |     struct ARPTable::ARPEntry * _tail
       160 |   class atomic_uint32_t _entry_count
       160 |     uint32_t _val
       164 |   class atomic_uint32_t _packet_count
       164 |     uint32_t _val
       168 |   uint32_t _entry_capacity
       172 |   uint32_t _packet_capacity
       176 |   uint32_t _entry_packet_capacity
       180 |   uint32_t _capacity_slim_factor
       184 |   uint32_t _timeout_j
       188 |   class atomic_uint32_t _drops
       188 |     uint32_t _val
       192 |   class SizedHashAllocator<72> _alloc
       192 |     class HashAllocator (base)
       192 |       struct HashAllocator::link * _free
       200 |       struct HashAllocator::buffer * _buffer
       208 |       size_t _size
       216 |   class Timer _expire_timer
       216 |     int _schedpos1
       224 |     class Timestamp _expiry_s
       224 |       union Timestamp::rep_t _t
       224 |         int64_t x
       232 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       232 |       TimerCallback callback
       240 |     void * _thunk
       248 |     class Element * _owner
       256 |     class RouterThread * _thread
           | [sizeof=264, dsize=264, align=8,
           |  nvsize=264, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f49930 <../dummy_inc/click/sync.hh:406:1, line:429:1> line:406:7 referenced class ReadWriteLock definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x562522f49a48 <col:1, col:7> col:7 implicit referenced class ReadWriteLock
|-AccessSpecDecl 0x562522f49ad8 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x562522f49b60 <line:408:5, col:26> col:12 ReadWriteLock 'void ()' inline
|-CXXMethodDecl 0x562522f49c28 <line:413:5, col:30> col:17 used acquire_read 'void ()' inline
|-CXXMethodDecl 0x562522f49ce8 <line:414:5, col:30> col:17 attempt_read 'bool ()' inline
|-CXXMethodDecl 0x562522f49da8 <line:415:5, col:30> col:17 used release_read 'void ()' inline
|-CXXMethodDecl 0x562522f49e68 <line:416:5, col:31> col:17 acquire_write 'void ()' inline
|-CXXMethodDecl 0x562522f49f28 <line:417:5, col:31> col:17 attempt_write 'bool ()' inline
|-CXXMethodDecl 0x562522f49fe8 <line:418:5, col:31> col:17 release_write 'void ()' inline
|-CXXConstructorDecl 0x562522f4a128 <line:406:7> col:7 implicit constexpr ReadWriteLock 'void (const ReadWriteLock &)' inline default trivial noexcept-unevaluated 0x562522f4a128
| `-ParmVarDecl 0x562522f4a238 <col:7> col:7 'const ReadWriteLock &'
`-CXXConstructorDecl 0x562522f4a2d8 <col:7> col:7 implicit constexpr ReadWriteLock 'void (ReadWriteLock &&)' inline default trivial noexcept-unevaluated 0x562522f4a2d8
  `-ParmVarDecl 0x562522f4a3e8 <col:7> col:7 'ReadWriteLock &&'

Layout: <CGRecordLayout
  LLVMType:%class.ReadWriteLock = type { i8 }
  NonVirtualBaseLLVMType:%class.ReadWriteLock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523070fc8 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'ARPTable::ARPEntry'
|-CXXRecordDecl 0x562523071578 prev 0x562523070fc8 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x562523071608 <col:31, col:37> col:31 public
|-TypedefDecl 0x562523071700 <line:34:5, col:34> col:34 referenced key_type 'typename ARPEntry::key_type':'IPAddress'
| `-ElaboratedType 0x5625230716b0 'typename ARPEntry::key_type' sugar
|   `-TypedefType 0x562523071690 'ARPTable::ARPEntry::key_type' sugar
|     |-Typedef 0x56252306f958 'key_type'
|     `-RecordType 0x562522d2c4b0 'IPAddress'
|       `-CXXRecord 0x562522dc73e0 'IPAddress'
|-TypedefDecl 0x5625230717d0 <line:35:5, col:45> col:45 key_const_reference 'typename ARPEntry::key_const_reference':'IPAddress'
| `-ElaboratedType 0x562523071780 'typename ARPEntry::key_const_reference' sugar
|   `-TypedefType 0x56252306fb80 'ARPTable::ARPEntry::key_const_reference' sugar
|     |-Typedef 0x56252306f9c0 'key_const_reference'
|     `-RecordType 0x562522d2c4b0 'IPAddress'
|       `-CXXRecord 0x562522dc73e0 'IPAddress'
|-CXXMethodDecl 0x5625230719c0 <line:36:5, line:38:5> line:36:16 hashnext 'ARPTable::ARPEntry *&(ARPTable::ARPEntry *)' static
| `-ParmVarDecl 0x5625230718c8 <col:25, col:28> col:28 e 'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x562523071bc8 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<ARPTable::ARPEntry>::key_const_reference (const ARPTable::ARPEntry *)' static
| `-ParmVarDecl 0x562523071ad8 <col:40, col:49> col:49 e 'const ARPTable::ARPEntry *'
|-CXXMethodDecl 0x562523071e68 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<ARPTable::ARPEntry>::key_type &, const HashContainer_adapter<ARPTable::ARPEntry>::key_type &)' static
| |-ParmVarDecl 0x562523071cd8 <col:27, col:43> col:43 a 'const HashContainer_adapter<ARPTable::ARPEntry>::key_type &'
| `-ParmVarDecl 0x562523071d50 <col:46, col:62> col:62 b 'const HashContainer_adapter<ARPTable::ARPEntry>::key_type &'
|-CXXConstructorDecl 0x562523075f28 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<ARPTable::ARPEntry> &)' inline default trivial noexcept-unevaluated 0x562523075f28
| `-ParmVarDecl 0x562523076038 <col:7> col:7 'const HashContainer_adapter<ARPTable::ARPEntry> &'
|-CXXConstructorDecl 0x5625230760d8 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<ARPTable::ARPEntry> &&)' inline default trivial noexcept-unevaluated 0x5625230760d8
| `-ParmVarDecl 0x5625230761e8 <col:7> col:7 'HashContainer_adapter<ARPTable::ARPEntry> &&'
|-CXXDestructorDecl 0x5625230763f8 <col:7> col:7 implicit ~HashContainer_adapter 'void ()' inline default trivial noexcept-unevaluated 0x5625230763f8
|-CXXMethodDecl 0x562523076538 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<ARPTable::ARPEntry> &(const HashContainer_adapter<ARPTable::ARPEntry> &)' inline default trivial noexcept-unevaluated 0x562523076538
| `-ParmVarDecl 0x562523076648 <col:7> col:7 'const HashContainer_adapter<ARPTable::ARPEntry> &'
`-CXXMethodDecl 0x5625230766b8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<ARPTable::ARPEntry> &(HashContainer_adapter<ARPTable::ARPEntry> &&)' inline default trivial noexcept-unevaluated 0x5625230766b8
  `-ParmVarDecl 0x5625230767c8 <col:7> col:7 'HashContainer_adapter<ARPTable::ARPEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522dc73e0 prev 0x562522d2c418 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522dc74d8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x562522dc7568 <col:19, col:25> col:19 public
|-TypedefDecl 0x562522dc75a0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x562522bb9cf0 'uninitialized_type'
|   `-CXXRecord 0x562522bb9c58 'uninitialized_type'
|-CXXConstructorDecl 0x562522dc7660 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x562522dcadb0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x562522dcae58 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x562522dcae18 <col:10> 'int' 0
| `-CompoundStmt 0x562522dcaea0 <col:13, line:22:5>
|-CXXConstructorDecl 0x562522dc77b0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x562522dc7720 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x562522dcadb0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x562522dcaef0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x562522dcaeb0 <col:10> 'unsigned int' lvalue ParmVar 0x562522dc7720 'x' 'unsigned int'
| `-CompoundStmt 0x562522dcaf38 <col:13, line:27:5>
|-CXXConstructorDecl 0x562522dc7908 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x562522dc7878 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x562522dcadb0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x562522dcafa0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x562522dcaf88 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x562522dcaf48 <col:10> 'int' lvalue ParmVar 0x562522dc7878 'x' 'int'
| `-CompoundStmt 0x562522dcafe8 <col:13, line:31:5>
|-CXXConstructorDecl 0x562522dc7a60 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x562522dc79d0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x562522dcadb0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x562522dcb050 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x562522dcb038 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x562522dcaff8 <col:10> 'unsigned long' lvalue ParmVar 0x562522dc79d0 'x' 'unsigned long'
| `-CompoundStmt 0x562522dcb098 <col:13, line:35:5>
|-CXXConstructorDecl 0x562522dc7bb8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x562522dc7b28 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x562522dcadb0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x562522dcb100 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x562522dcb0e8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x562522dcb0a8 <col:10> 'long' lvalue ParmVar 0x562522dc7b28 'x' 'long'
| `-CompoundStmt 0x562522dcb148 <col:13, line:39:5>
|-CXXConstructorDecl 0x562522dc7d78 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x562522dc7c88 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x562522dcadb0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x562522dcb1c8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x562522dcb178 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x562522cfb1d0
| |     `-DeclRefExpr 0x562522dcb158 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x562522dc7c88 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x562522dcb210 <col:20, line:44:5>
|-CXXConstructorDecl 0x562522dc7f08 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x562522dc7e40 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x562522dcb378 <col:51, line:56:5>
|   `-BinaryOperator 0x562522dcb358 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x562522dcb230 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x562522dcadb0
|     | `-CXXThisExpr 0x562522dcb220 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x562522dcb340 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x562522dcb328 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x562522dcb308 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x562522dcb2d8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x562522dcb2c0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x562522dcb260 <col:47> 'const unsigned char *' lvalue ParmVar 0x562522dc7e40 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x562522dc8058 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x562522dc7fc8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x562522dc8208 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x562522dc8148 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x562522dcb3e8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x562522dcb3c0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x562522dcb390 <col:9> 'const uninitialized_type' lvalue ParmVar 0x562522dc8148 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x562522dc8398 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x562522dc82d0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x562522dc8488 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x562522dcc3a8 <col:46, line:83:5>
|   `-ReturnStmt 0x562522dcc398 <line:82:2, col:29>
|     `-ExprWithCleanups 0x562522dcc380 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x562522dcc350 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522dcc208 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x562522dcc0f0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x562522dcbfd8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x562522dcb410 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x562522dc8578 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x562522dcc458 <col:31, line:88:5>
|   `-ReturnStmt 0x562522dcc448 <line:87:2, col:10>
|     `-UnaryOperator 0x562522dcc430 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x562522dcc418 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x562522dcc400 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x562522dcc3d0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x562522dcadb0
|             `-CXXThisExpr 0x562522dcc3c0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x562522dc8638 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x562522dcc4d8 <col:34, line:93:5>
|   `-ReturnStmt 0x562522dcc4c8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x562522dcc4b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x562522dcc480 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x562522dcadb0
|         `-CXXThisExpr 0x562522dcc470 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x562522dc8708 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x562522dcc558 <col:38, line:101:5>
|   `-ReturnStmt 0x562522dcc548 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x562522dcc530 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x562522dcc500 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x562522dcadb0
|         `-CXXThisExpr 0x562522dcc4f0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x562522dc87d8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x562522dcc828 <col:38, line:108:5>
|   `-ReturnStmt 0x562522dcc818 <line:107:2, col:58>
|     `-BinaryOperator 0x562522dcc7f8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x562522dcc710 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x562522dcc6f0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x562522dcc6d8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x562522dcc580 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x562522dcadb0
|       |   |   `-CXXThisExpr 0x562522dcc570 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x562522dcc6b0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x562522dcc698 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x562522dcc618 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x562522d09708 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x562522dcc5f8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x562522dcc7d0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x562522dcc7b8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x562522dcc798 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x562522d09708 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x562522dcc778 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x562522dc8898 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x562522dcca98 <col:39, line:112:5>
|   `-ReturnStmt 0x562522dcca88 <line:111:2, col:56>
|     `-BinaryOperator 0x562522dcca68 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x562522dcc980 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x562522dcc960 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x562522dcc948 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x562522dcc850 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x562522dcadb0
|       |   |   `-CXXThisExpr 0x562522dcc840 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x562522dcc920 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x562522dcc908 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x562522dcc8e8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x562522d09708 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x562522dcc8c8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x562522dcca40 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x562522dcca28 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x562522dcca08 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x562522d09708 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x562522dcc9e8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x562522dc89c8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x562522dc8ad0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x562522dc8be0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x562522dc9ca8 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x562522dc9d68 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x562522dc9e30 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x562522dca028 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x562522dc9ee0 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x562522dc9f58 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x562522dca1a8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x562522dca0e8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x562522dca2f0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x562522dca260 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x562522dca498 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x562522dca3a8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x562522dca5e0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x562522dca550 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x562522dca728 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x562522dca698 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x562522dca7f0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x562522dca8b0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x562522dcaa28 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x562522dca960 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x562522dcaaf0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x562522dcabd8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x562522dcac80 <col:51> "" ""
|-TypedefDecl 0x562522dcad20 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x562522d2c4b0 'IPAddress'
|   `-CXXRecord 0x562522dc73e0 'IPAddress'
|-AccessSpecDecl 0x562522dcad78 <line:150:3, col:10> col:3 private
|-FieldDecl 0x562522dcadb0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x562522dcb458 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x562522dcb568 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x562522dcadb0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56252307de88 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56252307de40 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x562522dcadb0
| |     `-DeclRefExpr 0x56252307de20 <col:7> 'const IPAddress' lvalue ParmVar 0x562522dcb568 '' 'const IPAddress &'
| `-CompoundStmt 0x56252307ded0 <col:7>
|-CXXConstructorDecl 0x562522dcb608 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562522dcb718 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x562522dcadb0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x562522dcc2f8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x562522dcc2b0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x562522dcadb0
| |     `-CXXStaticCastExpr 0x562522dcc280 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x562522dcc250 <col:7> 'IPAddress' lvalue ParmVar 0x562522dcb718 '' 'IPAddress &&'
| `-CompoundStmt 0x562522dcc340 <col:7>
|-CXXDestructorDecl 0x562522dcc008 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5625230708d8 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x5625230708d8
| `-ParmVarDecl 0x5625230709e8 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x562523070a58 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x562523070a58
  `-ParmVarDecl 0x562523070b68 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522fdedf8 prev 0x562522fc6360 <../dummy_inc/click/etheraddress.hh:9:1, line:148:1> line:9:7 referenced class EtherAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-PackedAttr 0x562522fe0868 <line:148:18>
|-CXXRecordDecl 0x562522fdeef0 <line:9:1, col:7> col:7 implicit referenced class EtherAddress
|-AccessSpecDecl 0x562522fdef80 <col:22, col:28> col:22 public
|-TypedefDecl 0x562522fdefb8 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x562522bb9cf0 'uninitialized_type'
|   `-CXXRecord 0x562522bb9c58 'uninitialized_type'
|-CXXConstructorDecl 0x562522fdf048 <line:14:5, line:16:5> line:14:12 used EtherAddress 'void ()' inline
| `-CompoundStmt 0x562522fe0b68 <col:27, line:16:5>
|   `-BinaryOperator 0x562522fe0b48 <line:15:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x562522fe0950 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x562522fe0938 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x562522fe08e8 <col:2> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|     | |   `-CXXThisExpr 0x562522fe08d8 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x562522fe0918 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x562522fe0b30 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x562522fe0b10 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x562522fe09e8 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x562522fe09d0 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x562522fe0980 <col:13> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|         | |   `-CXXThisExpr 0x562522fe0970 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x562522fe09b0 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x562522fe0af8 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x562522fe0ad8 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x562522fe0a80 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x562522fe0a68 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x562522fe0a18 <col:24> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|             | |   `-CXXThisExpr 0x562522fe0a08 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x562522fe0a48 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x562522fe0ac0 <col:35> 'uint16_t':'unsigned short' <IntegralCast>
|               `-IntegerLiteral 0x562522fe0aa0 <col:35> 'int' 0
|-CXXConstructorDecl 0x562522fdf198 <line:22:5, line:24:5> line:22:21 EtherAddress 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x562522fdf108 <col:34, col:55> col:55 used data 'const unsigned char *'
| `-CompoundStmt 0x562522fe0d30 <col:61, line:24:5>
|   `-CallExpr 0x562522fe0c80 <line:23:2, col:23> 'void *'
|     |-ImplicitCastExpr 0x562522fe0c68 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x562522fe0c48 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x562522cc3a68 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x562522fe0cd0 <col:9> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x562522fe0cb8 <col:9> 'uint16_t *' <ArrayToPointerDecay>
|     |   `-MemberExpr 0x562522fe0bd8 <col:9> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|     |     `-CXXThisExpr 0x562522fe0bc8 <col:9> 'EtherAddress *' implicit this
|     |-ImplicitCastExpr 0x562522fe0d00 <col:16> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x562522fe0ce8 <col:16> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x562522fe0c08 <col:16> 'const unsigned char *' lvalue ParmVar 0x562522fdf108 'data' 'const unsigned char *'
|     `-ImplicitCastExpr 0x562522fe0d18 <col:22> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x562522fe0c28 <col:22> 'int' 6
|-CXXConstructorDecl 0x562522fdf2e8 <line:27:5, line:29:5> line:27:12 EtherAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x562522fdf258 <col:25, col:51> col:51 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x562522fe0da0 <col:59, line:29:5>
|   `-CStyleCastExpr 0x562522fe0d78 <line:28:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x562522fe0d48 <col:9> 'const uninitialized_type' lvalue ParmVar 0x562522fdf258 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x562522fdf3e8 <line:32:5, line:34:5> line:32:25 used make_broadcast 'EtherAddress ()' static
| `-CompoundStmt 0x562522fe14e8 <col:42, line:34:5>
|   `-ReturnStmt 0x562522fe14d8 <line:33:2, col:28>
|     `-ExprWithCleanups 0x562522fe14c0 <col:9, col:28> 'EtherAddress'
|       `-CXXConstructExpr 0x562522fe1490 <col:9, col:28> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522fe12c8 <col:9, col:28> 'EtherAddress' xvalue
|           `-CXXFunctionalCastExpr 0x562522fe1240 <col:9, col:28> 'EtherAddress' functional cast to class EtherAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x562522fe1130 <col:9, col:28> 'EtherAddress' 'void (uint16_t)'
|               `-ImplicitCastExpr 0x562522fe1118 <col:22> 'uint16_t':'unsigned short' <IntegralCast>
|                 `-IntegerLiteral 0x562522fe0dc8 <col:22> 'int' 65535
|-CXXMethodDecl 0x562522fdf4a8 <line:36:5, col:70> col:32 broadcast 'EtherAddress ()' static inline
| `-DeprecatedAttr 0x562522fdf548 <col:59> "" ""
|-TypedefDecl 0x562522fdf6c8 <line:39:5, col:59> col:34 referenced unspecified_bool_type 'bool (EtherAddress::*)() const'
| `-MemberPointerType 0x562522fdf640 'bool (EtherAddress::*)() const'
|   |-RecordType 0x562522fc63f0 'EtherAddress'
|   | `-CXXRecord 0x562522fdedf8 'EtherAddress'
|   `-ParenType 0x562522fdf5e0 'bool () const' sugar
|     `-FunctionProtoType 0x562522b0ca10 'bool () const' const cdecl
|       `-BuiltinType 0x562522a5e2f0 'bool'
|-CXXConversionDecl 0x562522fdf808 <line:41:5, line:43:5> line:41:12 operator bool (EtherAddress::*)() const 'EtherAddress::unspecified_bool_type () const' inline
| `-CompoundStmt 0x562522fe18c8 <col:51, line:43:5>
|   `-ReturnStmt 0x562522fe18b8 <line:42:2, col:70>
|     `-ConditionalOperator 0x562522fe1888 <col:9, col:70> 'bool (EtherAddress::*)() const'
|       |-BinaryOperator 0x562522fe17b0 <col:9, col:40> 'bool' '||'
|       | |-BinaryOperator 0x562522fe16c8 <col:9, col:28> 'bool' '||'
|       | | |-ImplicitCastExpr 0x562522fe1680 <col:9, col:16> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x562522fe1668 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x562522fe15b0 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x562522fe1598 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x562522fe1510 <col:9> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|       | | |     |   `-CXXThisExpr 0x562522fe1500 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x562522fe1540 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x562522fe16b0 <col:21, col:28> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x562522fe1698 <col:21, col:28> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x562522fe1648 <col:21, col:28> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x562522fe1630 <col:21> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x562522fe15e0 <col:21> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|       | |       |   `-CXXThisExpr 0x562522fe15d0 <col:21> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x562522fe1610 <col:27> 'int' 1
|       | `-ImplicitCastExpr 0x562522fe1798 <col:33, col:40> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x562522fe1780 <col:33, col:40> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x562522fe1760 <col:33, col:40> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x562522fe1748 <col:33> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x562522fe16f8 <col:33> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|       |       |   `-CXXThisExpr 0x562522fe16e8 <col:33> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x562522fe1728 <col:39> 'int' 2
|       |-UnaryOperator 0x562522fe1838 <col:44, col:59> 'bool (EtherAddress::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x562522fe1808 <col:45, col:59> 'bool () const' CXXMethod 0x562522fdf8d8 'is_group' 'bool () const'
|       `-ImplicitCastExpr 0x562522fe1870 <col:70> 'bool (EtherAddress::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x562522fe1850 <col:70> 'int' 0
|-CXXMethodDecl 0x562522fdf8d8 <line:49:5, line:51:5> line:49:17 used is_group 'bool () const' inline
| `-CompoundStmt 0x562522fe1a88 <col:34, line:51:5>
|   `-ReturnStmt 0x562522fe1a78 <line:50:2, col:21>
|     `-ImplicitCastExpr 0x562522fe1a60 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x562522fe1a40 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x562522fe1a28 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x562522fe1a10 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x562522fe19d0 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x562522fe1990 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x562522fe1960 <col:9> '<bound member function type>' ->data 0x562522fdfd70
|         |     |   `-CXXThisExpr 0x562522fe1950 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x562522fe19b0 <col:16> 'int' 0
|         `-IntegerLiteral 0x562522fe19f0 <col:21> 'int' 1
|-CXXMethodDecl 0x562522fdf998 <line:57:5, line:59:5> line:57:17 is_local 'bool () const' inline
| `-CompoundStmt 0x562522fe1c48 <col:34, line:59:5>
|   `-ReturnStmt 0x562522fe1c38 <line:58:2, col:21>
|     `-ImplicitCastExpr 0x562522fe1c20 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x562522fe1c00 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x562522fe1be8 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x562522fe1bd0 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x562522fe1b90 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x562522fe1b50 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x562522fe1b20 <col:9> '<bound member function type>' ->data 0x562522fdfd70
|         |     |   `-CXXThisExpr 0x562522fe1b10 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x562522fe1b70 <col:16> 'int' 0
|         `-IntegerLiteral 0x562522fe1bb0 <col:21> 'int' 2
|-CXXMethodDecl 0x562522fdfa58 <line:64:5, line:66:5> line:64:17 used is_broadcast 'bool () const' inline
| `-CompoundStmt 0x562522fe1f48 <col:38, line:66:5>
|   `-ReturnStmt 0x562522fe1f38 <line:65:2, col:43>
|     `-BinaryOperator 0x562522fe1f18 <col:9, col:43> 'bool' '=='
|       |-BinaryOperator 0x562522fe1ed8 <col:9, col:38> 'int' '+'
|       | |-BinaryOperator 0x562522fe1df0 <col:9, col:27> 'int' '+'
|       | | |-ImplicitCastExpr 0x562522fe1da8 <col:9, col:16> 'int' <IntegralCast>
|       | | | `-ImplicitCastExpr 0x562522fe1d90 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x562522fe1cd8 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x562522fe1cc0 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x562522fe1c70 <col:9> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|       | | |     |   `-CXXThisExpr 0x562522fe1c60 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x562522fe1ca0 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x562522fe1dd8 <col:20, col:27> 'int' <IntegralCast>
|       | |   `-ImplicitCastExpr 0x562522fe1dc0 <col:20, col:27> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x562522fe1d70 <col:20, col:27> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x562522fe1d58 <col:20> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x562522fe1d08 <col:20> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|       | |       |   `-CXXThisExpr 0x562522fe1cf8 <col:20> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x562522fe1d38 <col:26> 'int' 1
|       | `-ImplicitCastExpr 0x562522fe1ec0 <col:31, col:38> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x562522fe1ea8 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x562522fe1e88 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x562522fe1e70 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x562522fe1e20 <col:31> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|       |       |   `-CXXThisExpr 0x562522fe1e10 <col:31> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x562522fe1e50 <col:37> 'int' 2
|       `-IntegerLiteral 0x562522fe1ef8 <col:43> 'int' 196605
|-CXXMethodDecl 0x562522fdfbd8 <line:69:5, line:75:5> line:69:24 is_broadcast 'bool (const unsigned char *)' static inline
| |-ParmVarDecl 0x562522fdfb10 <col:37, col:58> col:58 used data 'const unsigned char *'
| `-CompoundStmt 0x562522fe2098 <col:64, line:75:5>
|   `-ReturnStmt 0x562522fe2088 <line:71:2, col:68>
|     `-CXXMemberCallExpr 0x562522fe2068 <col:9, col:68> 'bool'
|       `-MemberExpr 0x562522fe2038 <col:9, col:55> '<bound member function type>' ->is_broadcast 0x562522fdfa58
|         `-CXXReinterpretCastExpr 0x562522fe1fa8 <col:9, col:52> 'const EtherAddress *' reinterpret_cast<const class EtherAddress *> <BitCast>
|           `-ImplicitCastExpr 0x562522fe1f90 <col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x562522fe1f60 <col:48> 'const unsigned char *' lvalue ParmVar 0x562522fdfb10 'data' 'const unsigned char *'
|-CXXMethodDecl 0x562522fdfca8 <line:78:5, line:80:5> line:78:27 data 'unsigned char *()' inline
| `-CompoundStmt 0x562522fe2160 <col:34, line:80:5>
|   `-ReturnStmt 0x562522fe2150 <line:79:2, col:48>
|     `-CXXReinterpretCastExpr 0x562522fe2120 <col:9, col:48> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x562522fe2108 <col:43> 'uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x562522fe20c0 <col:43> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|           `-CXXThisExpr 0x562522fe20b0 <col:43> 'EtherAddress *' implicit this
|-CXXMethodDecl 0x562522fdfd70 <line:83:5, line:85:5> line:83:33 used data 'const unsigned char *() const' inline
| `-CompoundStmt 0x562522fe2228 <col:46, line:85:5>
|   `-ReturnStmt 0x562522fe2218 <line:84:2, col:54>
|     `-CXXReinterpretCastExpr 0x562522fe21e8 <col:9, col:54> 'const unsigned char *' reinterpret_cast<const unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x562522fe21d0 <col:49> 'const uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x562522fe2188 <col:49> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|           `-CXXThisExpr 0x562522fe2178 <col:49> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x562522fdfeb8 <line:89:5, line:91:5> line:89:28 used sdata 'const uint16_t *() const' inline
| `-CompoundStmt 0x562522fe22a8 <col:42, line:91:5>
|   `-ReturnStmt 0x562522fe2298 <line:90:2, col:9>
|     `-ImplicitCastExpr 0x562522fe2280 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       `-MemberExpr 0x562522fe2250 <col:9> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|         `-CXXThisExpr 0x562522fe2240 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x562522fdffa8 <line:94:5, line:97:5> line:94:19 hashcode 'size_t () const' inline
| `-CompoundStmt 0x562522fe26b8 <col:36, line:97:5>
|   `-ReturnStmt 0x562522fe26a8 <line:95:2, line:96:31>
|     `-BinaryOperator 0x562522fe2688 <line:95:9, line:96:31> 'unsigned long' '^'
|       |-ParenExpr 0x562522fe2508 <line:95:9, col:46> 'unsigned long'
|       | `-BinaryOperator 0x562522fe24e8 <col:10, col:45> 'unsigned long' '|'
|       |   |-ImplicitCastExpr 0x562522fe24d0 <col:10, col:17> 'unsigned long' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x562522fe24b8 <col:10, col:17> 'uint16_t':'unsigned short' <LValueToRValue>
|       |   |   `-ArraySubscriptExpr 0x562522fe2338 <col:10, col:17> 'const uint16_t':'const unsigned short' lvalue
|       |   |     |-ImplicitCastExpr 0x562522fe2320 <col:10> 'const uint16_t *' <ArrayToPointerDecay>
|       |   |     | `-MemberExpr 0x562522fe22d0 <col:10> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|       |   |     |   `-CXXThisExpr 0x562522fe22c0 <col:10> 'const EtherAddress *' implicit this
|       |   |     `-IntegerLiteral 0x562522fe2300 <col:16> 'int' 2
|       |   `-ParenExpr 0x562522fe2498 <col:21, col:45> 'size_t':'unsigned long'
|       |     `-BinaryOperator 0x562522fe2478 <col:22, col:43> 'size_t':'unsigned long' '<<'
|       |       |-CStyleCastExpr 0x562522fe2430 <col:22, col:38> 'size_t':'unsigned long' <NoOp>
|       |       | `-ImplicitCastExpr 0x562522fe2418 <col:31, col:38> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|       |       |   `-ImplicitCastExpr 0x562522fe2400 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|       |       |     `-ArraySubscriptExpr 0x562522fe23d0 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |       |-ImplicitCastExpr 0x562522fe23b8 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       |       | `-MemberExpr 0x562522fe2368 <col:31> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|       |       |       |   `-CXXThisExpr 0x562522fe2358 <col:31> 'const EtherAddress *' implicit this
|       |       |       `-IntegerLiteral 0x562522fe2398 <col:37> 'int' 1
|       |       `-IntegerLiteral 0x562522fe2458 <col:43> 'int' 16
|       `-ParenExpr 0x562522fe2668 <line:96:8, col:31> 'size_t':'unsigned long'
|         `-BinaryOperator 0x562522fe2648 <col:9, col:30> 'size_t':'unsigned long' '<<'
|           |-CStyleCastExpr 0x562522fe2600 <col:9, col:25> 'size_t':'unsigned long' <NoOp>
|           | `-ImplicitCastExpr 0x562522fe25e8 <col:18, col:25> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           |   `-ImplicitCastExpr 0x562522fe25d0 <col:18, col:25> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|           |     `-ArraySubscriptExpr 0x562522fe25a0 <col:18, col:25> 'const uint16_t':'const unsigned short' lvalue
|           |       |-ImplicitCastExpr 0x562522fe2588 <col:18> 'const uint16_t *' <ArrayToPointerDecay>
|           |       | `-MemberExpr 0x562522fe2538 <col:18> 'uint16_t const[3]' lvalue ->_data 0x562522fe0668
|           |       |   `-CXXThisExpr 0x562522fe2528 <col:18> 'const EtherAddress *' implicit this
|           |       `-IntegerLiteral 0x562522fe2568 <col:24> 'int' 0
|           `-IntegerLiteral 0x562522fe2628 <col:30> 'int' 9
|-CXXMethodDecl 0x562522fe0068 <line:109:5, line:111:5> line:109:19 used unparse 'String () const' inline
| `-CompoundStmt 0x562522fe27c8 <col:35, line:111:5>
|   `-ReturnStmt 0x562522fe27b8 <line:110:2, col:22>
|     `-ExprWithCleanups 0x562522fe27a0 <col:9, col:22> 'String'
|       `-CXXConstructExpr 0x562522fe2770 <col:9, col:22> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x562522fe2758 <col:9, col:22> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x562522fe2738 <col:9, col:22> 'String' (CXXTemporary 0x562522fe2738)
|             `-CXXMemberCallExpr 0x562522fe2710 <col:9, col:22> 'String'
|               `-MemberExpr 0x562522fe26e0 <col:9> '<bound member function type>' ->unparse_dash 0x562522fe01e8
|                 `-CXXThisExpr 0x562522fe26d0 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x562522fe0128 <line:118:5, col:28> col:12 unparse_colon 'String () const'
|-CXXMethodDecl 0x562522fe01e8 <line:126:5, col:27> col:12 used unparse_dash 'String () const'
|-CXXMethodDecl 0x562522fe02a8 <line:131:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x562522fe0348 <col:44> "" ""
|-CXXConversionDecl 0x562522fe03e8 <line:136:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x562522fe0490 <col:51> "" ""
|-TypedefDecl 0x562522fe0548 <line:138:5, col:33> col:33 parameter_type 'const EtherAddress &'
| `-LValueReferenceType 0x562522fe0510 'const EtherAddress &'
|   `-QualType 0x562522fc63f1 'const EtherAddress' const
|     `-RecordType 0x562522fc63f0 'EtherAddress'
|       `-CXXRecord 0x562522fdedf8 'EtherAddress'
|-AccessSpecDecl 0x562522fe05a0 <line:140:2, col:9> col:2 private
|-FieldDecl 0x562522fe0668 <line:142:5, col:21> col:14 referenced _data 'uint16_t [3]'
|-CXXConstructorDecl 0x562522fe07b8 <line:144:5, line:146:5> line:144:5 used EtherAddress 'void (uint16_t)'
| |-ParmVarDecl 0x562522fe06c8 <col:18, col:27> col:27 used m 'uint16_t':'unsigned short'
| `-CompoundStmt 0x562522fe2a70 <col:30, line:146:5>
|   `-BinaryOperator 0x562522fe2a50 <line:145:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x562522fe2858 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x562522fe2840 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x562522fe27f0 <col:2> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|     | |   `-CXXThisExpr 0x562522fe27e0 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x562522fe2820 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x562522fe2a38 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x562522fe2a18 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x562522fe28f0 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x562522fe28d8 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x562522fe2888 <col:13> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|         | |   `-CXXThisExpr 0x562522fe2878 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x562522fe28b8 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x562522fe2a00 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x562522fe29e0 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x562522fe2988 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x562522fe2970 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x562522fe2920 <col:24> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|             | |   `-CXXThisExpr 0x562522fe2910 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x562522fe2950 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x562522fe29c8 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-DeclRefExpr 0x562522fe29a8 <col:35> 'uint16_t':'unsigned short' lvalue ParmVar 0x562522fe06c8 'm' 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x562522fe0de8 <line:9:7> col:7 implicit constexpr EtherAddress 'void (const EtherAddress &)' inline default trivial noexcept-unevaluated 0x562522fe0de8
| `-ParmVarDecl 0x562522fe0ef8 <col:7> col:7 'const EtherAddress &'
|-CXXConstructorDecl 0x562522fe0f98 <col:7> col:7 implicit used constexpr EtherAddress 'void (EtherAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562522fe10a8 <col:7> col:7 used 'EtherAddress &&'
| |-CXXCtorInitializer Field 0x562522fe0668 '_data' 'uint16_t [3]'
| | `-ArrayInitLoopExpr 0x562522fe1430 <col:7> 'uint16_t [3]'
| |   |-OpaqueValueExpr 0x562522fe13b8 <col:7> 'uint16_t [3]' xvalue
| |   | `-MemberExpr 0x562522fe1370 <col:7> 'uint16_t [3]' xvalue ._data 0x562522fe0668
| |   |   `-CXXStaticCastExpr 0x562522fe1340 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |   |     `-DeclRefExpr 0x562522fe1310 <col:7> 'EtherAddress' lvalue ParmVar 0x562522fe10a8 '' 'EtherAddress &&'
| |   `-ImplicitCastExpr 0x562522fe1418 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |     `-ArraySubscriptExpr 0x562522fe13f8 <col:7> 'uint16_t':'unsigned short' xvalue
| |       |-ImplicitCastExpr 0x562522fe13e0 <col:7> 'uint16_t *' <ArrayToPointerDecay>
| |       | `-OpaqueValueExpr 0x562522fe13b8 <col:7> 'uint16_t [3]' xvalue
| |       |   `-MemberExpr 0x562522fe1370 <col:7> 'uint16_t [3]' xvalue ._data 0x562522fe0668
| |       |     `-CXXStaticCastExpr 0x562522fe1340 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |       |       `-DeclRefExpr 0x562522fe1310 <col:7> 'EtherAddress' lvalue ParmVar 0x562522fe10a8 '' 'EtherAddress &&'
| |       `-ArrayInitIndexExpr 0x562522fe13d0 <<invalid sloc>> 'unsigned long'
| `-CompoundStmt 0x562522fe1480 <col:7>
|-CXXDestructorDecl 0x562522fe1160 <col:7> col:7 implicit referenced ~EtherAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x562523070bd8 <col:7> col:7 implicit used operator= 'EtherAddress &(const EtherAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x562523070ce8 <col:7> col:7 used 'const EtherAddress &'
| `-CompoundStmt 0x562523084320 <col:7>
|   |-CallExpr 0x562523084280 <col:7> 'void *'
|   | |-ImplicitCastExpr 0x562523084268 <col:7> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x5625230841f8 <col:7> '<builtin fn type>' Function 0x562523083fb0 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
|   | |-ImplicitCastExpr 0x5625230842b8 <col:7> 'void *' <BitCast>
|   | | `-UnaryOperator 0x562523083f08 <col:7> 'uint16_t (*)[3]' prefix '&' cannot overflow
|   | |   `-MemberExpr 0x562523083e80 <col:7> 'uint16_t [3]' lvalue ->_data 0x562522fe0668
|   | |     `-CXXThisExpr 0x562523083e70 <col:7> 'EtherAddress *' this
|   | |-ImplicitCastExpr 0x5625230842d0 <col:7> 'const void *' <BitCast>
|   | | `-UnaryOperator 0x562523083e58 <col:7> 'uint16_t const (*)[3]' prefix '&' cannot overflow
|   | |   `-MemberExpr 0x562523083dd0 <col:7> 'uint16_t const[3]' lvalue ._data 0x562522fe0668
|   | |     `-DeclRefExpr 0x562523083db0 <col:7> 'const EtherAddress' lvalue ParmVar 0x562523070ce8 '' 'const EtherAddress &'
|   | `-IntegerLiteral 0x562523084218 <col:7> 'unsigned long' 6
|   `-ReturnStmt 0x562523084310 <col:7>
|     `-UnaryOperator 0x5625230842f8 <col:7> 'EtherAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5625230842e8 <col:7> 'EtherAddress *' this
`-CXXMethodDecl 0x562523070d58 <col:7> col:7 implicit operator= 'EtherAddress &(EtherAddress &&)' inline default trivial noexcept-unevaluated 0x562523070d58
  `-ParmVarDecl 0x562523070e68 <col:7> col:7 'EtherAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddress = type { [3 x i16] }
  NonVirtualBaseLLVMType:%class.EtherAddress = type { [3 x i16] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f9eaa8 prev 0x562522f93cb0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522f9eba0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x562522f9ec90 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x562522f9edb8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x562522f9ef38 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x562522f9f0b8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x562522f9f238 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x562522fb0068 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x562522fb08d8 <col:11>
|-CXXDestructorDecl 0x562522fb0140 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x562522fb0278 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x562522fb0278
| `-ParmVarDecl 0x562522fb0388 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x562522fb0428 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x562522fb0428
| `-ParmVarDecl 0x562522fb0538 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x562522fb32f8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x562522fb3408 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x562522fb3688 <col:11>
|   `-ReturnStmt 0x562522fb3678 <col:11>
|     `-UnaryOperator 0x562522fb3660 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x562522fb3650 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x562522fb3478 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x562522fb3478
  `-ParmVarDecl 0x562522fb3588 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f9f2a0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522f9f3b8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x562522f9f458 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x562522f9f4c0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x562522f9f528 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x562522f9f590 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x562522f9f5f0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x562522f9f6b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x562522f9f710 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x562522f9f770 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x562522faff78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x562522f9f458 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x562522fb08e8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x562522fb0940 <col:12>
|-CXXConstructorDecl 0x562522fb05a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x562522fb05a8
| `-ParmVarDecl 0x562522fb06b8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x562522fb0758 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x562522fb0758
| `-ParmVarDecl 0x562522fb0868 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x562522fb29e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f8d3c0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562522f8d4d8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x562522f8d568 <col:16, col:22> col:16 public
|-EnumDecl 0x562522f8d590 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x562522f8d690 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x562522f8d770 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f8d670 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x562522f8d650 <col:21> 'int' 28
| `-EnumConstantDecl 0x562522f8d720 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x562522f8d788 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522f8d700 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x562522f8d6e0 <col:22> 'int' 64
|-CXXMethodDecl 0x562522f8dac8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x562522f8d7b0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562522f8d830 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x562522f8d8a8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562522f8d920 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562522f8db88 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x562522f8dd88 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x562522f8dc00 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x562522f8dc78 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562522f8de38 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x562522f8df98 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x562522f8dea8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562522f8e040 <col:72> warn_unused_result ""
|-TypedefDecl 0x562522f8e3a0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x562522f8e330 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x562522f8e2d0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x562522f8e290 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x562522a5e2d0 'void'
|       |-PointerType 0x562522d0d760 'unsigned char *'
|       | `-BuiltinType 0x562522a5e3d0 'unsigned char'
|       |-TypedefType 0x562522b09cd0 'size_t' sugar
|       | |-Typedef 0x562522aceb20 'size_t'
|       | `-BuiltinType 0x562522a5e430 'unsigned long'
|       `-PointerType 0x562522a5ead0 'void *'
|         `-BuiltinType 0x562522a5e2d0 'void'
|-CXXMethodDecl 0x562522f8e818 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x562522f8e410 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x562522f8e488 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562522f8e520 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x562522f8e5a0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x562522fa8f10 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x562522fa8ef8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x562522fa8ec0 <col:58> 'int' 0
| |-ParmVarDecl 0x562522f8e620 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x562522fa8f38 <col:76> 'int' 0
| |-ParmVarDecl 0x562522f8e6a0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x562522fa8f58 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x562522f8e8e8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x562522f8e968 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x562522f8ea28 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x562522f8eac8 <col:20>
| `-OptimizeNoneAttr 0x562522f8eb20 <col:30>
|-CXXMethodDecl 0x562522f8eb98 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x562522f8ec38 <col:20>
| `-OptimizeNoneAttr 0x562522f8ec90 <col:30>
|-CXXMethodDecl 0x562522f8ed08 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x562522f8eda8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x562522f8ee58 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x562522f8eef8 <col:20>
| |-OptimizeNoneAttr 0x562522f8ef50 <col:30>
| `-WarnUnusedResultAttr 0x562522f8ef78 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x562522f8efd0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x562522f8f070 <col:20>
| `-OptimizeNoneAttr 0x562522f8f0c8 <col:30>
|-CXXMethodDecl 0x562522f8f118 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x562522f8f1b8 <col:20>
| `-OptimizeNoneAttr 0x562522f8f210 <col:30>
|-CXXMethodDecl 0x562522f8f258 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x562522f8f2f8 <col:20>
| `-OptimizeNoneAttr 0x562522f8f350 <col:30>
|-CXXMethodDecl 0x562522f8f398 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f8f458 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f8f520 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x562522f8f5e8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x562522f8f6a8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f8f7c8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x562522fa9020 <col:54, line:99:5>
|   `-ReturnStmt 0x562522fa9010 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x562522fa8ff8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x562522fa8fc8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x562522f9faa8
|         `-CXXThisExpr 0x562522fa8fb8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x562522f8f968 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x562522f8f878 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x562522fa90d0 <col:67, line:103:5>
|   `-BinaryOperator 0x562522fa90b0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x562522fa9048 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x562522f9faa8
|     | `-CXXThisExpr 0x562522fa9038 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x562522fa9098 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x562522fa9078 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x562522f8f878 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x562522f8fa60 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x562522fa9150 <col:33, line:107:5>
|   `-ReturnStmt 0x562522fa9140 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x562522fa9128 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x562522fa90f8 <col:16> 'void *' lvalue ->_destructor_argument 0x562522f9fb10
|         `-CXXThisExpr 0x562522fa90e8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x562522f8fb20 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x562522fa9780 <col:25, line:113:5>
|   |-ParenExpr 0x562522fa94c8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x562522fa9498 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x562522fa9208 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x562522fa91e0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x562522fa91a8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x562522fa9178 <col:24> '<bound member function type>' ->shared 0x562522f8eb98
|   |   |       `-ImplicitCastExpr 0x562522fa91c8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x562522fa9168 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x562522fa9268 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fa9248 <col:42> 'int' 0
|   |   `-CallExpr 0x562522fa93f8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x562522fa93e0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fa93c0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fa9438 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fa92d8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x562522fa9450 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fa9300 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fa9468 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fa9338 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x562522fa9480 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fa93a8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fa9390 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fa9358 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x562522fa96c8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x562522fa94f8 <col:2> 'unsigned char *' lvalue ->_head 0x562522f9f8b0
|   | | `-CXXThisExpr 0x562522fa94e8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x562522fa96b0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x562522fa9690 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x562522fa9538 <col:10> 'unsigned char *' lvalue ->_data 0x562522f9f918
|   |     | `-CXXThisExpr 0x562522fa9528 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x562522fa9678 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x562522fa9658 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x562522fa9578 <col:18> 'unsigned char *' lvalue ->_tail 0x562522f9f980
|   |         | `-CXXThisExpr 0x562522fa9568 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x562522fa9640 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x562522fa9620 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x562522fa95b8 <col:26> 'unsigned char *' lvalue ->_end 0x562522f9f9e8
|   |             | `-CXXThisExpr 0x562522fa95a8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x562522fa9608 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x562522fa95e8 <col:33> 'int' 0
|   `-BinaryOperator 0x562522fa9760 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x562522fa96f8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x562522f9faa8
|     | `-CXXThisExpr 0x562522fa96e8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x562522fa9748 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x562522fa9728 <col:16> 'int' 0
|-CXXMethodDecl 0x562522f8fc60 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x562522f8fbd0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562522f8fd08 <col:20>
| |-OptimizeNoneAttr 0x562522f8fd60 <col:30>
| `-WarnUnusedResultAttr 0x562522f8fd88 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x562522f8fe58 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x562522f8fdc8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562522f8ff00 <col:20>
| |-OptimizeNoneAttr 0x562522f8ff58 <col:30>
| `-WarnUnusedResultAttr 0x562522f8ff80 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x562522f900b8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x562522f8ffc0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562522f90160 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x562522f90260 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x562522f901d0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562522f90308 <col:20>
| `-OptimizeNoneAttr 0x562522f90360 <col:30>
|-CXXMethodDecl 0x562522f90428 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x562522f90398 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562522f904d0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x562522f905d0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x562522f90540 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x562522f90678 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x562522f90778 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x562522f906e8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562522f90820 <col:20>
| `-OptimizeNoneAttr 0x562522f90878 <col:30>
|-CXXMethodDecl 0x562522f90a08 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x562522f908b8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x562522f90930 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x562522fa8f78 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x562522f90ab8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x562522f90cb8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x562522f90b30 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x562522f90ba8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f90ec8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x562522f90d78 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562522f90df0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f910d8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x562522f90f88 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x562522f91008 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x562522fa8f88 <col:39> 'int' 0
|-CXXMethodDecl 0x562522f911a8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x562522f91270 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x562522f91338 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x562522f913f8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f914c0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x562522f91608 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x562522f91578 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x562522f917d8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x562522f916c8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x562522f91740 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f918a8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x562522f91968 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x562522f91a08 <col:20>
| `-OptimizeNoneAttr 0x562522f91a60 <col:30>
|-CXXMethodDecl 0x562522f91ab0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x562522f91b50 <col:20>
| `-OptimizeNoneAttr 0x562522f91ba8 <col:30>
|-CXXMethodDecl 0x562522f91bf8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x562522f91cb8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f91d80 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x562522f91e20 <col:20>
| `-OptimizeNoneAttr 0x562522f91e78 <col:30>
|-CXXMethodDecl 0x562522f91fc8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x562522f91eb8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x562522f91f30 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f92118 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x562522f92088 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f921f0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x562522f922b0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x562522f92350 <col:20>
| `-OptimizeNoneAttr 0x562522f923a8 <col:30>
|-CXXMethodDecl 0x562522f923f8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x562522f92498 <col:20>
| `-OptimizeNoneAttr 0x562522f924f0 <col:30>
|-CXXMethodDecl 0x562522f92540 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x562522f92608 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x562522f926a8 <col:20>
| `-OptimizeNoneAttr 0x562522f92700 <col:30>
|-CXXMethodDecl 0x562522f92748 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x562522f92868 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x562522f929d8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x562522f92918 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x562522f92ac8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x562522f92b68 <col:20>
| `-OptimizeNoneAttr 0x562522f92bc0 <col:30>
|-CXXMethodDecl 0x562522f92c10 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x562522f92cd0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f92f08 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x562522f92d80 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x562522f92df8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562522f92fb8 <col:20>
| `-OptimizeNoneAttr 0x562522f93010 <col:30>
|-CXXMethodDecl 0x562522f930b8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x562522f93158 <col:20>
| `-OptimizeNoneAttr 0x562522f931b0 <col:30>
|-CXXMethodDecl 0x562522f93200 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x562522f932a0 <col:20>
| `-OptimizeNoneAttr 0x562522f932f8 <col:30>
|-CXXMethodDecl 0x562522f93340 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x562522f933e0 <col:20>
| `-OptimizeNoneAttr 0x562522f93438 <col:30>
|-CXXMethodDecl 0x562522f93538 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x562522f93470 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x562522f935e0 <col:20>
| `-OptimizeNoneAttr 0x562522f93638 <col:30>
|-CXXMethodDecl 0x562522f937f8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x562522f93670 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x562522f936e8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562522f938a8 <col:20>
| `-OptimizeNoneAttr 0x562522f93900 <col:30>
|-CXXMethodDecl 0x562522f939a8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x562522f93ac8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x562522f93be8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x562522f93c88 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x562522f93cb0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x562522f93dd8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x562522f93e78 <col:20>
| `-OptimizeNoneAttr 0x562522f93ed0 <col:30>
|-CXXMethodDecl 0x562522f93f78 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x562522f94018 <col:20>
| `-OptimizeNoneAttr 0x562522f94070 <col:30>
|-AccessSpecDecl 0x562522f94098 <line:344:3, col:9> col:3 public
|-EnumDecl 0x562522f940c0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x562522f941c0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x562522f94210 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522f941a0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x562522f94180 <col:14> 'int' 48
|-CXXMethodDecl 0x562522f94278 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x562522f94318 <col:20>
| `-OptimizeNoneAttr 0x562522f94370 <col:30>
|-CXXMethodDecl 0x562522f943e8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x562522f94488 <col:20>
| `-OptimizeNoneAttr 0x562522f944e0 <col:30>
|-CXXMethodDecl 0x562522f945a8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x562522f94518 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x562522f94748 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x562522f948e8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x562522f947f8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x562522f94990 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x562522f94a90 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562522f94e40 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f94a70 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x562522f94a50 <col:9> 'int' 0
| |-EnumConstantDecl 0x562522f94b20 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562522f94e58 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f94b00 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x562522f94ae0 <col:14> 'int' 1
| |-EnumConstantDecl 0x562522f94bb0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562522f94e70 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f94b90 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x562522f94b70 <col:14> 'int' 2
| |-EnumConstantDecl 0x562522f94c40 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562522f94e88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f94c20 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x562522f94c00 <col:14> 'int' 3
| |-EnumConstantDecl 0x562522f94cd0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562522f94ea0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f94cb0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x562522f94c90 <col:13> 'int' 4
| |-EnumConstantDecl 0x562522f94d60 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x562522f94eb8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f94d40 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x562522f94d20 <col:13> 'int' 5
| `-EnumConstantDecl 0x562522f94df0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x562522f94ed0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522f94dd0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x562522f94db0 <col:14> 'int' 6
|-CXXMethodDecl 0x562522f94f38 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x562522f94fd8 <col:20>
| `-OptimizeNoneAttr 0x562522f95030 <col:30>
|-CXXMethodDecl 0x562522f95128 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x562522f95068 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x562522f951d0 <col:20>
| `-OptimizeNoneAttr 0x562522f95228 <col:30>
|-CXXMethodDecl 0x562522f95298 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x562522f953c0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x562522f95538 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x562522f95470 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x562522f95600 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x562522f956c8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x562522f95808 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x562522f95778 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x562522f958b0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x562522f959b0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x562522f95bb0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f95990 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x562522f95970 <col:23> 'int' 0
| |-EnumConstantDecl 0x562522f95a40 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x562522f95bc8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f95a20 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x562522f95a00 <col:45> 'int' 4
| |-EnumConstantDecl 0x562522f95ad0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x562522f95be0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f95ab0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x562522f95a90 <col:24> 'int' 0
| `-EnumConstantDecl 0x562522f95b60 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x562522f95bf8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522f95b40 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x562522f95b20 <col:47> 'int' 16
|-CXXMethodDecl 0x562522f95c58 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x562522f95dc8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x562522f95d08 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x562522f95e70 <col:20>
| `-OptimizeNoneAttr 0x562522f95ec8 <col:30>
|-CXXMethodDecl 0x562522f95f18 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x562522fa98a0 <col:18, col:36>
|   `-ReturnStmt 0x562522fa9890 <col:20, col:33>
|     `-ImplicitCastExpr 0x562522fa9878 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x562522fa9858 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x562522fa9828 <col:27> '<bound member function type>' ->xanno 0x562522f93f78
|           `-CXXThisExpr 0x562522fa9818 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x562522f96010 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x562522fa99b0 <col:30, col:48>
|   `-ReturnStmt 0x562522fa99a0 <col:32, col:45>
|     `-ImplicitCastExpr 0x562522fa9988 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x562522fa9968 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x562522fa9938 <col:39> '<bound member function type>' ->xanno 0x562522f93dd8
|           `-CXXThisExpr 0x562522fa9928 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x562522f960f8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x562522fa9b48 <col:24, col:50>
|   `-ReturnStmt 0x562522fa9b38 <col:26, col:47>
|     `-UnaryOperator 0x562522fa9b20 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x562522fa9b00 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x562522fa9ae8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562522fa9a98 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x562522f9edb8
|         |   `-CXXMemberCallExpr 0x562522fa9a78 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x562522fa9a48 <col:34> '<bound member function type>' ->xanno 0x562522f93f78
|         |       `-CXXThisExpr 0x562522fa9a38 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x562522fa9ac8 <col:46> 'int' 0
|-CXXMethodDecl 0x562522f96200 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x562522fa9d18 <col:36, col:62>
|   `-ReturnStmt 0x562522fa9d08 <col:38, col:59>
|     `-UnaryOperator 0x562522fa9cf0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x562522fa9cd0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x562522fa9cb8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562522fa9c30 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x562522f9edb8
|         |   `-CXXMemberCallExpr 0x562522fa9c10 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x562522fa9be0 <col:46> '<bound member function type>' ->xanno 0x562522f93dd8
|         |       `-CXXThisExpr 0x562522fa9bd0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x562522fa9c60 <col:58> 'int' 0
|-CXXMethodDecl 0x562522f96318 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x562522fa9eb0 <col:26, col:53>
|   `-ReturnStmt 0x562522fa9ea0 <col:28, col:50>
|     `-UnaryOperator 0x562522fa9e88 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x562522fa9e68 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x562522fa9e50 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562522fa9e00 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x562522f9f0b8
|         |   `-CXXMemberCallExpr 0x562522fa9de0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x562522fa9db0 <col:36> '<bound member function type>' ->xanno 0x562522f93f78
|         |       `-CXXThisExpr 0x562522fa9da0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x562522fa9e30 <col:49> 'int' 0
|-CXXMethodDecl 0x562522f96438 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x562522faa088 <col:38, col:65>
|   `-ReturnStmt 0x562522faa078 <col:40, col:62>
|     `-UnaryOperator 0x562522faa060 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x562522faa040 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x562522faa028 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562522fa9f98 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x562522f9f0b8
|         |   `-CXXMemberCallExpr 0x562522fa9f78 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x562522fa9f48 <col:48> '<bound member function type>' ->xanno 0x562522f93dd8
|         |       `-CXXThisExpr 0x562522fa9f38 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x562522fa9fc8 <col:61> 'int' 0
|-CXXMethodDecl 0x562522f965e8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x562522f964f0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x562522faa758 <col:34, line:463:5>
|   |-ParenExpr 0x562522faa5a0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x562522faa570 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x562522faa1d8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522faa1a8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522faa0f8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522faa0e0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522faa0a0 <col:23> 'int' lvalue ParmVar 0x562522f964f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522faa0c0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522faa188 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522faa158 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522faa118 <col:33> 'int' lvalue ParmVar 0x562522f964f0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x562522faa170 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x562522faa138 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x562522faa238 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522faa218 <col:56> 'int' 0
|   |   `-CallExpr 0x562522faa4d0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x562522faa4b8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522faa498 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522faa510 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522faa328 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x562522faa528 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522faa358 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522faa540 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522faa390 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x562522faa558 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522faa480 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522faa468 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522faa428 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x562522faa748 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x562522faa730 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x562522faa710 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x562522faa6e0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x562522faa690 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x562522f9edb8
|         |   `-CXXMemberCallExpr 0x562522faa670 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x562522faa640 <col:9> '<bound member function type>' ->xanno 0x562522f93dd8
|         |       `-CXXThisExpr 0x562522faa630 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x562522faa6f8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x562522faa6c0 <col:21> 'int' lvalue ParmVar 0x562522f964f0 'i' 'int'
|-CXXMethodDecl 0x562522f96838 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x562522f966a8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x562522f96720 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x562522faade8 <col:40, line:472:5>
|   |-ParenExpr 0x562522faac00 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x562522faabd0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x562522faa8b0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522faa880 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522faa7d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522faa7b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522faa778 <col:23> 'int' lvalue ParmVar 0x562522f966a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522faa798 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522faa860 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522faa830 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522faa7f0 <col:33> 'int' lvalue ParmVar 0x562522f966a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x562522faa848 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x562522faa810 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x562522faa910 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522faa8f0 <col:56> 'int' 0
|   |   `-CallExpr 0x562522faab30 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x562522faab18 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522faaaf8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522faab70 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522faa980 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x562522faab88 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522faa9b0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522faaba0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522faa9e8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x562522faabb8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522faaae0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522faaac8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522faaa88 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x562522faadc8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x562522faad70 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x562522faad40 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x562522faacf0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x562522f9edb8
|     | |   `-CXXMemberCallExpr 0x562522faacd0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x562522faaca0 <col:2> '<bound member function type>' ->xanno 0x562522f93f78
|     | |       `-CXXThisExpr 0x562522faac90 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x562522faad58 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x562522faad20 <col:14> 'int' lvalue ParmVar 0x562522f966a8 'i' 'int'
|     `-ImplicitCastExpr 0x562522faadb0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x562522faad90 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x562522f96720 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x562522f969f8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x562522f96900 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x562522fab568 <col:36, line:485:5>
|   |-ParenExpr 0x562522fab2d0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522fab2a0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522faaf80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522faaf50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522faae60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522faae48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522faae08 <col:23> 'int' lvalue ParmVar 0x562522f96900 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522faae28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522faaf30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522faaf18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522faae80 <col:33> 'int' lvalue ParmVar 0x562522f96900 'i' 'int'
|   |   |     `-BinaryOperator 0x562522faaef8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522faaee0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522faaea0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522faaec0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x562522faafe0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522faafc0 <col:60> 'int' 0
|   |   `-CallExpr 0x562522fab200 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522fab1e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fab1c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fab240 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fab050 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x562522fab258 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fab088 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fab270 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fab0c0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x562522fab288 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fab1b0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fab198 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fab158 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x562522fab558 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x562522fab540 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x562522fab528 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562522fab4f8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x562522fab498 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x562522fab468 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562522fab3e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x562522f9ec90
|             |   `-CXXMemberCallExpr 0x562522fab3c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562522fab390 <col:61> '<bound member function type>' ->xanno 0x562522f93dd8
|             |       `-CXXThisExpr 0x562522fab380 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562522fab480 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562522fab410 <col:74> 'int' lvalue ParmVar 0x562522f96900 'i' 'int'
|-CXXMethodDecl 0x562522f96c48 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x562522f96ab8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562522f96b30 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x562522fabcb8 <col:42, line:500:5>
|   |-ParenExpr 0x562522faba50 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522faba20 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522fab700 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522fab6d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522fab5e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522fab5c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522fab588 <col:23> 'int' lvalue ParmVar 0x562522f96ab8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522fab5a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522fab6b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522fab698 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522fab600 <col:33> 'int' lvalue ParmVar 0x562522f96ab8 'i' 'int'
|   |   |     `-BinaryOperator 0x562522fab678 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522fab660 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522fab620 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522fab640 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x562522fab760 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fab740 <col:60> 'int' 0
|   |   `-CallExpr 0x562522fab980 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522fab968 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fab948 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fab9c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fab7d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x562522fab9d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fab808 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fab9f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fab840 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x562522faba08 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fab930 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fab918 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fab8d8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x562522fabc98 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x562522fabc48 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562522fabc18 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x562522fabbc0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562522fabb90 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562522fabb40 <col:48, col:57> 'char [48]' lvalue ->c 0x562522f9ec90
|     |     |   `-CXXMemberCallExpr 0x562522fabb20 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562522fabaf0 <col:48> '<bound member function type>' ->xanno 0x562522f93f78
|     |     |       `-CXXThisExpr 0x562522fabae0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562522fabba8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562522fabb70 <col:61> 'int' lvalue ParmVar 0x562522f96ab8 'i' 'int'
|     `-ImplicitCastExpr 0x562522fabc80 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x562522fabc60 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x562522f96b30 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x562522f96e08 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x562522f96d10 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x562522fac418 <col:35, line:513:5>
|   |-ParenExpr 0x562522fac128 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522fac0f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522fabe50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522fabe20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522fabd30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522fabd18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522fabcd8 <col:23> 'int' lvalue ParmVar 0x562522f96d10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522fabcf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522fabe00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522fabde8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522fabd50 <col:33> 'int' lvalue ParmVar 0x562522f96d10 'i' 'int'
|   |   |     `-BinaryOperator 0x562522fabdc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522fabdb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522fabd70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522fabd90 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x562522fabeb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fabe90 <col:60> 'int' 0
|   |   `-CallExpr 0x562522fac058 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522fac040 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fac020 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fac098 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fabf20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x562522fac0b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fabf58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fac0c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fabf90 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x562522fac0e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fac008 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fabff0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fabfb0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x562522fac408 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x562522fac3f0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x562522fac3d8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562522fac3a8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x562522fac320 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x562522fac2f0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562522fac2a0 <col:60, col:69> 'char const[48]' lvalue ->c 0x562522f9ec90
|             |   `-CXXMemberCallExpr 0x562522fac280 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562522fac250 <col:60> '<bound member function type>' ->xanno 0x562522f93dd8
|             |       `-CXXThisExpr 0x562522fac240 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562522fac308 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562522fac2d0 <col:73> 'int' lvalue ParmVar 0x562522f96d10 'i' 'int'
|-CXXMethodDecl 0x562522f97058 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x562522f96ec8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562522f96f40 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x562522facb38 <col:41, line:528:5>
|   |-ParenExpr 0x562522fac8c0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522fac890 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522fac5b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522fac580 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522fac490 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522fac478 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522fac438 <col:23> 'int' lvalue ParmVar 0x562522f96ec8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522fac458 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522fac560 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522fac548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522fac4b0 <col:33> 'int' lvalue ParmVar 0x562522f96ec8 'i' 'int'
|   |   |     `-BinaryOperator 0x562522fac528 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522fac510 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522fac4d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522fac4f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x562522fac610 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fac5f0 <col:60> 'int' 0
|   |   `-CallExpr 0x562522fac7f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522fac7d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fac7b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fac830 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fac680 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x562522fac848 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fac6b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fac860 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fac6f0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x562522fac878 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fac7a0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fac788 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fac748 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x562522facb18 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x562522facac8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562522faca98 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x562522faca40 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562522faca00 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562522fac9b0 <col:47, col:56> 'char [48]' lvalue ->c 0x562522f9ec90
|     |     |   `-CXXMemberCallExpr 0x562522fac990 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562522fac960 <col:47> '<bound member function type>' ->xanno 0x562522f93f78
|     |     |       `-CXXThisExpr 0x562522fac950 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562522faca18 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562522fac9e0 <col:60> 'int' lvalue ParmVar 0x562522f96ec8 'i' 'int'
|     `-ImplicitCastExpr 0x562522facb00 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x562522facae0 <col:65> 'int16_t':'short' lvalue ParmVar 0x562522f96f40 'x' 'int16_t':'short'
|-CXXMethodDecl 0x562522f97218 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x562522f97120 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x562522fad208 <col:36, line:541:5>
|   |-ParenExpr 0x562522facfa8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522facf78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522faccd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522facca0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522facbb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522facb98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522facb58 <col:23> 'int' lvalue ParmVar 0x562522f97120 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522facb78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522facc80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522facc68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522facbd0 <col:33> 'int' lvalue ParmVar 0x562522f97120 'i' 'int'
|   |   |     `-BinaryOperator 0x562522facc48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522facc30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522facbf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522facc10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x562522facd30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522facd10 <col:60> 'int' 0
|   |   `-CallExpr 0x562522faced8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522facec0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522facea0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522facf18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522facda0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x562522facf30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522facdd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522facf48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522face10 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x562522facf60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522face88 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522face70 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522face30 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x562522fad1f8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x562522fad1e0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x562522fad1c8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562522fad198 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x562522fad140 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x562522fad110 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562522fad0c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x562522f9ec90
|             |   `-CXXMemberCallExpr 0x562522fad0a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562522fad070 <col:61> '<bound member function type>' ->xanno 0x562522f93dd8
|             |       `-CXXThisExpr 0x562522fad060 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562522fad128 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562522fad0f0 <col:74> 'int' lvalue ParmVar 0x562522f97120 'i' 'int'
|-CXXMethodDecl 0x562522f973e8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x562522f972d8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x562522f97350 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x562522f97498 <col:20>
| `-OptimizeNoneAttr 0x562522f974f0 <col:30>
|-CXXMethodDecl 0x562522f97628 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x562522f97530 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x562522fad8d8 <col:35, line:562:5>
|   |-ParenExpr 0x562522fad678 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522fad648 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522fad3a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522fad370 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522fad280 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522fad268 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522fad228 <col:23> 'int' lvalue ParmVar 0x562522f97530 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522fad248 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522fad350 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522fad338 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522fad2a0 <col:33> 'int' lvalue ParmVar 0x562522f97530 'i' 'int'
|   |   |     `-BinaryOperator 0x562522fad318 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522fad300 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522fad2c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522fad2e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x562522fad400 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fad3e0 <col:60> 'int' 0
|   |   `-CallExpr 0x562522fad5a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522fad590 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fad570 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fad5e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fad470 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x562522fad600 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fad4a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fad618 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fad4e0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x562522fad630 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fad558 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fad540 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fad500 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x562522fad8c8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x562522fad8b0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x562522fad898 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562522fad868 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x562522fad810 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x562522fad7e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562522fad790 <col:60, col:69> 'char const[48]' lvalue ->c 0x562522f9ec90
|             |   `-CXXMemberCallExpr 0x562522fad770 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562522fad740 <col:60> '<bound member function type>' ->xanno 0x562522f93dd8
|             |       `-CXXThisExpr 0x562522fad730 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562522fad7f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562522fad7c0 <col:73> 'int' lvalue ParmVar 0x562522f97530 'i' 'int'
|-CXXMethodDecl 0x562522f97838 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x562522f976e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562522f97760 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x562522fadfb8 <col:41, line:577:5>
|   |-ParenExpr 0x562522fadd48 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522fadd18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522fada70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522fada40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522fad950 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522fad938 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522fad8f8 <col:23> 'int' lvalue ParmVar 0x562522f976e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522fad918 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522fada20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522fada08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522fad970 <col:33> 'int' lvalue ParmVar 0x562522f976e8 'i' 'int'
|   |   |     `-BinaryOperator 0x562522fad9e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522fad9d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522fad990 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522fad9b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x562522fadad0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fadab0 <col:60> 'int' 0
|   |   `-CallExpr 0x562522fadc78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522fadc60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fadc40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fadcb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fadb40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x562522fadcd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fadb78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fadce8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fadbb0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x562522fadd00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fadc28 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fadc10 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fadbd0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x562522fadf98 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x562522fadf48 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562522fadf18 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x562522fadeb8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562522fade88 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562522fade38 <col:47, col:56> 'char [48]' lvalue ->c 0x562522f9ec90
|     |     |   `-CXXMemberCallExpr 0x562522fade18 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562522fadde8 <col:47> '<bound member function type>' ->xanno 0x562522f93f78
|     |     |       `-CXXThisExpr 0x562522faddd8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562522fadea0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562522fade68 <col:60> 'int' lvalue ParmVar 0x562522f976e8 'i' 'int'
|     `-ImplicitCastExpr 0x562522fadf80 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x562522fadf60 <col:65> 'int32_t':'int' lvalue ParmVar 0x562522f97760 'x' 'int32_t':'int'
|-CXXMethodDecl 0x562522f979f8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x562522f97900 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x562522fae6e8 <col:36, line:591:5>
|   |-ParenExpr 0x562522fae428 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522fae3f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522fae150 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522fae120 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522fae030 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522fae018 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522fadfd8 <col:23> 'int' lvalue ParmVar 0x562522f97900 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522fadff8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522fae100 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522fae0e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522fae050 <col:33> 'int' lvalue ParmVar 0x562522f97900 'i' 'int'
|   |   |     `-BinaryOperator 0x562522fae0c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522fae0b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522fae070 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522fae090 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x562522fae1b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fae190 <col:60> 'int' 0
|   |   `-CallExpr 0x562522fae358 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522fae340 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fae320 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fae398 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fae220 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x562522fae3b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fae258 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fae3c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fae290 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x562522fae3e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fae308 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fae2f0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fae2b0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x562522fae6d8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x562522fae6c0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x562522fae6a8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562522fae678 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x562522fae5f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x562522fae5c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562522fae570 <col:61, col:70> 'char const[48]' lvalue ->c 0x562522f9ec90
|             |   `-CXXMemberCallExpr 0x562522fae550 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562522fae520 <col:61> '<bound member function type>' ->xanno 0x562522f93dd8
|             |       `-CXXThisExpr 0x562522fae510 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562522fae5d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562522fae5a0 <col:74> 'int' lvalue ParmVar 0x562522f97900 'i' 'int'
|-CXXMethodDecl 0x562522f97c48 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x562522f97ab8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562522f97b30 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x562522faedc8 <col:42, line:606:5>
|   |-ParenExpr 0x562522faeb58 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x562522faeb28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x562522fae880 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522fae850 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522fae760 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522fae748 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522fae708 <col:23> 'int' lvalue ParmVar 0x562522f97ab8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522fae728 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522fae830 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x562522fae818 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522fae780 <col:33> 'int' lvalue ParmVar 0x562522f97ab8 'i' 'int'
|   |   |     `-BinaryOperator 0x562522fae7f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522fae7e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522fae7a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x562522fae7c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x562522fae8e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522fae8c0 <col:60> 'int' 0
|   |   `-CallExpr 0x562522faea88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x562522faea70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522faea50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522faeac8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fae950 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x562522faeae0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522fae988 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522faeaf8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522fae9c0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x562522faeb10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522faea38 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522faea20 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fae9e0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x562522faeda8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x562522faed58 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562522faed28 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x562522faecc8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562522faec98 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562522faec48 <col:48, col:57> 'char [48]' lvalue ->c 0x562522f9ec90
|     |     |   `-CXXMemberCallExpr 0x562522faec28 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562522faebf8 <col:48> '<bound member function type>' ->xanno 0x562522f93f78
|     |     |       `-CXXThisExpr 0x562522faebe8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562522faecb0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562522faec78 <col:61> 'int' lvalue ParmVar 0x562522f97ab8 'i' 'int'
|     `-ImplicitCastExpr 0x562522faed90 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x562522faed70 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x562522f97b30 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x562522f97de0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x562522f97d10 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x562522faf638 <col:33, line:620:5>
|   |-ParenExpr 0x562522faf3b0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x562522faf380 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x562522faefd0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522faefa0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522faee40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522faee28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522faede8 <col:23> 'int' lvalue ParmVar 0x562522f97d10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522faee08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522faef80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x562522faef68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522faee60 <col:33> 'int' lvalue ParmVar 0x562522f97d10 'i' 'int'
|   |   |     `-BinaryOperator 0x562522faef48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522faef30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522faee80 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x562522faef08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x562522faeef0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x562522faeeb8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x562522faf030 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522faf010 <col:79> 'int' 0
|   |   `-CallExpr 0x562522faf2e0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x562522faf2c8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522faf2a8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522faf320 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522faf118 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x562522faf338 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522faf160 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522faf350 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522faf198 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x562522faf368 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522faf290 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522faf278 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522faf238 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x562522faf628 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x562522faf610 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x562522faf5f8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x562522faf5c8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x562522faf540 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x562522faf510 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x562522faf4c0 <col:67, col:76> 'char const[48]' lvalue ->c 0x562522f9ec90
|             |   `-CXXMemberCallExpr 0x562522faf4a0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x562522faf470 <col:67> '<bound member function type>' ->xanno 0x562522f93dd8
|             |       `-CXXThisExpr 0x562522faf460 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x562522faf528 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x562522faf4f0 <col:80> 'int' lvalue ParmVar 0x562522f97d10 'i' 'int'
|-CXXMethodDecl 0x562522f97ff8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x562522f97ea0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x562522f97f20 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x562522fafe60 <col:45, line:635:5>
|   |-ParenExpr 0x562522fafba8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x562522fafb78 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x562522faf840 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562522faf810 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x562522faf6b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x562522faf698 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x562522faf658 <col:23> 'int' lvalue ParmVar 0x562522f97ea0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x562522faf678 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x562522faf7f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x562522faf7d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x562522faf6d0 <col:33> 'int' lvalue ParmVar 0x562522f97ea0 'i' 'int'
|   |   |     `-BinaryOperator 0x562522faf7b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x562522faf7a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x562522faf6f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x562522f941c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x562522faf778 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x562522faf760 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x562522faf728 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x562522faf8a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562522faf880 <col:79> 'int' 0
|   |   `-CallExpr 0x562522fafad8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x562522fafac0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522fafaa0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562522fafb18 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522faf910 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x562522fafb30 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562522faf958 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x562522fafb48 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562522faf990 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x562522fafb60 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562522fafa88 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562522fafa70 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562522fafa28 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x562522fafe40 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x562522fafda8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x562522fafd78 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x562522fafd18 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x562522fafce8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x562522fafc98 <col:54, col:63> 'char [48]' lvalue ->c 0x562522f9ec90
|     |     |   `-CXXMemberCallExpr 0x562522fafc78 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x562522fafc48 <col:54> '<bound member function type>' ->xanno 0x562522f93f78
|     |     |       `-CXXThisExpr 0x562522fafc38 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x562522fafd00 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x562522fafcc8 <col:67> 'int' lvalue ParmVar 0x562522f97ea0 'i' 'int'
|     `-CXXConstCastExpr 0x562522fafe10 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x562522fafdf8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x562522fafdc0 <col:91> 'const void *' lvalue ParmVar 0x562522f97f20 'x' 'const void *'
|-CXXMethodDecl 0x562522f980c8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x562522fafee8 <col:34, line:640:5>
|   `-ReturnStmt 0x562522fafed8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x562522fafec0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x562522fafe90 <col:16> 'Packet *' lvalue ->_data_packet 0x562522f9f848
|         `-CXXThisExpr 0x562522fafe80 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x562522f98208 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x562522f98178 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562522fa8fa8 <col:46> 'bool' true
|-CXXMethodDecl 0x562522f98388 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x562522f982c0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x562522f98430 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x562522f98be0 <line:660:22> "" ""
| |-EnumConstantDecl 0x562522f98530 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98c50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f98510 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x562522f984f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x562522f8d690 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x562522f985c0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98c68 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f985a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x562522f98580 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x562522f8d720 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x562522f98650 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98c80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f98630 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x562522f98610 <col:21> 'int' 0
| |-EnumConstantDecl 0x562522f986e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98c98 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f986c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x562522f986a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x562522f98770 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98cb0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f98750 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x562522f98730 <col:21> 'int' 16
| |-EnumConstantDecl 0x562522f98800 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98cc8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f987e0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x562522f987c0 <col:19> 'int' 32
| |-EnumConstantDecl 0x562522f98890 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98ce0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f98870 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x562522f98850 <col:19> 'int' EnumConstant 0x562522f986e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x562522f98920 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98cf8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f98900 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x562522f988e0 <col:19> 'int' EnumConstant 0x562522f98800 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x562522f989f0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98d10 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f989d0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x562522f989b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x562522f98970 <col:23> 'int' EnumConstant 0x562522f98920 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x562522f98990 <col:40> 'int' 2
| |-EnumConstantDecl 0x562522f98ac0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x562522f98d28 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f98aa0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x562522f98a80 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x562522f98a40 <col:23> 'int' EnumConstant 0x562522f98920 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x562522f98a60 <col:40> 'int' 4
| `-EnumConstantDecl 0x562522f98b90 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x562522f98d40 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522f98b70 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x562522f98b50 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x562522f98b10 <col:23> 'int' EnumConstant 0x562522f98920 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x562522f98b30 <col:40> 'int' 8
|-CXXMethodDecl 0x562522f98d80 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x562522f98e20 <col:68> "" ""
|-CXXMethodDecl 0x562522f98eb8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x562522f98f58 <col:45> "" ""
|-CXXMethodDecl 0x562522f98ff0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x562522f99090 <col:57> "" ""
|-CXXMethodDecl 0x562522f99128 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x562522f991c8 <col:45> "" ""
|-CXXMethodDecl 0x562522f99260 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x562522f99300 <col:57> "" ""
|-CXXMethodDecl 0x562522f99390 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x562522f99430 <col:51> "" ""
|-CXXMethodDecl 0x562522f994c0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x562522f99560 <col:63> "" ""
|-CXXMethodDecl 0x562522f995f0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x562522f99690 <col:53> "" ""
|-CXXMethodDecl 0x562522f99720 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x562522f997c0 <col:65> "" ""
|-CXXMethodDecl 0x562522f998d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x562522f99848 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x562522f99980 <col:61> "" ""
|-CXXMethodDecl 0x562522f99b18 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x562522f99a08 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x562522f99a80 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x562522f99bc8 <col:67> "" ""
|-CXXMethodDecl 0x562522f99ce0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x562522f99c50 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x562522f99d88 <col:63> "" ""
|-CXXMethodDecl 0x562522f99f20 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x562522f99e10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x562522f99e88 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x562522f99fd0 <col:69> "" ""
|-CXXMethodDecl 0x562522f9a0e8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x562522f9a058 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x562522f9a190 <col:63> "" ""
|-CXXMethodDecl 0x562522f9c868 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x562522f9c758 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x562522f9c7d0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522f9c918 <col:69> "" ""
|-CXXMethodDecl 0x562522f9ca30 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x562522f9c9a0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x562522f9cad8 <col:62> "" ""
|-CXXMethodDecl 0x562522f9cc70 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x562522f9cb60 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x562522f9cbd8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x562522f9cd20 <col:68> "" ""
|-CXXMethodDecl 0x562522f9ce38 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x562522f9cda8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x562522f9cee0 <col:63> "" ""
|-CXXMethodDecl 0x562522f9d078 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x562522f9cf68 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x562522f9cfe0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x562522f9d128 <col:69> "" ""
|-CXXMethodDecl 0x562522f9d1b8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x562522f9d258 <col:64> "" ""
|-CXXMethodDecl 0x562522f9d2e8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x562522f9d388 <col:52> "" ""
|-CXXMethodDecl 0x562522f9d418 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x562522f9d4b8 <col:67> "" ""
|-CXXMethodDecl 0x562522f9d548 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x562522f9d5e8 <col:55> "" ""
|-CXXMethodDecl 0x562522f9d700 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x562522f9d670 <col:32> col:35 'int'
| `-DeprecatedAttr 0x562522f9d7a8 <col:58> "" ""
|-CXXMethodDecl 0x562522f9d940 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x562522f9d830 <col:33> col:36 'int'
| |-ParmVarDecl 0x562522f9d8a8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x562522f9d9f0 <col:62> "" ""
|-CXXMethodDecl 0x562522f9db08 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x562522f9da78 <col:32> col:35 'int'
| `-DeprecatedAttr 0x562522f9dbb0 <col:58> "" ""
|-CXXMethodDecl 0x562522f9dd48 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x562522f9dc38 <col:33> col:36 'int'
| |-ParmVarDecl 0x562522f9dcb0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x562522f9ddf8 <col:62> "" ""
|-CXXMethodDecl 0x562522f9df10 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x562522f9de80 <col:34> col:37 'int'
| `-DeprecatedAttr 0x562522f9dfb8 <col:60> "" ""
|-CXXMethodDecl 0x562522f9e150 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x562522f9e040 <col:34> col:37 'int'
| |-ParmVarDecl 0x562522f9e0b8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x562522f9e200 <col:64> "" ""
|-CXXMethodDecl 0x562522f9e318 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x562522f9e288 <col:32> col:35 'int'
| `-DeprecatedAttr 0x562522f9e3c0 <col:58> "" ""
|-CXXMethodDecl 0x562522f9e558 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x562522f9e448 <col:33> col:36 'int'
| |-ParmVarDecl 0x562522f9e4c0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x562522f9e608 <col:62> "" ""
|-CXXMethodDecl 0x562522f9e720 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x562522f9e690 <col:33> col:36 'int'
| `-DeprecatedAttr 0x562522f9e7c8 <col:59> "" ""
|-CXXMethodDecl 0x562522f9e960 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x562522f9e850 <col:33> col:36 'int'
| |-ParmVarDecl 0x562522f9e8c8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522f9ea10 <col:63> "" ""
|-AccessSpecDecl 0x562522f9ea80 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x562522f9eaa8 prev 0x562522f93cb0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562522f9eba0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x562522f9ec90 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x562522f9edb8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x562522f9ef38 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x562522f9f0b8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x562522f9f238 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x562522fb0068 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x562522fb08d8 <col:11>
| |-CXXDestructorDecl 0x562522fb0140 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x562522fb0278 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x562522fb0278
| | `-ParmVarDecl 0x562522fb0388 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x562522fb0428 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x562522fb0428
| | `-ParmVarDecl 0x562522fb0538 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x562522fb32f8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x562522fb3408 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x562522fb3688 <col:11>
| |   `-ReturnStmt 0x562522fb3678 <col:11>
| |     `-UnaryOperator 0x562522fb3660 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x562522fb3650 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x562522fb3478 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x562522fb3478
|   `-ParmVarDecl 0x562522fb3588 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x562522f9f2a0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562522f9f3b8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x562522f9f458 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x562522f9f4c0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x562522f9f528 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x562522f9f590 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x562522f9f5f0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x562522f9f6b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x562522f9f710 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x562522f9f770 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x562522faff78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x562522f9f458 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x562522fb08e8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x562522fb0940 <col:12>
| |-CXXConstructorDecl 0x562522fb05a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x562522fb05a8
| | `-ParmVarDecl 0x562522fb06b8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x562522fb0758 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x562522fb0758
| | `-ParmVarDecl 0x562522fb0868 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x562522fb29e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x562522f9f7e8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x562522f9f848 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x562522f9f8b0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x562522f9f918 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x562522f9f980 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x562522f9f9e8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x562522f9fa48 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x562522f9faa8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x562522f9fb10 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x562522f9fb98 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x562522f9f7e8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x562522faff10 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x562522f9fa48 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x562522fb0950 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x562522fb09b0 <col:21, line:755:5>
|-CXXConstructorDecl 0x562522f9fd38 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x562522f9fc78 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x562522f9fe30 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x562522fa0018 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x562522f9ff20 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x562522fa02e8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x562522fa00d0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562522fa0148 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562522fa01c0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522fa0508 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x562522fa03b8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x562522fa0430 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x562522fa8ae8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x562522fa05c8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x562522fa0640 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x562522fa06b8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x562522fa8c40 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x562522fa8bb0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522fa8d88 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x562522fa8cf8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x562522fa8e80 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56252306e668 <../dummy_inc/click/list.hh:101:1, line:136:1> line:102:7 class List_member definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument type 'ARPTable::ARPEntry'
|-CXXRecordDecl 0x56252306e878 prev 0x56252306e668 <col:1, col:7> col:7 implicit class List_member
|-AccessSpecDecl 0x56252306e908 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x56252306e968 <line:105:5, line:107:5> line:105:5 used List_member 'void ()'
|-CXXMethodDecl 0x56252306eaf8 <line:110:5, line:112:5> line:110:8 next 'ARPTable::ARPEntry *()'
|-CXXMethodDecl 0x56252306ec88 <line:114:5, line:116:5> line:114:14 next 'const ARPTable::ARPEntry *() const'
|-CXXMethodDecl 0x56252306ed58 <line:119:5, line:121:5> line:119:8 prev 'ARPTable::ARPEntry *()'
|-CXXMethodDecl 0x56252306ee28 <line:123:5, line:125:5> line:123:14 prev 'const ARPTable::ARPEntry *() const'
|-AccessSpecDecl 0x56252306eed8 <line:127:3, col:10> col:3 private
|-FieldDecl 0x56252306ef10 <line:129:5, col:8> col:8 _next 'ARPTable::ARPEntry *'
|-FieldDecl 0x56252306ef70 <line:130:5, col:8> col:8 _prev 'ARPTable::ARPEntry *'
|-CXXConstructorDecl 0x56252306f1b8 <line:132:5, col:40> col:5 List_member 'void (const List_member<ARPTable::ARPEntry> &)'
| `-ParmVarDecl 0x56252306f0a0 <col:17, col:39> col:39 x 'const List_member<ARPTable::ARPEntry> &'
|-CXXMethodDecl 0x56252306f500 <line:133:5, col:54> col:21 operator= 'List_member<ARPTable::ARPEntry> &(const List_member<ARPTable::ARPEntry> &)'
| `-ParmVarDecl 0x56252306f3e0 <col:31, col:53> col:53 x 'const List_member<ARPTable::ARPEntry> &'
`-FriendDecl 0x56252306f8a0 <line:134:5, col:67> col:67
  `-ClassTemplateDecl 0x56252306f828 parent 0x562522a5e278 prev 0x562523044738 <col:5, col:67> col:67 List
    |-TemplateTypeParmDecl 0x56252306f5b8 <col:15, col:24> col:24 typename depth 0 index 0 X
    |-NonTypeTemplateParmDecl 0x56252306f710 <col:27, col:46> col:46 'List_member<X> X::*' depth 0 index 1 member
    |-CXXRecordDecl 0x56252306f798 parent 0x562522a5e278 prev 0x5625230446a8 <col:61, col:67> col:67 class List
    `-ClassTemplateSpecialization 0x562523077940 'List'

Layout: <CGRecordLayout
  LLVMType:%class.List_member = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"* }
  NonVirtualBaseLLVMType:%class.List_member = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252306e0b8 <../elements/ethernet/arptable.hh:169:5, line:207:5> line:169:12 referenced struct ARPEntry definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56252306e1d8 <col:5, col:12> col:12 implicit referenced struct ARPEntry
|-FieldDecl 0x56252306e278 <line:170:2, col:12> col:12 referenced _ip 'IPAddress'
|-FieldDecl 0x56252306e308 <line:171:2, col:12> col:12 _hashnext 'ARPTable::ARPEntry *'
|-FieldDecl 0x56252306e368 <line:172:2, col:15> col:15 referenced _eth 'EtherAddress'
|-FieldDecl 0x56252306e3c8 <line:173:2, col:7> col:7 referenced _known 'bool'
|-FieldDecl 0x56252306e428 <line:174:2, col:10> col:10 referenced _num_polls_since_reply 'uint8_t':'unsigned char'
|-FieldDecl 0x56252306e488 <line:175:2, col:18> col:18 referenced _live_at_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x56252306e4e8 <line:176:2, col:18> col:18 referenced _polled_at_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x56252306e548 <line:177:2, col:10> col:10 _head 'Packet *'
|-FieldDecl 0x56252306e5a8 <line:178:2, col:10> col:10 _tail 'Packet *'
|-FieldDecl 0x56252306e608 <line:179:2, col:11> col:11 _entry_packet_count 'uint32_t':'unsigned int'
|-FieldDecl 0x56252306f8f8 <line:180:2, col:24> col:24 referenced _age_link 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
|-TypedefDecl 0x56252306f958 <line:181:2, col:20> col:20 referenced key_type 'IPAddress'
| `-RecordType 0x562522d2c4b0 'IPAddress'
|   `-CXXRecord 0x562522dc73e0 'IPAddress'
|-TypedefDecl 0x56252306f9c0 <line:182:2, col:20> col:20 referenced key_const_reference 'IPAddress'
| `-RecordType 0x562522d2c4b0 'IPAddress'
|   `-CXXRecord 0x562522dc73e0 'IPAddress'
|-CXXConstructorDecl 0x56252306fad0 <line:183:2, line:186:2> line:183:2 ARPEntry 'void (IPAddress)'
| |-ParmVarDecl 0x56252306fa28 <col:11, col:21> col:21 used ip 'IPAddress'
| |-CXXCtorInitializer Field 0x56252306e278 '_ip' 'IPAddress'
| | `-CXXConstructExpr 0x56252307dee0 <line:184:8, col:14> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56252307ddd8 <col:12> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56252307dd98 <col:12> 'IPAddress' lvalue ParmVar 0x56252306fa28 'ip' 'IPAddress'
| |-CXXCtorInitializer Field 0x56252306e308 '_hashnext' 'ARPTable::ARPEntry *'
| | `-ImplicitValueInitExpr 0x56252307df50 <<invalid sloc>> 'ARPTable::ARPEntry *'
| |-CXXCtorInitializer Field 0x56252306e368 '_eth' 'EtherAddress'
| | `-ExprWithCleanups 0x56252307e090 <col:30, col:65> 'EtherAddress'
| |   `-CXXConstructExpr 0x56252307e060 <col:30, col:65> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
| |     `-MaterializeTemporaryExpr 0x56252307e048 <col:35, col:64> 'EtherAddress' xvalue
| |       `-CallExpr 0x56252307e008 <col:35, col:64> 'EtherAddress'
| |         `-ImplicitCastExpr 0x56252307dff0 <col:35, col:49> 'EtherAddress (*)()' <FunctionToPointerDecay>
| |           `-DeclRefExpr 0x56252307dfc0 <col:35, col:49> 'EtherAddress ()' lvalue CXXMethod 0x562522fdf3e8 'make_broadcast' 'EtherAddress ()'
| |-CXXCtorInitializer Field 0x56252306e3c8 '_known' 'bool'
| | `-CXXBoolLiteralExpr 0x56252307e0d0 <line:185:15> 'bool' false
| |-CXXCtorInitializer Field 0x56252306e428 '_num_polls_since_reply' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x56252307e168 <col:46> 'uint8_t':'unsigned char' <IntegralCast>
| |   `-IntegerLiteral 0x56252307e128 <col:46> 'int' 0
| |-CXXCtorInitializer Field 0x56252306e548 '_head' 'Packet *'
| | `-ImplicitValueInitExpr 0x56252307e1c0 <<invalid sloc>> 'Packet *'
| |-CXXCtorInitializer Field 0x56252306e5a8 '_tail' 'Packet *'
| | `-ImplicitValueInitExpr 0x56252307e210 <<invalid sloc>> 'Packet *'
| |-CXXCtorInitializer Field 0x56252306e608 '_entry_packet_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56252307e288 <col:88> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56252307e248 <col:88> 'int' 0
| |-CXXCtorInitializer Field 0x56252306f8f8 '_age_link' 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
| | `-CXXConstructExpr 0x56252307e2c8 <line:183:2> 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>' 'void ()'
| `-CompoundStmt 0x56252307e360 <line:185:91, line:186:2>
|-CXXMethodDecl 0x56252306fbe8 <line:187:2, line:189:2> line:187:22 hashkey 'ARPTable::ARPEntry::key_const_reference () const'
| `-CompoundStmt 0x56252307e3f0 <col:38, line:189:2>
|   `-ReturnStmt 0x56252307e3e0 <line:188:6, col:13>
|     `-CXXConstructExpr 0x56252307e3b0 <col:13> 'ARPTable::ARPEntry::key_const_reference':'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x56252307e380 <col:13> 'const IPAddress' lvalue ->_ip 0x56252306e278
|         `-CXXThisExpr 0x56252307e370 <col:13> 'const ARPTable::ARPEntry *' implicit this
|-CXXMethodDecl 0x56252306fe28 <line:190:2, line:193:2> line:190:7 used expired 'bool (click_jiffies_t, uint32_t) const'
| |-ParmVarDecl 0x56252306fc98 <col:15, col:31> col:31 used now 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x56252306fd10 <col:36, col:45> col:45 used timeout_j 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56252307e6c0 <col:62, line:193:2>
|   `-ReturnStmt 0x56252307e6b0 <line:191:6, line:192:6>
|     `-BinaryOperator 0x56252307e690 <line:191:13, line:192:6> 'bool' '&&'
|       |-ParenExpr 0x56252307e620 <line:191:13, col:81> 'bool'
|       | `-BinaryOperator 0x56252307e600 <col:14, col:80> 'bool' '<'
|       |   |-CStyleCastExpr 0x56252307e5b8 <col:14, col:76> 'click_jiffies_difference_t':'int' <NoOp>
|       |   | `-ImplicitCastExpr 0x56252307e5a0 <col:43, col:76> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|       |   |   `-ParenExpr 0x56252307e580 <col:43, col:76> 'unsigned int'
|       |   |     `-BinaryOperator 0x56252307e530 <col:44, col:75> 'unsigned int' '-'
|       |   |       |-ParenExpr 0x56252307e4b8 <col:44, col:67> 'unsigned int'
|       |   |       | `-BinaryOperator 0x56252307e498 <col:45, col:58> 'unsigned int' '+'
|       |   |       |   |-ImplicitCastExpr 0x56252307e468 <col:45> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       |   |       |   | `-MemberExpr 0x56252307e418 <col:45> 'const click_jiffies_t':'const unsigned int' lvalue ->_live_at_j 0x56252306e488
|       |   |       |   |   `-CXXThisExpr 0x56252307e408 <col:45> 'const ARPTable::ARPEntry *' implicit this
|       |   |       |   `-ImplicitCastExpr 0x56252307e480 <col:58> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   |       |     `-DeclRefExpr 0x56252307e448 <col:58> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306fd10 'timeout_j' 'uint32_t':'unsigned int'
|       |   |       `-ImplicitCastExpr 0x56252307e518 <col:71, col:75> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       |   |         `-ParenExpr 0x56252307e4f8 <col:71, col:75> 'click_jiffies_t':'unsigned int' lvalue
|       |   |           `-DeclRefExpr 0x56252307e4d8 <col:72> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x56252306fc98 'now' 'click_jiffies_t':'unsigned int'
|       |   `-IntegerLiteral 0x56252307e5e0 <col:80> 'int' 0
|       `-ImplicitCastExpr 0x56252307e678 <line:192:6> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x56252307e660 <col:6> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x56252307e640 <col:6> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306fd10 'timeout_j' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56252306fff8 <line:194:2, line:196:2> line:194:7 used known 'bool (click_jiffies_t, uint32_t) const'
| |-ParmVarDecl 0x56252306fee8 <col:13, col:29> col:29 used now 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x56252306ff60 <col:34, col:43> col:43 used timeout_j 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56252307e858 <col:60, line:196:2>
|   `-ReturnStmt 0x56252307e848 <line:195:6, col:46>
|     `-BinaryOperator 0x56252307e828 <col:13, col:46> 'bool' '&&'
|       |-ImplicitCastExpr 0x56252307e810 <col:13> 'bool' <LValueToRValue>
|       | `-MemberExpr 0x56252307e6e8 <col:13> 'const bool' lvalue ->_known 0x56252306e3c8
|       |   `-CXXThisExpr 0x56252307e6d8 <col:13> 'const ARPTable::ARPEntry *' implicit this
|       `-UnaryOperator 0x56252307e7f8 <col:23, col:46> 'bool' prefix '!' cannot overflow
|         `-CXXMemberCallExpr 0x56252307e798 <col:24, col:46> 'bool'
|           |-MemberExpr 0x56252307e728 <col:24> '<bound member function type>' ->expired 0x56252306fe28
|           | `-CXXThisExpr 0x56252307e718 <col:24> 'const ARPTable::ARPEntry *' implicit this
|           |-ImplicitCastExpr 0x56252307e7c8 <col:32> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           | `-DeclRefExpr 0x56252307e758 <col:32> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x56252306fee8 'now' 'click_jiffies_t':'unsigned int'
|           `-ImplicitCastExpr 0x56252307e7e0 <col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|             `-DeclRefExpr 0x56252307e778 <col:37> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306ff60 'timeout_j' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5625230701a8 <line:197:2, line:201:2> line:197:7 used allow_poll 'bool (click_jiffies_t) const'
| |-ParmVarDecl 0x5625230700b8 <col:18, col:34> col:34 used now 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x56252307ed38 <col:45, line:201:2>
|   |-DeclStmt 0x56252307eb38 <line:198:6, line:199:58>
|   | `-VarDecl 0x56252307e880 <line:198:6, line:199:57> line:198:22 used thresh_j 'click_jiffies_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56252307eb18 <col:33, line:199:57> 'unsigned int' '+'
|   |     |-ImplicitCastExpr 0x56252307eae8 <line:198:33> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|   |     | `-MemberExpr 0x56252307e8f8 <col:33> 'const click_jiffies_t':'const unsigned int' lvalue ->_polled_at_j 0x56252306e4e8
|   |     |   `-CXXThisExpr 0x56252307e8e8 <col:33> 'const ARPTable::ARPEntry *' implicit this
|   |     `-ImplicitCastExpr 0x56252307eb00 <line:199:5, col:57> 'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x56252307eac8 <col:5, col:57> 'int'
|   |         `-ConditionalOperator 0x56252307ea98 <col:6, col:55> 'int'
|   |           |-BinaryOperator 0x56252307e9b8 <col:6, col:32> 'bool' '>='
|   |           | |-ImplicitCastExpr 0x56252307e9a0 <col:6> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56252307e988 <col:6> 'uint8_t':'unsigned char' <LValueToRValue>
|   |           | |   `-MemberExpr 0x56252307e938 <col:6> 'const uint8_t':'const unsigned char' lvalue ->_num_polls_since_reply 0x56252306e428
|   |           | |     `-CXXThisExpr 0x56252307e928 <col:6> 'const ARPTable::ARPEntry *' implicit this
|   |           | `-IntegerLiteral 0x56252307e968 <col:32> 'int' 10
|   |           |-BinaryOperator 0x56252307ea18 <col:37, col:44> 'int' '*'
|   |           | |-IntegerLiteral 0x56252307e9d8 <col:37> 'int' 1000
|   |           | `-IntegerLiteral 0x56252307e9f8 <col:44> 'int' 2
|   |           `-BinaryOperator 0x56252307ea78 <col:48, col:55> 'int' '/'
|   |             |-IntegerLiteral 0x56252307ea38 <col:48> 'int' 1000
|   |             `-IntegerLiteral 0x56252307ea58 <col:55> 'int' 10
|   `-ReturnStmt 0x56252307ed28 <line:200:6, col:68>
|     `-UnaryOperator 0x56252307ed10 <col:13, col:68> 'bool' prefix '!' cannot overflow
|       `-ParenExpr 0x56252307ecf0 <col:14, col:68> 'bool'
|         `-BinaryOperator 0x56252307ecd0 <col:15, col:67> 'bool' '<'
|           |-CStyleCastExpr 0x56252307ec88 <col:15, col:63> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x56252307ec70 <col:44, col:63> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x56252307ec50 <col:44, col:63> 'unsigned int'
|           |     `-BinaryOperator 0x56252307ec00 <col:45, col:62> 'unsigned int' '-'
|           |       |-ImplicitCastExpr 0x56252307ebd0 <col:45, col:49> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |       | `-ParenExpr 0x56252307eb70 <col:45, col:49> 'click_jiffies_t':'unsigned int' lvalue
|           |       |   `-DeclRefExpr 0x56252307eb50 <col:46> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x5625230700b8 'now' 'click_jiffies_t':'unsigned int'
|           |       `-ImplicitCastExpr 0x56252307ebe8 <col:53, col:62> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |         `-ParenExpr 0x56252307ebb0 <col:53, col:62> 'click_jiffies_t':'unsigned int' lvalue
|           |           `-DeclRefExpr 0x56252307eb90 <col:54> 'click_jiffies_t':'unsigned int' lvalue Var 0x56252307e880 'thresh_j' 'click_jiffies_t':'unsigned int'
|           `-IntegerLiteral 0x56252307ecb0 <col:67> 'int' 0
|-CXXMethodDecl 0x562523070328 <line:202:2, line:206:2> line:202:7 used mark_poll 'void (click_jiffies_t)'
| |-ParmVarDecl 0x562523070260 <col:17, col:33> col:33 used now 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x56252307ef10 <col:38, line:206:2>
|   |-BinaryOperator 0x56252307edd0 <line:203:6, col:21> 'click_jiffies_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x56252307ed68 <col:6> 'click_jiffies_t':'unsigned int' lvalue ->_polled_at_j 0x56252306e4e8
|   | | `-CXXThisExpr 0x56252307ed58 <col:6> 'ARPTable::ARPEntry *' implicit this
|   | `-ImplicitCastExpr 0x56252307edb8 <col:21> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56252307ed98 <col:21> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x562523070260 'now' 'click_jiffies_t':'unsigned int'
|   `-IfStmt 0x56252307eef8 <line:204:6, line:205:5>
|     |-BinaryOperator 0x56252307ee80 <line:204:10, col:35> 'bool' '<'
|     | |-ImplicitCastExpr 0x56252307ee68 <col:10> 'int' <IntegralCast>
|     | | `-ImplicitCastExpr 0x56252307ee50 <col:10> 'uint8_t':'unsigned char' <LValueToRValue>
|     | |   `-MemberExpr 0x56252307ee00 <col:10> 'uint8_t':'unsigned char' lvalue ->_num_polls_since_reply 0x56252306e428
|     | |     `-CXXThisExpr 0x56252307edf0 <col:10> 'ARPTable::ARPEntry *' implicit this
|     | `-IntegerLiteral 0x56252307ee30 <col:35> 'int' 255
|     `-UnaryOperator 0x56252307eee0 <line:205:3, col:5> 'uint8_t':'unsigned char' lvalue prefix '++' cannot overflow
|       `-MemberExpr 0x56252307eeb0 <col:5> 'uint8_t':'unsigned char' lvalue ->_num_polls_since_reply 0x56252306e428
|         `-CXXThisExpr 0x56252307eea0 <col:5> 'ARPTable::ARPEntry *' implicit this
|-CXXConstructorDecl 0x5625230703f8 <line:169:12> col:12 implicit ARPEntry 'void (const ARPTable::ARPEntry &)' inline default_delete noexcept-unevaluated 0x5625230703f8
| `-ParmVarDecl 0x562523070508 <col:12> col:12 'const ARPTable::ARPEntry &'
|-CXXConstructorDecl 0x5625230705a8 <col:12> col:12 implicit ARPEntry 'void (ARPTable::ARPEntry &&)' inline default_delete noexcept-unevaluated 0x5625230705a8
| `-ParmVarDecl 0x5625230706b8 <col:12> col:12 'ARPTable::ARPEntry &&'
`-CXXMethodDecl 0x562523070758 <col:12> col:12 implicit operator= 'ARPTable::ARPEntry &(ARPTable::ARPEntry &&)' inline default_delete noexcept-unevaluated 0x562523070758
  `-ParmVarDecl 0x562523070868 <col:12> col:12 'ARPTable::ARPEntry &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.ARPTable::ARPEntry" = type { %class.IPAddress, %"struct.ARPTable::ARPEntry"*, %class.EtherAddress, i8, i8, i32, i32, %class.Packet*, %class.Packet*, i32, %class.List_member }
  NonVirtualBaseLLVMType:%"struct.ARPTable::ARPEntry" = type { %class.IPAddress, %"struct.ARPTable::ARPEntry"*, %class.EtherAddress, i8, i8, i32, i32, %class.Packet*, %class.Packet*, i32, %class.List_member }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252300ada8 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56252300aec8 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x56252300af68 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x56252300afc8 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x56252300e0b0 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56252300e4e8 <col:8>
|-CXXConstructorDecl 0x56252300e1b8 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x56252300e1b8
| `-ParmVarDecl 0x56252300e2c8 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x56252300e368 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56252300e478 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x56252300af68 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x562523010390 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x562523010360 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x56252300af68
| |     `-CXXStaticCastExpr 0x562523010330 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x562523010300 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x56252300e478 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x56252300afc8 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x562523010460 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x562523010430 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x56252300afc8
| |     `-CXXStaticCastExpr 0x562523010400 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x5625230103d0 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x56252300e478 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x5625230104b0 <col:8>
|-CXXDestructorDecl 0x562523010838 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x562523076868 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x562523076868
| `-ParmVarDecl 0x562523076978 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x5625230769e8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x5625230769e8
  `-ParmVarDecl 0x562523076af8 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523075540 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashContainer_adapter<ARPTable::ARPEntry>':'HashContainer_adapter<ARPTable::ARPEntry>'
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x5625230757d8 prev 0x562523075540 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x562523075940 <line:21:5, col:9> col:9 buckets 'ARPTable::ARPEntry **'
|-FieldDecl 0x562523075990 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x5625230759e0 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x562523075a30 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x562523075a80 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x562523075bd8 <line:26:5, col:36> col:12 'class HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-FriendDecl 0x562523075d28 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-FriendDecl 0x562523075e78 <line:28:5, col:45> col:12 'class HashContainer_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-CXXConstructorDecl 0x562523076270 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline default trivial noexcept-unevaluated 0x562523076270
| `-ParmVarDecl 0x562523076388 <col:7> col:7 'const HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
`-CXXMethodDecl 0x562523076b68 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &(const HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline default trivial noexcept-unevaluated 0x562523076b68
  `-ParmVarDecl 0x562523076c78 <col:7> col:7 'const HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %"struct.ARPTable::ARPEntry"**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %"struct.ARPTable::ARPEntry"**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523071140 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x5625230713f8 prev 0x562523071140 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x562523071488 <col:23, col:29> col:23 public
|-TypedefDecl 0x562523071f90 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<ARPEntry>::key_type':'IPAddress'
| `-ElaboratedType 0x562523071f40 'typename HashContainer_adapter<ARPEntry>::key_type' sugar
|   `-TypedefType 0x562523071c80 'HashContainer_adapter<ARPTable::ARPEntry>::key_type' sugar
|     |-Typedef 0x562523071700 'key_type'
|     `-ElaboratedType 0x5625230716b0 'typename ARPEntry::key_type' sugar
|       `-TypedefType 0x562523071690 'ARPTable::ARPEntry::key_type' sugar
|         |-Typedef 0x56252306f958 'key_type'
|         `-RecordType 0x562522d2c4b0 'IPAddress'
|           `-CXXRecord 0x562522dc73e0 'IPAddress'
|-TypedefDecl 0x562523072028 <line:90:5, col:15> col:15 value_type 'ARPTable::ARPEntry':'ARPTable::ARPEntry'
| `-SubstTemplateTypeParmType 0x562523071ff0 'ARPTable::ARPEntry' sugar
|   |-TemplateTypeParmType 0x562523018950 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5625230188f8 'T'
|   `-RecordType 0x56252306e150 'ARPTable::ARPEntry'
|     `-CXXRecord 0x56252306e0b8 'ARPEntry'
|-TypedefDecl 0x562523072080 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x562522b09cd0 'size_t' sugar
|   |-Typedef 0x562522aceb20 'size_t'
|   `-BuiltinType 0x562522a5e430 'unsigned long'
|-TypedefDecl 0x5625230720d8 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x562522bb9fe0 'uint32_t' sugar
|   |-Typedef 0x562522ac7408 'uint32_t'
|   `-TypedefType 0x562522aa0440 '__uint32_t' sugar
|     |-Typedef 0x562522aa0038 '__uint32_t'
|     `-BuiltinType 0x562522a5e410 'unsigned int'
|-EnumDecl 0x562523072130 <line:98:5> col:5
| |-EnumConstantDecl 0x562523072260 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x562523072240 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x562523072218 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x562523072200 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x562523018fa0 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x562523018f80 <col:42> 'int' 1
| `-EnumConstantDecl 0x5625230722d0 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x562523072320 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5625230722b0 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x562523019058 <col:25> 'int' 63
|-CXXConstructorDecl 0x562523072370 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x5625230724d8 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x562523072428 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x5625230725c0 <line:114:5, col:20> col:5 ~HashContainer 'void ()' noexcept-unevaluated 0x5625230725c0
|-CXXMethodDecl 0x5625230726b0 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x562523072760 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x562523072810 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x5625230729a8 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x5625230728e0 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x562523072bc8 <line:142:5, col:51> col:23 bucket 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const'
| `-ParmVarDecl 0x562523072ad8 <col:30, col:46> col:46 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x562523072c80 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x562523072f10 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| `-TemplateSpecializationType 0x562523072e70 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'ARPTable::ARPEntry':'ARPTable::ARPEntry'
|   |-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>':'HashContainer_adapter<ARPTable::ARPEntry>'
|   `-RecordType 0x562523072e50 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|     `-ClassTemplateSpecialization 0x562523072d50 'HashContainer_const_iterator'
|-TypedefDecl 0x562523073140 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| `-TemplateSpecializationType 0x5625230730a0 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'ARPTable::ARPEntry':'ARPTable::ARPEntry'
|   |-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>':'HashContainer_adapter<ARPTable::ARPEntry>'
|   `-RecordType 0x562523073080 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|     `-ClassTemplateSpecialization 0x562523072f88 'HashContainer_iterator'
|-CXXMethodDecl 0x562523073238 <line:155:5, col:27> col:21 begin 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator ()' inline
|-CXXMethodDecl 0x562523073388 <line:157:5, col:35> col:27 begin 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x562523073458 <line:161:5, col:25> col:21 end 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator ()' inline
|-CXXMethodDecl 0x562523073528 <line:163:5, col:33> col:27 end 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x5625230736c8 <line:166:5, col:46> col:21 begin 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x5625230735d8 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x562523073878 <line:168:5, col:54> col:27 begin 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x562523073780 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x562523073a38 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x562523073940 <col:26, col:42> col:42 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x562523073bf8 <line:173:5, col:49> col:22 count 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::size_type (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x562523073b00 <col:28, col:44> col:44 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x562523073db8 <line:183:5, col:45> col:21 used find 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &)' inline
| `-ParmVarDecl 0x562523073cc0 <col:26, col:42> col:42 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x562523073f78 <line:185:5, col:53> col:27 find 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::const_iterator (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x562523073e80 <col:32, col:48> col:48 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x5625230740d0 <line:191:5, col:52> col:21 find_prefer 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &)' inline
| `-ParmVarDecl 0x562523074040 <col:33, col:49> col:49 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x5625230742b8 <line:197:5, col:68> col:43 get 'ARPTable::ARPEntry *(const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &) const'
| |-ParmVarDecl 0x5625230741c8 <col:47, col:63> col:63 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
| |-NoInlineAttr 0x562523074398 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625230743f0 <col:30> Inherited
|-CXXMethodDecl 0x562523074618 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &, ARPTable::ARPEntry *)' inline
| |-ParmVarDecl 0x562523074488 <col:27, col:37> col:37 it 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &'
| `-ParmVarDecl 0x562523074500 <col:41, col:44> col:44 element 'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x5625230748e8 <line:239:5, col:58> col:8 set 'ARPTable::ARPEntry *(HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &, ARPTable::ARPEntry *, bool)'
| |-ParmVarDecl 0x5625230746e8 <col:12, col:22> col:22 it 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &'
| |-ParmVarDecl 0x562523074760 <col:26, col:29> col:29 element 'ARPTable::ARPEntry *'
| `-ParmVarDecl 0x5625230747c8 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x562523074ac8 <line:249:5, col:57> col:43 set 'ARPTable::ARPEntry *(ARPTable::ARPEntry *)'
| |-ParmVarDecl 0x5625230749c0 <col:47, col:50> col:50 element 'ARPTable::ARPEntry *'
| |-NoInlineAttr 0x562523074b80 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523074bd8 <col:30> Inherited
|-CXXMethodDecl 0x562523074d08 <line:256:5, col:33> col:15 erase 'ARPTable::ARPEntry *(HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &)' inline
| `-ParmVarDecl 0x562523074c10 <col:21, col:31> col:31 it 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::iterator &'
|-CXXMethodDecl 0x562523074ec8 <line:262:5, col:40> col:15 erase 'ARPTable::ARPEntry *(const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &)' inline
| `-ParmVarDecl 0x562523074dd0 <col:21, col:37> col:37 key 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::key_type &'
|-CXXMethodDecl 0x562523074f80 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x562523075248 <line:269:5, col:44> col:17 swap 'void (HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline
| `-ParmVarDecl 0x562523075158 <col:22, col:43> col:43 x 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
|-CXXMethodDecl 0x562523075390 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x562523075300 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x562523075448 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x5625230754f8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x562523076d00 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_rep<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-CXXConstructorDecl 0x562523076f88 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)'
| `-ParmVarDecl 0x562523076e78 <col:19, col:45> col:46 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
|-CXXMethodDecl 0x562523077328 <line:292:5, col:63> col:26 operator= 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &(const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)'
| `-ParmVarDecl 0x5625230771f8 <col:36, col:62> col:63 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
|-FriendDecl 0x5625230774e8 <line:294:5, col:45> col:12 'class HashContainer_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
`-FriendDecl 0x562523077638 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523077940 <../dummy_inc/click/list.hh:138:1, line:560:1> line:139:7 class List definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument decl
| `-Field 0x56252306f8f8 '_age_link' 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x562523077c38 prev 0x562523077940 <col:1, col:7> col:7 implicit class List
|-AccessSpecDecl 0x562523077cc8 <col:14, col:20> col:14 public
|-TypedefDecl 0x562523077d58 <line:141:5, col:16> col:16 pointer 'ARPTable::ARPEntry *'
| `-PointerType 0x562523077d20 'ARPTable::ARPEntry *'
|   `-SubstTemplateTypeParmType 0x562523077cf0 'ARPTable::ARPEntry' sugar
|     |-TemplateTypeParmType 0x5625230444c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562523044468 'T'
|     `-RecordType 0x56252306e150 'ARPTable::ARPEntry'
|       `-CXXRecord 0x56252306e0b8 'ARPEntry'
|-TypedefDecl 0x562523077de8 <line:142:5, col:22> col:22 const_pointer 'const ARPTable::ARPEntry *'
| `-PointerType 0x562523077db0 'const ARPTable::ARPEntry *'
|   `-QualType 0x562523077cf1 'const ARPTable::ARPEntry' const
|     `-SubstTemplateTypeParmType 0x562523077cf0 'ARPTable::ARPEntry' sugar
|       |-TemplateTypeParmType 0x5625230444c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562523044468 'T'
|       `-RecordType 0x56252306e150 'ARPTable::ARPEntry'
|         `-CXXRecord 0x56252306e0b8 'ARPEntry'
|-CXXRecordDecl 0x562523077e40 <line:143:5, col:11> col:11 class const_iterator
|-CXXRecordDecl 0x562523077f00 <line:144:5, col:11> col:11 class iterator
|-TypedefDecl 0x562523077fc0 <line:145:5, col:20> col:20 size_type 'size_t':'unsigned long'
| `-TypedefType 0x562522b09cd0 'size_t' sugar
|   |-Typedef 0x562522aceb20 'size_t'
|   `-BuiltinType 0x562522a5e430 'unsigned long'
|-CXXConstructorDecl 0x562523078050 <line:148:5, line:150:5> line:148:5 List 'void ()'
|-CXXMethodDecl 0x562523078158 <line:154:5, line:156:5> line:154:14 begin 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator ()'
|-CXXMethodDecl 0x562523078258 <line:158:5, line:160:5> line:158:20 begin 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_iterator () const'
|-CXXMethodDecl 0x562523078328 <line:163:5, line:165:5> line:163:14 end 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator ()'
|-CXXMethodDecl 0x5625230783f8 <line:167:5, line:169:5> line:167:20 end 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_iterator () const'
|-CXXMethodDecl 0x5625230784a8 <line:174:5, line:176:5> line:174:10 empty 'bool () const'
|-CXXMethodDecl 0x562523078558 <line:180:5, line:185:5> line:180:15 size 'List::size_type () const'
|-CXXMethodDecl 0x562523078678 <line:191:5, line:193:5> line:191:13 front 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer ()'
|-CXXMethodDecl 0x562523078798 <line:195:5, line:197:5> line:195:19 front 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer () const'
|-CXXMethodDecl 0x562523078868 <line:201:5, line:203:5> line:201:13 back 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer ()'
|-CXXMethodDecl 0x562523078938 <line:205:5, line:207:5> line:205:19 back 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer () const'
|-CXXMethodDecl 0x562523078ae8 <line:213:5, line:221:5> line:213:10 push_front 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| `-ParmVarDecl 0x5625230789f8 <col:21, col:29> col:29 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x562523078c40 <line:226:5, line:235:5> line:226:10 push_back 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| `-ParmVarDecl 0x562523078bb0 <col:20, col:28> col:28 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x562523078cf8 <line:239:5, line:247:5> line:239:10 pop_front 'void ()'
|-CXXMethodDecl 0x562523078da8 <line:251:5, line:259:5> line:251:10 pop_back 'void ()'
|-CXXMethodDecl 0x562523078ff8 <line:266:5, line:275:5> line:266:10 insert 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer, List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| |-ParmVarDecl 0x562523078e68 <col:17, col:25> col:25 pos 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
| `-ParmVarDecl 0x562523078ee0 <col:30, col:38> col:38 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x562523079258 <line:282:5, line:285:5> line:282:14 insert 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator, List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| |-ParmVarDecl 0x5625230790c8 <col:21, col:30> col:30 it 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
| `-ParmVarDecl 0x562523079140 <col:34, col:42> col:42 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-FunctionTemplateDecl 0x562523079678 <line:292:5, line:298:5> line:293:10 insert
| |-TemplateTypeParmDecl 0x562523079318 <line:292:15, col:24> col:24 typename depth 0 index 0 InputIterator
| `-CXXMethodDecl 0x5625230795d8 <line:293:5, line:298:5> line:293:10 insert 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator, InputIterator, InputIterator)'
|   |-ParmVarDecl 0x5625230793c8 <col:17, col:26> col:26 it 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
|   |-ParmVarDecl 0x562523079440 <col:30, col:44> col:44 first 'InputIterator'
|   `-ParmVarDecl 0x5625230794b8 <col:51, col:65> col:65 last 'InputIterator'
|-CXXMethodDecl 0x562523079808 <line:304:5, line:316:5> line:304:10 erase 'void (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer)'
| `-ParmVarDecl 0x562523079778 <col:16, col:24> col:24 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::pointer':'ARPTable::ARPEntry *'
|-CXXMethodDecl 0x562523079998 <line:322:5, line:327:5> line:322:14 erase 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator)'
| `-ParmVarDecl 0x5625230798d0 <col:20, col:29> col:29 it 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
|-CXXMethodDecl 0x562523079ba8 <line:333:5, line:337:5> line:333:14 erase 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator, List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator)'
| |-ParmVarDecl 0x562523079a60 <col:20, col:29> col:29 first 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
| `-ParmVarDecl 0x562523079ad8 <col:36, col:45> col:45 last 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::iterator'
|-CXXMethodDecl 0x562523079c68 <line:341:5, line:347:5> line:341:10 clear 'void ()'
|-CXXMethodDecl 0x562523079d18 <line:354:5, line:356:5> line:354:10 __clear 'void ()'
|-CXXMethodDecl 0x56252307a188 <line:360:5, line:364:5> line:360:10 swap 'void (List<ARPTable::ARPEntry, &ARPEntry::_age_link> &)'
| `-ParmVarDecl 0x56252307a098 <col:15, col:32> col:32 x 'List<ARPTable::ARPEntry, &ARPEntry::_age_link> &'
|-CXXMethodDecl 0x56252307a348 <line:370:5, line:372:5> line:370:10 isolated 'bool (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer)'
| `-ParmVarDecl 0x56252307a250 <col:19, col:33> col:33 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer':'const ARPTable::ARPEntry *'
|-CXXMethodDecl 0x56252307a508 <line:375:5, line:381:5> line:375:10 contains 'bool (List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer) const'
| `-ParmVarDecl 0x56252307a410 <col:19, col:33> col:33 x 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>::const_pointer':'const ARPTable::ARPEntry *'
|-CXXRecordDecl 0x56252307a5c0 prev 0x562523077e40 <line:386:5, col:11> col:11 class const_iterator
|-CXXRecordDecl 0x56252307a660 prev 0x562523077f00 <line:491:5, col:11> col:11 class iterator
|-AccessSpecDecl 0x56252307a700 <line:552:3, col:10> col:3 private
|-FieldDecl 0x56252307a738 <line:554:5, col:8> col:8 _head 'ARPTable::ARPEntry *'
|-FieldDecl 0x56252307a798 <line:555:5, col:8> col:8 _tail 'ARPTable::ARPEntry *'
|-CXXConstructorDecl 0x56252307abc8 <line:557:5, col:34> col:5 List 'void (const List<ARPTable::ARPEntry, &ARPEntry::_age_link> &)'
| `-ParmVarDecl 0x56252307aab8 <col:10, col:33> col:33 x 'const List<ARPTable::ARPEntry, &ARPEntry::_age_link> &'
`-CXXMethodDecl 0x56252307b2a8 <line:558:5, col:56> col:22 operator= 'List<ARPTable::ARPEntry, &ARPEntry::_age_link> &(const List<ARPTable::ARPEntry, &ARPEntry::_age_link> &)'
  `-ParmVarDecl 0x56252307b178 <col:32, col:55> col:55 x 'const List<ARPTable::ARPEntry, &ARPEntry::_age_link> &'

Layout: <CGRecordLayout
  LLVMType:%class.List = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"* }
  NonVirtualBaseLLVMType:%class.List = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252303f988 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56252303faa8 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x56252303fb78 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252303fbe0 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56252303fcf8 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x56252303fdc8 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x56252303fe28 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x56252303fe88 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252303efa0 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56252303f0b8 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x56252303f148 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x56252303f288 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x56252303f180 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x56252303f380 <line:12:5, col:20> col:5 ~HashAllocator 'void ()' noexcept-unevaluated 0x56252303f380
|-CXXMethodDecl 0x56252303f500 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x56252303f470 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x562523040ce0 <col:48, line:17:5>
|   |-ParenExpr 0x562523040c28 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x562523040bf8 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x5625230408c0 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x562523040890 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5625230407c0 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x562523040720 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x562523040708 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x5625230406f0 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x5625230406c0 <col:24> 'HashAllocator::link *' lvalue ->_free 0x5625230401b8
|   |   |   | |       `-CXXThisExpr 0x5625230406b0 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x5625230407a8 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x562523040790 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x562523040778 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x562523040748 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x562523040218
|   |   |   |         `-CXXThisExpr 0x562523040738 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x562523040870 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x562523040840 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5625230407e0 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x56252303f470 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x562523040858 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x562523040810 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x562523040278
|   |   |         `-CXXThisExpr 0x562523040800 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x562523040920 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x562523040900 <col:72> 'int' 0
|   |   `-CallExpr 0x562523040b58 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x562523040b40 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562523040b20 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x562523040b98 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x562523040990 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x562523040bb0 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5625230409d0 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x562523040bc8 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x562523040a10 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x562523040be0 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x562523040b08 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x562523040af0 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x562523040aa8 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x562523040cc0 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x562523040c58 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x562523040278
|     | `-CXXThisExpr 0x562523040c48 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x562523040ca8 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x562523040c88 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x56252303f470 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x56252303f5d0 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x56252303f718 <line:20:5, col:35> col:17 deallocate 'void (void *)' inline
| `-ParmVarDecl 0x56252303f688 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x56252303f8b8 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x56252303f7f8 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x56252303f960 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x56252303f988 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56252303faa8 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x56252303fb78 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x56252303fbe0 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56252303fcf8 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x56252303fdc8 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x56252303fe28 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x56252303fe88 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x56252303fef0 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x56252303fff0 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x562523040160 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56252303ffd0 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x56252303ffb0 <col:20> 'int' 1024
| |-EnumConstantDecl 0x562523040080 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x562523040178 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523040060 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x562523040040 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x562523040110 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x562523040190 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5625230400f0 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x5625230400d0 <col:18> 'int' 8
|-FieldDecl 0x5625230401b8 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x562523040218 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x562523040278 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x5625230402f0 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x562523040488 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x5625230403c8 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x562523040608 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x562523040548 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56252307b998 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 72
|-CXXRecordDecl 0x56252307bbd8 prev 0x56252307b998 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x56252307bc68 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x56252307bcc8 <line:61:5, line:63:5> line:61:5 SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x56252307bda8 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<72> &)' inline default_delete noexcept-unevaluated 0x56252307bda8
| `-ParmVarDecl 0x56252307beb8 <col:7> col:7 'const SizedHashAllocator<72> &'
|-CXXConstructorDecl 0x56252307bf58 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x56252307bf58
| `-ParmVarDecl 0x56252307c068 <col:7> col:7 'SizedHashAllocator<72> &&'
|-CXXMethodDecl 0x56252307c108 <col:7> col:7 implicit operator= 'SizedHashAllocator<72> &(SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x56252307c108
| `-ParmVarDecl 0x56252307c218 <col:7> col:7 'SizedHashAllocator<72> &&'
`-CXXDestructorDecl 0x56252307c2a0 <col:7> col:7 implicit ~SizedHashAllocator 'void ()' inline default noexcept-unevaluated 0x56252307c2a0

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f5ed40 prev 0x562522f55b80 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522f5ee38 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x562522f5eed8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x562522f65ca0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x562522f66088 <col:11>
|-CXXConstructorDecl 0x562522f65d80 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x562522f65e68 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x562522f667d0 <col:11>
|-CXXConstructorDecl 0x562522f65f08 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562522f66018 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x562522f68028 <col:11>
|-CXXDestructorDecl 0x562522f67338 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x562522c6df18 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x562522c6e028 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x562522c6e8f0 <col:11>
|   `-ReturnStmt 0x562522c6e8e0 <col:11>
|     `-UnaryOperator 0x562522c6e8c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x562522c6e8b8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x562522c6e098 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x562522c6e1a8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x562522fff160 <col:11>
    `-ReturnStmt 0x562522fff150 <col:11>
      `-UnaryOperator 0x562522fff138 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x562522fff128 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f54d38 prev 0x562522f54a48 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522f54e30 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x562522f54ec0 <col:19, col:25> col:19 public
|-TypedefDecl 0x562522f54ef8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x562522bba0c0 'int32_t' sugar
|   |-Typedef 0x562522ac7268 'int32_t'
|   `-TypedefType 0x562522aa03b0 '__int32_t' sugar
|     |-Typedef 0x562522a9ffc8 '__int32_t'
|     `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562522f54f60 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x562522bba280 'int64_t' sugar
|   |-Typedef 0x562522ac72d0 'int64_t'
|   `-TypedefType 0x562522aa04d0 '__int64_t' sugar
|     |-Typedef 0x562522aa00a8 '__int64_t'
|     `-BuiltinType 0x562522a5e390 'long'
|-EnumDecl 0x562522f54fb8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x562522f55130 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x562522f55110 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x562522f550e8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x562522f550d0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x562522f550a0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x562522f55228 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x562522f55208 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x562522f551e0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x562522f551c8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x562522f551a0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x562522f55180 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x562522f55278 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x562522f55380 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x562522f558d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f55360 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x562522f55340 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x562522f55410 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x562522f558e8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f553f0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x562522f553d0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x562522f554a0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x562522f55900 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f55480 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x562522f55460 <col:25> 'int' 1000
| |-EnumConstantDecl 0x562522f55530 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x562522f55918 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f55510 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x562522f554f0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x562522f555c0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x562522f55930 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f555a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x562522f55580 <col:25> 'int' 1000
| |-EnumConstantDecl 0x562522f55650 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x562522f55948 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f55630 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x562522f55610 <col:24> 'int' 1000
| |-EnumConstantDecl 0x562522f556e0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x562522f55960 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f556c0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x562522f556a0 <col:26> 'int' EnumConstant 0x562522f55380 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x562522f557b0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x562522f55978 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f55790 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x562522f55770 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x562522f55730 <col:27> 'int' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x562522f55750 <col:44> 'int' EnumConstant 0x562522f55650 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x562522f55880 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x562522f55990 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522f55860 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x562522f55840 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x562522f55800 <col:27> 'int' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x562522f55820 <col:44> 'int' EnumConstant 0x562522f55530 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x562522f559a8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x562522f55ab0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x562522f55b00 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522f55a90 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x562522f55a70 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x562522f55b28 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x562522bb9cf0 'uninitialized_type'
|   `-CXXRecord 0x562522bb9c58 'uninitialized_type'
|-CXXRecordDecl 0x562522f55b80 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x562522f55c90 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f66098 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x562522f661b8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x562522f66170 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x562522f66100 <col:9> '<bound member function type>' ->assign 0x562522f5a8d8
|     | `-CXXThisExpr 0x562522f660f0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x562522f66130 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x562522f661a0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x562522f66150 <col:19> 'int' 0
|-CXXConstructorDecl 0x562522f55ed8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x562522f55d50 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x562522f55dc8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x562522f619d0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x562522f619b0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f661d0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x562522f66320 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x562522f662a8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x562522f66238 <col:9> '<bound member function type>' ->assign 0x562522f5a8d8
|     | `-CXXThisExpr 0x562522f66228 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x562522f662f0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x562522f662d8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x562522f66268 <col:16> 'long' lvalue ParmVar 0x562522f55d50 'sec' 'long'
|     `-ImplicitCastExpr 0x562522f66308 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x562522f66288 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f55dc8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x562522f56138 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x562522f55fa8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x562522f56020 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x562522f61a08 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x562522f619e8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f66338 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x562522f66470 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x562522f66410 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x562522f663a0 <col:9> '<bound member function type>' ->assign 0x562522f5a8d8
|     | `-CXXThisExpr 0x562522f66390 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x562522f66440 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x562522f663d0 <col:16> 'int' lvalue ParmVar 0x562522f55fa8 'sec' 'int'
|     `-ImplicitCastExpr 0x562522f66458 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x562522f663f0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f56020 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x562522f56398 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x562522f56208 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x562522f56280 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x562522f61a40 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x562522f61a20 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f66488 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x562522f665d8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x562522f66560 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x562522f664f0 <col:9> '<bound member function type>' ->assign 0x562522f5a8d8
|     | `-CXXThisExpr 0x562522f664e0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x562522f665a8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x562522f66590 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x562522f66520 <col:16> 'unsigned long' lvalue ParmVar 0x562522f56208 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x562522f665c0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x562522f66540 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f56280 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x562522f57530 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x562522f56468 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x562522f564e0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x562522f61a78 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x562522f61a58 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f665f0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x562522f66740 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x562522f666c8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x562522f66658 <col:9> '<bound member function type>' ->assign 0x562522f5a8d8
|     | `-CXXThisExpr 0x562522f66648 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x562522f66710 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x562522f666f8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x562522f66688 <col:16> 'unsigned int' lvalue ParmVar 0x562522f56468 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x562522f66728 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x562522f666a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f564e0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x562522f57690 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x562522f57600 <col:31> col:37 'double'
|-CXXConstructorDecl 0x562522f57828 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x562522f57768 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x562522f57a58 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x562522f57960 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x562522f57c08 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x562522f57b48 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f667e0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x562522f66758 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x562522f57b48 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x562522f66840 <col:19, line:214:5>
|-CXXConstructorDecl 0x562522f57dd8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x562522f57d18 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f66850 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x562522f66900 <col:53, line:219:5>
|   `-CStyleCastExpr 0x562522f668d8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x562522f668a8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x562522f57d18 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x562522f57fc8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x562522f57f40 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x562522f54ae0 'Timestamp'
|   | `-CXXRecord 0x562522f54d38 'Timestamp'
|   `-ParenType 0x562522f57ee0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x562522f57eb0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x562522f55080 'Timestamp::seconds_type' sugar
|         |-Typedef 0x562522f54ef8 'seconds_type'
|         `-TypedefType 0x562522bba0c0 'int32_t' sugar
|           |-Typedef 0x562522ac7268 'int32_t'
|           `-TypedefType 0x562522aa03b0 '__int32_t' sugar
|             |-Typedef 0x562522a9ffc8 '__int32_t'
|             `-BuiltinType 0x562522a5e370 'int'
|-CXXConversionDecl 0x562522f58108 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x562522f581d8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x562522f66a08 <col:37, line:231:5>
|   `-ReturnStmt 0x562522f669f8 <line:227:9, col:23>
|     `-BinaryOperator 0x562522f669d8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x562522f669a8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x562522f66958 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x562522f5eed8
|       |   `-MemberExpr 0x562522f66928 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x562522f5fe88
|       |     `-CXXThisExpr 0x562522f66918 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x562522f669c0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x562522f66988 <col:23> 'int' 0
|-CXXMethodDecl 0x562522f58298 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x562522f58358 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f58418 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f584d8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f58598 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x562522f58708 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x562522f58648 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x562522f58850 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x562522f587c0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f58918 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x562522f589b8 <col:54> "" ""
|-CXXMethodDecl 0x562522f58a48 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x562522f58ae8 <col:54> "" ""
|-CXXMethodDecl 0x562522f58b78 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x562522f58c18 <col:54> "" ""
|-CXXMethodDecl 0x562522f58d18 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x562522f58de8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x562522f58f18 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x562522f59010 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x562522f59148 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x562522f66c20 <col:39, line:271:5>
|   `-ReturnStmt 0x562522f66c10 <line:267:9, col:61>
|     `-CallExpr 0x562522f66bb0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x562522f66b98 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522f66a20 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x562522f601b8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x562522f66be0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x562522f66a80 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x562522f5eed8
|       |   `-MemberExpr 0x562522f66a50 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x562522f5fe88
|       |     `-CXXThisExpr 0x562522f66a40 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x562522f66bf8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x562522f66b20 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x562522f66af0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x562522f66ab0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x562522f66b08 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x562522f66ad0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55650 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x562522f59208 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x562522f66de0 <col:39, line:279:5>
|   `-ReturnStmt 0x562522f66dd0 <line:275:9, col:61>
|     `-CallExpr 0x562522f66d70 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x562522f66d58 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522f66c38 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x562522f601b8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x562522f66da0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x562522f66c98 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x562522f5eed8
|       |   `-MemberExpr 0x562522f66c68 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x562522f5fe88
|       |     `-CXXThisExpr 0x562522f66c58 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x562522f66db8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x562522f66d38 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x562522f66d08 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x562522f66cc8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x562522f66d20 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x562522f66ce8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55530 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x562522f592c8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x562522f66f78 <col:39, line:287:5>
|   `-ReturnStmt 0x562522f66f68 <line:283:9, col:53>
|     `-BinaryOperator 0x562522f66f48 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x562522f66f18 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x562522f66e38 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x562522f5eed8
|       |   `-MemberExpr 0x562522f66e08 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x562522f5fe88
|       |     `-CXXThisExpr 0x562522f66df8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x562522f66f30 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x562522f66ef8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x562522f66ed8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x562522f66ea8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x562522f66e68 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55380 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x562522f66ec0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x562522f66e88 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x562522f593b8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x562522f68210 <col:40, line:293:5>
|   |-DeclStmt 0x562522f670c0 <line:291:9, col:48>
|   | `-VarDecl 0x562522f66fa0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x562522f670a0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x562522f67048 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x562522f67018 <col:22> '<bound member function type>' ->subsec 0x562522f58358
|   |     |   `-CXXThisExpr 0x562522f67008 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x562522f67088 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x562522f67068 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f557b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x562522f68200 <line:292:9, col:70>
|     `-ExprWithCleanups 0x562522f681e8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x562522f681b8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522f681a0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x562522f68180 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x562522f68150 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x562522f67ee8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x562522f67ed0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x562522f670d8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x562522f66fa0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x562522f680f0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x562522f680d8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x562522f680a8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x562522f67f00 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x562522f67e70 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x562522f67e58 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x562522f67e08 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x562522f54c88 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x562522f67da8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x562522f67108 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x562522f670f8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x562522f67df0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x562522f67dd8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x562522f675c8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x562522f67130 <col:39> 'int' 0
|               |               `-BinaryOperator 0x562522f671c0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x562522f67190 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x562522f67150 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f557b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x562522f671a8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x562522f67170 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x562522f66fa0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x562522f68120 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x562522f67eb8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x562522f67ea8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x562522f59478 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x562522f68768 <col:40, line:302:5>
|   |-DeclStmt 0x562522f68360 <line:297:9, col:48>
|   | `-VarDecl 0x562522f68240 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x562522f68340 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x562522f682e8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x562522f682b8 <col:22> '<bound member function type>' ->subsec 0x562522f58358
|   |     |   `-CXXThisExpr 0x562522f682a8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x562522f68328 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x562522f68308 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55880 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x562522f68758 <line:298:9, col:70>
|     `-ExprWithCleanups 0x562522f68740 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x562522f68710 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522f686f8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x562522f686d8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x562522f686a8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x562522f685d0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x562522f685b8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x562522f68378 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x562522f68240 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x562522f68648 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x562522f68630 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x562522f68600 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x562522f685e8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x562522f68558 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x562522f68540 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x562522f68520 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x562522f54c88 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x562522f684c0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x562522f683a8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x562522f68398 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x562522f68508 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x562522f684f0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x562522f68480 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x562522f683d0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x562522f68460 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x562522f68430 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x562522f683f0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55880 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x562522f68448 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x562522f68410 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x562522f68240 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x562522f68678 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x562522f685a0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x562522f68590 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x562522f59538 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x562522f687f0 <col:40, line:306:5>
|   `-ReturnStmt 0x562522f687e0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x562522f687b0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x562522f68798 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x562522f68788 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x562522f596d8 <line:310:5, col:65> col:29 used make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x562522f595e8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x562522f598a8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x562522f597b0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x562522f59998 <line:314:5, col:38> col:28 used jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x562522f59b08 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x562522f59a48 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x562522f68938 <col:56, line:320:5>
|   `-ReturnStmt 0x562522f68928 <line:319:9, col:32>
|     `-ExprWithCleanups 0x562522f68910 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x562522f688e0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522f688c8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x562522f68888 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x562522f68858 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x562522f68818 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x562522f59a48 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x562522f68870 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x562522f68838 <col:31> 'int' 0
|-CXXMethodDecl 0x562522f59d48 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x562522f59bc0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f59c38 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f68b08 <col:72, line:326:5>
|   `-ReturnStmt 0x562522f68af8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x562522f68ae0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x562522f68ab0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522f68a98 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x562522f68a58 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x562522f68a40 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x562522f68960 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x562522f59bc0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x562522f68a00 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x562522f689e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x562522f68980 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x562522f5e630 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x562522f68a28 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x562522f689a0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f59c38 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f59ef8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x562522f59e08 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x562522f691d0 <col:56, line:337:5>
|   |-DeclStmt 0x562522f68e08 <line:329:9, col:51>
|   | `-VarDecl 0x562522f68b30 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x562522f68df0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x562522f68dc0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x562522f68da8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x562522f68d90 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x562522f68d60 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x562522f68d48 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x562522f68d30 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x562522f68c20 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x562522f68fc0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x562522f68e70 <col:9, col:14> 'int64_t':'long' lvalue .x 0x562522f5eed8
|   | | `-MemberExpr 0x562522f68e40 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x562522f5fe88
|   | |   `-DeclRefExpr 0x562522f68e20 <col:9> 'Timestamp' lvalue Var 0x562522f68b30 't' 'Timestamp'
|   | `-BinaryOperator 0x562522f68fa0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x562522f68f70 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562522f68ea0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x562522f59e08 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x562522f68f88 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x562522f68f50 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x562522f68f30 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x562522f68f00 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x562522f68ec0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x562522f68f18 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x562522f68ee0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55650 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x562522f691b8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x562522f69188 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x562522f69170 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x562522f69150 <col:16> 'Timestamp' lvalue Var 0x562522f68b30 't' 'Timestamp'
|-CXXMethodDecl 0x562522f5a0c0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x562522f59fb0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f5a028 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f69388 <col:72, line:343:5>
|   `-ReturnStmt 0x562522f69378 <line:342:9, col:51>
|     `-ExprWithCleanups 0x562522f69360 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x562522f69330 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522f69318 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x562522f692d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x562522f692c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x562522f69208 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x562522f59fb0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x562522f69280 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x562522f69268 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x562522f69228 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x562522f5e778 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x562522f692a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x562522f69248 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5a028 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f5a210 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x562522f5a180 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x562522f697d0 <col:56, line:354:5>
|   |-DeclStmt 0x562522f69578 <line:346:9, col:51>
|   | `-VarDecl 0x562522f693b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x562522f69560 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x562522f69530 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x562522f69518 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x562522f69500 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x562522f694d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x562522f694b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x562522f694a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x562522f69470 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x562522f69730 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x562522f695e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x562522f5eed8
|   | | `-MemberExpr 0x562522f695b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x562522f5fe88
|   | |   `-DeclRefExpr 0x562522f69590 <col:9> 'Timestamp' lvalue Var 0x562522f693b0 't' 'Timestamp'
|   | `-BinaryOperator 0x562522f69710 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x562522f696e0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562522f69610 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x562522f5a180 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x562522f696f8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x562522f696c0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x562522f696a0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x562522f69670 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x562522f69630 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x562522f69688 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x562522f69650 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55530 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x562522f697b8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x562522f69788 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x562522f69770 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x562522f69750 <col:16> 'Timestamp' lvalue Var 0x562522f693b0 't' 'Timestamp'
|-CXXMethodDecl 0x562522f5a3d8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x562522f5a2c8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f5a340 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f69988 <col:72, line:360:5>
|   `-ReturnStmt 0x562522f69978 <line:359:9, col:51>
|     `-ExprWithCleanups 0x562522f69960 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x562522f69930 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522f69918 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x562522f698d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x562522f698c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x562522f69808 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x562522f5a2c8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x562522f69880 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x562522f69868 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x562522f69828 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x562522f5e8c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x562522f698a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x562522f69848 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5a340 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f5a528 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x562522f5a498 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x562522f762f8 <col:56, line:371:5>
|   |-DeclStmt 0x562522f69b78 <line:363:9, col:51>
|   | `-VarDecl 0x562522f699b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x562522f69b60 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x562522f69b30 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x562522f69b18 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x562522f69b00 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x562522f69ad0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x562522f69ab8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x562522f69aa0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x562522f69a70 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x562522f76258 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x562522f69be0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x562522f5eed8
|   | | `-MemberExpr 0x562522f69bb0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x562522f5fe88
|   | |   `-DeclRefExpr 0x562522f69b90 <col:9> 'Timestamp' lvalue Var 0x562522f699b0 't' 'Timestamp'
|   | `-CallExpr 0x562522f761f8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x562522f761e0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x562522f69c10 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x562522f601b8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x562522f76228 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562522f69c30 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x562522f5a498 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x562522f76240 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x562522f761c0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x562522f76190 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x562522f69c50 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55380 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x562522f761a8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x562522f69c70 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x562522f762e0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x562522f762b0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x562522f76298 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x562522f76278 <col:16> 'Timestamp' lvalue Var 0x562522f699b0 't' 'Timestamp'
|-CXXMethodDecl 0x562522f5a618 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x562522f76438 <col:39, line:377:5>
|   `-ReturnStmt 0x562522f76428 <line:376:9, col:30>
|     `-ExprWithCleanups 0x562522f76410 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x562522f763e0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522f763c8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x562522f76388 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x562522f76330 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x562522f76370 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x562522f76350 <col:29> 'int' 1
|-CXXMethodDecl 0x562522f5a6d8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x562522f76518 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x562522f764d0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x562522f76460 <col:9> '<bound member function type>' ->assign 0x562522f5a8d8
|     | `-CXXThisExpr 0x562522f76450 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x562522f76490 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x562522f76500 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x562522f764b0 <col:19> 'int' 0
|-CXXMethodDecl 0x562522f5a8d8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x562522f5a788 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f5a800 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x562522f61ab0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x562522f61a90 <col:60> 'int' 0
| `-CompoundStmt 0x562522f76710 <col:63, line:395:5>
|   `-BinaryOperator 0x562522f766f0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x562522f76570 <col:9, col:12> 'int64_t':'long' lvalue .x 0x562522f5eed8
|     | `-MemberExpr 0x562522f76540 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x562522f5fe88
|     |   `-CXXThisExpr 0x562522f76530 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x562522f766d0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x562522f76660 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x562522f76600 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x562522f765e8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x562522f765d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x562522f765a0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x562522f5a788 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x562522f76648 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x562522f76628 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x562522f766b8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x562522f766a0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x562522f76680 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5a800 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f5aaa8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x562522f5a998 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f5aa10 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f76868 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x562522f76820 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x562522f76738 <col:9> '<bound member function type>' ->assign 0x562522f5a8d8
|     | `-CXXThisExpr 0x562522f76728 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x562522f76850 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x562522f76768 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x562522f5a998 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x562522f767e0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x562522f767c8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522f76788 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x562522f5e778 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x562522f76808 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562522f767a8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5aa10 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f5ac78 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x562522f5ab68 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f5abe0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f769c0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x562522f76978 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x562522f76890 <col:9> '<bound member function type>' ->assign 0x562522f5a8d8
|     | `-CXXThisExpr 0x562522f76880 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x562522f769a8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x562522f768c0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x562522f5ab68 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x562522f76938 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x562522f76920 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522f768e0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x562522f5e8c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x562522f76960 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562522f76900 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5abe0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f5ae48 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x562522f5ad38 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f5adb0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x562522f61ae8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x562522f61ac8 <col:57> 'int' 0
| `-DeprecatedAttr 0x562522f5aef8 <col:75> "" ""
|-CXXMethodDecl 0x562522f5b088 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x562522f5af78 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f5aff0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522f5b138 <col:74> "" ""
|-CXXMethodDecl 0x562522f5b2c8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x562522f5b1b8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x562522f5b230 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522f5b378 <col:74> "" ""
|-CXXMethodDecl 0x562522f5b408 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x562522f5b4a8 <col:42> "" ""
|-CXXMethodDecl 0x562522f5dce0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x562522f5dbc0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x562522f5dc40 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x562522f5ddb0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x562522f5de70 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x562522f5df10 <col:20>
| `-OptimizeNoneAttr 0x562522f5df68 <col:30>
|-CXXMethodDecl 0x562522f5dfb0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x562522f5e070 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x562522f5e130 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x562522f5e1f0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x562522f5e2b0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x562522f5e370 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x562522f5e430 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x562522f5e4f0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x562522f5e630 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x562522f5e5a0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f76b08 <col:58, line:512:5>
|   `-ReturnStmt 0x562522f76af8 <line:511:9, col:53>
|     `-BinaryOperator 0x562522f76ad8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x562522f76aa8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x562522f769d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5e5a0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x562522f76ac0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x562522f76a88 <col:23, col:53> 'int'
|           `-BinaryOperator 0x562522f76a68 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x562522f76a38 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x562522f769f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x562522f76a50 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x562522f76a18 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55650 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x562522f5e778 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x562522f5e6e8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f76c50 <col:58, line:516:5>
|   `-ReturnStmt 0x562522f76c40 <line:515:9, col:53>
|     `-BinaryOperator 0x562522f76c20 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x562522f76bf0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x562522f76b20 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5e6e8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x562522f76c08 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x562522f76bd0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x562522f76bb0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x562522f76b80 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x562522f76b40 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x562522f76b98 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x562522f76b60 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55530 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x562522f5e8c0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x562522f5e830 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f76d98 <col:58, line:520:5>
|   `-ReturnStmt 0x562522f76d88 <line:519:9, col:53>
|     `-BinaryOperator 0x562522f76d68 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x562522f76d38 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x562522f76c68 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5e830 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x562522f76d50 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x562522f76d18 <col:23, col:53> 'int'
|           `-BinaryOperator 0x562522f76cf8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x562522f76cc8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x562522f76c88 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55380 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x562522f76ce0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x562522f76ca8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x562522f5ea08 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x562522f5e978 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f76ee0 <col:60, line:524:5>
|   `-ReturnStmt 0x562522f76ed0 <line:523:9, col:55>
|     `-BinaryOperator 0x562522f76eb0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x562522f76e80 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x562522f76db0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5e978 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x562522f76e98 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x562522f76e60 <col:25, col:55> 'int'
|           `-BinaryOperator 0x562522f76e40 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x562522f76e10 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x562522f76dd0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x562522f76e28 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x562522f76df0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55650 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x562522f5eb50 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x562522f5eac0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f77028 <col:60, line:528:5>
|   `-ReturnStmt 0x562522f77018 <line:527:9, col:55>
|     `-BinaryOperator 0x562522f76ff8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x562522f76fc8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x562522f76ef8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5eac0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x562522f76fe0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x562522f76fa8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x562522f76f88 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x562522f76f58 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x562522f76f18 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x562522f76f70 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x562522f76f38 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55530 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x562522f5ec98 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x562522f5ec08 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f77170 <col:60, line:532:5>
|   `-ReturnStmt 0x562522f77160 <line:531:9, col:55>
|     `-BinaryOperator 0x562522f77140 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x562522f77110 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x562522f77040 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f5ec08 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x562522f77128 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x562522f770f0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x562522f770d0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x562522f770a0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x562522f77060 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f55380 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x562522f770b8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x562522f77080 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x562522f556e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x562522f5ed40 prev 0x562522f55b80 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x562522f5ee38 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x562522f5eed8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x562522f65ca0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x562522f66088 <col:11>
| |-CXXConstructorDecl 0x562522f65d80 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x562522f65e68 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x562522f667d0 <col:11>
| |-CXXConstructorDecl 0x562522f65f08 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x562522f66018 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x562522f68028 <col:11>
| |-CXXDestructorDecl 0x562522f67338 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x562522c6df18 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x562522c6e028 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x562522c6e8f0 <col:11>
| |   `-ReturnStmt 0x562522c6e8e0 <col:11>
| |     `-UnaryOperator 0x562522c6e8c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x562522c6e8b8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x562522c6e098 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x562522c6e1a8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x562522fff160 <col:11>
|     `-ReturnStmt 0x562522fff150 <col:11>
|       `-UnaryOperator 0x562522fff138 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x562522fff128 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x562522f5ef40 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x562522f5f040 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x562522f5f240 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f5f020 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x562522f5f000 <col:21> 'int' 0
| |-EnumConstantDecl 0x562522f5f0d0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x562522f5f258 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f5f0b0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x562522f5f090 <col:23> 'int' 1
| |-EnumConstantDecl 0x562522f5f160 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x562522f5f270 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562522f5f140 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x562522f5f120 <col:23> 'int' 2
| `-EnumConstantDecl 0x562522f5f1f0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x562522f5f288 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522f5f1d0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x562522f5f1b0 <col:27> 'int' 3
|-CXXMethodDecl 0x562522f5f2c8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x562522f5f390 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x562522f5f598 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x562522f5f440 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x562522f5f4c0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x562522f61b00 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x562522f5f7a8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x562522f5f658 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x562522f5f6d0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x562522f5f878 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x562522f5f938 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x562522f5faa8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x562522f5f9e8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x562522f5fb70 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x562522f5fc30 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x562522f5fcf0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x562522f5fdb0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x562522f5fe50 <line:670:3, col:10> col:3 private
|-FieldDecl 0x562522f5fe88 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x562522f5fef8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x562522f77188 <col:27, line:684:5>
|-CXXMethodDecl 0x562522f5ffb8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x562522f77198 <col:27, line:696:5>
|-CXXMethodDecl 0x562522f601b8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x562522f60068 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x562522f600e0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f77320 <col:66, line:700:5>
|   `-ReturnStmt 0x562522f77310 <line:699:9, col:31>
|     `-CallExpr 0x562522f772b0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x562522f77298 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522f77248 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x562522de2568 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x562522f772e0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x562522f77208 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x562522f60068 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x562522f772f8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562522f77228 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f600e0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522f60528 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x562522f60278 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x562522f602f0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x562522f60368 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x562522f603e0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522f77670 <col:64, line:707:5>
|   |-DeclStmt 0x562522f773b0 <line:704:9, col:24>
|   | `-VarDecl 0x562522f77348 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x562522f775c0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x562522f773c8 <col:9> 'int32_t':'int' lvalue ParmVar 0x562522f602f0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x562522f775a8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x562522f77540 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x562522f77528 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x562522f774a8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x562522de7838 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x562522f77578 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x562522f77448 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x562522f60368 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x562522f77590 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x562522f77468 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522f603e0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x562522f77488 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x562522f77348 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x562522f77650 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x562522f775e0 <col:9> 'int32_t':'int' lvalue ParmVar 0x562522f60278 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x562522f77638 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x562522f77620 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x562522f77600 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x562522f77348 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x562522f607c8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x562522f605f8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x562522f60670 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x562522f606e8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x562522f60a68 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x562522f60890 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x562522f60908 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x562522f60980 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x562522f60bf8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x562522f60b30 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x562522f60df8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x562522f60cb0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x562522f60d28 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x562522f610c8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x562522f61008 parent 0x562522a5e278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x562522f60eb8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x562522f60f30 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x562522f612e8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x562522f61228 parent 0x562522a5e278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x562522f61118 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x562522f61190 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x562522f614b0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x562522f613f8 parent 0x562522a5e278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x562522f61338 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x562522f61738 <line:720:5, col:73> col:30
| `-FunctionDecl 0x562522f61678 parent 0x562522a5e278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x562522f61528 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x562522f615a0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x562522f61958 <line:721:5, col:73> col:30
| `-FunctionDecl 0x562522f61898 parent 0x562522a5e278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x562522f61788 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x562522f61800 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x562522f671e0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x562522f672c8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f67d38 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x562522f67cf0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x562522f5fe88
| |     `-DeclRefExpr 0x562522f67cd0 <col:7> 'const Timestamp' lvalue ParmVar 0x562522f672c8 '' 'const Timestamp &'
| `-CompoundStmt 0x562522f67d98 <col:7>
|-CXXConstructorDecl 0x562522f67448 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562522f67558 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x562522f5fe88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x562522f68038 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x562522f67fe0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x562522f5fe88
| |     `-CXXStaticCastExpr 0x562522f67fb0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x562522f67f80 <col:7> 'Timestamp' lvalue ParmVar 0x562522f67558 '' 'Timestamp &&'
| `-CompoundStmt 0x562522f68098 <col:7>
|-CXXDestructorDecl 0x562522f67608 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x562522c6dd68 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x562522c6de78 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x562522c6e968 <col:7>
|   |-CXXMemberCallExpr 0x562522c6e908 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x562522c6e848 <col:7> '<bound member function type>' .operator= 0x562522c6df18
|   | | `-MemberExpr 0x562522c6e758 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x562522f5fe88
|   | |   `-CXXThisExpr 0x562522c6e748 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x562522c6e818 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x562522f5fe88
|   |   `-DeclRefExpr 0x562522c6e7f8 <col:7> 'const Timestamp' lvalue ParmVar 0x562522c6de78 '' 'const Timestamp &'
|   `-ReturnStmt 0x562522c6e958 <col:7>
|     `-UnaryOperator 0x562522c6e940 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x562522c6e930 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x562522c6e218 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x562522c6e328 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x562522fff1d8 <col:7>
    |-CXXMemberCallExpr 0x562522fff178 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x562522fff0e0 <col:7> '<bound member function type>' .operator= 0x562522c6e098
    | | `-MemberExpr 0x562522ffefb0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x562522f5fe88
    | |   `-CXXThisExpr 0x562522ffefa0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x562522fff0b0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x562522f5fe88
    |   `-CXXStaticCastExpr 0x562522fff080 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x562522fff050 <col:7> 'Timestamp' lvalue ParmVar 0x562522c6e328 '' 'Timestamp &&'
    `-ReturnStmt 0x562522fff1c8 <col:7>
      `-UnaryOperator 0x562522fff1b0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x562522fff1a0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522ffc1b8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x562522ffc2e8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x562522ffcdd8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.13 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252316b520 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56252316b638 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x56252316b708 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x56252316b768 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x56252316b7d0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x56252316b858 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x56252316bac0 <col:16, line:46:5>
|   |-BinaryOperator 0x56252316ba08 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x56252316b928 <col:9> 'TaskLink *' lvalue ->_prev 0x56252316b708
|   | | `-CXXThisExpr 0x56252316b918 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x56252316b9f0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x56252316b9d0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x56252316b968 <col:17> 'TaskLink *' lvalue ->_next 0x56252316b768
|   |     | `-CXXThisExpr 0x56252316b958 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x56252316b9b8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x56252316b998 <col:25> 'int' 0
|   `-BinaryOperator 0x56252316baa0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x56252316ba38 <col:9> 'unsigned int' lvalue ->_pass 0x56252316b7d0
|     | `-CXXThisExpr 0x56252316ba28 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x56252316ba88 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56252316ba68 <col:17> 'int' 0
|-CXXConstructorDecl 0x5625231cdc08 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5625231cdc08
| `-ParmVarDecl 0x5625231cdd18 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x5625231cddb8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x5625231cddb8
| `-ParmVarDecl 0x5625231cdec8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x5625231ce0b8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x5625231ce0b8
|-CXXMethodDecl 0x5625231ce8b8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x5625231ce8b8
| `-ParmVarDecl 0x5625231ce9c8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5625231cea38 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5625231cea38
  `-ParmVarDecl 0x5625231ceb48 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625231724e8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x5625231726f8 prev 0x5625231724e8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x562523173900 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x5625231738b0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x562523173890 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x562523173740 'type'
|     `-SubstTemplateTypeParmType 0x562523173560 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x5625231730b0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x562523172fc8 'sized_array_memory'
|-FieldDecl 0x562523178ee0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x562523178f30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x562523178f68 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x562523172790 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|     `-CXXRecord 0x562523171660 'heap_element'
|-TypedefDecl 0x562523179028 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x562523178ff0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x562523172790 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|       `-CXXRecord 0x562523171660 'heap_element'
|-TypedefDecl 0x5625231790b8 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x562523179080 'const TimerSet::heap_element &'
|   `-QualType 0x562523172791 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x562523172790 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|         `-CXXRecord 0x562523171660 'heap_element'
|-TypedefDecl 0x562523179148 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x562523179110 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x562523172790 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|       `-CXXRecord 0x562523171660 'heap_element'
|-TypedefDecl 0x562523179208 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x5625231791d0 'const TimerSet::heap_element *'
|   `-QualType 0x562523172791 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x562523172790 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|         `-CXXRecord 0x562523171660 'heap_element'
|-TypedefDecl 0x562523179e60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x562523179e10 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x562523179df0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x562523179d28 'type'
|     `-LValueReferenceType 0x562523179cf0 'const TimerSet::heap_element &'
|       `-QualType 0x562523179a91 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x562523179a90 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x562522d34dc0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x562522d34d68 'T'
|           `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|             `-CXXRecord 0x562523171660 'heap_element'
|-TypedefDecl 0x562523179ec8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x562523179080 'const TimerSet::heap_element &'
|   `-QualType 0x562523172791 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x562523172790 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|         `-CXXRecord 0x562523171660 'heap_element'
|-TypedefDecl 0x562523179f20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523179f88 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x562523179110 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x562523172790 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|       `-CXXRecord 0x562523171660 'heap_element'
|-TypedefDecl 0x562523179ff0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x5625231791d0 'const TimerSet::heap_element *'
|   `-QualType 0x562523172791 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x562523172790 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231716f0 'TimerSet::heap_element'
|         `-CXXRecord 0x562523171660 'heap_element'
|-EnumDecl 0x56252317a048 <line:134:5> col:5
| `-EnumConstantDecl 0x56252317a140 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56252317a120 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x56252317a1c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56252317a458 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56252317a280 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56252317a320 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x56252317a718 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56252317a600 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x56252317a9d8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56252317a8c0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56252317ad20 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56252317ac00 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x56252317b030 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56252317af10 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56252317b320 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56252317b168 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56252317b1e0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56252317b478 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56252317b558 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252317b5b0 <col:30> Inherited
|-CXXMethodDecl 0x56252317b5f8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56252317b6a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252317b700 <col:30> Inherited
|-CXXMethodDecl 0x56252317b7c8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56252317b878 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252317b8d0 <col:30> Inherited
|-CXXMethodDecl 0x56252317b918 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56252317b9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252317ba20 <col:30> Inherited
|-CXXMethodDecl 0x56252317ba68 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56252317bb18 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252317bb70 <col:30> Inherited
|-CXXMethodDecl 0x56252317bbb8 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56252317bc68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56252317bcc0 <col:30> Inherited
|-CXXMethodDecl 0x56252317bce8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56252317bd98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56252317be48 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56252317c008 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56252317bef8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56252317bf70 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56252317c158 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56252317c0c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252317c308 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x56252317c210 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56252317c3c0 <col:20>
| `-OptimizeNoneAttr 0x56252317c418 <col:30>
|-CXXMethodDecl 0x56252317c538 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x56252317c440 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56252317c5f0 <col:20>
| `-OptimizeNoneAttr 0x56252317c648 <col:30>
|-CXXMethodDecl 0x56252317c700 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56252317c670 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252317c848 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56252317c7b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252317c978 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56252317caa8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56252317cb78 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56252317cc48 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56252317cd88 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56252317ccf8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252317ced0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56252317ce40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252317d018 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x56252317cf88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56252317d0d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56252317d1d0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56252317d140 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56252317d288 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56252317d348 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x56252317d448 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x56252317d5f8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56252317d508 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x56252317efc0 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56252317d6b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x56252317ef20 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x56252317dc18 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x56252317f0a0 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56252317f1f0 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56252317f160 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56252317f2a8 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56252317f4f8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56252317f368 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56252317f3e0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56252317f6b8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x56252317f5c8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56252317f908 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x56252317f780 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56252317f7f8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56252317f9c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56252317fc28 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56252317fb30 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x56252317fcf8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56252317fcf8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56252317fe40 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x562523180048 prev 0x56252317fe40 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x562523181190 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x562523181140 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x562523181120 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x562523180fd0 'type'
|     `-SubstTemplateTypeParmType 0x562523180df0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x562523180940 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x562523180858 'sized_array_memory'
|-FieldDecl 0x562523184dc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x562523184e10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x562523184e48 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x5625231800e0 'Timer *' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-PointerType 0x562522fc6f70 'Timer *'
|     `-RecordType 0x562522fc60c0 'Timer'
|       `-CXXRecord 0x562522f4b078 'Timer'
|-TypedefDecl 0x562523184f08 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x562523184ed0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x5625231800e0 'Timer *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522fc6f70 'Timer *'
|       `-RecordType 0x562522fc60c0 'Timer'
|         `-CXXRecord 0x562522f4b078 'Timer'
|-TypedefDecl 0x562523184fc8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x562523184f90 'Timer *const &'
|   `-QualType 0x5625231800e1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5625231800e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522fc6f70 'Timer *'
|         `-RecordType 0x562522fc60c0 'Timer'
|           `-CXXRecord 0x562522f4b078 'Timer'
|-TypedefDecl 0x562523185088 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x562523185050 'Timer **'
|   `-SubstTemplateTypeParmType 0x5625231800e0 'Timer *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522fc6f70 'Timer *'
|       `-RecordType 0x562522fc60c0 'Timer'
|         `-CXXRecord 0x562522f4b078 'Timer'
|-TypedefDecl 0x562523185148 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x562523185110 'Timer *const *'
|   `-QualType 0x5625231800e1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5625231800e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522fc6f70 'Timer *'
|         `-RecordType 0x562522fc60c0 'Timer'
|           `-CXXRecord 0x562522f4b078 'Timer'
|-TypedefDecl 0x562523185d20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x562523185cd0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x562523185cb0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x562523185c40 'type'
|     `-SubstTemplateTypeParmType 0x562523185a00 'Timer *' sugar
|       |-TemplateTypeParmType 0x562522d354f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d354a0 'T'
|       `-PointerType 0x562522fc6f70 'Timer *'
|         `-RecordType 0x562522fc60c0 'Timer'
|           `-CXXRecord 0x562522f4b078 'Timer'
|-TypedefDecl 0x562523185d88 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x562523184f90 'Timer *const &'
|   `-QualType 0x5625231800e1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5625231800e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522fc6f70 'Timer *'
|         `-RecordType 0x562522fc60c0 'Timer'
|           `-CXXRecord 0x562522f4b078 'Timer'
|-TypedefDecl 0x562523185de0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562523185e48 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x562523185050 'Timer **'
|   `-SubstTemplateTypeParmType 0x5625231800e0 'Timer *' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-PointerType 0x562522fc6f70 'Timer *'
|       `-RecordType 0x562522fc60c0 'Timer'
|         `-CXXRecord 0x562522f4b078 'Timer'
|-TypedefDecl 0x562523185eb0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x562523185110 'Timer *const *'
|   `-QualType 0x5625231800e1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5625231800e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-PointerType 0x562522fc6f70 'Timer *'
|         `-RecordType 0x562522fc60c0 'Timer'
|           `-CXXRecord 0x562522f4b078 'Timer'
|-EnumDecl 0x562523185f08 <line:134:5> col:5
| `-EnumConstantDecl 0x562523186000 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x562523185fe0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x562523186088 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x562523186318 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x562523186140 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231861e0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x5625231865d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5625231864c0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x562523186898 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x562523186780 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x562523186be0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x562523186ac0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x562523188980 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x562523186dd0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x562523188c70 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x562523188ab8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562523188b30 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x562523188dc8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x562523188ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523188f00 <col:30> Inherited
|-CXXMethodDecl 0x562523188f48 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x562523188ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523189050 <col:30> Inherited
|-CXXMethodDecl 0x562523189118 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5625231891c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523189220 <col:30> Inherited
|-CXXMethodDecl 0x562523189268 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x562523189318 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523189370 <col:30> Inherited
|-CXXMethodDecl 0x5625231893b8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x562523189468 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231894c0 <col:30> Inherited
|-CXXMethodDecl 0x562523189508 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5625231895b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562523189610 <col:30> Inherited
|-CXXMethodDecl 0x562523189638 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231896e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x562523189798 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x562523189958 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x562523189848 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231898c0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x562523189aa8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x562523189a18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x562523189c58 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x562523189b60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x562523189d10 <col:20>
| `-OptimizeNoneAttr 0x562523189d68 <col:30>
|-CXXMethodDecl 0x562523189e88 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x562523189d90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x562523189f40 <col:20>
| `-OptimizeNoneAttr 0x562523189f98 <col:30>
|-CXXMethodDecl 0x56252318a050 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x562523189fc0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252318a198 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56252318a108 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252318a2c8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x56252318a3f8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x56252318a4c8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x56252318a598 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x56252318a6d8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56252318a648 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252318a820 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56252318a790 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56252318a968 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56252318a8d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56252318aa20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56252318ab20 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56252318aa90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56252318abd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56252318ac98 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x56252318ad98 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x56252318af18 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56252318ae58 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x56252318b6d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56252318afd0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x56252318b638 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x56252318b538 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x56252318b7b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56252318b908 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56252318b878 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56252318b9c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56252318bc08 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56252318ba80 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56252318baf8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56252318bdc8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x56252318bcd8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56252318c018 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x56252318be90 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56252318bf08 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56252318c0d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56252318c338 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56252318c240 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x56252318c408 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56252318c408

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f47ab0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562522f47bc8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x562522f47c58 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x562522f47ce0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x562522f47dd0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x562522f47ed0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x562522f47f90 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x562522f48050 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x562522f48178 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x562522f48178
| `-ParmVarDecl 0x562522f48288 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x56252318d1b8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56252318d1b8
  `-ParmVarDecl 0x56252318d2c8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625231707e0 prev 0x562522ffcc68 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5625231708d8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x562523170968 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5625231709f0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x562523170ae8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x56252318d630 <col:43, col:67>
|   `-ReturnStmt 0x56252318d620 <col:45, col:52>
|     `-CXXConstructExpr 0x56252318d5f0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x56252318d5c0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x5625231722d0
|         `-CXXThisExpr 0x56252318d5b0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x562523170ba8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x562523170db0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x562523170c58 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x562523170cd0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x562523170ea8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x562523170f70 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56252318d6b0 <col:39, col:67>
|   `-ReturnStmt 0x56252318d6a0 <col:41, col:48>
|     `-ImplicitCastExpr 0x56252318d688 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56252318d658 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x5625231723b8
|         `-CXXThisExpr 0x56252318d648 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x562523171038 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56252318d730 <col:35, col:59>
|   `-ReturnStmt 0x56252318d720 <col:37, col:44>
|     `-ImplicitCastExpr 0x56252318d708 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56252318d6d8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x562523172420
|         `-CXXThisExpr 0x56252318d6c8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x562523171180 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x5625231710f0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x5625231712c8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x562523171238 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5625231714c8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x562523171380 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x5625231713f8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x562523171598 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x562523171638 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x562523171660 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x562523171778 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x562523171818 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x562523171878 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x5625231719a8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x5625231718d8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x562523171818 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x56252318d808 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x56252318d7b0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x56252318d780 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x562522f4c6e8
|   |       `-ImplicitCastExpr 0x56252318d7d0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x56252318d768 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x56252318d748 <col:17> 'Timer *' lvalue ParmVar 0x5625231718d8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x562523171878 't' 'Timer *'
|   | `-ImplicitCastExpr 0x56252318d8a0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56252318d860 <col:41> 'Timer *' lvalue ParmVar 0x5625231718d8 't_' 'Timer *'
|   `-CompoundStmt 0x56252318d8f0 <col:45, line:44:2>
|-CXXRecordDecl 0x562523171a70 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x562523171b88 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x562523171dd8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x562523171c58 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x562523171cd0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x56252318da20 <col:71, line:49:2>
|     `-ReturnStmt 0x56252318da10 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x56252318d9d8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x56252318d9c0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56252318d9a0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x562522f842d8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x56252318d920 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x562523171818
|         | `-DeclRefExpr 0x56252318d900 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x562523171c58 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x56252318d970 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x562523171818
|           `-DeclRefExpr 0x56252318d950 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x562523171cd0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x562523171ea0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x562523171fb8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x5625231721d8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x562523172058 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x5625231720d0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x56252318dc28 <col:63, line:54:2>
|     `-BinaryOperator 0x56252318dc08 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x56252318dab8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x562522ffc108
|       | `-ImplicitCastExpr 0x56252318daa0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x56252318da70 <col:6, col:9> 'Timer *' lvalue ->t 0x562523171878
|       |     `-ImplicitCastExpr 0x56252318da58 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x56252318da38 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x5625231720d0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x56252318dbf0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x56252318dbd0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x56252318db78 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x56252318db58 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x56252318db28 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x56252318dae8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x5625231720d0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x56252318db40 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x56252318db08 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x562523172058 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x56252318dbb8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x56252318db98 <col:39> 'int' 1
|-FieldDecl 0x5625231722d0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x562523172340 <col:44, col:53> aligned
|   `-ConstantExpr 0x562523172320 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x5625231722a0 <col:52> 'int' 8
|-FieldDecl 0x5625231723b8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x562523172420 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x562523172488 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x56252317fde0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x56252318c4f0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x56252318c550 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x56252318c5b0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x56252318c610 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56252318c700 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x56252318c670 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x56252318c7c8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x56252318e080 <col:29, line:81:5>
|   `-IfStmt 0x56252318e058 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x56252318dd10 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x56252318dcb0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x56252318dc80 <col:6, col:18> '<bound member function type>' .size 0x56252317bce8
|     |     `-ImplicitCastExpr 0x56252318dcf8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x56252318dc50 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56252317fde0
|     |         `-CXXThisExpr 0x56252318dc40 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x56252318df00 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x56252318dee8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x56252318dec8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x562522c6dd68 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x56252318dd38 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5625231722d0
|     | | `-CXXThisExpr 0x56252318dd28 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x56252318deb0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x56252318de80 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x562523171818
|     |     `-CXXMemberCallExpr 0x56252318de58 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x56252318de28 <col:22, col:34> '<bound member function type>' .unchecked_at 0x56252317cd88
|     |       | `-MemberExpr 0x56252318dd78 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56252317fde0
|     |       |   `-CXXThisExpr 0x56252318dd68 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x56252318de08 <col:47> 'int' 0
|     `-ExprWithCleanups 0x56252318e040 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x56252318e008 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x56252318dff0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56252318dfd0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x562522c6e218 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x56252318df48 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5625231722d0
|         | `-CXXThisExpr 0x56252318df38 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x56252318dfb8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56252318df88 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56252318c908 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x56252318c878 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x56252318c9d0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x56252318ca90 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x56252318cb50 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x56252318cc40 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x56252318cca8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x56252318cca8
| `-ParmVarDecl 0x56252318cdb8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x56252318ce58 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x56252318ce58
| `-ParmVarDecl 0x56252318cf68 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x56252318d008 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x56252318d008
| `-ParmVarDecl 0x56252318d118 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x56252318d338 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x56252318d338
| `-ParmVarDecl 0x56252318d448 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x56252318d4d0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x56252318d4d0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562522e776a8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x562522e778b8 prev 0x562522e776a8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x562522e78990 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x562522e78940 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x562522e78920 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x562522e787d0 'type'
|     `-SubstTemplateTypeParmType 0x562523180df0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x562523180940 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x562523180858 'sized_array_memory'
|-FieldDecl 0x562522e78a90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x562522e78ae0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x562522e78b18 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x562522e77950 'pollfd' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-RecordType 0x5625231bca80 'pollfd'
|     `-CXXRecord 0x5625231bc9f0 'pollfd'
|-TypedefDecl 0x562522e78bd8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x562522e78ba0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x562522e77950 'pollfd' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231bca80 'pollfd'
|       `-CXXRecord 0x5625231bc9f0 'pollfd'
|-TypedefDecl 0x562522e78c98 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x562522e78c60 'const pollfd &'
|   `-QualType 0x562522e77951 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x562522e77950 'pollfd' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231bca80 'pollfd'
|         `-CXXRecord 0x5625231bc9f0 'pollfd'
|-TypedefDecl 0x562522e78d28 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x562522e78cf0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x562522e77950 'pollfd' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231bca80 'pollfd'
|       `-CXXRecord 0x5625231bc9f0 'pollfd'
|-TypedefDecl 0x562522e78de8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x562522e78db0 'const pollfd *'
|   `-QualType 0x562522e77951 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x562522e77950 'pollfd' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231bca80 'pollfd'
|         `-CXXRecord 0x5625231bc9f0 'pollfd'
|-TypedefDecl 0x562522e799c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x562522e79970 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x562522e79950 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x562522e798e0 'type'
|     `-SubstTemplateTypeParmType 0x562522e796a0 'pollfd' sugar
|       |-TemplateTypeParmType 0x562522d354f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d354a0 'T'
|       `-RecordType 0x5625231bca80 'pollfd'
|         `-CXXRecord 0x5625231bc9f0 'pollfd'
|-TypedefDecl 0x562522e79a28 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x562522e78c60 'const pollfd &'
|   `-QualType 0x562522e77951 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x562522e77950 'pollfd' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231bca80 'pollfd'
|         `-CXXRecord 0x5625231bc9f0 'pollfd'
|-TypedefDecl 0x562522e79a80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x562522e79ae8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x562522e78cf0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x562522e77950 'pollfd' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x5625231bca80 'pollfd'
|       `-CXXRecord 0x5625231bc9f0 'pollfd'
|-TypedefDecl 0x562522e79b50 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x562522e78db0 'const pollfd *'
|   `-QualType 0x562522e77951 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x562522e77950 'pollfd' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x5625231bca80 'pollfd'
|         `-CXXRecord 0x5625231bc9f0 'pollfd'
|-EnumDecl 0x562522e79ba8 <line:134:5> col:5
| `-EnumConstantDecl 0x562522e79ca0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x562522e79c80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x562522e79d28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x562522e79fb8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x562522e79de0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562522e79e80 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x562522e7a278 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x562522e7a160 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x562522e7a538 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x562522e7a420 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x562522e7a880 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x562522e7a760 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x562522e7ab90 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x562522e7aa70 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x562522e7ae80 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x562522e7acc8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562522e7ad40 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x562522e7afd8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x562522e7b0b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562522e7b110 <col:30> Inherited
|-CXXMethodDecl 0x562522e7b158 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x562522e7b208 <col:20> Inherited
| `-OptimizeNoneAttr 0x562522e7b260 <col:30> Inherited
|-CXXMethodDecl 0x562522e7b328 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x562522e7b3d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562522e7b430 <col:30> Inherited
|-CXXMethodDecl 0x562522e7b478 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x562522e7b528 <col:20> Inherited
| `-OptimizeNoneAttr 0x562522e7b580 <col:30> Inherited
|-CXXMethodDecl 0x562522e7b5c8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x562522e7b678 <col:20> Inherited
| `-OptimizeNoneAttr 0x562522e7b6d0 <col:30> Inherited
|-CXXMethodDecl 0x562522e7b718 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x562522e7b7c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x562522e7b820 <col:30> Inherited
|-CXXMethodDecl 0x562522e7b848 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x562522e7b8f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x562522e7b9a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x562522e7bb68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x562522e7ba58 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x562522e7bad0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x562522e7bcb8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x562522e7bc28 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x562522e7be68 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x562522e7bd70 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x562522e7bf20 <col:20>
| `-OptimizeNoneAttr 0x562522e7bf78 <col:30>
|-CXXMethodDecl 0x562522e7c098 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x562522e7bfa0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x562522e7c150 <col:20>
| `-OptimizeNoneAttr 0x562522e7c1a8 <col:30>
|-CXXMethodDecl 0x562522e7c260 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x562522e7c1d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562522e7c3a8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x562522e7c318 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562522e7c4d8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x562522e7c608 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x562522e7c6d8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x562522e7c7a8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x562522e7c8e8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x562522e7c858 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562522e7ca30 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x562522e7c9a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x562522e7cb78 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x562522e7cae8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x562522e7cc30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x562522e7cd30 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x562522e7cca0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x562522e7cde8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x562522e7cea8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x562522e7cfa8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x562522e7d158 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x562522e7d068 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x562522e7d918 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x562522e7d210 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x562522e7d878 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x562522e7d778 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x562522e7d9f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x562522e7db48 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x562522e7dab8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x562522e7dc00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5625231bd208 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x562522e7dcc0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5625231bd0f0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5625231bd3c8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x5625231bd2d8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5625231bd618 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x5625231bd490 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5625231bd508 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5625231bd6d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5625231bd938 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5625231bd840 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x5625231bda08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5625231bda08

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625231beef0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x5625231bf0c8 prev 0x5625231beef0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5625231bf158 <col:46, col:52> col:46 public
|-TypedefDecl 0x5625231bf180 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625231c0d50 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5625231c0d00 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x5625231bf630 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x5625231bf530 'type'
|     `-TemplateSpecializationType 0x5625231bf4c0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5625231bf3a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x5625231bf380 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5625231bf360 <col:24> 'unsigned long' 24
|       `-RecordType 0x5625231bf4a0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x5625231bf3c0 'char_array'
|-TypedefDecl 0x5625231c0e08 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5625231c0dd0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x5625231c0db0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x5625231c0d50 'type'
|     `-ElaboratedType 0x5625231c0d00 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x5625231bf630 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x5625231bf530 'type'
|         `-TemplateSpecializationType 0x5625231bf4c0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5625231bf3a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x5625231bf380 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5625231bf360 <col:24> 'unsigned long' 24
|           `-RecordType 0x5625231bf4a0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x5625231bf3c0 'char_array'
|-CXXMethodDecl 0x5625231c0f88 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x5625231c0e98 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x5625231c1078 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5625231c1158 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5625231c1158
|-CXXMethodDecl 0x5625231c1428 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5625231c1330 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x5625231c1668 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5625231c14e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625231c1558 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5625231c1838 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5625231c1728 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625231c17a0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5625231c1998 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5625231c1a68 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5625231c1cb8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5625231c1b28 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5625231c1ba0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5625231c1f18 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x5625231c1d88 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5625231c1e00 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5625231c20d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5625231c1fe8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5625231c2298 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5625231c21a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5625231c2350 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5625231c2400 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5625231c2638 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5625231c24b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5625231c2528 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5625231c28d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5625231c27e0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x5625231c29a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5625231c29f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5625231c2a40 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625231bdb50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x5625231bdd58 prev 0x5625231bdb50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5625231bee60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x5625231bee10 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x5625231bedf0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x5625231beca0 'type'
|     `-SubstTemplateTypeParmType 0x5625231beac0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x562522d2a6f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d2a698 'T'
|       `-RecordType 0x5625230aec40 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x5625230aeb58 'sized_array_memory'
|-FieldDecl 0x5625231c2a90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5625231c2ae0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5625231c2b18 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x5625231bddf0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x562522d62388 'T'
|   `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x562522e77180 'SelectorInfo'
|-TypedefDecl 0x5625231c2bd8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5625231c2ba0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x5625231bddf0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x562522e77180 'SelectorInfo'
|-TypedefDecl 0x5625231c2c98 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5625231c2c60 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5625231bddf1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5625231bddf0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x562522e77180 'SelectorInfo'
|-TypedefDecl 0x5625231c2d28 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5625231c2cf0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5625231bddf0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x562522e77180 'SelectorInfo'
|-TypedefDecl 0x5625231c2de8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5625231c2db0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5625231bddf1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5625231bddf0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x562522e77180 'SelectorInfo'
|-TypedefDecl 0x5625231c3a40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5625231c39f0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5625231c39d0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5625231c3908 'type'
|     `-LValueReferenceType 0x5625231c38d0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x5625231c3671 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x5625231c3670 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x562522d34dc0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x562522d34d68 'T'
|           `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x562522e77180 'SelectorInfo'
|-TypedefDecl 0x5625231c3aa8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5625231c2c60 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5625231bddf1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5625231bddf0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x562522e77180 'SelectorInfo'
|-TypedefDecl 0x5625231c3b00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-TypedefDecl 0x5625231c3b68 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5625231c2cf0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5625231bddf0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x562522d62388 'T'
|     `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x562522e77180 'SelectorInfo'
|-TypedefDecl 0x5625231c3bd0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5625231c2db0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5625231bddf1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5625231bddf0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x562522d623e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x562522d62388 'T'
|       `-RecordType 0x562522e77210 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x562522e77180 'SelectorInfo'
|-EnumDecl 0x5625231c3c28 <line:134:5> col:5
| `-EnumConstantDecl 0x5625231c3d20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5625231c3d00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x562522d63a68 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x562522d63a40 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x562522d63a20 <col:40> 'int' 1
|-CXXConstructorDecl 0x5625231c3da8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5625231c4038 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231c3e60 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231c3f00 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x5625231c42f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5625231c41e0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x5625231c45b8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5625231c44a0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5625231c4900 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5625231c47e0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5625231c4c10 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5625231c4af0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5625231c4f00 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231c4d48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231c4dc0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5625231c5100 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5625231c51d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231c5230 <col:30> Inherited
|-CXXMethodDecl 0x5625231c5278 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5625231c5328 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231c5380 <col:30> Inherited
|-CXXMethodDecl 0x5625231c5448 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5625231c54f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231c5550 <col:30> Inherited
|-CXXMethodDecl 0x5625231c5598 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5625231c5648 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231c56a0 <col:30> Inherited
|-CXXMethodDecl 0x5625231c56e8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5625231c5798 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231c57f0 <col:30> Inherited
|-CXXMethodDecl 0x5625231c5838 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5625231c58e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5625231c5940 <col:30> Inherited
|-CXXMethodDecl 0x5625231c5968 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231c5a18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5625231c5ac8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5625231c5c88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231c5b78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5625231c5bf0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5625231c5dd8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5625231c5d48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231c5f88 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x5625231c5e90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231c6040 <col:20>
| `-OptimizeNoneAttr 0x5625231c6098 <col:30>
|-CXXMethodDecl 0x5625231c61b8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x5625231c60c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5625231c6270 <col:20>
| `-OptimizeNoneAttr 0x5625231c62c8 <col:30>
|-CXXMethodDecl 0x5625231c6380 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625231c62f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231c64c8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231c6438 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231c65f8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5625231c6728 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5625231c67f8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5625231c68c8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5625231c6a08 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5625231c6978 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231c6b50 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5625231c6ac0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5625231c6c98 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5625231c6c08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231c6d50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5625231c6e50 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5625231c6dc0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5625231c6f08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5625231c6fc8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x5625231c70c8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x5625231c7278 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5625231c7188 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5625231c7a38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5625231c7330 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x5625231c7998 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x5625231c7898 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5625231c7b18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5625231c7c68 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5625231c7bd8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5625231c7d20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5625231c7f68 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5625231c7de0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5625231c7e58 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5625231c8128 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5625231c8038 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5625231c8378 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x5625231c81f0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5625231c8268 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5625231c8438 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5625231c8698 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5625231c85a0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x5625231c8768 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5625231c8768

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522e76360 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562522e76478 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x562522e76508 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x562522e76590 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x562522e76680 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x562522e76680
|-CXXMethodDecl 0x562522e76780 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x562522e76a20 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x562522e76838 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x562522e768b0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x562522e76930 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x562522e76c90 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x562522e76af0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x562522e76b68 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x562522e76be8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x562522e76de8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x562522e76d58 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x562522e76eb0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x5625231c9e18 <col:34, line:50:5>
|   |-BinaryOperator 0x5625231c97e8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x5625231c97a8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x562522e77638
|   | | `-CXXThisExpr 0x5625231c9798 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x5625231c97d8 <col:23> 'bool' true
|   `-CallExpr 0x5625231c9df0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x5625231c9dd8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5625231c9d58 <col:2> 'void (long)' lvalue Function 0x5625231c9c58 'ignore_result' 'void (long)' (FunctionTemplate 0x562522d25698 'ignore_result')
|     `-CallExpr 0x5625231c9a00 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x5625231c99e8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5625231c9968 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x5625231933c8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5625231c9a38 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5625231c9910 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x5625231c98f8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x5625231c98a8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x562522e775d8
|       |   |   `-CXXThisExpr 0x5625231c9898 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x5625231c98d8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x5625231c9a68 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5625231c9a50 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5625231c9930 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x5625231c9a80 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5625231c9948 <col:41> 'int' 1
|-CXXMethodDecl 0x562522e76ff0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x562522e76f60 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x562522e770b8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x562522e77158 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x562522e77180 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x562522e77298 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x562522e77338 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x562522e77398 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x562522e77400 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x562522e774b0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x562522e77338 'read' 'Element *'
|   | `-ImplicitCastExpr 0x5625231c9e78 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5625231c9e38 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x562522e77398 'write' 'Element *'
|   | `-ImplicitCastExpr 0x5625231c9ef8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5625231c9eb8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x562522e77400 'pollfd' 'int'
|   | `-UnaryOperator 0x5625231c9f58 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5625231c9f38 <col:35> 'int' 1
|   `-CompoundStmt 0x5625231c9fd0 <line:64:2, line:65:2>
|-FieldDecl 0x562522e775d8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x562522e77638 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x5625231bdaf0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5625231c8850 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x5625231c8a88 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x5625231c88b8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5625231c8930 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x5625231c89a8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x5625231c8c70 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5625231c8b58 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x5625231c8bd8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x5625231c8eb8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5625231c8d38 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x5625231c8db8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x5625231c90c8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x5625231c8f78 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x5625231c8ff0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x5625231c9218 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x5625231c9188 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x5625231c92e0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x5625231c93a0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x5625231c9468 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x5625231c9468
| `-ParmVarDecl 0x5625231c9578 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5625231c9618 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5625231c9618
  `-ParmVarDecl 0x5625231c9728 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f46a18 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562522f46b38 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x562522f46bc8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x562522f46c50 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x562522f46d40 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x562522f46e40 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x562522f46f00 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x562522f46fc0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x562522f470a8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x562522f471c8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x562522f471c8
| `-ParmVarDecl 0x562522f472d8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5625231cebe8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5625231cebe8
  `-ParmVarDecl 0x5625231cecf8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252316e788 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56252316e8a8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x56252316e948 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x56252316e9a8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x5625231ce1e8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5625231ce1e8
| `-ParmVarDecl 0x5625231ce2f8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x5625231ce398 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5625231ce398
| `-ParmVarDecl 0x5625231ce4a8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5625231ce518 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5625231ce518
|-CXXMethodDecl 0x5625231ced98 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5625231ced98
| `-ParmVarDecl 0x5625231ceea8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5625231cef18 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5625231cef18
| `-ParmVarDecl 0x5625231cf028 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5625231d5668 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5625231d5740 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f48910 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522f48a28 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x562522f48ab8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x562522f48b40 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x562522f48c00 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x562522a5e370 'int'
|-CXXMethodDecl 0x562522f48cc8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x562522f48d68 <col:45> always_inline
|-CXXMethodDecl 0x562522f48e98 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x562522f48dd0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x562522f48f40 <col:49> always_inline
|-CXXConstructorDecl 0x562522f49038 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x562522f49038
| `-ParmVarDecl 0x562522f49148 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x562522f491e8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x562522f491e8
| `-ParmVarDecl 0x562522f492f8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5625231ce600 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5625231ce600
|-CXXMethodDecl 0x5625231cf0c8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5625231cf0c8
| `-ParmVarDecl 0x5625231cf1d8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x5625231cf248 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5625231cf248
  `-ParmVarDecl 0x5625231cf358 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625231ca440 prev 0x562522e762d0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5625231ca538 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x5625231ca5c8 <col:22, col:28> col:22 public
|-EnumDecl 0x5625231ca5f0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5625231ca708 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x5625231ca6e8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5625231ca6d0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5625231ca6b0 <col:32> 'int' 1
| `-EnumConstantDecl 0x5625231ca7b0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x5625231ca790 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5625231ca778 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5625231ca758 <col:53> 'int' 1000
|-CXXMethodDecl 0x5625231ca850 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5625231ca910 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5625231ca9f8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x5625231cf418 <col:34, col:52>
|   `-ReturnStmt 0x5625231cf408 <col:36, col:43>
|     `-MemberExpr 0x5625231cf3d8 <col:43> 'TimerSet' lvalue ->_timers 0x5625231cc6c8
|       `-CXXThisExpr 0x5625231cf3c8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5625231caae8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x5625231cf480 <col:46, col:64>
|   `-ReturnStmt 0x5625231cf470 <col:48, col:55>
|     `-MemberExpr 0x5625231cf440 <col:55> 'const TimerSet' lvalue ->_timers 0x5625231cc6c8
|       `-CXXThisExpr 0x5625231cf430 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5625231cabd8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x5625231cf4e8 <col:36, col:55>
|   `-ReturnStmt 0x5625231cf4d8 <col:38, col:45>
|     `-MemberExpr 0x5625231cf4a8 <col:45> 'SelectSet' lvalue ->_selects 0x5625231cc728
|       `-CXXThisExpr 0x5625231cf498 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5625231cacc8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x5625231cf550 <col:48, col:67>
|   `-ReturnStmt 0x5625231cf540 <col:50, col:57>
|     `-MemberExpr 0x5625231cf510 <col:57> 'const SelectSet' lvalue ->_selects 0x5625231cc728
|       `-CXXThisExpr 0x5625231cf500 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5625231cad88 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5625231cae78 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x5625231cafe8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x5625231caf28 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x5625231cb0b0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x5625231cb4f8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x5625231cb160 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x5625231cb3e0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x5625231cb5c8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x5625231cb688 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5625231cb748 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x5625231cb888 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x5625231cb7f8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5625231cb950 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5625231cba10 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x5625231cbad0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x5625231cbb90 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x5625231cbcd0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5625231cbc40 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5625231cbd98 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5625231cbe58 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x5625231cbef8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x5625231cbfc0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc010 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc060 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc0b0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc100 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc150 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc1a0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc1f0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc240 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5625231cc290 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x5625231cc2e0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x5625231cc3d8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x5625231cc348 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5625231cc528 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x5625231cc498 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x5625231cc5d0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5625231cc608 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x5625231cc668 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x5625231cc6c8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5625231cc728 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x5625231cc7a8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5625231cc818 <col:40, col:50> aligned
|   `-ConstantExpr 0x5625231cc7f8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x5625231cc778 <col:48> 'int' 64
|-FieldDecl 0x5625231cc888 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x5625231cc8e8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x5625231cc9e0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x5625231ccaf0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5625231ccb50 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x5625231ccbd0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5625231ccc40 <col:36, col:46> aligned
|   `-ConstantExpr 0x5625231ccc20 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x5625231ccba0 <col:44> 'int' 64
|-FieldDecl 0x5625231cccb8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5625231ccd18 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x5625231ccd68 <line:170:3, col:9> col:3 public
|-FieldDecl 0x5625231ccda8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x5625231cce10 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x5625231cce60 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x5625231cd008 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x5625231cce98 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x5625231ccf18 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x5625231cd130 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x5625231cd130
|-CXXMethodDecl 0x5625231cd230 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x5625231cd2f8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x5625231cf648 <col:34, line:217:5>
|   `-ReturnStmt 0x5625231cf638 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x5625231cf620 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5625231cf5f0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x56252316b7d0
|         `-ImplicitCastExpr 0x5625231cf5d8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x5625231cf5a8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x56252316b768
|             `-MemberExpr 0x5625231cf578 <col:16> 'const TaskLink' lvalue ->_task_link 0x5625231cc608
|               `-CXXThisExpr 0x5625231cf568 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5625231cd3b8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x5625231cd478 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x5625231cfd70 <col:39, line:226:5>
|   |-DeclStmt 0x5625231cf898 <line:223:9, col:68>
|   | `-VarDecl 0x5625231cf670 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x5625231cf850 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5625231cf820 <col:24, col:38> '<bound member function type>' .compare_swap 0x562522d8bce0
|   |     | `-MemberExpr 0x5625231cf6e8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x5625231cc888
|   |     |   `-CXXThisExpr 0x5625231cf6d8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x5625231cf7d8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x5625231cf7c0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x5625231cf798 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5625231cf778 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x5625231cf880 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5625231cf800 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5625231cf8e0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5625231cf8b0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x5625231cf670 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x5625231cfd50 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5625231cfd20 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5625231cf9f8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x5625231cf9c8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5625231cf9b0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5625231cf908 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x5625231cf670 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x5625231cf988 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x5625231cf970 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x5625231cf948 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5625231cf928 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x5625231cfa58 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5625231cfa38 <col:60> 'int' 0
|       `-CallExpr 0x5625231cfc80 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x5625231cfc68 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5625231cfc48 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x5625231cfcc0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5625231cfb48 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x5625231cfcd8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5625231cfb78 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5625231cfcf0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x5625231cfbb8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5625231cfd08 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5625231cfc30 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5625231cfc18 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x5625231cfbd8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x5625231cd5c0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5625231cd530 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x5625231cd688 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5625231cd748 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5625231cd808 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x5625231cd8c8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x5625231cd988 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x5625231cda80 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x5625231cdae0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5625231cdb70 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x5625231cdf38 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x5625231cdf38
| `-ParmVarDecl 0x5625231ce048 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5625231ce708 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5625231ce708
  `-ParmVarDecl 0x5625231ce818 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f4b078 prev 0x562522fc6030 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x562522f4b170 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x562522f4b200 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x562522f4b260 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x562522f4b308 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x562522f4b428 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x562522f4b5c8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x562522f4b508 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x562522f4b818 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x562522f4b688 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x562522f4b708 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x562522f4b9a8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x562522f4b8e0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x562522f4bb28 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x562522f4ba68 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x562522f4bcd8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x562522f4bc18 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x562522f4bdd0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x562522ffcfb0 <col:21, line:58:5>
|   `-IfStmt 0x562522ffcf98 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x562522ffcf00 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x562522ffced0 <col:6> '<bound member function type>' ->scheduled 0x562522f4c628
|     |   `-ImplicitCastExpr 0x562522ffcf20 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x562522ffcec0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x562522ffcf78 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x562522ffcf48 <col:6> '<bound member function type>' ->unschedule 0x562522ffb660
|         `-CXXThisExpr 0x562522ffcf38 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x562522f4bed0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x562522ffd150 <col:26, line:65:5>
|   |-BinaryOperator 0x562522ffd070 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x562522ffd008 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x562522ffc2e8
|   | | `-MemberExpr 0x562522ffcfd8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x562522ffc3a8
|   | |   `-CXXThisExpr 0x562522ffcfc8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x562522ffd058 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562522ffd038 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x562522ffc808 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x562522ffd130 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x562522ffd0a0 <col:2> 'void *' lvalue ->_thunk 0x562522ffc428
|     | `-CXXThisExpr 0x562522ffd090 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x562522ffd108 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x562522ffd0d0 <col:20> 'int' 1
|-CXXMethodDecl 0x562522f4c010 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x562522f4bf80 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x562522ffd2b0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x562522ffd1a0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x562522ffd170 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x562522f4bf80 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x562522ffd290 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x562522ffd260 <col:2> '<bound member function type>' ->assign 0x562522f4bed0
|       `-CXXThisExpr 0x562522ffd250 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x562522f4c1e0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x562522f4c0c8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x562522f4c148 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x562522ffd430 <col:58, line:79:5>
|   |-BinaryOperator 0x562522ffd378 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x562522ffd310 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x562522ffc2e8
|   | | `-MemberExpr 0x562522ffd2e0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x562522ffc3a8
|   | |   `-CXXThisExpr 0x562522ffd2d0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x562522ffd360 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x562522ffd340 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x562522f4c0c8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x562522ffd410 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x562522ffd3a8 <col:2> 'void *' lvalue ->_thunk 0x562522ffc428
|     | `-CXXThisExpr 0x562522ffd398 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x562522ffd3f8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x562522ffd3d8 <col:11> 'void *' lvalue ParmVar 0x562522f4c148 'user_data' 'void *'
|-CXXMethodDecl 0x562522f4c330 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x562522f4c2a0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x562522ffd5c8 <col:35, line:87:5>
|   |-BinaryOperator 0x562522ffd4f8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x562522ffd490 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x562522ffc2e8
|   | | `-MemberExpr 0x562522ffd460 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x562522ffc3a8
|   | |   `-CXXThisExpr 0x562522ffd450 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x562522ffd4e0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562522ffd4c0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x562522ffc9e0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x562522ffd5a8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x562522ffd528 <col:2> 'void *' lvalue ->_thunk 0x562522ffc428
|     | `-CXXThisExpr 0x562522ffd518 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x562522ffd590 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x562522ffd578 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x562522ffd558 <col:11> 'Element *' lvalue ParmVar 0x562522f4c2a0 'element' 'Element *'
|-CXXMethodDecl 0x562522f4c478 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x562522f4c3e8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x562522ffd760 <col:29, line:94:5>
|   |-BinaryOperator 0x562522ffd690 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x562522ffd628 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x562522ffc2e8
|   | | `-MemberExpr 0x562522ffd5f8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x562522ffc3a8
|   | |   `-CXXThisExpr 0x562522ffd5e8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x562522ffd678 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562522ffd658 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x562522ffcbb8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x562522ffd740 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x562522ffd6c0 <col:2> 'void *' lvalue ->_thunk 0x562522ffc428
|     | `-CXXThisExpr 0x562522ffd6b0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x562522ffd728 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x562522ffd710 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x562522ffd6f0 <col:11> 'Task *' lvalue ParmVar 0x562522f4c3e8 'task' 'Task *'
|-CXXMethodDecl 0x562522f4c568 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x562522ffd840 <col:37, line:100:5>
|   `-ReturnStmt 0x562522ffd830 <line:99:2, col:19>
|     `-BinaryOperator 0x562522ffd810 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x562522ffd7e0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x562522ffd790 <col:9> 'Element *const' lvalue ->_owner 0x562522ffc488
|       |   `-CXXThisExpr 0x562522ffd780 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x562522ffd7f8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x562522ffd7c0 <col:19> 'int' 0
|-CXXMethodDecl 0x562522f4c628 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x562522ffd900 <col:35, line:105:5>
|   `-ReturnStmt 0x562522ffd8f0 <line:104:2, col:23>
|     `-BinaryOperator 0x562522ffd8d0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x562522ffd8b8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x562522ffd868 <col:9> 'const int' lvalue ->_schedpos1 0x562522ffc108
|       |   `-CXXThisExpr 0x562522ffd858 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x562522ffd898 <col:23> 'int' 0
|-CXXMethodDecl 0x562522f4c6e8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x562522ffd968 <col:51, line:118:5>
|   `-ReturnStmt 0x562522ffd958 <line:117:2, col:9>
|     `-MemberExpr 0x562522ffd928 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x562522ffc168
|       `-CXXThisExpr 0x562522ffd918 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x562522f4c7a8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x562522ffdec0 <col:37, line:136:5>
|   `-IfStmt 0x562522ffde98 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x562522ffda28 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x562522ffda10 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x562522ffd9f0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x562522ffd9c0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x562522f58108
|     |       `-MemberExpr 0x562522ffd990 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x562522ffc168
|     |         `-CXXThisExpr 0x562522ffd980 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x562522ffde08 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x562522ffddf0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x562522ffddc0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x562522ffdda8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x562522ffdd70 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x562522ffdd58 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x562522ffdd38 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x562522f868e0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x562522ffdcd8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x562522ffdcc0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x562522ffdbe8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x562522ffdbd0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x562522ffdbb0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x562522f865a0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x562522ffdb50 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x562522ffda50 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x562522ffc168
|     |         |     |   `-CXXThisExpr 0x562522ffda40 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x562522ffdb98 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x562522ffdb80 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x562522ffdb30 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x562522ffdb18 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x562522ffdab8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x562522f79c00 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x562522ffdd20 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x562522ffdd08 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x562522ffdca0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x562522ffdc88 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x562522ffdc58 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x562522dd5150 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x562522ffde88 <line:135:6, col:13>
|       `-CXXConstructExpr 0x562522ffde58 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x562522ffde28 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x562522ffc168
|           `-CXXThisExpr 0x562522ffde18 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x562522f4c868 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x562522ffdfa8 <col:35, line:141:5>
|   `-ReturnStmt 0x562522ffdf98 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x562522ffdf60 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x562522ffdf30 <col:9, col:17> '<bound member function type>' ->router 0x562522fd8790
|         `-ImplicitCastExpr 0x562522ffdf80 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x562522ffdf18 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x562522ffdee8 <col:9> 'Element *const' lvalue ->_owner 0x562522ffc488
|               `-CXXThisExpr 0x562522ffded8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x562522f4c928 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x562522ffe028 <col:37, line:146:5>
|   `-ReturnStmt 0x562522ffe018 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x562522ffe000 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x562522ffdfd0 <col:9> 'Element *const' lvalue ->_owner 0x562522ffc488
|         `-CXXThisExpr 0x562522ffdfc0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x562522f4c9e8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x562522ffe0a8 <col:41, line:151:5>
|   `-ReturnStmt 0x562522ffe098 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x562522ffe080 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x562522ffe050 <col:9> 'RouterThread *const' lvalue ->_thread 0x562522ffc4e8
|         `-CXXThisExpr 0x562522ffe040 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x562522f4cab0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x562522f4cca8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x562522f4cb60 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x562522f4cbd8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x562522ffcdc8 <col:50> 'bool' false
|-CXXMethodDecl 0x562522f4ce28 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x562522f4cd68 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x562522f4cf70 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x562522f4cee0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x562522f4d0b8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x562522f4d028 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x562522f4d200 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x562522f4d170 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x562522f4d348 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x562522f4d2b8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x562522f4d410 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x562522ffe210 <col:32, line:223:5>
|   `-ExprWithCleanups 0x562522ffe1f8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x562522ffe1a0 <col:2, col:47> 'void'
|       |-MemberExpr 0x562522ffe0d0 <col:2> '<bound member function type>' ->schedule_at_steady 0x562522f4cf70
|       | `-CXXThisExpr 0x562522ffe0c0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x562522ffe1e0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x562522ffe1c8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x562522ffe180 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x562522ffe168 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x562522ffe138 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x562522dd5150 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x562522ffaf30 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x562522f4d4c0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x562522ffb078 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x562522ffafe8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522ffe398 <col:56, line:241:5>
|   `-ExprWithCleanups 0x562522ffe380 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x562522ffe328 <col:2, col:40> 'void'
|       |-MemberExpr 0x562522ffe238 <col:2> '<bound member function type>' ->schedule_after 0x562522ffaf30
|       | `-CXXThisExpr 0x562522ffe228 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x562522ffe368 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x562522ffe350 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x562522ffe2e8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x562522ffe2b8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x562522ffe278 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522ffafe8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x562522ffe2d0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x562522ffe298 <col:38> 'int' 0
|-CXXMethodDecl 0x562522ffb1c0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x562522ffb130 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522ffe608 <col:58, line:249:5>
|   `-ExprWithCleanups 0x562522ffe5f0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x562522ffe598 <col:2, col:49> 'void'
|       |-MemberExpr 0x562522ffe3c0 <col:2> '<bound member function type>' ->schedule_after 0x562522ffaf30
|       | `-CXXThisExpr 0x562522ffe3b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x562522ffe5d8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x562522ffe5c0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x562522ffe540 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x562522ffe528 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x562522ffe498 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x562522f59ef8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x562522ffe580 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x562522ffe568 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x562522ffe478 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522ffb130 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522ffb308 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x562522ffb278 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x562522ffe7e8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x562522ffe7d0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x562522ffe778 <col:2, col:38> 'void'
|       |-MemberExpr 0x562522ffe630 <col:2> '<bound member function type>' ->schedule_at_steady 0x562522f4cf70
|       | `-CXXThisExpr 0x562522ffe620 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x562522ffe7b8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x562522ffe7a0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x562522ffe740 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x562522ffe728 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x562522ffe708 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x562522f865a0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x562522ffe6d8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x562522ffe6c0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x562522ffe670 <col:21> 'Timestamp' lvalue ->_expiry_s 0x562522ffc168
|             |     `-CXXThisExpr 0x562522ffe660 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x562522ffe6a0 <col:33> 'const Timestamp' lvalue ParmVar 0x562522ffb278 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x562522ffb450 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x562522ffb3c0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522ffeac0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x562522ffeaa8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x562522ffea50 <col:2, col:79> 'void'
|       |-MemberExpr 0x562522ffe810 <col:2> '<bound member function type>' ->schedule_at_steady 0x562522f4cf70
|       | `-CXXThisExpr 0x562522ffe800 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x562522ffea90 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x562522ffea78 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x562522ffea10 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x562522ffe948 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x562522ffe930 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x562522ffe8c0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x562522ffe890 <col:31, col:41> '<bound member function type>' .sec 0x562522dd6c48
|             | |     `-ImplicitCastExpr 0x562522ffe8e0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x562522ffe860 <col:31> 'Timestamp' lvalue ->_expiry_s 0x562522ffc168
|             | |         `-CXXThisExpr 0x562522ffe850 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x562522ffe918 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x562522ffe8f8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522ffb3c0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x562522ffe9d8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x562522ffe9a8 <col:60, col:70> '<bound member function type>' .subsec 0x562522dd7340
|                 `-ImplicitCastExpr 0x562522ffe9f8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x562522ffe978 <col:60> 'Timestamp' lvalue ->_expiry_s 0x562522ffc168
|                     `-CXXThisExpr 0x562522ffe968 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x562522ffb598 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x562522ffb508 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x562522ffedf8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x562522ffede0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x562522ffed88 <col:2, col:65> 'void'
|       |-MemberExpr 0x562522ffeae8 <col:2> '<bound member function type>' ->schedule_at_steady 0x562522f4cf70
|       | `-CXXThisExpr 0x562522ffead8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x562522ffedc8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x562522ffedb0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x562522ffed50 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x562522ffed38 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x562522ffed18 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x562522f865a0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x562522ffecb8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x562522ffeca0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x562522ffeb28 <col:21> 'Timestamp' lvalue ->_expiry_s 0x562522ffc168
|             |     `-CXXThisExpr 0x562522ffeb18 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x562522ffed00 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x562522ffece8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x562522ffec48 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x562522ffec30 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x562522ffec00 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x562522f59ef8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x562522ffec88 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x562522ffec70 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x562522ffebe0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x562522ffb508 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522ffb660 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x562522ffb720 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x562522fff2c0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x562522ffee50 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x562522ffee20 <col:2> '<bound member function type>' ->unschedule 0x562522ffb660
|   |   `-CXXThisExpr 0x562522ffee10 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x562522fff2a8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x562522fff270 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x562522fff258 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522ffef08 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x562522c6e218 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x562522ffee80 <col:2> 'Timestamp' lvalue ->_expiry_s 0x562522ffc168
|       | `-CXXThisExpr 0x562522ffee70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x562522ffeef0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x562522ffeec0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x562522ffb7e0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x562522fff618 <col:42, line:310:5>
|   |-IfStmt 0x562522fff460 <line:306:2, line:307:23>
|   | |-CallExpr 0x562522fff390 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x562522fff378 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x562522fff318 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x562522f78070 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x562522fff450 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x562522fff438 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x562522fff408 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x562522fff3f0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x562522fff3c0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x562522fff608 <line:309:2, col:33>
|     `-ExprWithCleanups 0x562522fff5f0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x562522fff5c0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x562522fff5a8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x562522fff568 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x562522fff550 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x562522fff520 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x562522f5a210 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x562522fff590 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x562522fff500 <col:30> 'int' 500
|-CXXMethodDecl 0x562522ffb920 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x562522ffb890 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522ffb9c8 <col:69> "" ""
|-CXXMethodDecl 0x562522ffbad8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x562522ffba48 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522ffbb80 <col:70> "" ""
|-CXXMethodDecl 0x562522ffbc90 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x562522ffbc00 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522ffbd38 <col:71> "" ""
|-CXXMethodDecl 0x562522ffbe48 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x562522ffbdb8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x562522ffbef0 <col:72> "" ""
|-EnumDecl 0x562522ffbf60 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x562522ffc060 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x562522ffc0b0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x562522ffc040 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x562522ffc020 <col:25> 'int' 1
|-AccessSpecDecl 0x562522ffc0c8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x562522ffc108 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x562522ffc168 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x562522ffc1b8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x562522ffc2e8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x562522ffcdd8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x562522ffc3a8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x562522ffc428 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x562522ffc488 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x562522ffc4e8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x562522ffc638 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x562522ffc548 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x562522ffc808 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x562522ffc6f0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x562522ffc770 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x562522ffc9e0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x562522ffc8c8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x562522ffc948 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x562522ffcbb8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x562522ffcaa0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x562522ffcb20 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x562522ffcd88 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523068568 <../elements/ethernet/arptable.hh:96:1, line:231:1> line:96:7 referenced class ARPTable definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5625230686c8 <col:1, col:7> col:7 implicit referenced class ARPTable
|-AccessSpecDecl 0x562523068758 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x5625230687e0 <line:98:5, col:14> col:5 ARPTable 'void ()'
|-CXXDestructorDecl 0x5625230688d0 <line:99:5, col:15> col:5 ~ARPTable 'void ()' noexcept-unevaluated 0x5625230688d0
| `-Overrides: [ 0x562522fc66e8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x562523068a00 <line:101:5, col:57> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x562522fc7b48 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56252307cbd8 <col:36, col:57>
|   `-ReturnStmt 0x56252307cbc8 <col:38, col:45>
|     `-ImplicitCastExpr 0x56252307cbb0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56252307cb90 <col:45> 'const char [9]' lvalue "ARPTable"
|-CXXMethodDecl 0x562523068cd0 <line:103:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x562522fc93e0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x562523068b80 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x562523068bf8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x562523068da0 <line:104:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x562522fcbe30 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x56252307cc10 <col:39, col:54>
|   `-ReturnStmt 0x56252307cc00 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x56252307cbf0 <col:48> 'bool' true
|-CXXMethodDecl 0x562523068f60 <line:105:5, col:46> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x562522fc9838 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x562523068e50 <col:21, col:29> col:30 'Element *'
| `-ParmVarDecl 0x562523068ec8 <col:32, col:45> col:46 'ErrorHandler *'
|-CXXMethodDecl 0x562523069030 <line:106:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x562522fc94b0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x562523069170 <line:107:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x562522fc9e48 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x5625230690e0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x562523069440 <line:109:5, col:72> col:9 used lookup 'int (IPAddress, EtherAddress *, uint32_t)'
| |-ParmVarDecl 0x562523069228 <col:16, col:26> col:26 ip 'IPAddress'
| |-ParmVarDecl 0x5625230692a0 <col:30, col:44> col:44 eth 'EtherAddress *'
| `-ParmVarDecl 0x562523069318 <col:49, col:58> col:58 poll_timeout_j 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5625230695c8 <line:110:5, col:37> col:18 lookup 'EtherAddress (IPAddress)'
| `-ParmVarDecl 0x562523069508 <col:25, col:35> col:35 ip 'IPAddress'
|-CXXMethodDecl 0x562523069748 <line:111:5, col:53> col:15 reverse_lookup 'IPAddress (const EtherAddress &)'
| `-ParmVarDecl 0x562523069680 <col:30, col:50> col:50 eth 'const EtherAddress &'
|-CXXMethodDecl 0x562523069a10 <line:112:5, col:71> col:9 insert 'int (IPAddress, const EtherAddress &, Packet **)'
| |-ParmVarDecl 0x562523069800 <col:16, col:26> col:26 ip 'IPAddress'
| |-ParmVarDecl 0x562523069878 <col:30, col:50> col:50 en 'const EtherAddress &'
| `-ParmVarDecl 0x562523069920 <col:54, col:70> col:63 head 'Packet **' cinit
|   `-ImplicitCastExpr 0x56252307cb78 <col:70> 'Packet **' <NullToPointer>
|     `-IntegerLiteral 0x56252307cb58 <col:70> 'int' 0
|-CXXMethodDecl 0x56252306cac8 <line:113:5, col:45> col:9 append_query 'int (IPAddress, Packet *)'
| |-ParmVarDecl 0x562523069ad8 <col:22, col:32> col:32 ip 'IPAddress'
| `-ParmVarDecl 0x562523069b50 <col:36, col:44> col:44 p 'Packet *'
|-CXXMethodDecl 0x56252306cb98 <line:114:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x56252306cc58 <line:116:5, line:118:5> line:116:14 capacity 'uint32_t () const'
| `-CompoundStmt 0x56252307cc90 <col:31, line:118:5>
|   `-ReturnStmt 0x56252307cc80 <line:117:2, col:9>
|     `-ImplicitCastExpr 0x56252307cc68 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56252307cc38 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_packet_capacity 0x56252307b4f8
|         `-CXXThisExpr 0x56252307cc28 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x56252306cd98 <line:119:5, line:121:5> line:119:10 set_capacity 'void (uint32_t)'
| |-ParmVarDecl 0x56252306cd08 <col:23, col:32> col:32 used capacity 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56252307cd40 <col:42, line:121:5>
|   `-BinaryOperator 0x56252307cd20 <line:120:2, col:21> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x56252307ccb8 <col:2> 'uint32_t':'unsigned int' lvalue ->_packet_capacity 0x56252307b4f8
|     | `-CXXThisExpr 0x56252307cca8 <col:2> 'ARPTable *' implicit this
|     `-ImplicitCastExpr 0x56252307cd08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56252307cce8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306cd08 'capacity' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56252306ce60 <line:122:5, line:124:5> line:122:14 entry_capacity 'uint32_t () const'
| `-CompoundStmt 0x56252307cdc0 <col:37, line:124:5>
|   `-ReturnStmt 0x56252307cdb0 <line:123:2, col:9>
|     `-ImplicitCastExpr 0x56252307cd98 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56252307cd68 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_entry_capacity 0x56252307b498
|         `-CXXThisExpr 0x56252307cd58 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x56252306cfa0 <line:125:5, line:127:5> line:125:10 set_entry_capacity 'void (uint32_t)'
| |-ParmVarDecl 0x56252306cf10 <col:29, col:38> col:38 used entry_capacity 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56252307ce70 <col:54, line:127:5>
|   `-BinaryOperator 0x56252307ce50 <line:126:2, col:20> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x56252307cde8 <col:2> 'uint32_t':'unsigned int' lvalue ->_entry_capacity 0x56252307b498
|     | `-CXXThisExpr 0x56252307cdd8 <col:2> 'ARPTable *' implicit this
|     `-ImplicitCastExpr 0x56252307ce38 <col:20> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56252307ce18 <col:20> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306cf10 'entry_capacity' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56252306d068 <line:128:5, line:130:5> line:128:14 entry_packet_capacity 'uint32_t () const'
| `-CompoundStmt 0x56252307cef0 <col:44, line:130:5>
|   `-ReturnStmt 0x56252307cee0 <line:129:2, col:9>
|     `-ImplicitCastExpr 0x56252307cec8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56252307ce98 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_entry_packet_capacity 0x56252307b558
|         `-CXXThisExpr 0x56252307ce88 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x56252306d1a8 <line:131:5, line:133:5> line:131:10 set_entry_packet_capacity 'void (uint32_t)'
| |-ParmVarDecl 0x56252306d118 <col:36, col:45> col:45 used entry_packet_capacity 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56252307cfa0 <col:68, line:133:5>
|   `-BinaryOperator 0x56252307cf80 <line:132:2, col:27> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x56252307cf18 <col:2> 'uint32_t':'unsigned int' lvalue ->_entry_packet_capacity 0x56252307b558
|     | `-CXXThisExpr 0x56252307cf08 <col:2> 'ARPTable *' implicit this
|     `-ImplicitCastExpr 0x56252307cf68 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56252307cf48 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306d118 'entry_packet_capacity' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56252306d270 <line:134:5, line:136:5> line:134:14 capacity_slim_factor 'uint32_t () const'
| `-CompoundStmt 0x56252307d020 <col:43, line:136:5>
|   `-ReturnStmt 0x56252307d010 <line:135:2, col:9>
|     `-ImplicitCastExpr 0x56252307cff8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56252307cfc8 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_capacity_slim_factor 0x56252307b5b8
|         `-CXXThisExpr 0x56252307cfb8 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x56252306d3b0 <line:137:5, line:140:5> line:137:10 set_capacity_slim_factor 'void (uint32_t)'
| |-ParmVarDecl 0x56252306d320 <col:35, col:44> col:44 used capacity_slim_factor 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56252307d568 <col:66, line:140:5>
|   |-ParenExpr 0x56252307d4b0 <line:138:9, col:189> 'void'
|   | `-ConditionalOperator 0x56252307d480 <col:10, col:188> 'void'
|   |   |-CXXStaticCastExpr 0x56252307d0d8 <col:10, col:55> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56252307d0a8 <col:30, col:54> 'bool' '!='
|   |   |   |-ImplicitCastExpr 0x56252307d078 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x56252307d038 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306d320 'capacity_slim_factor' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x56252307d090 <col:54> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x56252307d058 <col:54> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x56252307d138 <col:59, col:66> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56252307d118 <col:65> 'int' 0
|   |   `-CallExpr 0x56252307d3e0 <col:70, col:188> 'void'
|   |     |-ImplicitCastExpr 0x56252307d3c8 <col:70> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56252307d3a8 <col:70> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x562522b00ae0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56252307d420 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56252307d1a8 <col:85> 'const char [26]' lvalue "capacity_slim_factor != 0"
|   |     |-ImplicitCastExpr 0x56252307d438 <col:114> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56252307d258 <col:114> 'const char [33]' lvalue "../elements/ethernet/arptable.hh"
|   |     |-ImplicitCastExpr 0x56252307d450 <col:150> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56252307d290 <col:150> 'int' 138
|   |     `-ImplicitCastExpr 0x56252307d468 <col:155, col:169> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56252307d390 <col:155, col:169> 'const char [50]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56252307d378 <col:169> 'const char [50]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56252307d328 <col:169> 'const char [50]' lvalue "void ARPTable::set_capacity_slim_factor(uint32_t)"
|   `-BinaryOperator 0x56252307d548 <line:139:2, col:26> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x56252307d4e0 <col:2> 'uint32_t':'unsigned int' lvalue ->_capacity_slim_factor 0x56252307b5b8
|     | `-CXXThisExpr 0x56252307d4d0 <col:2> 'ARPTable *' implicit this
|     `-ImplicitCastExpr 0x56252307d530 <col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56252307d510 <col:26> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306d320 'capacity_slim_factor' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56252306d478 <line:141:5, line:143:5> line:141:15 timeout 'Timestamp () const'
| `-CompoundStmt 0x56252307d7d8 <col:31, line:143:5>
|   `-ReturnStmt 0x56252307d7c8 <line:142:2, col:61>
|     `-ExprWithCleanups 0x56252307d7b0 <col:9, col:61> 'Timestamp'
|       `-CXXConstructExpr 0x56252307d780 <col:9, col:61> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56252307d768 <col:9, col:61> 'Timestamp' xvalue
|           `-CallExpr 0x56252307d740 <col:9, col:61> 'Timestamp'
|             |-ImplicitCastExpr 0x56252307d728 <col:9, col:20> 'Timestamp (*)(click_jiffies_t)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56252307d6a0 <col:9, col:20> 'Timestamp (click_jiffies_t)' lvalue CXXMethod 0x562522f82240 'make_jiffies' 'Timestamp (click_jiffies_t)'
|             `-CStyleCastExpr 0x56252307d678 <col:33, col:51> 'click_jiffies_t':'unsigned int' <NoOp>
|               `-ImplicitCastExpr 0x56252307d660 <col:51> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|                 `-MemberExpr 0x56252307d620 <col:51> 'const uint32_t':'const unsigned int' lvalue ->_timeout_j 0x56252307b618
|                   `-CXXThisExpr 0x56252307d610 <col:51> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x56252306d5b8 <line:144:5, line:149:5> line:144:10 set_timeout 'void (const Timestamp &)'
| |-ParmVarDecl 0x56252306d528 <col:22, col:39> col:39 used timeout 'const Timestamp &'
| `-CompoundStmt 0x56252307db10 <col:48, line:149:5>
|   `-IfStmt 0x56252307dae8 <line:145:2, line:148:35> has_else
|     |-BinaryOperator 0x56252307d960 <line:145:6, col:59> 'bool' '>='
|     | |-CStyleCastExpr 0x56252307d888 <col:6, col:29> 'uint32_t':'unsigned int' <NoOp>
|     | | `-ImplicitCastExpr 0x56252307d870 <col:17, col:29> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|     | |   `-CXXMemberCallExpr 0x56252307d840 <col:17, col:29> 'Timestamp::seconds_type':'int'
|     | |     `-MemberExpr 0x56252307d810 <col:17, col:25> '<bound member function type>' .sec 0x562522dd6c48
|     | |       `-DeclRefExpr 0x56252307d7f0 <col:17> 'const Timestamp' lvalue ParmVar 0x56252306d528 'timeout' 'const Timestamp &'
|     | `-BinaryOperator 0x56252307d940 <col:34, col:59> 'unsigned int' '/'
|     |   |-CStyleCastExpr 0x56252307d8e0 <col:34, col:45> 'uint32_t':'unsigned int' <NoOp>
|     |   | `-IntegerLiteral 0x56252307d8b0 <col:45> 'unsigned int' 4294967295
|     |   `-ImplicitCastExpr 0x56252307d928 <col:59> 'unsigned int' <IntegralCast>
|     |     `-IntegerLiteral 0x56252307d908 <col:59> 'int' 1000
|     |-BinaryOperator 0x56252307d9f8 <line:146:6, col:19> 'uint32_t':'unsigned int' lvalue '='
|     | |-MemberExpr 0x56252307d990 <col:6> 'uint32_t':'unsigned int' lvalue ->_timeout_j 0x56252307b618
|     | | `-CXXThisExpr 0x56252307d980 <col:6> 'ARPTable *' implicit this
|     | `-ImplicitCastExpr 0x56252307d9e0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x56252307d9c0 <col:19> 'int' 0
|     `-BinaryOperator 0x56252307dac8 <line:148:6, col:35> 'uint32_t':'unsigned int' lvalue '='
|       |-MemberExpr 0x56252307da28 <col:6> 'uint32_t':'unsigned int' lvalue ->_timeout_j 0x56252307b618
|       | `-CXXThisExpr 0x56252307da18 <col:6> 'ARPTable *' implicit this
|       `-CXXMemberCallExpr 0x56252307daa8 <col:19, col:35> 'click_jiffies_t':'unsigned int'
|         `-MemberExpr 0x56252307da78 <col:19, col:27> '<bound member function type>' .jiffies 0x562522dd8748
|           `-DeclRefExpr 0x56252307da58 <col:19> 'const Timestamp' lvalue ParmVar 0x56252306d528 'timeout' 'const Timestamp &'
|-CXXMethodDecl 0x56252306d680 <line:151:5, line:153:5> line:151:14 drops 'uint32_t () const'
| `-CompoundStmt 0x56252307dbe0 <col:28, line:153:5>
|   `-ReturnStmt 0x56252307dbd0 <line:152:2, col:9>
|     `-ImplicitCastExpr 0x56252307dbb8 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       `-CXXMemberCallExpr 0x56252307db98 <col:9> 'uint32_t':'unsigned int'
|         `-MemberExpr 0x56252307db68 <col:9> '<bound member function type>' .operator unsigned int 0x562522d85220
|           `-MemberExpr 0x56252307db38 <col:9> 'const atomic_uint32_t' lvalue ->_drops 0x56252307b678
|             `-CXXThisExpr 0x56252307db28 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x56252306d740 <line:154:5, line:156:5> line:154:14 count 'uint32_t () const'
| `-CompoundStmt 0x56252307dcb0 <col:28, line:156:5>
|   `-ReturnStmt 0x56252307dca0 <line:155:2, col:9>
|     `-ImplicitCastExpr 0x56252307dc88 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       `-CXXMemberCallExpr 0x56252307dc68 <col:9> 'uint32_t':'unsigned int'
|         `-MemberExpr 0x56252307dc38 <col:9> '<bound member function type>' .operator unsigned int 0x562522d85220
|           `-MemberExpr 0x56252307dc08 <col:9> 'const atomic_uint32_t' lvalue ->_entry_count 0x56252307b3d8
|             `-CXXThisExpr 0x56252307dbf8 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x56252306d800 <line:157:5, line:159:5> line:157:14 length 'uint32_t () const'
| `-CompoundStmt 0x56252307dd80 <col:29, line:159:5>
|   `-ReturnStmt 0x56252307dd70 <line:158:2, col:9>
|     `-ImplicitCastExpr 0x56252307dd58 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       `-CXXMemberCallExpr 0x56252307dd38 <col:9> 'uint32_t':'unsigned int'
|         `-MemberExpr 0x56252307dd08 <col:9> '<bound member function type>' .operator unsigned int 0x562522d85220
|           `-MemberExpr 0x56252307dcd8 <col:9> 'const atomic_uint32_t' lvalue ->_packet_count 0x56252307b438
|             `-CXXThisExpr 0x56252307dcc8 <col:9> 'const ARPTable *' implicit this
|-CXXMethodDecl 0x56252306d940 <line:161:5, col:27> col:10 run_timer 'void (Timer *)'
| |-Overrides: [ 0x562522fc7068 Element::run_timer 'void (Timer *)' ]
| `-ParmVarDecl 0x56252306d8b0 <col:20, col:26> col:27 'Timer *'
|-EnumDecl 0x56252306d9e8 <line:163:5, line:165:5> line:163:5
| |-EnumConstantDecl 0x56252306dab0 <line:164:2> col:2 h_table 'ARPTable::(anonymous enum at ../elements/ethernet/arptable.hh:163:5)'
| |-EnumConstantDecl 0x56252306db00 <col:11> col:11 h_insert 'ARPTable::(anonymous enum at ../elements/ethernet/arptable.hh:163:5)'
| |-EnumConstantDecl 0x56252306db50 <col:21> col:21 h_delete 'ARPTable::(anonymous enum at ../elements/ethernet/arptable.hh:163:5)'
| `-EnumConstantDecl 0x56252306dba0 <col:31> col:31 h_clear 'ARPTable::(anonymous enum at ../elements/ethernet/arptable.hh:163:5)'
|-CXXMethodDecl 0x56252306dd18 <line:166:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56252306dc00 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x56252306dc80 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x56252306dff8 <line:167:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56252306ddd8 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x56252306de50 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x56252306ded0 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x56252306df48 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXRecordDecl 0x56252306e0b8 <line:169:5, line:207:5> line:169:12 referenced struct ARPEntry definition
| |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists non_trivial needs_overload_resolution
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56252306e1d8 <col:5, col:12> col:12 implicit referenced struct ARPEntry
| |-FieldDecl 0x56252306e278 <line:170:2, col:12> col:12 referenced _ip 'IPAddress'
| |-FieldDecl 0x56252306e308 <line:171:2, col:12> col:12 _hashnext 'ARPTable::ARPEntry *'
| |-FieldDecl 0x56252306e368 <line:172:2, col:15> col:15 referenced _eth 'EtherAddress'
| |-FieldDecl 0x56252306e3c8 <line:173:2, col:7> col:7 referenced _known 'bool'
| |-FieldDecl 0x56252306e428 <line:174:2, col:10> col:10 referenced _num_polls_since_reply 'uint8_t':'unsigned char'
| |-FieldDecl 0x56252306e488 <line:175:2, col:18> col:18 referenced _live_at_j 'click_jiffies_t':'unsigned int'
| |-FieldDecl 0x56252306e4e8 <line:176:2, col:18> col:18 referenced _polled_at_j 'click_jiffies_t':'unsigned int'
| |-FieldDecl 0x56252306e548 <line:177:2, col:10> col:10 _head 'Packet *'
| |-FieldDecl 0x56252306e5a8 <line:178:2, col:10> col:10 _tail 'Packet *'
| |-FieldDecl 0x56252306e608 <line:179:2, col:11> col:11 _entry_packet_count 'uint32_t':'unsigned int'
| |-FieldDecl 0x56252306f8f8 <line:180:2, col:24> col:24 referenced _age_link 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
| |-TypedefDecl 0x56252306f958 <line:181:2, col:20> col:20 referenced key_type 'IPAddress'
| | `-RecordType 0x562522d2c4b0 'IPAddress'
| |   `-CXXRecord 0x562522dc73e0 'IPAddress'
| |-TypedefDecl 0x56252306f9c0 <line:182:2, col:20> col:20 referenced key_const_reference 'IPAddress'
| | `-RecordType 0x562522d2c4b0 'IPAddress'
| |   `-CXXRecord 0x562522dc73e0 'IPAddress'
| |-CXXConstructorDecl 0x56252306fad0 <line:183:2, line:186:2> line:183:2 ARPEntry 'void (IPAddress)'
| | |-ParmVarDecl 0x56252306fa28 <col:11, col:21> col:21 used ip 'IPAddress'
| | |-CXXCtorInitializer Field 0x56252306e278 '_ip' 'IPAddress'
| | | `-CXXConstructExpr 0x56252307dee0 <line:184:8, col:14> 'IPAddress' 'void (const IPAddress &) noexcept'
| | |   `-ImplicitCastExpr 0x56252307ddd8 <col:12> 'const IPAddress' lvalue <NoOp>
| | |     `-DeclRefExpr 0x56252307dd98 <col:12> 'IPAddress' lvalue ParmVar 0x56252306fa28 'ip' 'IPAddress'
| | |-CXXCtorInitializer Field 0x56252306e308 '_hashnext' 'ARPTable::ARPEntry *'
| | | `-ImplicitValueInitExpr 0x56252307df50 <<invalid sloc>> 'ARPTable::ARPEntry *'
| | |-CXXCtorInitializer Field 0x56252306e368 '_eth' 'EtherAddress'
| | | `-ExprWithCleanups 0x56252307e090 <col:30, col:65> 'EtherAddress'
| | |   `-CXXConstructExpr 0x56252307e060 <col:30, col:65> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
| | |     `-MaterializeTemporaryExpr 0x56252307e048 <col:35, col:64> 'EtherAddress' xvalue
| | |       `-CallExpr 0x56252307e008 <col:35, col:64> 'EtherAddress'
| | |         `-ImplicitCastExpr 0x56252307dff0 <col:35, col:49> 'EtherAddress (*)()' <FunctionToPointerDecay>
| | |           `-DeclRefExpr 0x56252307dfc0 <col:35, col:49> 'EtherAddress ()' lvalue CXXMethod 0x562522fdf3e8 'make_broadcast' 'EtherAddress ()'
| | |-CXXCtorInitializer Field 0x56252306e3c8 '_known' 'bool'
| | | `-CXXBoolLiteralExpr 0x56252307e0d0 <line:185:15> 'bool' false
| | |-CXXCtorInitializer Field 0x56252306e428 '_num_polls_since_reply' 'uint8_t':'unsigned char'
| | | `-ImplicitCastExpr 0x56252307e168 <col:46> 'uint8_t':'unsigned char' <IntegralCast>
| | |   `-IntegerLiteral 0x56252307e128 <col:46> 'int' 0
| | |-CXXCtorInitializer Field 0x56252306e548 '_head' 'Packet *'
| | | `-ImplicitValueInitExpr 0x56252307e1c0 <<invalid sloc>> 'Packet *'
| | |-CXXCtorInitializer Field 0x56252306e5a8 '_tail' 'Packet *'
| | | `-ImplicitValueInitExpr 0x56252307e210 <<invalid sloc>> 'Packet *'
| | |-CXXCtorInitializer Field 0x56252306e608 '_entry_packet_count' 'uint32_t':'unsigned int'
| | | `-ImplicitCastExpr 0x56252307e288 <col:88> 'uint32_t':'unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x56252307e248 <col:88> 'int' 0
| | |-CXXCtorInitializer Field 0x56252306f8f8 '_age_link' 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
| | | `-CXXConstructExpr 0x56252307e2c8 <line:183:2> 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>' 'void ()'
| | `-CompoundStmt 0x56252307e360 <line:185:91, line:186:2>
| |-CXXMethodDecl 0x56252306fbe8 <line:187:2, line:189:2> line:187:22 hashkey 'ARPTable::ARPEntry::key_const_reference () const'
| | `-CompoundStmt 0x56252307e3f0 <col:38, line:189:2>
| |   `-ReturnStmt 0x56252307e3e0 <line:188:6, col:13>
| |     `-CXXConstructExpr 0x56252307e3b0 <col:13> 'ARPTable::ARPEntry::key_const_reference':'IPAddress' 'void (const IPAddress &) noexcept'
| |       `-MemberExpr 0x56252307e380 <col:13> 'const IPAddress' lvalue ->_ip 0x56252306e278
| |         `-CXXThisExpr 0x56252307e370 <col:13> 'const ARPTable::ARPEntry *' implicit this
| |-CXXMethodDecl 0x56252306fe28 <line:190:2, line:193:2> line:190:7 used expired 'bool (click_jiffies_t, uint32_t) const'
| | |-ParmVarDecl 0x56252306fc98 <col:15, col:31> col:31 used now 'click_jiffies_t':'unsigned int'
| | |-ParmVarDecl 0x56252306fd10 <col:36, col:45> col:45 used timeout_j 'uint32_t':'unsigned int'
| | `-CompoundStmt 0x56252307e6c0 <col:62, line:193:2>
| |   `-ReturnStmt 0x56252307e6b0 <line:191:6, line:192:6>
| |     `-BinaryOperator 0x56252307e690 <line:191:13, line:192:6> 'bool' '&&'
| |       |-ParenExpr 0x56252307e620 <line:191:13, col:81> 'bool'
| |       | `-BinaryOperator 0x56252307e600 <col:14, col:80> 'bool' '<'
| |       |   |-CStyleCastExpr 0x56252307e5b8 <col:14, col:76> 'click_jiffies_difference_t':'int' <NoOp>
| |       |   | `-ImplicitCastExpr 0x56252307e5a0 <col:43, col:76> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
| |       |   |   `-ParenExpr 0x56252307e580 <col:43, col:76> 'unsigned int'
| |       |   |     `-BinaryOperator 0x56252307e530 <col:44, col:75> 'unsigned int' '-'
| |       |   |       |-ParenExpr 0x56252307e4b8 <col:44, col:67> 'unsigned int'
| |       |   |       | `-BinaryOperator 0x56252307e498 <col:45, col:58> 'unsigned int' '+'
| |       |   |       |   |-ImplicitCastExpr 0x56252307e468 <col:45> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |       |   |       |   | `-MemberExpr 0x56252307e418 <col:45> 'const click_jiffies_t':'const unsigned int' lvalue ->_live_at_j 0x56252306e488
| |       |   |       |   |   `-CXXThisExpr 0x56252307e408 <col:45> 'const ARPTable::ARPEntry *' implicit this
| |       |   |       |   `-ImplicitCastExpr 0x56252307e480 <col:58> 'uint32_t':'unsigned int' <LValueToRValue>
| |       |   |       |     `-DeclRefExpr 0x56252307e448 <col:58> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306fd10 'timeout_j' 'uint32_t':'unsigned int'
| |       |   |       `-ImplicitCastExpr 0x56252307e518 <col:71, col:75> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |       |   |         `-ParenExpr 0x56252307e4f8 <col:71, col:75> 'click_jiffies_t':'unsigned int' lvalue
| |       |   |           `-DeclRefExpr 0x56252307e4d8 <col:72> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x56252306fc98 'now' 'click_jiffies_t':'unsigned int'
| |       |   `-IntegerLiteral 0x56252307e5e0 <col:80> 'int' 0
| |       `-ImplicitCastExpr 0x56252307e678 <line:192:6> 'bool' <IntegralToBoolean>
| |         `-ImplicitCastExpr 0x56252307e660 <col:6> 'uint32_t':'unsigned int' <LValueToRValue>
| |           `-DeclRefExpr 0x56252307e640 <col:6> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306fd10 'timeout_j' 'uint32_t':'unsigned int'
| |-CXXMethodDecl 0x56252306fff8 <line:194:2, line:196:2> line:194:7 used known 'bool (click_jiffies_t, uint32_t) const'
| | |-ParmVarDecl 0x56252306fee8 <col:13, col:29> col:29 used now 'click_jiffies_t':'unsigned int'
| | |-ParmVarDecl 0x56252306ff60 <col:34, col:43> col:43 used timeout_j 'uint32_t':'unsigned int'
| | `-CompoundStmt 0x56252307e858 <col:60, line:196:2>
| |   `-ReturnStmt 0x56252307e848 <line:195:6, col:46>
| |     `-BinaryOperator 0x56252307e828 <col:13, col:46> 'bool' '&&'
| |       |-ImplicitCastExpr 0x56252307e810 <col:13> 'bool' <LValueToRValue>
| |       | `-MemberExpr 0x56252307e6e8 <col:13> 'const bool' lvalue ->_known 0x56252306e3c8
| |       |   `-CXXThisExpr 0x56252307e6d8 <col:13> 'const ARPTable::ARPEntry *' implicit this
| |       `-UnaryOperator 0x56252307e7f8 <col:23, col:46> 'bool' prefix '!' cannot overflow
| |         `-CXXMemberCallExpr 0x56252307e798 <col:24, col:46> 'bool'
| |           |-MemberExpr 0x56252307e728 <col:24> '<bound member function type>' ->expired 0x56252306fe28
| |           | `-CXXThisExpr 0x56252307e718 <col:24> 'const ARPTable::ARPEntry *' implicit this
| |           |-ImplicitCastExpr 0x56252307e7c8 <col:32> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0x56252307e758 <col:32> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x56252306fee8 'now' 'click_jiffies_t':'unsigned int'
| |           `-ImplicitCastExpr 0x56252307e7e0 <col:37> 'uint32_t':'unsigned int' <LValueToRValue>
| |             `-DeclRefExpr 0x56252307e778 <col:37> 'uint32_t':'unsigned int' lvalue ParmVar 0x56252306ff60 'timeout_j' 'uint32_t':'unsigned int'
| |-CXXMethodDecl 0x5625230701a8 <line:197:2, line:201:2> line:197:7 used allow_poll 'bool (click_jiffies_t) const'
| | |-ParmVarDecl 0x5625230700b8 <col:18, col:34> col:34 used now 'click_jiffies_t':'unsigned int'
| | `-CompoundStmt 0x56252307ed38 <col:45, line:201:2>
| |   |-DeclStmt 0x56252307eb38 <line:198:6, line:199:58>
| |   | `-VarDecl 0x56252307e880 <line:198:6, line:199:57> line:198:22 used thresh_j 'click_jiffies_t':'unsigned int' cinit
| |   |   `-BinaryOperator 0x56252307eb18 <col:33, line:199:57> 'unsigned int' '+'
| |   |     |-ImplicitCastExpr 0x56252307eae8 <line:198:33> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |   |     | `-MemberExpr 0x56252307e8f8 <col:33> 'const click_jiffies_t':'const unsigned int' lvalue ->_polled_at_j 0x56252306e4e8
| |   |     |   `-CXXThisExpr 0x56252307e8e8 <col:33> 'const ARPTable::ARPEntry *' implicit this
| |   |     `-ImplicitCastExpr 0x56252307eb00 <line:199:5, col:57> 'unsigned int' <IntegralCast>
| |   |       `-ParenExpr 0x56252307eac8 <col:5, col:57> 'int'
| |   |         `-ConditionalOperator 0x56252307ea98 <col:6, col:55> 'int'
| |   |           |-BinaryOperator 0x56252307e9b8 <col:6, col:32> 'bool' '>='
| |   |           | |-ImplicitCastExpr 0x56252307e9a0 <col:6> 'int' <IntegralCast>
| |   |           | | `-ImplicitCastExpr 0x56252307e988 <col:6> 'uint8_t':'unsigned char' <LValueToRValue>
| |   |           | |   `-MemberExpr 0x56252307e938 <col:6> 'const uint8_t':'const unsigned char' lvalue ->_num_polls_since_reply 0x56252306e428
| |   |           | |     `-CXXThisExpr 0x56252307e928 <col:6> 'const ARPTable::ARPEntry *' implicit this
| |   |           | `-IntegerLiteral 0x56252307e968 <col:32> 'int' 10
| |   |           |-BinaryOperator 0x56252307ea18 <col:37, col:44> 'int' '*'
| |   |           | |-IntegerLiteral 0x56252307e9d8 <col:37> 'int' 1000
| |   |           | `-IntegerLiteral 0x56252307e9f8 <col:44> 'int' 2
| |   |           `-BinaryOperator 0x56252307ea78 <col:48, col:55> 'int' '/'
| |   |             |-IntegerLiteral 0x56252307ea38 <col:48> 'int' 1000
| |   |             `-IntegerLiteral 0x56252307ea58 <col:55> 'int' 10
| |   `-ReturnStmt 0x56252307ed28 <line:200:6, col:68>
| |     `-UnaryOperator 0x56252307ed10 <col:13, col:68> 'bool' prefix '!' cannot overflow
| |       `-ParenExpr 0x56252307ecf0 <col:14, col:68> 'bool'
| |         `-BinaryOperator 0x56252307ecd0 <col:15, col:67> 'bool' '<'
| |           |-CStyleCastExpr 0x56252307ec88 <col:15, col:63> 'click_jiffies_difference_t':'int' <NoOp>
| |           | `-ImplicitCastExpr 0x56252307ec70 <col:44, col:63> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
| |           |   `-ParenExpr 0x56252307ec50 <col:44, col:63> 'unsigned int'
| |           |     `-BinaryOperator 0x56252307ec00 <col:45, col:62> 'unsigned int' '-'
| |           |       |-ImplicitCastExpr 0x56252307ebd0 <col:45, col:49> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |           |       | `-ParenExpr 0x56252307eb70 <col:45, col:49> 'click_jiffies_t':'unsigned int' lvalue
| |           |       |   `-DeclRefExpr 0x56252307eb50 <col:46> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x5625230700b8 'now' 'click_jiffies_t':'unsigned int'
| |           |       `-ImplicitCastExpr 0x56252307ebe8 <col:53, col:62> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |           |         `-ParenExpr 0x56252307ebb0 <col:53, col:62> 'click_jiffies_t':'unsigned int' lvalue
| |           |           `-DeclRefExpr 0x56252307eb90 <col:54> 'click_jiffies_t':'unsigned int' lvalue Var 0x56252307e880 'thresh_j' 'click_jiffies_t':'unsigned int'
| |           `-IntegerLiteral 0x56252307ecb0 <col:67> 'int' 0
| |-CXXMethodDecl 0x562523070328 <line:202:2, line:206:2> line:202:7 used mark_poll 'void (click_jiffies_t)'
| | |-ParmVarDecl 0x562523070260 <col:17, col:33> col:33 used now 'click_jiffies_t':'unsigned int'
| | `-CompoundStmt 0x56252307ef10 <col:38, line:206:2>
| |   |-BinaryOperator 0x56252307edd0 <line:203:6, col:21> 'click_jiffies_t':'unsigned int' lvalue '='
| |   | |-MemberExpr 0x56252307ed68 <col:6> 'click_jiffies_t':'unsigned int' lvalue ->_polled_at_j 0x56252306e4e8
| |   | | `-CXXThisExpr 0x56252307ed58 <col:6> 'ARPTable::ARPEntry *' implicit this
| |   | `-ImplicitCastExpr 0x56252307edb8 <col:21> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x56252307ed98 <col:21> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x562523070260 'now' 'click_jiffies_t':'unsigned int'
| |   `-IfStmt 0x56252307eef8 <line:204:6, line:205:5>
| |     |-BinaryOperator 0x56252307ee80 <line:204:10, col:35> 'bool' '<'
| |     | |-ImplicitCastExpr 0x56252307ee68 <col:10> 'int' <IntegralCast>
| |     | | `-ImplicitCastExpr 0x56252307ee50 <col:10> 'uint8_t':'unsigned char' <LValueToRValue>
| |     | |   `-MemberExpr 0x56252307ee00 <col:10> 'uint8_t':'unsigned char' lvalue ->_num_polls_since_reply 0x56252306e428
| |     | |     `-CXXThisExpr 0x56252307edf0 <col:10> 'ARPTable::ARPEntry *' implicit this
| |     | `-IntegerLiteral 0x56252307ee30 <col:35> 'int' 255
| |     `-UnaryOperator 0x56252307eee0 <line:205:3, col:5> 'uint8_t':'unsigned char' lvalue prefix '++' cannot overflow
| |       `-MemberExpr 0x56252307eeb0 <col:5> 'uint8_t':'unsigned char' lvalue ->_num_polls_since_reply 0x56252306e428
| |         `-CXXThisExpr 0x56252307eea0 <col:5> 'ARPTable::ARPEntry *' implicit this
| |-CXXConstructorDecl 0x5625230703f8 <line:169:12> col:12 implicit ARPEntry 'void (const ARPTable::ARPEntry &)' inline default_delete noexcept-unevaluated 0x5625230703f8
| | `-ParmVarDecl 0x562523070508 <col:12> col:12 'const ARPTable::ARPEntry &'
| |-CXXConstructorDecl 0x5625230705a8 <col:12> col:12 implicit ARPEntry 'void (ARPTable::ARPEntry &&)' inline default_delete noexcept-unevaluated 0x5625230705a8
| | `-ParmVarDecl 0x5625230706b8 <col:12> col:12 'ARPTable::ARPEntry &&'
| `-CXXMethodDecl 0x562523070758 <col:12> col:12 implicit operator= 'ARPTable::ARPEntry &(ARPTable::ARPEntry &&)' inline default_delete noexcept-unevaluated 0x562523070758
|   `-ParmVarDecl 0x562523070868 <col:12> col:12 'ARPTable::ARPEntry &&'
|-AccessSpecDecl 0x562523070ef0 <line:209:3, col:10> col:3 private
|-FieldDecl 0x562523070f28 <line:211:5, col:19> col:19 referenced _lock 'ReadWriteLock'
|-TypedefDecl 0x562523071300 <line:213:5, col:37> col:37 referenced Table 'HashContainer<ARPTable::ARPEntry>':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| `-TemplateSpecializationType 0x562523071260 'HashContainer<ARPTable::ARPEntry>' sugar HashContainer
|   |-TemplateArgument type 'ARPTable::ARPEntry'
|   `-RecordType 0x562523071240 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|     `-ClassTemplateSpecialization 0x562523071140 'HashContainer'
|-FieldDecl 0x562523077678 <line:214:5, col:11> col:11 referenced _table 'ARPTable::Table':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-TypedefDecl 0x562523077b48 <line:215:5, col:50> col:50 referenced AgeList 'List<ARPTable::ARPEntry, &ARPEntry::_age_link>':'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>'
| `-TemplateSpecializationType 0x562523077a60 'List<ARPTable::ARPEntry, &ARPEntry::_age_link>' sugar List
|   |-TemplateArgument type 'ARPTable::ARPEntry'
|   |-TemplateArgument expr
|   | `-UnaryOperator 0x5625230777c0 <col:28, col:39> 'List_member<ARPTable::ARPEntry> ARPTable::ARPEntry::*' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x562523077728 <col:29, col:39> 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>' lvalue Field 0x56252306f8f8 '_age_link' 'List_member<ARPTable::ARPEntry>':'List_member<ARPTable::ARPEntry>'
|   `-RecordType 0x562523077a40 'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>'
|     `-ClassTemplateSpecialization 0x562523077940 'List'
|-FieldDecl 0x56252307b378 <line:216:5, col:13> col:13 _age 'ARPTable::AgeList':'List<ARPTable::ARPEntry, &ARPTable::ARPEntry::_age_link>'
|-FieldDecl 0x56252307b3d8 <line:217:5, col:21> col:21 referenced _entry_count 'atomic_uint32_t'
|-FieldDecl 0x56252307b438 <line:218:5, col:21> col:21 referenced _packet_count 'atomic_uint32_t'
|-FieldDecl 0x56252307b498 <line:219:5, col:14> col:14 referenced _entry_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56252307b4f8 <line:220:5, col:14> col:14 referenced _packet_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56252307b558 <line:221:5, col:14> col:14 referenced _entry_packet_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56252307b5b8 <line:222:5, col:14> col:14 referenced _capacity_slim_factor 'uint32_t':'unsigned int'
|-FieldDecl 0x56252307b618 <line:223:5, col:14> col:14 referenced _timeout_j 'uint32_t':'unsigned int'
|-FieldDecl 0x56252307b678 <line:224:5, col:21> col:21 referenced _drops 'atomic_uint32_t'
|-FieldDecl 0x56252307c380 <line:225:5, col:42> col:42 _alloc 'SizedHashAllocator<sizeof(ARPTable::ARPEntry)>':'SizedHashAllocator<72>'
|-FieldDecl 0x56252307c3e0 <line:226:5, col:11> col:11 _expire_timer 'Timer'
|-CXXMethodDecl 0x56252307c5c8 <line:228:5, col:55> col:15 ensure 'ARPTable::ARPEntry *(IPAddress, click_jiffies_t)'
| |-ParmVarDecl 0x56252307c440 <col:22, col:32> col:32 ip 'IPAddress'
| `-ParmVarDecl 0x56252307c4b8 <col:36, col:52> col:52 now 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x56252307c718 <line:229:5, col:34> col:10 slim 'void (click_jiffies_t)'
| `-ParmVarDecl 0x56252307c688 <col:15, col:31> col:31 now 'click_jiffies_t':'unsigned int'
|-CXXConstructorDecl 0x56252307c7e8 <line:96:7> col:7 implicit ARPTable 'void (const ARPTable &)' inline default_delete noexcept-unevaluated 0x56252307c7e8
| `-ParmVarDecl 0x56252307c8f8 <col:7> col:7 'const ARPTable &'
`-CXXMethodDecl 0x56252307c998 <col:7> col:7 implicit operator= 'ARPTable &(const ARPTable &)' inline default_delete noexcept-unevaluated 0x56252307c998
  `-ParmVarDecl 0x56252307cae8 <col:7> col:7 'const ARPTable &'

Layout: <CGRecordLayout
  LLVMType:%class.ARPTable = type { %class.Element.base, %class.ReadWriteLock, %class.HashContainer, %class.List, %class.atomic_uint32_t, %class.atomic_uint32_t, i32, i32, i32, i32, i32, %class.atomic_uint32_t, %class.SizedHashAllocator, %class.Timer }
  NonVirtualBaseLLVMType:%class.ARPTable = type { %class.Element.base, %class.ReadWriteLock, %class.HashContainer, %class.List, %class.atomic_uint32_t, %class.atomic_uint32_t, i32, i32, i32, i32, i32, %class.atomic_uint32_t, %class.SizedHashAllocator, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523085458 <../elements/ethernet/arpquerier.hh:173:1, line:227:1> line:173:7 class ARPQuerier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5625230855b8 <col:1, col:7> col:7 implicit referenced class ARPQuerier
|-AccessSpecDecl 0x562523085648 <col:37, col:43> col:37 public
|-CXXConstructorDecl 0x5625230856d0 <line:175:5, col:16> col:5 ARPQuerier 'void ()'
|-CXXDestructorDecl 0x5625230857c0 <line:176:5, col:17> col:5 ~ARPQuerier 'void ()' noexcept-unevaluated 0x5625230857c0
| `-Overrides: [ 0x562522fc66e8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x5625230858f0 <line:178:5, col:59> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x562522fc7b48 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5625230886d8 <col:36, col:59>
|   `-ReturnStmt 0x5625230886c8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5625230886b0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x562523088688 <col:45> 'const char [11]' lvalue "ARPQuerier"
|-CXXMethodDecl 0x5625230859b8 <line:179:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x562522fc7c10 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x562523088738 <col:36, col:54>
|   `-ReturnStmt 0x562523088728 <col:38, col:45>
|     `-ImplicitCastExpr 0x562523088710 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5625230886f0 <col:45> 'const char [6]' lvalue "2/1-2"
|-CXXMethodDecl 0x562523085a80 <line:180:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x562522fc7fd8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x562523088798 <col:36, col:51>
|   `-ReturnStmt 0x562523088788 <col:38, col:45>
|     `-ImplicitCastExpr 0x562523088770 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x562523088750 <col:45> 'const char []' lvalue Var 0x562522fc8120 'PUSH' 'const char []'
|-CXXMethodDecl 0x562523085b48 <line:181:5, col:52> col:17 flow_code 'const char *() const'
| |-Overrides: [ 0x562522fc83d0 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x562523088870 <col:35, col:52>
|   `-ReturnStmt 0x562523088860 <col:37, col:44>
|     `-ImplicitCastExpr 0x562523088848 <col:44> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x562523088828 <col:44> 'const char [5]' lvalue "xy/x"
|-CXXMethodDecl 0x562523085c10 <line:183:5, col:46> col:17 flags 'const char *() const'
| |-Overrides: [ 0x562522fc8520 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x5625230888d0 <col:31, col:46>
|   `-ReturnStmt 0x5625230888c0 <col:33, col:40>
|     `-ImplicitCastExpr 0x5625230888a8 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x562523088888 <col:40> 'const char [3]' lvalue "L2"
|-CXXMethodDecl 0x562523085d60 <line:184:5, col:32> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x562522fc8800 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x562523085cc8 <col:16, col:28> col:28 name 'const char *'
|-CXXMethodDecl 0x562523086040 <line:186:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x562522fc93e0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x562523085ef0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x562523085f68 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x562523086320 <line:187:5, col:58> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x562522fcc100 Element::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5625230861d0 <col:26, col:41> col:42 'Vector<String> &'
| `-ParmVarDecl 0x562523086248 <col:44, col:57> col:58 'ErrorHandler *'
|-CXXMethodDecl 0x5625230863f0 <line:188:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x562522fcbe30 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x562523088908 <col:39, col:54>
|   `-ReturnStmt 0x5625230888f8 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x5625230888e8 <col:48> 'bool' true
|-CXXMethodDecl 0x562523086538 <line:189:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x562522fc9630 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x5625230864a0 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562523086600 <line:190:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x562522fc94b0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x562523086740 <line:191:5, col:36> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x562522fc9e48 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x5625230866b0 <col:18, col:31> col:31 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x562523086908 <line:192:5, col:51> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x562522fc9838 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5625230867f8 <col:21, col:30> col:30 e 'Element *'
| `-ParmVarDecl 0x562523086870 <col:33, col:47> col:47 errh 'ErrorHandler *'
|-CXXMethodDecl 0x562523086ae0 <line:194:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x562522fc69b8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5625230869d0 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x562523086a48 <col:25, col:33> col:33 p 'Packet *'
|-AccessSpecDecl 0x562523086b90 <line:196:3, col:10> col:3 private
|-FieldDecl 0x562523086bc8 <line:198:5, col:15> col:15 _arpt 'ARPTable *'
|-FieldDecl 0x562523086c28 <line:199:5, col:18> col:18 _my_en 'EtherAddress'
|-FieldDecl 0x562523086c88 <line:200:5, col:15> col:15 _my_ip 'IPAddress'
|-FieldDecl 0x562523086ce8 <line:201:5, col:15> col:15 _my_bcast_ip 'IPAddress'
|-FieldDecl 0x562523086d48 <line:202:5, col:14> col:14 _poll_timeout_j 'uint32_t':'unsigned int'
|-FieldDecl 0x562523086db0 <line:203:5, col:9> col:9 _broadcast_poll 'int'
|-FieldDecl 0x562523086e10 <line:206:5, col:21> col:21 _arp_queries 'atomic_uint32_t'
|-FieldDecl 0x562523086e70 <line:207:5, col:21> col:21 _drops 'atomic_uint32_t'
|-FieldDecl 0x562523086ed0 <line:208:5, col:21> col:21 _arp_responses 'atomic_uint32_t'
|-FieldDecl 0x562523086f30 <line:209:5, col:21> col:21 _broadcasts 'atomic_uint32_t'
|-FieldDecl 0x562523086f90 <line:210:5, col:10> col:10 _my_arpt 'bool'
|-FieldDecl 0x562523086ff0 <line:211:5, col:10> col:10 _zero_warned 'bool'
|-CXXMethodDecl 0x562523087198 <line:213:5, col:64> col:10 send_query_for 'void (const Packet *, bool)'
| |-ParmVarDecl 0x562523087050 <col:25, col:39> col:39 p 'const Packet *'
| `-ParmVarDecl 0x5625230870c8 <col:42, col:47> col:47 ether_dhost_valid 'bool'
|-CXXMethodDecl 0x5625230873a8 <line:215:5, col:44> col:10 handle_ip 'void (Packet *, bool)'
| |-ParmVarDecl 0x562523087258 <col:20, col:28> col:28 p 'Packet *'
| `-ParmVarDecl 0x5625230872d0 <col:31, col:36> col:36 response 'bool'
|-CXXMethodDecl 0x5625230874f8 <line:216:5, col:35> col:10 handle_response 'void (Packet *)'
| `-ParmVarDecl 0x562523087468 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5625230876c8 <line:218:5, col:44> col:17 expire_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5625230875b0 <col:29, col:35> col:36 'Timer *'
| `-ParmVarDecl 0x562523087630 <col:38, col:43> col:44 'void *'
|-CXXMethodDecl 0x5625230878a0 <line:219:5, col:47> col:19 read_table 'String (Element *, void *)' static
| |-ParmVarDecl 0x562523087788 <col:30, col:38> col:39 'Element *'
| `-ParmVarDecl 0x562523087808 <col:41, col:46> col:47 'void *'
|-CXXMethodDecl 0x562523087a78 <line:220:5, col:51> col:19 read_table_xml 'String (Element *, void *)' static
| |-ParmVarDecl 0x562523087960 <col:34, col:42> col:43 'Element *'
| `-ParmVarDecl 0x5625230879e0 <col:45, col:50> col:51 'void *'
|-CXXMethodDecl 0x562523087c50 <line:221:5, col:49> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x562523087b38 <col:32, col:40> col:41 'Element *'
| `-ParmVarDecl 0x562523087bb8 <col:43, col:48> col:49 'void *'
|-CXXMethodDecl 0x562523087f30 <line:222:5, col:79> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x562523087d10 <col:30, col:43> col:44 'const String &'
| |-ParmVarDecl 0x562523087d88 <col:46, col:54> col:55 'Element *'
| |-ParmVarDecl 0x562523087e08 <col:57, col:62> col:63 'void *'
| `-ParmVarDecl 0x562523087e80 <col:65, col:78> col:79 'ErrorHandler *'
|-EnumDecl 0x562523087ff0 <line:224:5, line:225:23> line:224:5
| |-EnumConstantDecl 0x5625230880b0 <col:12> col:12 h_table 'ARPQuerier::(anonymous enum at ../elements/ethernet/arpquerier.hh:224:5)'
| |-EnumConstantDecl 0x562523088100 <col:21> col:21 h_table_xml 'ARPQuerier::(anonymous enum at ../elements/ethernet/arpquerier.hh:224:5)'
| |-EnumConstantDecl 0x562523088150 <col:34> col:34 h_stats 'ARPQuerier::(anonymous enum at ../elements/ethernet/arpquerier.hh:224:5)'
| |-EnumConstantDecl 0x5625230881a0 <col:43> col:43 h_insert 'ARPQuerier::(anonymous enum at ../elements/ethernet/arpquerier.hh:224:5)'
| |-EnumConstantDecl 0x5625230881f0 <col:53> col:53 h_delete 'ARPQuerier::(anonymous enum at ../elements/ethernet/arpquerier.hh:224:5)'
| |-EnumConstantDecl 0x562523088240 <col:63> col:63 h_clear 'ARPQuerier::(anonymous enum at ../elements/ethernet/arpquerier.hh:224:5)'
| |-EnumConstantDecl 0x562523088290 <line:225:5> col:5 h_count 'ARPQuerier::(anonymous enum at ../elements/ethernet/arpquerier.hh:224:5)'
| `-EnumConstantDecl 0x5625230882e0 <col:14> col:14 h_length 'ARPQuerier::(anonymous enum at ../elements/ethernet/arpquerier.hh:224:5)'
|-CXXConstructorDecl 0x562523088358 <line:173:7> col:7 implicit ARPQuerier 'void (const ARPQuerier &)' inline default_delete noexcept-unevaluated 0x562523088358
| `-ParmVarDecl 0x562523088468 <col:7> col:7 'const ARPQuerier &'
`-CXXMethodDecl 0x562523088508 <col:7> col:7 implicit operator= 'ARPQuerier &(const ARPQuerier &)' inline default_delete noexcept-unevaluated 0x562523088508
  `-ParmVarDecl 0x562523088618 <col:7> col:7 'const ARPQuerier &'

Layout: <CGRecordLayout
  LLVMType:%class.ARPQuerier = type <{ %class.Element.base, [4 x i8], %class.ARPTable*, %class.EtherAddress, [2 x i8], %class.IPAddress, %class.IPAddress, i32, i32, %class.atomic_uint32_t, %class.atomic_uint32_t, %class.atomic_uint32_t, %class.atomic_uint32_t, i8, i8, [6 x i8] }>
  NonVirtualBaseLLVMType:%class.ARPQuerier.base = type <{ %class.Element.base, [4 x i8], %class.ARPTable*, %class.EtherAddress, [2 x i8], %class.IPAddress, %class.IPAddress, i32, i32, %class.atomic_uint32_t, %class.atomic_uint32_t, %class.atomic_uint32_t, %class.atomic_uint32_t, i8, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252316e0b8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56252316e1e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x56252316e248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x56252316e2a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5625231d4d58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x5625231d4e30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5625231d4e30
|-CXXConstructorDecl 0x5625231d5120 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5625231d5120
| `-ParmVarDecl 0x5625231d5238 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x5625231d52d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5625231d52d8
  `-ParmVarDecl 0x5625231d53e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252316df10 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56252316e028 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x56252316e0b8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56252316e1e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x56252316e248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x56252316e2a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x5625231d4d58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x5625231d4e30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5625231d4e30
| |-CXXConstructorDecl 0x5625231d5120 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5625231d5120
| | `-ParmVarDecl 0x5625231d5238 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x5625231d52d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5625231d52d8
|   `-ParmVarDecl 0x5625231d53e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x56252316e368 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x56252316e3c8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x56252316e368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56252316e1e8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x56252316e420 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x56252316e368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56252316e248 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x56252316e478 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x56252316e368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56252316e2a8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x56252316e4d0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5625231d4c68 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5625231d5608 <col:11>
|-CXXConstructorDecl 0x5625231d4f38 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5625231d4f38
| `-ParmVarDecl 0x5625231d5048 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5625231d5488 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5625231d5488
  `-ParmVarDecl 0x5625231d5598 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56252316bae0 prev 0x562522fc5f80 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x56252316bc18 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x56252316bca8 <col:33, col:39> col:33 public
|-EnumDecl 0x56252316bcd0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x56252316be10 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x56252316bdf0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x56252316bdd0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56252316bd90 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x56252316bdb0 <col:26> 'int' 16
| `-EnumConstantDecl 0x56252316bee0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x56252316bec0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x56252316bea0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x56252316be60 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x56252316be80 <col:47> 'int' 31
|-EnumDecl 0x56252316bf30 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x56252316c070 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x56252316c190 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56252316c050 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x56252316c030 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x56252316bff0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x56252316c010 <col:29> 'int' 15
| `-EnumConstantDecl 0x56252316c140 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x56252316c1a8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56252316c120 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x56252316c100 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x56252316c0c0 <col:51> 'int' 1
|         `-IntegerLiteral 0x56252316c0e0 <col:54> 'int' 10
|-CXXConstructorDecl 0x56252316c410 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x56252316c1d0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x56252316c250 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x56252316c568 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x56252316c4d8 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x56252316c660 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x56252316c660
|-CXXMethodDecl 0x56252316c7e8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x56252316f8e8 <col:42, line:100:5>
|   `-ReturnStmt 0x56252316f8d8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x56252316f8c0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x56252316f890 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x56252316e610
|         `-CXXThisExpr 0x56252316f880 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56252316c8b0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x56252316f968 <col:36, line:105:5>
|   `-ReturnStmt 0x56252316f958 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x56252316f940 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56252316f910 <col:16> 'void *const' lvalue ->_thunk 0x56252316e678
|         `-CXXThisExpr 0x56252316f900 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56252316c970 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x56252316f9e8 <col:37, line:110:5>
|   `-ReturnStmt 0x56252316f9d8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x56252316f9c0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56252316f990 <col:16> 'Element *const' lvalue ->_owner 0x56252316e738
|         `-CXXThisExpr 0x56252316f980 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56252316ca30 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x56252316caf8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x56252316cbb8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x56252316cc78 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x56252316fad0 <col:35, line:137:5>
|   `-ReturnStmt 0x56252316fac0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x56252316fa88 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x56252316fa58 <col:16, col:24> '<bound member function type>' ->router 0x562522fd8790
|         `-ImplicitCastExpr 0x56252316faa8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56252316fa40 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56252316fa10 <col:16> 'Element *const' lvalue ->_owner 0x56252316e738
|               `-CXXThisExpr 0x56252316fa00 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56252316cd38 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x56252316cef8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56252316cde8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56252316ce60 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56252316d108 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x56252316cfb8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x56252316d030 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56252316d1d8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x56252316fbe0 <col:35, line:181:5>
|   `-ReturnStmt 0x56252316fbd0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x56252316fbb8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x56252316fba0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x56252316fb70 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x56252316e248
|           `-MemberExpr 0x56252316fb28 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56252316e368
|             `-MemberExpr 0x56252316faf8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x56252316e598
|               `-CXXThisExpr 0x56252316fae8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56252316d298 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x56252316fcf8 <col:30, line:192:5>
|   `-BinaryOperator 0x56252316fcd8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56252316fc80 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56252316e248
|     | `-MemberExpr 0x56252316fc38 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56252316e368
|     |   `-MemberExpr 0x56252316fc08 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56252316e598
|     |     `-CXXThisExpr 0x56252316fbf8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56252316fcc0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56252316fcb0 <col:32> 'bool' false
|-CXXMethodDecl 0x56252316d358 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x562523170048 <col:30, line:206:5>
|   |-BinaryOperator 0x56252316fdf0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56252316fd98 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56252316e248
|   | | `-MemberExpr 0x56252316fd50 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56252316e368
|   | |   `-MemberExpr 0x56252316fd20 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56252316e598
|   | |     `-CXXThisExpr 0x56252316fd10 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56252316fdd8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56252316fdc8 <col:32> 'bool' true
|   |-CallExpr 0x56252316fe90 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x56252316fe78 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56252316fe58 <col:9> 'void ()' lvalue Function 0x562522f465d0 'click_fence' 'void ()'
|   `-IfStmt 0x562523170030 <line:204:9, line:205:32>
|     |-BinaryOperator 0x56252316ff70 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x56252316ff40 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x56252316fef0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x56252316e9a8
|     | |   `-MemberExpr 0x56252316fec0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x56252316ea20
|     | |     `-CXXThisExpr 0x56252316feb0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x56252316ff58 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x56252316ff20 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x56252316fff0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x56252316ffa0 <col:13> '<bound member function type>' ->complete_schedule 0x56252316f420
|       | `-CXXThisExpr 0x56252316ff90 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x562523170018 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x56252316ffd0 <col:31> 'int' 0
|-CXXMethodDecl 0x56252316d418 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x562523170170 <col:35, line:240:5>
|   `-BinaryOperator 0x562523170150 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5625231700f8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56252316e248
|     | `-MemberExpr 0x5625231700b0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56252316e368
|     |   `-MemberExpr 0x562523170080 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56252316e598
|     |     `-CXXThisExpr 0x562523170070 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x562523170138 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x562523170128 <col:32> 'bool' true
|-CXXMethodDecl 0x56252316d4d8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x562523170388 <col:37, line:253:5>
|   |-BinaryOperator 0x562523170268 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x562523170210 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56252316e248
|   | | `-MemberExpr 0x5625231701c8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56252316e368
|   | |   `-MemberExpr 0x562523170198 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56252316e598
|   | |     `-CXXThisExpr 0x562523170188 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x562523170250 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x562523170240 <col:32> 'bool' false
|   `-BinaryOperator 0x562523170368 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x562523170310 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56252316e2a8
|     | `-MemberExpr 0x5625231702c8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56252316e368
|     |   `-MemberExpr 0x562523170298 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56252316e598
|     |     `-CXXThisExpr 0x562523170288 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x562523170350 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x562523170340 <col:41> 'bool' true
|-CXXMethodDecl 0x56252316d598 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x562523170508 <col:37, line:264:5>
|   |-BinaryOperator 0x562523170488 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x562523170430 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56252316e2a8
|   | | `-MemberExpr 0x5625231703e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56252316e368
|   | |   `-MemberExpr 0x5625231703b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56252316e598
|   | |     `-CXXThisExpr 0x5625231703a8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x562523170470 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x562523170460 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x5625231704e8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x5625231704b8 <col:9> '<bound member function type>' ->reschedule 0x56252316d358
|       `-CXXThisExpr 0x5625231704a8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x56252316d6e0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x56252316d650 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x56252316d7b0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x56252316d8f8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x56252316d868 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x56252316da48 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x56252316d9b8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x56252316db10 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x56252316dbd0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x56252316dc70 <col:53> "" ""
|-CXXMethodDecl 0x56252316dd08 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x56252316dda8 <col:47> "" ""
|-AccessSpecDecl 0x56252316de18 <line:303:3, col:10> col:3 private
|-FieldDecl 0x56252316de58 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x56252316dec0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x56252316df10 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56252316e028 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x56252316e0b8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x56252316e1e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x56252316e248 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x56252316e2a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x5625231d4d58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x5625231d4e30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5625231d4e30
| | |-CXXConstructorDecl 0x5625231d5120 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5625231d5120
| | | `-ParmVarDecl 0x5625231d5238 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x5625231d52d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5625231d52d8
| |   `-ParmVarDecl 0x5625231d53e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x56252316e368 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x56252316e3c8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x56252316e368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56252316e1e8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x56252316e420 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x56252316e368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56252316e248 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x56252316e478 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x56252316e368 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56252316e2a8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x56252316e4d0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x5625231d4c68 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5625231d5608 <col:11>
| |-CXXConstructorDecl 0x5625231d4f38 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5625231d4f38
| | `-ParmVarDecl 0x5625231d5048 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5625231d5488 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5625231d5488
|   `-ParmVarDecl 0x5625231d5598 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x56252316e598 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x56252316e610 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x56252316e678 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56252316e6d8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x56252316e738 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x56252316e788 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56252316e8a8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x56252316e948 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x56252316e9a8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x5625231ce1e8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5625231ce1e8
| | `-ParmVarDecl 0x5625231ce2f8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x5625231ce398 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5625231ce398
| | `-ParmVarDecl 0x5625231ce4a8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5625231ce518 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5625231ce518
| |-CXXMethodDecl 0x5625231ced98 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5625231ced98
| | `-ParmVarDecl 0x5625231ceea8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5625231cef18 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5625231cef18
| | `-ParmVarDecl 0x5625231cf028 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5625231d5668 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5625231d5740 <col:11>
|-FieldDecl 0x56252316ea20 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x56252316eb68 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x56252316eaa8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x56252316ed18 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x56252316ec28 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x56252316ede0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x56252316eea0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x56252316ef60 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x562523170618 <col:41, line:355:5>
|   `-ReturnStmt 0x562523170608 <line:354:9, col:38>
|     `-BinaryOperator 0x5625231705e8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x5625231705b8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x562523170568 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x56252316e9a8
|       |   `-MemberExpr 0x562523170538 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x56252316ea20
|       |     `-CXXThisExpr 0x562523170528 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x5625231705d0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x562523170598 <col:38> 'int' 0
|-CXXMethodDecl 0x56252316f020 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x56252316f160 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x56252316f0d0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x56252316f2d8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x56252316f218 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x56252316f420 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x56252316f390 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x56252316f4e8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x56252316f6b0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x56252316f598 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x56252316f618 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x56252316f7b0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x56252316f840 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625230c58d8 prev 0x562522fe4198 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5625230c59d0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x5625230c5a60 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x5625230c5b98 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x5625230c5a98 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5625230c6fc0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5625230c6fa0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x5625230c6b38 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x5625230c7050 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x5625230c7010 <col:17> 'ErrorHandler *' lvalue ParmVar 0x5625230c5a98 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x5625230c6ba0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x5625230c70d0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x5625230c7090 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x5625230c6c00 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x5625230c7110 <col:54> 'bool' false
| `-CompoundStmt 0x5625230c7218 <col:61, line:38:5>
|   `-BinaryOperator 0x5625230c71f8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x5625230c7190 <col:9> 'const Element *' lvalue ->_context 0x5625230c6ad8
|     | `-CXXThisExpr 0x5625230c7180 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x5625230c71e0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x5625230c71c0 <col:20> 'int' 0
|-CXXConstructorDecl 0x5625230c5da8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x5625230c5c58 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x5625230c5cd0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5625230c6ff8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5625230c6fd8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x5625230c6ad8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x5625230c7270 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x5625230c7230 <col:20> 'const Element *' lvalue ParmVar 0x5625230c5c58 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x5625230c6b38 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x5625230c72f0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x5625230c72b0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x5625230c5cd0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x5625230c6ba0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x5625230c7370 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x5625230c7330 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x5625230c6c00 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x5625230c73b0 <col:73> 'bool' false
| `-CompoundStmt 0x5625230c7428 <col:80, line:46:5>
|-CXXMethodDecl 0x5625230c5ed8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x5625230c74a0 <col:36, line:51:5>
|   `-ReturnStmt 0x5625230c7490 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x5625230c7478 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x5625230c7448 <col:16> 'const Element *const' lvalue ->_context 0x5625230c6ad8
|         `-CXXThisExpr 0x5625230c7438 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x5625230c5fc8 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x5625230c7520 <col:32, line:57:5>
|   `-ReturnStmt 0x5625230c7510 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x5625230c74f8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x5625230c74c8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x5625230c6b38
|         `-CXXThisExpr 0x5625230c74b8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x5625230c6088 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x5625230c6210 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x5625230c6140 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5625230c6360 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x5625230c62d0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5625230c64b0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x5625230c6420 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5625230c66b8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x5625230c6568 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x5625230c65e0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x5625230c69e8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x5625230c6778 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x5625230c67f8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x5625230c68c0 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x5625230c6aa0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x5625230c6ad8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x5625230c6b38 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x5625230c6ba0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x5625230c6c00 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x5625230c6c50 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x5625230c6c50
| `-ParmVarDecl 0x5625230c6d68 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x5625230c6e08 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x5625230c6e08
| `-ParmVarDecl 0x5625230c6f18 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x56252324c710 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625230f3078 prev 0x5625230cdc60 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5625230f3170 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x5625230f3260 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x56252311a010 <col:16, line:828:9>
|-CXXDestructorDecl 0x5625230f3350 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x56252311a020 <col:25, line:830:9>
|-CXXMethodDecl 0x5625230f3450 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x5625230f3500 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x5625230f35a8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x5625230f35a8
| `-ParmVarDecl 0x5625230f36b8 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x5625230f3e78 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x5625230f3e78
  `-ParmVarDecl 0x5625230f3f88 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625230cda98 prev 0x562522fe4228 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x5625230cdbd0 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x5625230cdc60 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x5625230cdd10 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x5625230cde18 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x5625230cdd48 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5625231094d8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5625231094b8 <col:31> 'int' 0
|-CXXConstructorDecl 0x5625230ce138 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x5625230cdfb0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x5625230ce028 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x562523109510 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5625231094f0 <col:59> 'int' 0
|-CXXConstructorDecl 0x5625230ce310 <line:265:5, col:56> col:5 used Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x5625230ce200 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x5625230ce278 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x562523109548 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x562523109528 <col:55> 'int' 0
|-CXXConstructorDecl 0x5625230ce6c8 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x5625230ce4b0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x5625230ce528 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x5625230ce5a0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x562523109580 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x562523109560 <col:31> 'int' 0
|-CXXConstructorDecl 0x5625230ce888 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x5625230ce7c8 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x5625230ce980 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x5625230ceb38 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x5625230cea70 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x5625230cec28 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x562523109930 <col:24, line:291:5>
|   `-ReturnStmt 0x562523109920 <line:290:9, col:79>
|     `-BinaryOperator 0x562523109900 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x5625231097d8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x562523109730 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x562523109710 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x562523109608 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x5625231095f0 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x5625231095d8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x5625231095a8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x5625230f4e70
|       | |   |       `-CXXThisExpr 0x562523109598 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x5625231096f8 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x5625231096e0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x5625231096a8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x562523109678 <col:28, col:35> '<bound member function type>' ->size 0x5625230b5b38
|       | |           `-ImplicitCastExpr 0x5625231096c8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x562523109660 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x562523109630 <col:28> 'Vector<String> *const' lvalue ->_conf 0x5625230f4e70
|       | |                 `-CXXThisExpr 0x562523109620 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x5625231097c0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x5625231097a8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x562523109790 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x562523109760 <col:47> 'Args::Slot *const' lvalue ->_slots 0x562523108060
|       |         `-CXXThisExpr 0x562523109750 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x5625231098e0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x5625231098c8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x5625231098b0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x562523109870 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x562523109858 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x562523109808 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x562523108110
|         |     |   `-CXXThisExpr 0x5625231097f8 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x562523109838 <col:73> 'int' 0
|         `-IntegerLiteral 0x562523109890 <col:79> 'int' 0
|-CXXMethodDecl 0x5625230cece8 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x562523109b08 <col:32, line:296:5>
|   `-ReturnStmt 0x562523109af8 <line:295:9, col:49>
|     `-BinaryOperator 0x562523109ad8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x5625231099b8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x5625231099a0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x562523109988 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x562523109958 <col:17> 'Args::Slot *const' lvalue ->_slots 0x562523108060
|       |       `-CXXThisExpr 0x562523109948 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x562523109ab8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x562523109aa0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x562523109a88 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x562523109a48 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x562523109a30 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x5625231099e0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x562523108110
|         |     |   `-CXXThisExpr 0x5625231099d0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x562523109a10 <col:43> 'int' 0
|         `-IntegerLiteral 0x562523109a68 <col:49> 'int' 0
|-CXXMethodDecl 0x5625230cedd8 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x562523109d18 <col:19, line:306:5>
|   |-IfStmt 0x562523109c38 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x562523109b78 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x562523109b60 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x562523109b30 <col:13> 'Vector<String> *' lvalue ->_conf 0x5625230f4e70
|   | |     `-CXXThisExpr 0x562523109b20 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x562523109c18 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x562523109be8 <col:13, col:20> '<bound member function type>' ->clear 0x5625230ba968
|   |     `-ImplicitCastExpr 0x562523109bd0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x562523109ba0 <col:13> 'Vector<String> *' lvalue ->_conf 0x5625230f4e70
|   |         `-CXXThisExpr 0x562523109b90 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x562523109cc0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x562523109c90 <col:9, col:16> '<bound member function type>' .clear 0x562523107be8
|   |   `-MemberExpr 0x562523109c60 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x562523108000
|   |     `-CXXThisExpr 0x562523109c50 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x562523109d08 <line:305:9, col:17>
|     `-UnaryOperator 0x562523109cf0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x562523109ce0 <col:17> 'Args *' this
|-CXXMethodDecl 0x5625230cf058 <line:313:5, col:36> col:11 used bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x5625230cef60 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x5625230cf1d8 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x5625230cf110 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x5625230cf558 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x5625230cf280 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x5625230cf4b8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x5625230cf328 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x5625230cf3a0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x56252310a048 <col:67, line:327:5>
|     |-WhileStmt 0x562523109ff8 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x562523109e10 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x562523109d80 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x56252303ecf8 0x562522fe3bc0 0x562522f83fc8 0x562522dcd5a8 0x562522dcd280 0x562522dbea60 0x562522dbe710 0x562522dbe000 0x562522d90970 0x562522d1ce30
|     | | |-DeclRefExpr 0x562523109d40 <col:16> 'Iter' lvalue ParmVar 0x5625230cf328 'begin' 'Iter'
|     | | `-DeclRefExpr 0x562523109d60 <col:25> 'Iter' lvalue ParmVar 0x5625230cf3a0 'end' 'Iter'
|     | `-CompoundStmt 0x562523109fd8 <col:30, line:325:9>
|     |   |-CallExpr 0x562523109f78 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x562523109e58 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x562523109f48 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x562523109ed8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|     |   |   `-DeclRefExpr 0x562523109eb8 <col:24> 'Iter' lvalue ParmVar 0x5625230cf328 'begin' 'Iter'
|     |   `-UnaryOperator 0x562523109fc0 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x562523109fa0 <col:15> 'Iter' lvalue ParmVar 0x5625230cf328 'begin' 'Iter'
|     `-ReturnStmt 0x56252310a038 <line:326:9, col:17>
|       `-UnaryOperator 0x56252310a020 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310a010 <col:17> 'Args *' this
|-CXXMethodDecl 0x5625230cf660 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x5625230cf5d0 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x5625230cf7a8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x5625230cf718 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x5625230cf870 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x56252310a128 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x56252310a0c8 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x56252310a078 <col:9> '<bound member function type>' ->reset_from 0x562523108488
|   | | `-CXXThisExpr 0x56252310a068 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x56252310a0a8 <col:20> 'int' 0
|   `-ReturnStmt 0x56252310a118 <line:352:9, col:17>
|     `-UnaryOperator 0x56252310a100 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56252310a0f0 <col:17> 'Args *' this
|-VarDecl 0x5625230cf928 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x5625230cf990 <col:38> 'int' 1
|-VarDecl 0x5625230cfa20 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x5625230cfa88 <col:39> 'int' 2
|-VarDecl 0x5625230cfb18 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x5625230cfb80 <col:39> 'int' 4
|-VarDecl 0x5625230cfc10 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x5625230cfc78 <col:39> 'int' 8
|-FunctionTemplateDecl 0x5625230cfff8 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x5625230cfcf0 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x5625230cff58 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x5625230cfda0 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x5625230cfe48 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x56252310a280 <col:43, line:371:5>
| |   `-ReturnStmt 0x56252310a270 <line:370:9, col:34>
| |     `-CallExpr 0x56252310a238 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x56252310a158 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x56252310a1d8 <col:21> 'const char *' lvalue ParmVar 0x5625230cfda0 'keyword' 'const char *'
| |       |-IntegerLiteral 0x56252310a1f8 <col:30> 'int' 0
| |       `-DeclRefExpr 0x56252310a218 <col:33> 'T' lvalue ParmVar 0x5625230cfe48 'x' 'T &'
| |-CXXMethodDecl 0x56252324cc08 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, unsigned int &)'
| | |-TemplateArgument type 'unsigned int'
| | |-ParmVarDecl 0x56252324ca28 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x56252324caf8 <col:37, col:40> col:40 x 'unsigned int &'
| |-CXXMethodDecl 0x56252324d8d8 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, Timestamp &)'
| | |-TemplateArgument type 'Timestamp'
| | |-ParmVarDecl 0x56252324d6f0 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x56252324d7c8 <col:37, col:40> col:40 x 'Timestamp &'
| |-CXXMethodDecl 0x56252324de58 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, IPAddress &)'
| | |-TemplateArgument type 'IPAddress'
| | |-ParmVarDecl 0x56252324dc70 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x56252324dd48 <col:37, col:40> col:40 x 'IPAddress &'
| `-CXXMethodDecl 0x56252324f1c8 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x56252324efe8 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x56252324f0b8 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x5625230d0328 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x5625230d0060 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x5625230d0288 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x5625230d0110 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d01b8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x56252310a3d0 <col:45, line:375:5>
|     `-ReturnStmt 0x56252310a3c0 <line:374:9, col:42>
|       `-CallExpr 0x56252310a388 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310a2a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310a328 <col:21> 'const char *' lvalue ParmVar 0x5625230d0110 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310a348 <col:30> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int'
|         `-DeclRefExpr 0x56252310a368 <col:41> 'T' lvalue ParmVar 0x5625230d01b8 'x' 'T &'
|-FunctionTemplateDecl 0x5625230d0658 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x5625230d0390 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x5625230d05b8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x5625230d0440 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d04e8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x56252310a520 <col:45, line:379:5>
|     `-ReturnStmt 0x56252310a510 <line:378:9, col:43>
|       `-CallExpr 0x56252310a4d8 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310a3f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310a478 <col:21> 'const char *' lvalue ParmVar 0x5625230d0440 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310a498 <col:30> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int'
|         `-DeclRefExpr 0x56252310a4b8 <col:42> 'T' lvalue ParmVar 0x5625230d04e8 'x' 'T &'
|-FunctionTemplateDecl 0x5625230d0988 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x5625230d06c0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x5625230d08e8 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x5625230d0770 <col:19, col:31> col:31 referenced keyword 'const char *'
| | |-ParmVarDecl 0x5625230d0818 <col:40, col:43> col:43 referenced x 'T &'
| | `-CompoundStmt 0x56252310a720 <col:46, line:383:5>
| |   `-ReturnStmt 0x56252310a710 <line:382:9, col:55>
| |     `-CallExpr 0x56252310a6d8 <col:16, col:55> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x56252310a548 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x56252310a5c8 <col:21> 'const char *' lvalue ParmVar 0x5625230d0770 'keyword' 'const char *'
| |       |-BinaryOperator 0x56252310a698 <col:30, col:42> 'int' '|'
| |       | |-ImplicitCastExpr 0x56252310a648 <col:30> 'int' <LValueToRValue>
| |       | | `-DeclRefExpr 0x56252310a628 <col:30> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int' non_odr_use_constant
| |       | `-ImplicitCastExpr 0x56252310a680 <col:42> 'int' <LValueToRValue>
| |       |   `-DeclRefExpr 0x56252310a660 <col:42> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int' non_odr_use_constant
| |       `-DeclRefExpr 0x56252310a6b8 <col:54> 'T' lvalue ParmVar 0x5625230d0818 'x' 'T &'
| `-CXXMethodDecl 0x56252326b588 <line:381:5, line:383:5> line:381:11 used read_mp 'Args &(const char *, EtherAddress &)'
|   |-TemplateArgument type 'EtherAddress'
|   |-ParmVarDecl 0x56252326b3a0 <col:19, col:31> col:31 keyword 'const char *'
|   `-ParmVarDecl 0x56252326b478 <col:40, col:43> col:43 x 'EtherAddress &'
|-FunctionTemplateDecl 0x5625230d0d88 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x5625230d09f0 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x5625230d0ce8 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x5625230d0aa0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d0b20 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x5625230d0bc8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x56252310a860 <col:54, line:388:5>
|     |-CallExpr 0x56252310a7e8 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310a738 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x56252310a778 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x56252310a788 <col:30> 'const char *' lvalue ParmVar 0x5625230d0aa0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56252310a7a8 <col:39> 'int' lvalue ParmVar 0x5625230d0b20 'flags' 'int'
|     | `-DeclRefExpr 0x56252310a7c8 <col:46> 'T' lvalue ParmVar 0x5625230d0bc8 'x' 'T &'
|     `-ReturnStmt 0x56252310a850 <line:387:9, col:17>
|       `-UnaryOperator 0x56252310a838 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310a828 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230d1238 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x5625230d0df8 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x5625230d0e78 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x5625230d1198 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x5625230d0f38 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d0fd8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x5625230d1078 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x56252310a9d0 <col:74, line:403:5>
|     `-ReturnStmt 0x56252310a9c0 <line:402:9, col:56>
|       `-CallExpr 0x56252310a980 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310a890 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310a900 <col:28> 'const char *' lvalue ParmVar 0x5625230d0f38 'keyword' 'const char *'
|         |-IntegerLiteral 0x56252310a920 <col:37> 'int' 0
|         |-DeclRefExpr 0x56252310a940 <col:40> 'T' lvalue ParmVar 0x5625230d0fd8 'x' 'T &'
|         `-DeclRefExpr 0x56252310a960 <col:43> 'const V' lvalue ParmVar 0x5625230d1078 'default_value' 'const V &'
|-FunctionTemplateDecl 0x5625230d16a8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x5625230d12a8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x5625230d1328 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x5625230d1608 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x5625230d13e8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d1488 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x5625230d1528 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x56252310ab38 <col:76, line:407:5>
|     `-ReturnStmt 0x56252310ab28 <line:406:9, col:65>
|       `-CallExpr 0x56252310aae8 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310a9f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310aa68 <col:28> 'const char *' lvalue ParmVar 0x5625230d13e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310aa88 <col:37> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int'
|         |-DeclRefExpr 0x56252310aaa8 <col:49> 'T' lvalue ParmVar 0x5625230d1488 'x' 'T &'
|         `-DeclRefExpr 0x56252310aac8 <col:52> 'const V' lvalue ParmVar 0x5625230d1528 'default_value' 'const V &'
|-FunctionTemplateDecl 0x5625230d6020 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x5625230d1718 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x5625230d1798 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x5625230d5f80 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x5625230d1858 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d18d8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x5625230d1978 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x5625230d1a18 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x56252310aca0 <col:85, line:412:5>
|     |-CallExpr 0x56252310ac20 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310ab50 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x56252310ab90 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x56252310aba0 <col:37> 'const char *' lvalue ParmVar 0x5625230d1858 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56252310abc0 <col:46> 'int' lvalue ParmVar 0x5625230d18d8 'flags' 'int'
|     | |-DeclRefExpr 0x56252310abe0 <col:53> 'T' lvalue ParmVar 0x5625230d1978 'x' 'T &'
|     | `-DeclRefExpr 0x56252310ac00 <col:56> 'const V' lvalue ParmVar 0x5625230d1a18 'default_value' 'const V &'
|     `-ReturnStmt 0x56252310ac90 <line:411:9, col:17>
|       `-UnaryOperator 0x56252310ac78 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310ac68 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230d64b8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x5625230d6098 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d6118 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x5625230d6418 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x5625230d61d8 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x5625230d6250 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x5625230d62f8 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x56252310ae20 <col:53, line:425:5>
| |   `-ReturnStmt 0x56252310ae10 <line:424:9, col:42>
| |     `-CallExpr 0x56252310add0 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x56252310acd0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x56252310ad50 <col:21> 'const char *' lvalue ParmVar 0x5625230d61d8 'keyword' 'const char *'
| |       |-IntegerLiteral 0x56252310ad70 <col:30> 'int' 0
| |       |-DeclRefExpr 0x56252310ad90 <col:33> 'P' lvalue ParmVar 0x5625230d6250 'parser' 'P'
| |       `-DeclRefExpr 0x56252310adb0 <col:41> 'T' lvalue ParmVar 0x5625230d62f8 'x' 'T &'
| `-CXXMethodDecl 0x56252324ea38 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, ElementCastArg, ARPTable *&)'
|   |-TemplateArgument type 'ElementCastArg'
|   |-TemplateArgument type 'ARPTable *'
|   |-ParmVarDecl 0x56252324e778 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x56252324e818 <col:37, col:39> col:39 parser 'ElementCastArg':'ElementCastArg'
|   `-ParmVarDecl 0x56252324e918 <col:47, col:50> col:50 x 'ARPTable *&'
|-FunctionTemplateDecl 0x5625230d6908 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x5625230d6528 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d65a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230d6868 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x5625230d6668 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d66e0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d6788 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x56252310af98 <col:55, line:429:5>
|     `-ReturnStmt 0x56252310af88 <line:428:9, col:50>
|       `-CallExpr 0x56252310af48 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310ae48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310aec8 <col:21> 'const char *' lvalue ParmVar 0x5625230d6668 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310aee8 <col:30> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int'
|         |-DeclRefExpr 0x56252310af08 <col:41> 'P' lvalue ParmVar 0x5625230d66e0 'parser' 'P'
|         `-DeclRefExpr 0x56252310af28 <col:49> 'T' lvalue ParmVar 0x5625230d6788 'x' 'T &'
|-FunctionTemplateDecl 0x5625230d6d58 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x5625230d6978 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d69f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230d6cb8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x5625230d6ab8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d6b30 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d6bd8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x56252310b110 <col:55, line:433:5>
|     `-ReturnStmt 0x56252310b100 <line:432:9, col:51>
|       `-CallExpr 0x56252310b0c0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310afc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310b040 <col:21> 'const char *' lvalue ParmVar 0x5625230d6ab8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310b060 <col:30> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int'
|         |-DeclRefExpr 0x56252310b080 <col:42> 'P' lvalue ParmVar 0x5625230d6b30 'parser' 'P'
|         `-DeclRefExpr 0x56252310b0a0 <col:50> 'T' lvalue ParmVar 0x5625230d6bd8 'x' 'T &'
|-FunctionTemplateDecl 0x5625230d71a8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x5625230d6dc8 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d6e48 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230d7108 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x5625230d6f08 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d6f80 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d7028 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x56252310b338 <col:56, line:437:5>
|     `-ReturnStmt 0x56252310b328 <line:436:9, col:63>
|       `-CallExpr 0x56252310b2e8 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310b138 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310b1b8 <col:21> 'const char *' lvalue ParmVar 0x5625230d6f08 'keyword' 'const char *'
|         |-BinaryOperator 0x56252310b288 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x56252310b238 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56252310b218 <col:30> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x56252310b270 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x56252310b250 <col:42> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x56252310b2a8 <col:54> 'P' lvalue ParmVar 0x5625230d6f80 'parser' 'P'
|         `-DeclRefExpr 0x56252310b2c8 <col:62> 'T' lvalue ParmVar 0x5625230d7028 'x' 'T &'
|-FunctionTemplateDecl 0x5625230d76d8 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x5625230d7218 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d7298 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230d7638 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x5625230d7358 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d73d8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x5625230d7450 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d74f8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x56252310b4a0 <col:64, line:442:5>
|     |-CallExpr 0x56252310b420 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310b350 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x56252310b390 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x56252310b3a0 <col:30> 'const char *' lvalue ParmVar 0x5625230d7358 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56252310b3c0 <col:39> 'int' lvalue ParmVar 0x5625230d73d8 'flags' 'int'
|     | |-DeclRefExpr 0x56252310b3e0 <col:46> 'P' lvalue ParmVar 0x5625230d7450 'parser' 'P'
|     | `-DeclRefExpr 0x56252310b400 <col:54> 'T' lvalue ParmVar 0x5625230d74f8 'x' 'T &'
|     `-ReturnStmt 0x56252310b490 <line:441:9, col:17>
|       `-UnaryOperator 0x56252310b478 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310b468 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230d7cd8 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x5625230d7750 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d77c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x5625230d7848 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x5625230d7c38 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x5625230d7910 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d7988 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d7a28 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x5625230d7af8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x56252310b638 <col:84, line:458:5>
|     `-ReturnStmt 0x56252310b628 <line:457:9, col:64>
|       `-CallExpr 0x56252310b5e0 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310b4d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310b540 <col:28> 'const char *' lvalue ParmVar 0x5625230d7910 'keyword' 'const char *'
|         |-IntegerLiteral 0x56252310b560 <col:37> 'int' 0
|         |-DeclRefExpr 0x56252310b580 <col:40> 'P' lvalue ParmVar 0x5625230d7988 'parser' 'P'
|         |-DeclRefExpr 0x56252310b5a0 <col:48> 'T' lvalue ParmVar 0x5625230d7a28 'x' 'T &'
|         `-DeclRefExpr 0x56252310b5c0 <col:51> 'const V' lvalue ParmVar 0x5625230d7af8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x5625230d8258 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x5625230d7d50 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d7dc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x5625230d7e48 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x5625230d81b8 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x5625230d7f10 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d7f88 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d8028 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x5625230d80c8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x56252310b7c8 <col:86, line:462:5>
|     `-ReturnStmt 0x56252310b7b8 <line:461:9, col:73>
|       `-CallExpr 0x56252310b770 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310b660 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310b6d0 <col:28> 'const char *' lvalue ParmVar 0x5625230d7f10 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310b6f0 <col:37> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int'
|         |-DeclRefExpr 0x56252310b710 <col:49> 'P' lvalue ParmVar 0x5625230d7f88 'parser' 'P'
|         |-DeclRefExpr 0x56252310b730 <col:57> 'T' lvalue ParmVar 0x5625230d8028 'x' 'T &'
|         `-DeclRefExpr 0x56252310b750 <col:60> 'const V' lvalue ParmVar 0x5625230d80c8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x5625230d88b8 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x5625230d82d0 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d8348 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x5625230d83c8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x5625230d8818 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x5625230d8490 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d8510 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x5625230d8588 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d8628 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x5625230d86c8 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x56252310b958 <col:95, line:467:5>
|     |-CallExpr 0x56252310b8d0 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310b7e0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x56252310b820 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x56252310b830 <col:37> 'const char *' lvalue ParmVar 0x5625230d8490 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56252310b850 <col:46> 'int' lvalue ParmVar 0x5625230d8510 'flags' 'int'
|     | |-DeclRefExpr 0x56252310b870 <col:53> 'P' lvalue ParmVar 0x5625230d8588 'parser' 'P'
|     | |-DeclRefExpr 0x56252310b890 <col:61> 'T' lvalue ParmVar 0x5625230d8628 'x' 'T &'
|     | `-DeclRefExpr 0x56252310b8b0 <col:64> 'const V' lvalue ParmVar 0x5625230d86c8 'default_value' 'const V &'
|     `-ReturnStmt 0x56252310b948 <line:466:9, col:17>
|       `-UnaryOperator 0x56252310b930 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310b920 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230d8e98 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x5625230d8938 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d89b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x5625230d8a38 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x5625230d8df8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x5625230d8b00 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d8b78 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d8c18 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x5625230d8cb8 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x56252310bb00 <col:63, line:481:5>
|     `-ReturnStmt 0x56252310baf0 <line:480:9, col:47>
|       `-CallExpr 0x56252310baa8 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310b988 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310ba08 <col:21> 'const char *' lvalue ParmVar 0x5625230d8b00 'keyword' 'const char *'
|         |-IntegerLiteral 0x56252310ba28 <col:30> 'int' 0
|         |-DeclRefExpr 0x56252310ba48 <col:33> 'P' lvalue ParmVar 0x5625230d8b78 'parser' 'P'
|         |-DeclRefExpr 0x56252310ba68 <col:41> 'T1' lvalue ParmVar 0x5625230d8c18 'x1' 'T1 &'
|         `-DeclRefExpr 0x56252310ba88 <col:45> 'T2' lvalue ParmVar 0x5625230d8cb8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x5625230d9418 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x5625230d8f10 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d8f88 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x5625230d9008 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x5625230d9378 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x5625230d90d0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d9148 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d91e8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x5625230d9288 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x56252310bca0 <col:65, line:485:5>
|     `-ReturnStmt 0x56252310bc90 <line:484:9, col:55>
|       `-CallExpr 0x56252310bc48 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310bb28 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310bba8 <col:21> 'const char *' lvalue ParmVar 0x5625230d90d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310bbc8 <col:30> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int'
|         |-DeclRefExpr 0x56252310bbe8 <col:41> 'P' lvalue ParmVar 0x5625230d9148 'parser' 'P'
|         |-DeclRefExpr 0x56252310bc08 <col:49> 'T1' lvalue ParmVar 0x5625230d91e8 'x1' 'T1 &'
|         `-DeclRefExpr 0x56252310bc28 <col:53> 'T2' lvalue ParmVar 0x5625230d9288 'x2' 'T2 &'
|-FunctionTemplateDecl 0x5625230d9998 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x5625230d9490 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d9508 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x5625230d9588 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x5625230d98f8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x5625230d9650 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230d96c8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x5625230d9768 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x5625230d9808 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x56252310be40 <col:65, line:489:5>
|     `-ReturnStmt 0x56252310be30 <line:488:9, col:56>
|       `-CallExpr 0x56252310bde8 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310bcc8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310bd48 <col:21> 'const char *' lvalue ParmVar 0x5625230d9650 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310bd68 <col:30> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int'
|         |-DeclRefExpr 0x56252310bd88 <col:42> 'P' lvalue ParmVar 0x5625230d96c8 'parser' 'P'
|         |-DeclRefExpr 0x56252310bda8 <col:50> 'T1' lvalue ParmVar 0x5625230d9768 'x1' 'T1 &'
|         `-DeclRefExpr 0x56252310bdc8 <col:54> 'T2' lvalue ParmVar 0x5625230d9808 'x2' 'T2 &'
|-FunctionTemplateDecl 0x5625230d9f18 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x5625230d9a10 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230d9a88 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x5625230d9b08 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| |-CXXMethodDecl 0x5625230d9e78 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
| | |-ParmVarDecl 0x5625230d9bd0 <col:19, col:31> col:31 referenced keyword 'const char *'
| | |-ParmVarDecl 0x5625230d9c48 <col:40, col:42> col:42 referenced parser 'P'
| | |-ParmVarDecl 0x5625230d9ce8 <col:50, col:54> col:54 referenced x1 'T1 &'
| | |-ParmVarDecl 0x5625230d9d88 <col:58, col:62> col:62 referenced x2 'T2 &'
| | `-CompoundStmt 0x56252310c090 <col:66, line:493:5>
| |   `-ReturnStmt 0x56252310c080 <line:492:9, col:68>
| |     `-CallExpr 0x56252310c038 <col:16, col:68> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x56252310be68 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x56252310bee8 <col:21> 'const char *' lvalue ParmVar 0x5625230d9bd0 'keyword' 'const char *'
| |       |-BinaryOperator 0x56252310bfb8 <col:30, col:42> 'int' '|'
| |       | |-ImplicitCastExpr 0x56252310bf68 <col:30> 'int' <LValueToRValue>
| |       | | `-DeclRefExpr 0x56252310bf48 <col:30> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int' non_odr_use_constant
| |       | `-ImplicitCastExpr 0x56252310bfa0 <col:42> 'int' <LValueToRValue>
| |       |   `-DeclRefExpr 0x56252310bf80 <col:42> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int' non_odr_use_constant
| |       |-DeclRefExpr 0x56252310bfd8 <col:54> 'P' lvalue ParmVar 0x5625230d9c48 'parser' 'P'
| |       |-DeclRefExpr 0x56252310bff8 <col:62> 'T1' lvalue ParmVar 0x5625230d9ce8 'x1' 'T1 &'
| |       `-DeclRefExpr 0x56252310c018 <col:66> 'T2' lvalue ParmVar 0x5625230d9d88 'x2' 'T2 &'
| `-CXXMethodDecl 0x562523251d38 <line:491:5, line:493:5> line:491:11 used read_mp 'Args &(const char *, IPPrefixArg, IPAddress &, IPAddress &)'
|   |-TemplateArgument type 'IPPrefixArg'
|   |-TemplateArgument type 'IPAddress'
|   |-TemplateArgument type 'IPAddress'
|   |-ParmVarDecl 0x5625232519b0 <col:19, col:31> col:31 keyword 'const char *'
|   |-ParmVarDecl 0x562523251a58 <col:40, col:42> col:42 parser 'IPPrefixArg':'IPPrefixArg'
|   |-ParmVarDecl 0x562523251b28 <col:50, col:54> col:54 x1 'IPAddress &'
|   `-ParmVarDecl 0x562523251bf8 <col:58, col:62> col:62 x2 'IPAddress &'
|-FunctionTemplateDecl 0x5625230da578 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x5625230d9f90 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230da008 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x5625230da088 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x5625230da4d8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x5625230da150 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230da1d0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x5625230da248 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x5625230da2e8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x5625230da388 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x56252310c220 <col:74, line:498:5>
|     |-CallExpr 0x56252310c198 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310c0a8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x56252310c0e8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x56252310c0f8 <col:30> 'const char *' lvalue ParmVar 0x5625230da150 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56252310c118 <col:39> 'int' lvalue ParmVar 0x5625230da1d0 'flags' 'int'
|     | |-DeclRefExpr 0x56252310c138 <col:46> 'P' lvalue ParmVar 0x5625230da248 'parser' 'P'
|     | |-DeclRefExpr 0x56252310c158 <col:54> 'T1' lvalue ParmVar 0x5625230da2e8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x56252310c178 <col:58> 'T2' lvalue ParmVar 0x5625230da388 'x2' 'T2 &'
|     `-ReturnStmt 0x56252310c210 <line:497:9, col:17>
|       `-UnaryOperator 0x56252310c1f8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310c1e8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230da8d8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x5625230da5f8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230da838 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x5625230da6b0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230da728 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x56252310c368 <col:52, line:509:5>
|     `-ReturnStmt 0x56252310c358 <line:508:9, col:44>
|       `-CallExpr 0x56252310c320 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310c250 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310c2c0 <col:26> 'const char *' lvalue ParmVar 0x5625230da6b0 'keyword' 'const char *'
|         |-IntegerLiteral 0x56252310c2e0 <col:35> 'int' 0
|         `-DeclRefExpr 0x56252310c300 <col:38> 'P' lvalue ParmVar 0x5625230da728 'parser' 'P'
|-FunctionTemplateDecl 0x5625230dabd8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x5625230da940 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230dab38 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x5625230da9f0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230daa68 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x56252310c4a8 <col:54, line:513:5>
|     `-ReturnStmt 0x56252310c498 <line:512:9, col:52>
|       `-CallExpr 0x56252310c460 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310c390 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310c400 <col:26> 'const char *' lvalue ParmVar 0x5625230da9f0 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310c420 <col:35> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int'
|         `-DeclRefExpr 0x56252310c440 <col:46> 'P' lvalue ParmVar 0x5625230daa68 'parser' 'P'
|-FunctionTemplateDecl 0x5625230daed8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x5625230dac40 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230dae38 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x5625230dacf0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dad68 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x56252310c5e8 <col:54, line:517:5>
|     `-ReturnStmt 0x56252310c5d8 <line:516:9, col:53>
|       `-CallExpr 0x56252310c5a0 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310c4d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310c540 <col:26> 'const char *' lvalue ParmVar 0x5625230dacf0 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310c560 <col:35> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int'
|         `-DeclRefExpr 0x56252310c580 <col:47> 'P' lvalue ParmVar 0x5625230dad68 'parser' 'P'
|-FunctionTemplateDecl 0x5625230db1d8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x5625230daf40 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230db138 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x5625230daff0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230db068 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x56252310c7d8 <col:55, line:521:5>
|     `-ReturnStmt 0x56252310c7c8 <line:520:9, col:65>
|       `-CallExpr 0x56252310c790 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310c610 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310c680 <col:26> 'const char *' lvalue ParmVar 0x5625230daff0 'keyword' 'const char *'
|         |-BinaryOperator 0x56252310c750 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x56252310c700 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56252310c6e0 <col:35> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x56252310c738 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x56252310c718 <col:47> 'const int' lvalue Var 0x5625230cfa20 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x56252310c770 <col:59> 'P' lvalue ParmVar 0x5625230db068 'parser' 'P'
|-FunctionTemplateDecl 0x5625230db5a8 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x5625230db240 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230db508 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x5625230db2f0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230db370 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x5625230db3e8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x56252310c918 <col:63, line:526:5>
|     |-CallExpr 0x56252310c8a0 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310c7f0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x56252310c830 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x56252310c840 <col:35> 'const char *' lvalue ParmVar 0x5625230db2f0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x56252310c860 <col:44> 'int' lvalue ParmVar 0x5625230db370 'flags' 'int'
|     | `-DeclRefExpr 0x56252310c880 <col:51> 'P' lvalue ParmVar 0x5625230db3e8 'parser' 'P'
|     `-ReturnStmt 0x56252310c908 <line:525:9, col:17>
|       `-UnaryOperator 0x56252310c8f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310c8e0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230db9f8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x5625230db618 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230db698 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230db958 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x5625230db758 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230db7d0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x5625230db878 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x56252310ca70 <col:58, line:541:5>
|     `-ReturnStmt 0x56252310ca60 <line:540:9, col:39>
|       `-CallExpr 0x56252310ca28 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310c948 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310c9c8 <col:21> 'const char *' lvalue ParmVar 0x5625230db758 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310c9e8 <col:30> 'P' lvalue ParmVar 0x5625230db7d0 'parser' 'P'
|         `-DeclRefExpr 0x56252310ca08 <col:38> 'T' lvalue ParmVar 0x5625230db878 'x' 'T &'
|-FunctionTemplateDecl 0x5625230dbe48 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x5625230dba68 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230dbae8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230dbda8 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x5625230dbba8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dbc20 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x5625230dbcc8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x56252310cba8 <col:60, line:545:5>
|     `-ReturnStmt 0x56252310cb98 <line:544:9, col:41>
|       `-CallExpr 0x56252310cb60 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310ca98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310cb00 <col:23> 'const char *' lvalue ParmVar 0x5625230dbba8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310cb20 <col:32> 'P' lvalue ParmVar 0x5625230dbc20 'parser' 'P'
|         `-DeclRefExpr 0x56252310cb40 <col:40> 'T' lvalue ParmVar 0x5625230dbcc8 'x' 'T &'
|-FunctionTemplateDecl 0x5625230dc298 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x5625230dbeb8 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230dbf38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230dc1f8 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x5625230dbff8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dc070 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x5625230dc118 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x56252310cce0 <col:60, line:549:5>
|     `-ReturnStmt 0x56252310ccd0 <line:548:9, col:41>
|       `-CallExpr 0x56252310cc98 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310cbd0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310cc38 <col:23> 'const char *' lvalue ParmVar 0x5625230dbff8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310cc58 <col:32> 'P' lvalue ParmVar 0x5625230dc070 'parser' 'P'
|         `-DeclRefExpr 0x56252310cc78 <col:40> 'T' lvalue ParmVar 0x5625230dc118 'x' 'T &'
|-FunctionTemplateDecl 0x5625230dc6e8 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x5625230dc308 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230dc388 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230dc648 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x5625230dc448 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dc4c0 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x5625230dc568 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x56252310ce18 <col:61, line:553:5>
|     `-ReturnStmt 0x56252310ce08 <line:552:9, col:42>
|       `-CallExpr 0x56252310cdd0 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310cd08 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310cd70 <col:24> 'const char *' lvalue ParmVar 0x5625230dc448 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310cd90 <col:33> 'P' lvalue ParmVar 0x5625230dc4c0 'parser' 'P'
|         `-DeclRefExpr 0x56252310cdb0 <col:41> 'T' lvalue ParmVar 0x5625230dc568 'x' 'T &'
|-FunctionTemplateDecl 0x5625230dcbc8 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x5625230dc758 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230dc7d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230dcb28 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x5625230dc898 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dc918 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x5625230dc990 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x5625230dca38 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x56252310cf90 <col:69, line:557:5>
|     `-ReturnStmt 0x56252310cf80 <line:556:9, col:46>
|       `-CallExpr 0x56252310cf40 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310ce40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310cec0 <col:21> 'const char *' lvalue ParmVar 0x5625230dc898 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310cee0 <col:30> 'int' lvalue ParmVar 0x5625230dc918 'flags' 'int'
|         |-DeclRefExpr 0x56252310cf00 <col:37> 'P' lvalue ParmVar 0x5625230dc990 'parser' 'P'
|         `-DeclRefExpr 0x56252310cf20 <col:45> 'T' lvalue ParmVar 0x5625230dca38 'x' 'T &'
|-FunctionTemplateDecl 0x5625230dced8 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x5625230dcc40 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230dce38 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x5625230dccf0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dcd68 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x56252310d0d0 <col:56, line:571:5>
|     `-ReturnStmt 0x56252310d0c0 <line:570:9, col:48>
|       `-CallExpr 0x56252310d088 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310cfb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310d028 <col:30> 'const char *' lvalue ParmVar 0x5625230dccf0 'keyword' 'const char *'
|         |-IntegerLiteral 0x56252310d048 <col:39> 'int' 0
|         `-DeclRefExpr 0x56252310d068 <col:42> 'P' lvalue ParmVar 0x5625230dcd68 'parser' 'P'
|-FunctionTemplateDecl 0x5625230dd268 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x5625230dcf40 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230dd1c8 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x5625230dcff0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dd070 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x5625230dd0e8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x56252310d2a0 <col:67, line:576:5>
|     |-CallExpr 0x56252310d228 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310d0e8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x56252310d128 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x56252310d138 <col:39> 'const char *' lvalue ParmVar 0x5625230dcff0 'keyword' 'const char *'
|     | |-BinaryOperator 0x56252310d1e8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x56252310d198 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x56252310d158 <col:48> 'int' lvalue ParmVar 0x5625230dd070 'flags' 'int'
|     | | `-ImplicitCastExpr 0x56252310d1d0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x56252310d1b0 <col:56> 'const int' lvalue Var 0x5625230cfc10 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x56252310d208 <col:68> 'P' lvalue ParmVar 0x5625230dd0e8 'parser' 'P'
|     `-ReturnStmt 0x56252310d290 <line:575:9, col:17>
|       `-UnaryOperator 0x56252310d278 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310d268 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230dd6b8 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x5625230dd2d8 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230dd358 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230dd618 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x5625230dd418 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dd490 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x5625230dd538 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x56252310d410 <col:62, line:592:5>
|     `-ReturnStmt 0x56252310d400 <line:591:9, col:51>
|       `-CallExpr 0x56252310d3c0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310d2d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310d340 <col:30> 'const char *' lvalue ParmVar 0x5625230dd418 'keyword' 'const char *'
|         |-IntegerLiteral 0x56252310d360 <col:39> 'int' 0
|         |-DeclRefExpr 0x56252310d380 <col:42> 'P' lvalue ParmVar 0x5625230dd490 'parser' 'P'
|         `-DeclRefExpr 0x56252310d3a0 <col:50> 'T' lvalue ParmVar 0x5625230dd538 'x' 'T &'
|-FunctionTemplateDecl 0x5625230ddb98 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x5625230dd728 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230dd7a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230ddaf8 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x5625230dd868 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dd8e8 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x5625230dd960 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x5625230dda08 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x56252310d608 <col:73, line:597:5>
|     |-CallExpr 0x56252310d588 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310d428 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x56252310d468 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x56252310d478 <col:39> 'const char *' lvalue ParmVar 0x5625230dd868 'keyword' 'const char *'
|     | |-BinaryOperator 0x56252310d528 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x56252310d4d8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x56252310d498 <col:48> 'int' lvalue ParmVar 0x5625230dd8e8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x56252310d510 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x56252310d4f0 <col:56> 'const int' lvalue Var 0x5625230cfc10 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x56252310d548 <col:68> 'P' lvalue ParmVar 0x5625230dd960 'parser' 'P'
|     | `-DeclRefExpr 0x56252310d568 <col:76> 'T' lvalue ParmVar 0x5625230dda08 'x' 'T &'
|     `-ReturnStmt 0x56252310d5f8 <line:596:9, col:17>
|       `-UnaryOperator 0x56252310d5e0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310d5d0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230edef8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x5625230ddc10 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230ddc88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230ede58 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x5625230ddd48 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230dddc0 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x5625230edd30 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x56252310d778 <col:65, line:614:5>
|     `-ReturnStmt 0x56252310d768 <line:613:9, col:46>
|       `-CallExpr 0x56252310d728 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310d638 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310d6a8 <col:25> 'const char *' lvalue ParmVar 0x5625230ddd48 'keyword' 'const char *'
|         |-IntegerLiteral 0x56252310d6c8 <col:34> 'int' 0
|         |-DeclRefExpr 0x56252310d6e8 <col:37> 'P' lvalue ParmVar 0x5625230dddc0 'parser' 'P'
|         `-DeclRefExpr 0x56252310d708 <col:45> 'Vector<T>' lvalue ParmVar 0x5625230edd30 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x5625230ee328 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x5625230edf68 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x5625230ee288 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x5625230ee020 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230ee170 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x56252310d990 <col:55, line:618:5>
|     `-ReturnStmt 0x56252310d980 <line:617:9, col:55>
|       `-CallExpr 0x56252310d940 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310d7a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310d810 <col:25> 'const char *' lvalue ParmVar 0x5625230ee020 'keyword' 'const char *'
|         |-IntegerLiteral 0x56252310d830 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x56252310d900 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x56252310d920 <col:54> 'Vector<T>' lvalue ParmVar 0x5625230ee170 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x5625230ee8f8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x5625230ee390 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230ee408 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230ee858 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x5625230ee4c8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230ee548 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x5625230ee5c0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x5625230ee710 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x56252310db88 <col:76, line:623:5>
|     |-CallExpr 0x56252310db08 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x56252310d9a8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x56252310d9e8 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x56252310d9f8 <col:34> 'const char *' lvalue ParmVar 0x5625230ee4c8 'keyword' 'const char *'
|     | |-BinaryOperator 0x56252310daa8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x56252310da58 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x56252310da18 <col:43> 'int' lvalue ParmVar 0x5625230ee548 'flags' 'int'
|     | | `-ImplicitCastExpr 0x56252310da90 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x56252310da70 <col:51> 'const int' lvalue Var 0x5625230cfc10 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x56252310dac8 <col:63> 'P' lvalue ParmVar 0x5625230ee5c0 'parser' 'P'
|     | `-DeclRefExpr 0x56252310dae8 <col:71> 'Vector<T>' lvalue ParmVar 0x5625230ee710 'x' 'Vector<T> &'
|     `-ReturnStmt 0x56252310db78 <line:622:9, col:17>
|       `-UnaryOperator 0x56252310db60 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56252310db50 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230eee38 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x5625230ee970 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230ee9e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230eed98 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x5625230eeaa8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230eeb28 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x5625230eec70 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x56252310ddf0 <col:66, line:627:5>
|     `-ReturnStmt 0x56252310dde0 <line:626:9, col:59>
|       `-CallExpr 0x56252310dda0 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x56252310dbb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x56252310dc28 <col:25> 'const char *' lvalue ParmVar 0x5625230eeaa8 'keyword' 'const char *'
|         |-DeclRefExpr 0x56252310dc48 <col:34> 'int' lvalue ParmVar 0x5625230eeb28 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x56252310dd60 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x56252310dd80 <col:58> 'Vector<T>' lvalue ParmVar 0x5625230eec70 'x' 'Vector<T> &'
|-CXXMethodDecl 0x5625230eeec8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x56252310de70 <col:25, line:633:5>
|   `-ReturnStmt 0x56252310de60 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x56252310de48 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x56252310de18 <col:16> 'const bool' lvalue ->_status 0x5625230f4cd8
|         `-CXXThisExpr 0x56252310de08 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x5625230ef048 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x5625230eef80 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x56252310df58 <col:27, line:639:5>
|   |-BinaryOperator 0x56252310df00 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x56252310de88 <col:9> 'bool' lvalue ParmVar 0x5625230eef80 'x' 'bool &'
|   | `-ImplicitCastExpr 0x56252310dee8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x56252310deb8 <col:13> 'bool' lvalue ->_status 0x5625230f4cd8
|   |     `-CXXThisExpr 0x56252310dea8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x56252310df48 <line:638:9, col:17>
|     `-UnaryOperator 0x56252310df30 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56252310df20 <col:17> 'Args *' this
|-CXXMethodDecl 0x5625230ef1c8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x5625230ef108 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x56252310e048 <col:39, line:644:5>
|   |-BinaryOperator 0x56252310dff0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x56252310df78 <col:9> 'bool' lvalue ParmVar 0x5625230ef108 'x' 'bool &'
|   | `-ImplicitCastExpr 0x56252310dfd8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x56252310dfa8 <col:13> 'const bool' lvalue ->_status 0x5625230f4cd8
|   |     `-CXXThisExpr 0x56252310df98 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x56252310e038 <line:643:9, col:17>
|     `-UnaryOperator 0x56252310e020 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56252310e010 <col:17> 'const Args *' this
|-CXXMethodDecl 0x5625230ef290 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x5625231120d8 <col:30, line:651:5>
|   `-ReturnStmt 0x5625231120c8 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x5625231120b0 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x562523112080 <col:16> 'bool' lvalue ->_read_status 0x5625230c6c00
|         `-ImplicitCastExpr 0x562523112060 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x56252310e068 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x5625230ef3d8 <line:655:5, line:658:5> line:655:11 used read_status 'Args &(bool &)'
| |-ParmVarDecl 0x5625230ef348 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x5625231121e0 <col:32, line:658:5>
|   |-BinaryOperator 0x562523112188 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x5625231120f0 <col:9> 'bool' lvalue ParmVar 0x5625230ef348 'x' 'bool &'
|   | `-ImplicitCastExpr 0x562523112170 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x562523112140 <col:13> 'bool' lvalue ->_read_status 0x5625230c6c00
|   |     `-ImplicitCastExpr 0x562523112120 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x562523112110 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x5625231121d0 <line:657:9, col:17>
|     `-UnaryOperator 0x5625231121b8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5625231121a8 <col:17> 'Args *' this
|-CXXMethodDecl 0x5625230ef528 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x5625230ef498 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x5625231122f0 <col:44, line:663:5>
|   |-BinaryOperator 0x562523112298 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x562523112200 <col:9> 'bool' lvalue ParmVar 0x5625230ef498 'x' 'bool &'
|   | `-ImplicitCastExpr 0x562523112280 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x562523112250 <col:13> 'bool' lvalue ->_read_status 0x5625230c6c00
|   |     `-ImplicitCastExpr 0x562523112230 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x562523112220 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x5625231122e0 <line:662:9, col:17>
|     `-UnaryOperator 0x5625231122c8 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5625231122b8 <col:17> 'const Args *' this
|-CXXMethodDecl 0x5625230ef5f0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x5625230ef6b8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x5625230ef780 <line:684:5, col:17> col:9 used consume 'int ()'
|-CXXMethodDecl 0x5625230ef848 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x5625230efb58 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x5625230ef8e8 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x5625230efab8 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x5625230ef9c8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x5625231126a0 <col:19, line:706:5>
|     `-IfStmt 0x562523112678 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x5625231123e8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x5625231125a8 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x562523112578 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x562523112538 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x562523112440 <col:42> '<bound member function type>' ->simple_slot 0x562523109140
|       |     | `-CXXThisExpr 0x562523112430 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x5625231124d8 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x562523112490 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x562522dd2048
|       |     | `-DeclRefExpr 0x562523112470 <col:55> 'T' lvalue ParmVar 0x5625230ef9c8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x562523112518 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x562523112668 <line:705:13, col:34>
|         `-CallExpr 0x562523112640 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x5625231125c8 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x562523112620 <col:33> 'T' lvalue ParmVar 0x5625230ef9c8 'x' 'T &'
|-FunctionTemplateDecl 0x5625230efe28 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x5625230efbb8 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x5625230efd88 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x5625230efc98 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x562523112a80 <col:31, line:717:5>
|     |-DeclStmt 0x5625231127e0 <line:713:9, col:23>
|     | `-VarDecl 0x5625231126c8 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x5625231127b8 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x562523112740 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x562523112798 <col:21> 'T' lvalue ParmVar 0x5625230efc98 'x' 'T &'
|     |-IfStmt 0x562523112a30 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x5625231128d8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x562523112a10 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x5625231129b0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x562523112940 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|     |   | `-DeclRefExpr 0x562523112920 <col:14> 'T *' lvalue Var 0x5625231126c8 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x5625231129f0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x562523112a68 <line:716:9, col:16>
|       `-DeclRefExpr 0x562523112a48 <col:16> 'T *' lvalue Var 0x5625231126c8 's' 'T *'
|-FunctionTemplateDecl 0x5625230f0238 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x5625230efe88 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x5625230eff08 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x5625230f0198 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x5625230effe8 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x5625230f0088 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x562523112d90 <col:37, line:726:5>
|     |-IfStmt 0x562523112d20 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x562523112d40 <line:723:13, col:26>
|     | | `-VarDecl 0x562523112ae8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x562523112bd8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x562523112b60 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x562523112bb8 <col:25> 'T' lvalue ParmVar 0x5625230effe8 'x' 'T &'
|     | |-DeclRefExpr 0x562523112c00 <col:16> 'T *' lvalue Var 0x562523112ae8 's' 'T *'
|     | `-BinaryOperator 0x562523112d00 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x562523112cb0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x562523112c40 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|     |   | `-DeclRefExpr 0x562523112c20 <col:14> 'T *' lvalue Var 0x562523112ae8 's' 'T *'
|     |   `-DeclRefExpr 0x562523112ce0 <col:18> 'const V' lvalue ParmVar 0x5625230f0088 'value' 'const V &'
|     `-ReturnStmt 0x562523112d80 <line:725:9, col:17>
|       `-UnaryOperator 0x562523112d68 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x562523112d58 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x5625230f0638 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x5625230f02a0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x5625230f0598 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x5625230f0350 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f03d0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f0478 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x562523113bb0 <col:65, line:737:5>
|     |-DeclStmt 0x562523112e28 <line:732:9, col:26>
|     | `-VarDecl 0x562523112dc0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x562523113b78 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x562523113b98 <line:733:13, col:58>
|       | `-VarDecl 0x562523112e50 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x562523113030 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x562523113000 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x562523112fe8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x562523112fc8 <col:26, col:58> 'String' (CXXTemporary 0x562523112fc8)
|       |           `-CXXMemberCallExpr 0x562523112f58 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x562523112ec8 <col:26> '<bound member function type>' ->find 0x562523108758
|       |             | `-CXXThisExpr 0x562523112eb8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x562523112f90 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x562523112ef8 <col:31> 'const char *' lvalue ParmVar 0x5625230f0350 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x562523112fa8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x562523112f18 <col:40> 'int' lvalue ParmVar 0x5625230f03d0 'flags' 'int'
|       |             `-DeclRefExpr 0x562523112f38 <col:47> 'Args::Slot *' lvalue Var 0x562523112dc0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x5625231130e8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5625231130d0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5625231130b0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x562523113080 <col:20> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|       |       `-ImplicitCastExpr 0x562523113068 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x562523113048 <col:20> 'String' lvalue Var 0x562523112e50 'str' 'String'
|       `-CompoundStmt 0x562523113b58 <col:61, line:736:9>
|         |-DeclStmt 0x5625231135a0 <line:734:13, col:76>
|         | `-VarDecl 0x562523113138 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x562523113570 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x5625231134e0 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x562523113528 <col:60> 'T' lvalue ParmVar 0x5625230f0478 'variable' 'T &'
|         |     `-UnaryOperator 0x562523113558 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x562523113548 <col:71> 'Args *' this
|         `-CallExpr 0x562523113b28 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x5625231135c8 <col:13> '<bound member function type>' ->postparse 0x562523108968
|           | `-CXXThisExpr 0x5625231135b8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x562523113ae8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x5625231135f8 <col:23> 'T *' lvalue Var 0x562523113138 's' 'T *'
|           | `-CallExpr 0x562523113aa8 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x562523113880 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x562523113980 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x5625231139a0 <col:86> 'String' lvalue Var 0x562523112e50 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x562523113a50 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x5625231139e0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|           |   | `-DeclRefExpr 0x5625231139c0 <col:92> 'T *' lvalue Var 0x562523113138 's' 'T *'
|           |   `-UnaryOperator 0x562523113a90 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x562523113a80 <col:96> 'Args *' this
|           `-DeclRefExpr 0x562523113b08 <col:103> 'Args::Slot *' lvalue Var 0x562523112dc0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x5625230f0b88 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x5625230f06a8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x5625230f0728 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x5625230f0ae8 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x5625230f07e8 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f0868 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f0908 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x5625230f09a8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x562523114a50 <col:88, line:745:5>
|     |-DeclStmt 0x562523113c48 <line:741:9, col:26>
|     | `-VarDecl 0x562523113be0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x562523113e68 <line:742:9, col:55>
|     | `-VarDecl 0x562523113c70 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x562523113e50 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x562523113e20 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x562523113e08 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x562523113de8 <col:22, col:54> 'String' (CXXTemporary 0x562523113de8)
|     |           `-CXXMemberCallExpr 0x562523113d78 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x562523113ce8 <col:22> '<bound member function type>' ->find 0x562523108758
|     |             | `-CXXThisExpr 0x562523113cd8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x562523113db0 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x562523113d18 <col:27> 'const char *' lvalue ParmVar 0x5625230f07e8 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x562523113dc8 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x562523113d38 <col:36> 'int' lvalue ParmVar 0x5625230f0868 'flags' 'int'
|     |             `-DeclRefExpr 0x562523113d58 <col:43> 'Args::Slot *' lvalue Var 0x562523113be0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x562523114240 <line:743:9, col:72>
|     | `-VarDecl 0x562523113eb8 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x562523114210 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x562523114180 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x5625231141c8 <col:56> 'T' lvalue ParmVar 0x5625230f0908 'variable' 'T &'
|     |     `-UnaryOperator 0x5625231141f8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x5625231141e8 <col:67> 'Args *' this
|     `-CallExpr 0x562523114a20 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x562523114268 <col:9> '<bound member function type>' ->postparse 0x562523108968
|       | `-CXXThisExpr 0x562523114258 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x5625231149e0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x562523114298 <col:19> 'T *' lvalue Var 0x562523113eb8 's' 'T *'
|       | `-ParenExpr 0x5625231149c0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x562523114990 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x562523114978 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x562523114960 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x562523114940 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x562523114910 <col:25> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|       |     |       `-ImplicitCastExpr 0x5625231148f8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x5625231142b8 <col:25> 'String' lvalue Var 0x562523113c70 'str' 'String'
|       |     |-CallExpr 0x562523114768 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x562523114540 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x562523114640 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x562523114660 <col:89> 'String' lvalue Var 0x562523113c70 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x562523114710 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x5625231146a0 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|       |     | | `-DeclRefExpr 0x562523114680 <col:95> 'T *' lvalue Var 0x562523113eb8 's' 'T *'
|       |     | `-UnaryOperator 0x562523114750 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x562523114740 <col:99> 'Args *' this
|       |     `-ParenExpr 0x5625231148d8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x5625231148b8 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x562523114888 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x562523114838 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x5625231147c8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|       |         | | `-DeclRefExpr 0x5625231147a8 <col:109> 'T *' lvalue Var 0x562523113eb8 's' 'T *'
|       |         | `-DeclRefExpr 0x562523114868 <col:113> 'const V' lvalue ParmVar 0x5625230f09a8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x5625231148a8 <col:120> 'bool' true
|       `-DeclRefExpr 0x562523114a00 <col:128> 'Args::Slot *' lvalue Var 0x562523113be0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x5625230f10b8 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x5625230f0c00 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230f0c78 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230f1018 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x5625230f0d38 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f0db8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f0e30 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x5625230f0ed8 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x562523115648 <col:75, line:754:5>
|     |-DeclStmt 0x562523114af8 <line:749:9, col:26>
|     | `-VarDecl 0x562523114a90 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x562523115610 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x562523115630 <line:750:13, col:58>
|       | `-VarDecl 0x562523114b20 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x562523114d00 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x562523114cd0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x562523114cb8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x562523114c98 <col:26, col:58> 'String' (CXXTemporary 0x562523114c98)
|       |           `-CXXMemberCallExpr 0x562523114c28 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x562523114b98 <col:26> '<bound member function type>' ->find 0x562523108758
|       |             | `-CXXThisExpr 0x562523114b88 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x562523114c60 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x562523114bc8 <col:31> 'const char *' lvalue ParmVar 0x5625230f0d38 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x562523114c78 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x562523114be8 <col:40> 'int' lvalue ParmVar 0x5625230f0db8 'flags' 'int'
|       |             `-DeclRefExpr 0x562523114c08 <col:47> 'Args::Slot *' lvalue Var 0x562523114a90 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x562523114db8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x562523114da0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x562523114d80 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x562523114d50 <col:20> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|       |       `-ImplicitCastExpr 0x562523114d38 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x562523114d18 <col:20> 'String' lvalue Var 0x562523114b20 'str' 'String'
|       `-CompoundStmt 0x5625231155f0 <col:61, line:753:9>
|         |-DeclStmt 0x562523115190 <line:751:13, col:63>
|         | `-VarDecl 0x562523114e08 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x562523115160 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x5625231150d0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x562523115118 <col:47> 'T' lvalue ParmVar 0x5625230f0ed8 'variable' 'T &'
|         |     `-UnaryOperator 0x562523115148 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x562523115138 <col:58> 'Args *' this
|         `-CallExpr 0x5625231155c0 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x5625231151b8 <col:13> '<bound member function type>' ->postparse 0x562523108968
|           | `-CXXThisExpr 0x5625231151a8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x562523115580 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x5625231151e8 <col:23> 'T *' lvalue Var 0x562523114e08 's' 'T *'
|           | `-CallExpr 0x562523115540 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x5625231153d0 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x562523115418 <col:56> 'P' lvalue ParmVar 0x5625230f0e30 'parser' 'P'
|           |   |-DeclRefExpr 0x562523115438 <col:64> 'String' lvalue Var 0x562523114b20 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x5625231154e8 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x562523115478 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|           |   | `-DeclRefExpr 0x562523115458 <col:70> 'T *' lvalue Var 0x562523114e08 's' 'T *'
|           |   `-UnaryOperator 0x562523115528 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x562523115518 <col:74> 'Args *' this
|           `-DeclRefExpr 0x5625231155a0 <col:81> 'Args::Slot *' lvalue Var 0x562523114a90 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x5625230f1718 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x5625230f1130 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x5625230f11a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x5625230f1228 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x5625230f1678 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x5625230f12f0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f1370 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f13e8 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x5625230f1488 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x5625230f1528 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x5625231163d8 <col:98, line:762:5>
|     |-DeclStmt 0x5625231156e0 <line:758:9, col:26>
|     | `-VarDecl 0x562523115678 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x562523115900 <line:759:9, col:55>
|     | `-VarDecl 0x562523115708 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x5625231158e8 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x5625231158b8 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x5625231158a0 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x562523115880 <col:22, col:54> 'String' (CXXTemporary 0x562523115880)
|     |           `-CXXMemberCallExpr 0x562523115810 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x562523115780 <col:22> '<bound member function type>' ->find 0x562523108758
|     |             | `-CXXThisExpr 0x562523115770 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x562523115848 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x5625231157b0 <col:27> 'const char *' lvalue ParmVar 0x5625230f12f0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x562523115860 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x5625231157d0 <col:36> 'int' lvalue ParmVar 0x5625230f1370 'flags' 'int'
|     |             `-DeclRefExpr 0x5625231157f0 <col:43> 'Args::Slot *' lvalue Var 0x562523115678 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x562523115d20 <line:760:9, col:59>
|     | `-VarDecl 0x562523115958 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x562523115cf0 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x562523115c60 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x562523115ca8 <col:43> 'T' lvalue ParmVar 0x5625230f1488 'variable' 'T &'
|     |     `-UnaryOperator 0x562523115cd8 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x562523115cc8 <col:54> 'Args *' this
|     `-CallExpr 0x5625231163a8 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x562523115d48 <col:9> '<bound member function type>' ->postparse 0x562523108968
|       | `-CXXThisExpr 0x562523115d38 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x562523116368 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x562523115d78 <col:19> 'T *' lvalue Var 0x562523115958 's' 'T *'
|       | `-ParenExpr 0x562523116348 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x562523116318 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x562523116300 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x5625231162e8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x5625231162c8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x562523116298 <col:25> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|       |     |       `-ImplicitCastExpr 0x562523116280 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x562523115d98 <col:25> 'String' lvalue Var 0x562523115708 'str' 'String'
|       |     |-CallExpr 0x5625231160f0 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x562523115f80 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x562523115fc8 <col:59> 'P' lvalue ParmVar 0x5625230f13e8 'parser' 'P'
|       |     | |-DeclRefExpr 0x562523115fe8 <col:67> 'String' lvalue Var 0x562523115708 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x562523116098 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x562523116028 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|       |     | | `-DeclRefExpr 0x562523116008 <col:73> 'T *' lvalue Var 0x562523115958 's' 'T *'
|       |     | `-UnaryOperator 0x5625231160d8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x5625231160c8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x562523116260 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x562523116240 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x562523116210 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x5625231161c0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x562523116150 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|       |         | | `-DeclRefExpr 0x562523116130 <col:87> 'T *' lvalue Var 0x562523115958 's' 'T *'
|       |         | `-DeclRefExpr 0x5625231161f0 <col:91> 'const V' lvalue ParmVar 0x5625230f1528 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x562523116230 <col:98> 'bool' true
|       `-DeclRefExpr 0x562523116388 <col:106> 'Args::Slot *' lvalue Var 0x562523115678 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x5625230f1d88 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x5625230f1798 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230f1818 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x5625230f1898 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x5625230f1ce8 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x5625230f1960 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f19e0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f1a58 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x5625230f1af8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x5625230f1b98 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x5625231173b8 <col:60, line:773:5>
|     |-DeclStmt 0x562523116480 <line:767:9, col:26>
|     | `-VarDecl 0x562523116418 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x562523117380 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x5625231173a0 <line:768:13, col:58>
|       | `-VarDecl 0x5625231164a8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x562523116688 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x562523116658 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x562523116640 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x562523116620 <col:26, col:58> 'String' (CXXTemporary 0x562523116620)
|       |           `-CXXMemberCallExpr 0x5625231165b0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x562523116520 <col:26> '<bound member function type>' ->find 0x562523108758
|       |             | `-CXXThisExpr 0x562523116510 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x5625231165e8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x562523116550 <col:31> 'const char *' lvalue ParmVar 0x5625230f1960 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x562523116600 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x562523116570 <col:40> 'int' lvalue ParmVar 0x5625230f19e0 'flags' 'int'
|       |             `-DeclRefExpr 0x562523116590 <col:47> 'Args::Slot *' lvalue Var 0x562523116418 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x562523116740 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x562523116728 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x562523116708 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5625231166d8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|       |       `-ImplicitCastExpr 0x5625231166c0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x5625231166a0 <col:20> 'String' lvalue Var 0x5625231164a8 'str' 'String'
|       `-CompoundStmt 0x562523117358 <col:61, line:772:9>
|         |-DeclStmt 0x562523116a80 <line:769:13, col:66>
|         | `-VarDecl 0x562523116798 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x562523116a50 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x5625231169c0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x562523116a08 <col:49> 'T1' lvalue ParmVar 0x5625230f1af8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x562523116a38 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x562523116a28 <col:61> 'Args *' this
|         |-DeclStmt 0x562523116df0 <line:770:13, col:66>
|         | `-VarDecl 0x562523116b08 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x562523116dc0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x562523116d30 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x562523116d78 <col:49> 'T2' lvalue ParmVar 0x5625230f1b98 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x562523116da8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x562523116d98 <col:61> 'Args *' this
|         `-CallExpr 0x562523117328 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x562523116e18 <col:13> '<bound member function type>' ->postparse 0x562523108968
|           | `-CXXThisExpr 0x562523116e08 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x5625231172e8 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x562523116e88 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x562523116e48 <col:23> 'T1 *' lvalue Var 0x562523116798 's1' 'T1 *'
|           | | `-DeclRefExpr 0x562523116e68 <col:29> 'T2 *' lvalue Var 0x562523116b08 's2' 'T2 *'
|           | `-CallExpr 0x5625231172a0 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x562523117070 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x5625231170b8 <col:63> 'P' lvalue ParmVar 0x5625230f1a58 'parser' 'P'
|           |   |-DeclRefExpr 0x5625231170d8 <col:71> 'String' lvalue Var 0x5625231164a8 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x562523117188 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x562523117118 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|           |   | `-DeclRefExpr 0x5625231170f8 <col:77> 'T1 *' lvalue Var 0x562523116798 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x562523117248 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x5625231171d8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|           |   | `-DeclRefExpr 0x5625231171b8 <col:82> 'T2 *' lvalue Var 0x562523116b08 's2' 'T2 *'
|           |   `-UnaryOperator 0x562523117288 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x562523117278 <col:87> 'Args *' this
|           `-DeclRefExpr 0x562523117308 <col:94> 'Args::Slot *' lvalue Var 0x562523116418 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x5625230f2178 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x5625230f1e08 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230f20d8 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x5625230f1ec0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f1f40 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f1fb8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x5625231178d0 <col:67, line:780:5>
|     |-DeclStmt 0x562523117450 <line:777:9, col:26>
|     | `-VarDecl 0x5625231173e8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x562523117898 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x5625231178b8 <line:778:13, col:58>
|       | `-VarDecl 0x562523117478 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x562523117658 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x562523117628 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x562523117610 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x5625231175f0 <col:26, col:58> 'String' (CXXTemporary 0x5625231175f0)
|       |           `-CXXMemberCallExpr 0x562523117580 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x5625231174f0 <col:26> '<bound member function type>' ->find 0x562523108758
|       |             | `-CXXThisExpr 0x5625231174e0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x5625231175b8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x562523117520 <col:31> 'const char *' lvalue ParmVar 0x5625230f1ec0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x5625231175d0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x562523117540 <col:40> 'int' lvalue ParmVar 0x5625230f1f40 'flags' 'int'
|       |             `-DeclRefExpr 0x562523117560 <col:47> 'Args::Slot *' lvalue Var 0x5625231173e8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x562523117710 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5625231176f8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5625231176d8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5625231176a8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|       |       `-ImplicitCastExpr 0x562523117690 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x562523117670 <col:20> 'String' lvalue Var 0x562523117478 'str' 'String'
|       `-CallExpr 0x562523117868 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x562523117738 <col:13> '<bound member function type>' ->postparse 0x562523108968
|         | `-CXXThisExpr 0x562523117728 <col:13> 'Args *' implicit this
|         |-CallExpr 0x562523117818 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x562523117788 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x562523117768 <col:23> 'P' lvalue ParmVar 0x5625230f1fb8 'parser' 'P'
|         | |-DeclRefExpr 0x5625231177d0 <col:36> 'String' lvalue Var 0x562523117478 'str' 'String'
|         | `-UnaryOperator 0x562523117800 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x5625231177f0 <col:42> 'Args *' this
|         `-DeclRefExpr 0x562523117848 <col:49> 'Args::Slot *' lvalue Var 0x5625231173e8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x5625230f2518 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x5625230f21e8 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x5625230f2478 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x5625230f22a0 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f2320 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f2398 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x562523118240 <col:71, line:792:5>
|     |-DeclStmt 0x562523117968 <line:784:9, col:26>
|     | `-VarDecl 0x562523117900 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x562523117a38 <line:785:9, col:29>
|     | `-VarDecl 0x562523117998 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x562523117a20 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x562523117a00 <col:28> 'int' 1
|     |-WhileStmt 0x5625231180f0 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x562523118110 <line:786:16, col:61>
|     | | `-VarDecl 0x562523117a60 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x562523117c40 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x562523117c10 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x562523117bf8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x562523117bd8 <col:29, col:61> 'String' (CXXTemporary 0x562523117bd8)
|     | |           `-CXXMemberCallExpr 0x562523117b68 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x562523117ad8 <col:29> '<bound member function type>' ->find 0x562523108758
|     | |             | `-CXXThisExpr 0x562523117ac8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x562523117ba0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x562523117b08 <col:34> 'const char *' lvalue ParmVar 0x5625230f22a0 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x562523117bb8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x562523117b28 <col:43> 'int' lvalue ParmVar 0x5625230f2320 'flags' 'int'
|     | |             `-DeclRefExpr 0x562523117b48 <col:50> 'Args::Slot *' lvalue Var 0x562523117900 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x562523117cf8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x562523117ce0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x562523117cc0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x562523117c90 <col:23> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|     | |       `-ImplicitCastExpr 0x562523117c78 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x562523117c58 <col:23> 'String' lvalue Var 0x562523117a60 'str' 'String'
|     | `-CompoundStmt 0x5625231180c8 <col:64, line:790:9>
|     |   |-CallExpr 0x562523117e50 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x562523117d20 <col:13> '<bound member function type>' ->postparse 0x562523108968
|     |   | | `-CXXThisExpr 0x562523117d10 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x562523117e00 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x562523117d70 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x562523117d50 <col:23> 'P' lvalue ParmVar 0x5625230f2398 'parser' 'P'
|     |   | | |-DeclRefExpr 0x562523117db8 <col:36> 'String' lvalue Var 0x562523117a60 'str' 'String'
|     |   | | `-UnaryOperator 0x562523117de8 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x562523117dd8 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x562523117e30 <col:49> 'Args::Slot *' lvalue Var 0x562523117900 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x562523117fe8 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x562523117e80 <col:13> 'int' lvalue Var 0x562523117998 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x562523117fd0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x562523117fb0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x562523117f18 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x562523117ef8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x562523117ee0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x562523117ea0 <col:28> 'int' lvalue Var 0x562523117998 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x562523117ec0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x562523117f98 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x562523117f68 <col:49> 'bool' lvalue ->_read_status 0x5625230c6c00
|     |   |         `-ImplicitCastExpr 0x562523117f48 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x562523117f38 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x562523118098 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x562523118008 <col:13> 'int' lvalue ParmVar 0x5625230f2320 'flags' 'int'
|     |     `-UnaryOperator 0x562523118080 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x562523118068 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x562523118048 <col:23> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x562523118220 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x562523118158 <col:9> 'bool' lvalue ->_read_status 0x5625230c6c00
|       | `-ImplicitCastExpr 0x562523118138 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x562523118128 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x562523118200 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x5625231181e0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x5625231181c8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x562523118188 <col:25> 'int' lvalue Var 0x562523117998 'read_status' 'int'
|           `-IntegerLiteral 0x5625231181a8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x5625230f29f8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x5625230f2588 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230f2608 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230f2958 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x5625230f26c8 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f2748 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f27c0 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x5625230f2868 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x5625231191d0 <col:84, line:805:5>
|     |-DeclStmt 0x5625231182e8 <line:796:9, col:26>
|     | `-VarDecl 0x562523118280 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x5625231183b8 <line:797:9, col:29>
|     | `-VarDecl 0x562523118318 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x5625231183a0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x562523118380 <col:28> 'int' 1
|     |-DeclStmt 0x5625231186f0 <line:798:9, col:71>
|     | `-VarDecl 0x562523118408 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x5625231186c0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x562523118630 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x562523118678 <col:55> 'T' lvalue ParmVar 0x5625230f2868 'variable' 'T &'
|     |     `-UnaryOperator 0x5625231186a8 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x562523118698 <col:66> 'Args *' this
|     |-WhileStmt 0x562523119080 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x5625231190a0 <line:799:16, col:61>
|     | | `-VarDecl 0x562523118718 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x5625231188f8 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x5625231188c8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x5625231188b0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x562523118890 <col:29, col:61> 'String' (CXXTemporary 0x562523118890)
|     | |           `-CXXMemberCallExpr 0x562523118820 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x562523118790 <col:29> '<bound member function type>' ->find 0x562523108758
|     | |             | `-CXXThisExpr 0x562523118780 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x562523118858 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x5625231187c0 <col:34> 'const char *' lvalue ParmVar 0x5625230f26c8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x562523118870 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x5625231187e0 <col:43> 'int' lvalue ParmVar 0x5625230f2748 'flags' 'int'
|     | |             `-DeclRefExpr 0x562523118800 <col:50> 'Args::Slot *' lvalue Var 0x562523118280 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x5625231189b0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x562523118998 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x562523118978 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x562523118948 <col:23> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|     | |       `-ImplicitCastExpr 0x562523118930 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x562523118910 <col:23> 'String' lvalue Var 0x562523118718 'str' 'String'
|     | `-CompoundStmt 0x562523119058 <col:64, line:803:9>
|     |   |-CallExpr 0x562523118de0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x5625231189d8 <col:13> '<bound member function type>' ->postparse 0x562523108968
|     |   | | `-CXXThisExpr 0x5625231189c8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x562523118da0 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x562523118a08 <col:23> 'T *' lvalue Var 0x562523118408 's' 'T *'
|     |   | | `-CallExpr 0x562523118d60 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x562523118bf0 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x562523118c38 <col:56> 'P' lvalue ParmVar 0x5625230f27c0 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x562523118c58 <col:64> 'String' lvalue Var 0x562523118718 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x562523118d08 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x562523118c98 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|     |   | |   | `-DeclRefExpr 0x562523118c78 <col:70> 'T *' lvalue Var 0x562523118408 's' 'T *'
|     |   | |   `-UnaryOperator 0x562523118d48 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x562523118d38 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x562523118dc0 <col:81> 'Args::Slot *' lvalue Var 0x562523118280 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x562523118f78 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x562523118e10 <col:13> 'int' lvalue Var 0x562523118318 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x562523118f60 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x562523118f40 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x562523118ea8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x562523118e88 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x562523118e70 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x562523118e30 <col:28> 'int' lvalue Var 0x562523118318 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x562523118e50 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x562523118f28 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x562523118ef8 <col:49> 'bool' lvalue ->_read_status 0x5625230c6c00
|     |   |         `-ImplicitCastExpr 0x562523118ed8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x562523118ec8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x562523119028 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x562523118f98 <col:13> 'int' lvalue ParmVar 0x5625230f2748 'flags' 'int'
|     |     `-UnaryOperator 0x562523119010 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x562523118ff8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x562523118fd8 <col:23> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x5625231191b0 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x5625231190e8 <col:9> 'bool' lvalue ->_read_status 0x5625230c6c00
|       | `-ImplicitCastExpr 0x5625231190c8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x5625231190b8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x562523119190 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x562523119170 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x562523119158 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x562523119118 <col:25> 'int' lvalue Var 0x562523118318 'read_status' 'int'
|           `-IntegerLiteral 0x562523119138 <col:40> 'int' 1
|-FunctionTemplateDecl 0x5625230f2fd8 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x5625230f2a70 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x5625230f2ae8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x5625230f2f38 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x5625230f2ba8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x5625230f2c28 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x5625230f2ca0 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x5625230f2df0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x562523119fd8 <col:87, line:821:5>
|     |-DeclStmt 0x562523119280 <line:809:9, col:26>
|     | `-VarDecl 0x562523119218 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x562523119350 <line:810:9, col:29>
|     | `-VarDecl 0x5625231192b0 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x562523119338 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x562523119318 <col:28> 'int' 1
|     |-DeclStmt 0x562523119598 <line:811:9, col:38>
|     | `-VarDecl 0x562523119480 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x562523119570 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x5625231194f8 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x562523119550 <col:29> 'Vector<T>' lvalue ParmVar 0x5625230f2df0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x562523119e88 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x562523119ea8 <line:812:16, col:61>
|     | | `-VarDecl 0x5625231195c0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x5625231197a0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x562523119770 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x562523119758 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x562523119738 <col:29, col:61> 'String' (CXXTemporary 0x562523119738)
|     | |           `-CXXMemberCallExpr 0x5625231196c8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x562523119638 <col:29> '<bound member function type>' ->find 0x562523108758
|     | |             | `-CXXThisExpr 0x562523119628 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x562523119700 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x562523119668 <col:34> 'const char *' lvalue ParmVar 0x5625230f2ba8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x562523119718 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x562523119688 <col:43> 'int' lvalue ParmVar 0x5625230f2c28 'flags' 'int'
|     | |             `-DeclRefExpr 0x5625231196a8 <col:50> 'Args::Slot *' lvalue Var 0x562523119218 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x562523119858 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x562523119840 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x562523119820 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5625231197f0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x562522d95018
|     | |       `-ImplicitCastExpr 0x5625231197d8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x5625231197b8 <col:23> 'String' lvalue Var 0x5625231195c0 'str' 'String'
|     | `-CompoundStmt 0x562523119e50 <col:64, line:819:9>
|     |   |-DeclStmt 0x562523119918 <line:813:13, col:23>
|     |   | `-VarDecl 0x562523119880 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x5625231198f8 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x562523119a98 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x562523119940 <col:13> '<bound member function type>' ->postparse 0x562523108968
|     |   | | `-CXXThisExpr 0x562523119930 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x562523119a40 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x562523119990 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x562523119970 <col:23> 'P' lvalue ParmVar 0x5625230f2ca0 'parser' 'P'
|     |   | | |-DeclRefExpr 0x5625231199d8 <col:36> 'String' lvalue Var 0x5625231195c0 'str' 'String'
|     |   | | |-DeclRefExpr 0x5625231199f8 <col:41> 'T' lvalue Var 0x562523119880 'sx' 'T'
|     |   | | `-UnaryOperator 0x562523119a28 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x562523119a18 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x562523119a78 <col:53> 'Args::Slot *' lvalue Var 0x562523119218 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x562523119bf0 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x562523119b28 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x562523119af8 <col:17> 'bool' lvalue ->_read_status 0x5625230c6c00
|     |   | |   `-ImplicitCastExpr 0x562523119ad8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x562523119ac8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x562523119bc8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x562523119b60 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x562523119b40 <col:17> 'Vector<T> *' lvalue Var 0x562523119480 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x562523119ba8 <col:30> 'T' lvalue Var 0x562523119880 'sx' 'T'
|     |   |-BinaryOperator 0x562523119d70 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x562523119c08 <col:13> 'int' lvalue Var 0x5625231192b0 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x562523119d58 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x562523119d38 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x562523119ca0 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x562523119c80 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x562523119c68 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x562523119c28 <col:28> 'int' lvalue Var 0x5625231192b0 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x562523119c48 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x562523119d20 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x562523119cf0 <col:49> 'bool' lvalue ->_read_status 0x5625230c6c00
|     |   |         `-ImplicitCastExpr 0x562523119cd0 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x562523119cc0 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x562523119e20 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x562523119d90 <col:13> 'int' lvalue ParmVar 0x5625230f2c28 'flags' 'int'
|     |     `-UnaryOperator 0x562523119e08 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x562523119df0 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x562523119dd0 <col:23> 'const int' lvalue Var 0x5625230cf928 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x562523119fb8 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x562523119ef0 <col:9> 'bool' lvalue ->_read_status 0x5625230c6c00
|       | `-ImplicitCastExpr 0x562523119ed0 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x562523119ec0 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x562523119f98 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x562523119f78 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x562523119f60 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x562523119f20 <col:25> 'int' lvalue Var 0x5625231192b0 'read_status' 'int'
|           `-IntegerLiteral 0x562523119f40 <col:40> 'int' 1
|-AccessSpecDecl 0x5625230f3050 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x5625230f3078 prev 0x5625230cdc60 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x5625230f3170 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x5625230f3260 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x56252311a010 <col:16, line:828:9>
| |-CXXDestructorDecl 0x5625230f3350 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x56252311a020 <col:25, line:830:9>
| |-CXXMethodDecl 0x5625230f3450 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x5625230f3500 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x5625230f35a8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x5625230f35a8
| | `-ParmVarDecl 0x5625230f36b8 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x5625230f3e78 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x5625230f3e78
|   `-ParmVarDecl 0x5625230f3f88 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x5625230f3728 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x5625230f3888 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x5625230f3a80 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x5625230f3930 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x5625230f39a8 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x56252311c530 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x5625230f3d38 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x56252311c3a0 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56252311a030 <col:20> 'void *' lvalue ParmVar 0x5625230f3930 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x5625230f3da0 '_slot' 'char *'
| | | `-CXXNewExpr 0x56252311c428 <col:32, col:45> 'char *' array Function 0x562522bb7c88 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x56252311c410 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x56252311c3e0 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x5625230f39a8 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x5625230f3e00 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x56252311c4f0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x56252311c4b0 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x5625230f39a8 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x56252311c5b0 <col:61, line:838:9>
| |-CXXDestructorDecl 0x5625230f3b80 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x5625230f3350 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x56252311c638 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x56252311c618 <line:840:13, col:22> 'void' array Function 0x562522bb7fe8 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x56252311c600 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x56252311c5d0 <col:22> 'char *' lvalue ->_slot 0x5625230f3da0
| |         `-CXXThisExpr 0x56252311c5c0 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x5625230f3c80 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x5625230f3450 Slot::store 'void ()' ]
| | `-CompoundStmt 0x56252311c828 <col:22, line:844:9>
| |   `-CallExpr 0x56252311c790 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x56252311c778 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x56252311c758 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x562522cc3a68 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x56252311c7c8 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x56252311c6a8 <col:20> 'void *' lvalue ->_ptr 0x5625230f3d38
| |     |   `-CXXThisExpr 0x56252311c698 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x56252311c7f8 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x56252311c7e0 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x56252311c6e8 <col:26> 'char *' lvalue ->_slot 0x5625230f3da0
| |     |     `-CXXThisExpr 0x56252311c6d8 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x56252311c810 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x56252311c728 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x5625230f3e00
| |         `-CXXThisExpr 0x56252311c718 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x5625230f3d38 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x5625230f3da0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x5625230f3e00 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x5625230f3ff8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x5625230f3ff8
| | `-ParmVarDecl 0x5625230f4108 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x5625230f41a8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x5625230f41a8
|   `-ParmVarDecl 0x5625230f42b8 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x5625230f4458 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x5625230f4328 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x5625230f43c8 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x5625230f46f0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x5625230f48b8 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x5625230f47b8 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x5625230f4a38 '_ptr' 'T *'
|   | | `-ParenListExpr 0x56252311c860 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x56252311c840 <col:20> 'T *' lvalue ParmVar 0x5625230f47b8 'ptr' 'T *'
|   | `-CompoundStmt 0x56252311c8b0 <col:25, line:854:9>
|   |-CXXMethodDecl 0x5625230f4988 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x5625230f3450 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x56252311ca60 <col:22, line:857:9>
|   |   `-CallExpr 0x56252311ca30 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x56252311c8c0 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x562522d7c198 0x562522d264c8
|   |     |-CXXOperatorCallExpr 0x56252311c9c0 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x56252311c950 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x562522f89148 0x562522f88d68 0x562522f88998 0x562522f885b8 0x562522f881d8 0x562522f87e08
|   |     | `-MemberExpr 0x56252311c920 <col:29> 'T *' lvalue ->_ptr 0x5625230f4a38
|   |     |   `-CXXThisExpr 0x56252311c910 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x56252311ca00 <col:35> 'T' lvalue ->_slot 0x5625230f4a98
|   |       `-CXXThisExpr 0x56252311c9f0 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x5625230f4a38 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x5625230f4a98 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x5625230f4b00 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x5625230f4c00 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x5625230f4c50 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5625230f4be0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x5625230f4bc0 <col:31> 'int' 48
|-FieldDecl 0x5625230f4c78 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x5625230f4cd8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x5625230f4d38 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x5625230f4e70 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x562523108000 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x562523108060 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x562523108110 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x562523108338 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x562523108240 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x562523108488 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x5625231083f8 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x562523108758 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x562523108548 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x5625231085c8 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x562523108670 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x562523108968 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x562523108820 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x562523108898 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x562523108a38 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x562523108b88 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x562523108af0 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x562523108f18 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x562523108c48 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x562523108cc8 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x562523108d70 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x562523108e28 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x562523109140 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x562523108ff0 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x562523109068 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x562523109458 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x5625231091f0 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x5625231093b8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x5625231092c8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ElementCastArg
         0 |   const char * type
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523139820 <../dummy_inc/click/args.hh:1396:1, line:1405:1> line:1396:7 referenced class ElementCastArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562523139938 <col:1, col:7> col:7 implicit referenced class ElementCastArg
|-AccessSpecDecl 0x5625231399c8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x562523139ad8 <line:1397:5, line:1399:5> line:1397:5 used ElementCastArg 'void (const char *)'
| |-ParmVarDecl 0x562523139a08 <col:20, col:32> col:32 used t 'const char *'
| |-CXXCtorInitializer Field 0x56252313a230 'type' 'const char *'
| | `-ImplicitCastExpr 0x56252313a2d8 <line:1398:16> 'const char *' <LValueToRValue>
| |   `-DeclRefExpr 0x56252313a298 <col:16> 'const char *' lvalue ParmVar 0x562523139a08 't' 'const char *'
| `-CompoundStmt 0x56252313a320 <col:19, line:1399:5>
|-CXXMethodDecl 0x562523139d30 <line:1400:5, col:75> col:10 referenced parse 'bool (const String &, Element *&, const ArgContext &)'
| |-ParmVarDecl 0x562523139b98 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x562523139c18 <col:35, col:45> col:45 result 'Element *&'
| `-ParmVarDecl 0x562523139c90 <col:53, col:71> col:71 args 'const ArgContext &'
|-FunctionTemplateDecl 0x56252313a1a8 <line:1401:5, line:1403:5> line:1401:31 parse
| |-TemplateTypeParmDecl 0x562523139de8 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x56252313a108 <col:26, line:1403:5> line:1401:31 parse 'bool (const String &, T *&, const ArgContext &)'
| | |-ParmVarDecl 0x562523139e98 <col:37, col:51> col:51 referenced str 'const String &'
| | |-ParmVarDecl 0x562523139f70 <col:56, col:60> col:60 referenced result 'T *&'
| | |-ParmVarDecl 0x562523139fe8 <col:68, col:86> col:86 referenced args 'const ArgContext &'
| | `-CompoundStmt 0x56252313a8f0 <col:92, line:1403:5>
| |   `-ReturnStmt 0x56252313a8e0 <line:1402:9, col:69>
| |     `-CXXMemberCallExpr 0x56252313a8a8 <col:16, col:69> 'bool'
| |       |-MemberExpr 0x56252313a878 <col:16> '<bound member function type>' ->parse 0x562523139d30
| |       | `-CXXThisExpr 0x56252313a868 <col:16> 'ElementCastArg *' implicit this
| |       |-DeclRefExpr 0x56252313a3a0 <col:22> 'const String' lvalue ParmVar 0x562523139e98 'str' 'const String &'
| |       |-CXXReinterpretCastExpr 0x56252313a3f8 <col:27, col:62> 'Element *' lvalue reinterpret_cast<class Element *&> <Dependent>
| |       | `-DeclRefExpr 0x56252313a3c0 <col:56> 'T *' lvalue ParmVar 0x562523139f70 'result' 'T *&'
| |       `-DeclRefExpr 0x56252313a428 <col:65> 'const ArgContext' lvalue ParmVar 0x562523139fe8 'args' 'const ArgContext &'
| `-CXXMethodDecl 0x56252313a758 <line:1401:26, col:90> col:31 parse 'bool (const String &, Element *&, const ArgContext &)'
|   |-TemplateArgument type 'Element'
|   |-ParmVarDecl 0x56252313a500 <col:37, col:51> col:51 str 'const String &'
|   |-ParmVarDecl 0x56252313a610 <col:56, col:60> col:60 result 'Element *&'
|   `-ParmVarDecl 0x56252313a678 <col:68, col:86> col:86 args 'const ArgContext &'
|-FieldDecl 0x56252313a230 <line:1404:5, col:17> col:17 referenced type 'const char *'
|-CXXConstructorDecl 0x56252324e1c8 <line:1396:7> col:7 implicit constexpr ElementCastArg 'void (const ElementCastArg &)' inline default trivial noexcept-unevaluated 0x56252324e1c8
| `-ParmVarDecl 0x56252324e2d8 <col:7> col:7 'const ElementCastArg &'
|-CXXConstructorDecl 0x56252324e378 <col:7> col:7 implicit used constexpr ElementCastArg 'void (ElementCastArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56252324e488 <col:7> col:7 used 'ElementCastArg &&'
| |-CXXCtorInitializer Field 0x56252313a230 'type' 'const char *'
| | `-ImplicitCastExpr 0x56252324ecd0 <col:7> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56252324eca0 <col:7> 'const char *' xvalue .type 0x56252313a230
| |     `-CXXStaticCastExpr 0x56252324ec70 <col:7> 'ElementCastArg' xvalue static_cast<class ElementCastArg &&> <NoOp>
| |       `-DeclRefExpr 0x56252324ec40 <col:7> 'ElementCastArg' lvalue ParmVar 0x56252324e488 '' 'ElementCastArg &&'
| `-CompoundStmt 0x56252324ed18 <col:7>
`-CXXDestructorDecl 0x56252324e540 <col:7> col:7 implicit referenced ~ElementCastArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ElementCastArg = type { i8* }
  NonVirtualBaseLLVMType:%class.ElementCastArg = type { i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPPrefixArg
         0 |   _Bool allow_bare_address
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522dd91e0 <../dummy_inc/click/ipaddress.hh:382:1, line:396:1> line:382:7 referenced class IPPrefixArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522dd92f8 <col:1, col:7> col:7 implicit referenced class IPPrefixArg
|-AccessSpecDecl 0x562522dd9388 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x562522dd9498 <line:383:5, line:385:5> line:383:5 used IPPrefixArg 'void (bool)'
| |-ParmVarDecl 0x562522dd93c0 <col:17, col:44> col:22 used allow_bare_address_ 'bool' cinit
| | `-CXXBoolLiteralExpr 0x562522dd9cd0 <col:44> 'bool' false
| |-CXXCtorInitializer Field 0x562522dd9c68 'allow_bare_address' 'bool'
| | `-ImplicitCastExpr 0x562522dd9d60 <line:384:23> 'bool' <LValueToRValue>
| |   `-DeclRefExpr 0x562522dd9d20 <col:23> 'bool' lvalue ParmVar 0x562522dd93c0 'allow_bare_address_' 'bool'
| `-CompoundStmt 0x562522dd9da8 <col:44, line:385:5>
|-CXXMethodDecl 0x562522dd97e8 <line:386:5, line:388:46> line:386:10 used parse 'bool (const String &, IPAddress &, IPAddress &, const ArgContext &) const'
| |-ParmVarDecl 0x562522dd9558 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x562522dd95d0 <line:387:9, col:20> col:20 result_addr 'IPAddress &'
| |-ParmVarDecl 0x562522dd9648 <col:33, col:44> col:44 result_mask 'IPAddress &'
| `-ParmVarDecl 0x562522dd96c0 <line:388:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x562522dd9ce0 <col:34> 'const ArgContext' lvalue Var 0x562522dc7140 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x562522dd9b98 <line:389:5, line:394:5> line:389:10 parse 'bool (const String &, struct in_addr &, struct in_addr &, const ArgContext &) const'
| |-ParmVarDecl 0x562522dd98b8 <col:16, col:30> col:30 used str 'const String &'
| |-ParmVarDecl 0x562522dd9948 <line:390:9, col:25> col:25 used result_addr 'struct in_addr &'
| |-ParmVarDecl 0x562522dd99d8 <col:38, col:54> col:54 used result_mask 'struct in_addr &'
| |-ParmVarDecl 0x562522dd9a50 <line:391:9, col:34> col:27 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x562522dd9d00 <col:34> 'const ArgContext' lvalue Var 0x562522dc7140 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x562522dd9fb8 <col:52, line:394:5>
|   `-ReturnStmt 0x562522dd9fa8 <line:392:2, line:393:56>
|     `-CXXMemberCallExpr 0x562522dd9f68 <line:392:9, line:393:56> 'bool'
|       |-MemberExpr 0x562522dd9f38 <line:392:9> '<bound member function type>' ->parse 0x562522dd97e8
|       | `-CXXThisExpr 0x562522dd9f28 <col:9> 'const IPPrefixArg *' implicit this
|       |-DeclRefExpr 0x562522dd9e28 <col:15> 'const String' lvalue ParmVar 0x562522dd98b8 'str' 'const String &'
|       |-CXXReinterpretCastExpr 0x562522dd9e78 <col:20, col:61> 'IPAddress' lvalue reinterpret_cast<class IPAddress &> <LValueBitCast>
|       | `-DeclRefExpr 0x562522dd9e48 <col:50> 'struct in_addr':'in_addr' lvalue ParmVar 0x562522dd9948 'result_addr' 'struct in_addr &'
|       |-CXXReinterpretCastExpr 0x562522dd9ed8 <line:393:8, col:49> 'IPAddress' lvalue reinterpret_cast<class IPAddress &> <LValueBitCast>
|       | `-DeclRefExpr 0x562522dd9ea8 <col:38> 'struct in_addr':'in_addr' lvalue ParmVar 0x562522dd99d8 'result_mask' 'struct in_addr &'
|       `-DeclRefExpr 0x562522dd9f08 <col:52> 'const ArgContext' lvalue ParmVar 0x562522dd9a50 'args' 'const ArgContext &'
|-FieldDecl 0x562522dd9c68 <line:395:5, col:10> col:10 referenced allow_bare_address 'bool'
|-CXXConstructorDecl 0x5625232513d8 <line:382:7> col:7 implicit constexpr IPPrefixArg 'void (const IPPrefixArg &)' inline default trivial noexcept-unevaluated 0x5625232513d8
| `-ParmVarDecl 0x5625232514e8 <col:7> col:7 'const IPPrefixArg &'
|-CXXConstructorDecl 0x562523251588 <col:7> col:7 implicit used constexpr IPPrefixArg 'void (IPPrefixArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562523251698 <col:7> col:7 used 'IPPrefixArg &&'
| |-CXXCtorInitializer Field 0x562522dd9c68 'allow_bare_address' 'bool'
| | `-ImplicitCastExpr 0x562523252000 <col:7> 'bool' <LValueToRValue>
| |   `-MemberExpr 0x562523251fd0 <col:7> 'bool' xvalue .allow_bare_address 0x562522dd9c68
| |     `-CXXStaticCastExpr 0x562523251fa0 <col:7> 'IPPrefixArg' xvalue static_cast<class IPPrefixArg &&> <NoOp>
| |       `-DeclRefExpr 0x562523251f70 <col:7> 'IPPrefixArg' lvalue ParmVar 0x562523251698 '' 'IPPrefixArg &&'
| `-CompoundStmt 0x562523252048 <col:7>
`-CXXDestructorDecl 0x562523251738 <col:7> col:7 implicit referenced ~IPPrefixArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPPrefixArg = type { i8 }
  NonVirtualBaseLLVMType:%class.IPPrefixArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AnyArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523135ef0 <../dummy_inc/click/args.hh:1326:1, line:1338:1> line:1326:7 referenced class AnyArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562523136008 <col:1, col:7> col:7 implicit class AnyArg
|-AccessSpecDecl 0x562523136098 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x562523136248 <line:1327:5, line:1329:5> line:1327:17 parse 'bool (const String &, const ArgContext &)' static
| |-ParmVarDecl 0x5625231360d0 <col:23, col:36> col:37 'const String &'
| |-ParmVarDecl 0x562523136148 <col:39, col:60> col:58 'const ArgContext &' cinit
| | `-DeclRefExpr 0x562523136958 <col:60> 'const ArgContext' lvalue Var 0x56252311ca88 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x5625231369d8 <col:72, line:1329:5>
|   `-ReturnStmt 0x5625231369c8 <line:1328:9, col:16>
|     `-CXXBoolLiteralExpr 0x5625231369b8 <col:16> 'bool' true
|-CXXMethodDecl 0x5625231364d8 <line:1330:5, line:1333:5> line:1330:17 parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x562523136308 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x562523136380 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x5625231363f8 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x562523136978 <col:79> 'const ArgContext' lvalue Var 0x56252311ca88 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x562523136db8 <col:91, line:1333:5>
|   |-CXXOperatorCallExpr 0x562523136d60 <line:1331:9, col:18> 'String' lvalue
|   | |-ImplicitCastExpr 0x562523136d48 <col:16> 'String &(*)(const String &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562523136d28 <col:16> 'String &(const String &)' lvalue CXXMethod 0x562522db1630 'operator=' 'String &(const String &)'
|   | |-DeclRefExpr 0x5625231369f0 <col:9> 'String' lvalue ParmVar 0x562523136380 'result' 'String &'
|   | `-DeclRefExpr 0x562523136a10 <col:18> 'const String' lvalue ParmVar 0x562523136308 'str' 'const String &'
|   `-ReturnStmt 0x562523136da8 <line:1332:9, col:16>
|     `-CXXBoolLiteralExpr 0x562523136d98 <col:16> 'bool' true
|-CXXMethodDecl 0x562523136888 <line:1334:5, line:1337:5> line:1334:17 parse 'bool (const String &, Vector<String> &, const ArgContext &)' static
| |-ParmVarDecl 0x5625231365a0 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x5625231366f0 <col:42, col:58> col:58 used result 'Vector<String> &'
| |-ParmVarDecl 0x562523136768 <col:66, col:87> col:85 'const ArgContext &' cinit
| | `-DeclRefExpr 0x562523136998 <col:87> 'const ArgContext' lvalue Var 0x56252311ca88 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x562523136ef0 <col:99, line:1337:5>
|   |-CXXMemberCallExpr 0x562523136ea8 <line:1335:9, col:29> 'void'
|   | |-MemberExpr 0x562523136e78 <col:9, col:16> '<bound member function type>' .push_back 0x5625230b9818
|   | | `-DeclRefExpr 0x562523136dd8 <col:9> 'Vector<String>':'Vector<String>' lvalue ParmVar 0x5625231366f0 'result' 'Vector<String> &'
|   | `-DeclRefExpr 0x562523136e58 <col:26> 'const String' lvalue ParmVar 0x5625231365a0 'str' 'const String &'
|   `-ReturnStmt 0x562523136ee0 <line:1336:9, col:16>
|     `-CXXBoolLiteralExpr 0x562523136ed0 <col:16> 'bool' true
|-CXXConstructorDecl 0x562523270250 <line:1326:7> col:7 implicit referenced constexpr AnyArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x562523270358 <col:7> col:7 implicit constexpr AnyArg 'void (const AnyArg &)' inline default trivial noexcept-unevaluated 0x562523270358
| `-ParmVarDecl 0x562523270468 <col:7> col:7 'const AnyArg &'
|-CXXConstructorDecl 0x562523270508 <col:7> col:7 implicit used constexpr AnyArg 'void (AnyArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562523270618 <col:7> col:7 'AnyArg &&'
| `-CompoundStmt 0x562523270b70 <col:7>
`-CXXDestructorDecl 0x5625232706b8 <col:7> col:7 implicit referenced ~AnyArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.AnyArg = type { i8 }
  NonVirtualBaseLLVMType:%class.AnyArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ether
         0 |   uint8_t [6] ether_dhost
         6 |   uint8_t [6] ether_shost
        12 |   uint16_t ether_type
           | [sizeof=14, dsize=14, align=1,
           |  nvsize=14, nvalign=1]

*** Dumping AST Record Layout
         0 | struct click_arp
         0 |   uint16_t ar_hrd
         2 |   uint16_t ar_pro
         4 |   uint8_t ar_hln
         5 |   uint8_t ar_pln
         6 |   uint16_t ar_op
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping AST Record Layout
         0 | struct click_ether_arp
         0 |   struct click_arp ea_hdr
         0 |     uint16_t ar_hrd
         2 |     uint16_t ar_pro
         4 |     uint8_t ar_hln
         5 |     uint8_t ar_pln
         6 |     uint16_t ar_op
         8 |   uint8_t [6] arp_sha
        14 |   uint8_t [4] arp_spa
        18 |   uint8_t [6] arp_tha
        24 |   uint8_t [4] arp_tpa
           | [sizeof=28, dsize=28, align=2,
           |  nvsize=28, nvalign=2]

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522fb0a50 prev 0x562522f8d310 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x562522fb0b88 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x562522fb0c18 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x562522fb0cc0 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x562522fb0d60 <col:20>
| `-OptimizeNoneAttr 0x562522fb0db8 <col:30>
|-CXXMethodDecl 0x562522fb0e08 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x562522fb0ea8 <col:20>
| `-OptimizeNoneAttr 0x562522fb0f00 <col:30>
|-CXXMethodDecl 0x562522fb0f50 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x562522fb1018 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x562522fb10e0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x562522fb11f8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x562522fb12c0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x562522fb1360 <col:20>
| `-OptimizeNoneAttr 0x562522fb13b8 <col:30>
|-CXXMethodDecl 0x562522fb1428 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x562522fb14c8 <col:20>
| `-OptimizeNoneAttr 0x562522fb1520 <col:30>
|-CXXMethodDecl 0x562522fb15c8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x562522fb1668 <col:20>
| `-OptimizeNoneAttr 0x562522fb16c0 <col:30>
|-CXXMethodDecl 0x562522fb1710 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x562522fb1828 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x562522fb1948 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x562522fb1a68 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x562522fb1b30 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x562522fb1bd0 <col:62> "" ""
|-AccessSpecDecl 0x562522fb1c40 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x562522fb1ca0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x562522fb2898 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x562522fb2ac0 <col:29, col:31>
|-CXXMethodDecl 0x562522fb1d68 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x562522fb1ea8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x562522fb1e18 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x562522fb1fa0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x562522fb2ad0 <col:23, col:25>
|-CXXMethodDecl 0x562522fb2158 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x562522fb2090 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x562522fb2428 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x562522fb2210 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x562522fb2288 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x562522fb2300 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x562522fb25b8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x562522fb24f0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x562522fb26b0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x562522fb2718 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x562522fb2718
  `-ParmVarDecl 0x562522fb2828 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523088920 prev 0x562522f8ce60 <../dummy_inc/clicknet/ether.h:17:1, line:21:1> line:17:8 referenced struct click_ether definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-PackedAttr 0x562523088ce8 <line:21:18>
|-CXXRecordDecl 0x562523088a18 <line:17:1, col:8> col:8 implicit struct click_ether
|-FieldDecl 0x562523088b88 <line:18:5, col:26> col:13 referenced ether_dhost 'uint8_t [6]'
|-FieldDecl 0x562523088c38 <line:19:5, col:26> col:13 referenced ether_shost 'uint8_t [6]'
`-FieldDecl 0x562523088c98 <line:20:5, col:14> col:14 referenced ether_type 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  NonVirtualBaseLLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523088d58 <../dummy_inc/clicknet/ether.h:33:1, line:52:1> line:33:8 struct click_arp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x562523088e78 <col:1, col:8> col:8 implicit struct click_arp
|-FieldDecl 0x562523088f18 <line:34:5, col:14> col:14 referenced ar_hrd 'uint16_t':'unsigned short'
|-FieldDecl 0x562523088f78 <line:42:5, col:14> col:14 referenced ar_pro 'uint16_t':'unsigned short'
|-FieldDecl 0x562523088fd8 <line:43:5, col:13> col:13 referenced ar_hln 'uint8_t':'unsigned char'
|-FieldDecl 0x562523089038 <line:44:5, col:13> col:13 referenced ar_pln 'uint8_t':'unsigned char'
`-FieldDecl 0x562523089098 <line:45:5, col:14> col:14 referenced ar_op 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_arp = type { i16, i16, i8, i8, i16 }
  NonVirtualBaseLLVMType:%struct.click_arp = type { i16, i16, i8, i8, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523089100 <../dummy_inc/clicknet/ether.h:54:1, line:60:1> line:54:8 referenced struct click_ether_arp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x562523089218 <col:1, col:8> col:8 implicit struct click_ether_arp
|-FieldDecl 0x562523089300 <line:55:5, col:22> col:22 referenced ea_hdr 'struct click_arp':'click_arp'
|-FieldDecl 0x5625230893b0 <line:56:5, col:22> col:13 referenced arp_sha 'uint8_t [6]'
|-FieldDecl 0x562523089498 <line:57:5, col:22> col:13 referenced arp_spa 'uint8_t [4]'
|-FieldDecl 0x562523089548 <line:58:5, col:22> col:13 referenced arp_tha 'uint8_t [6]'
`-FieldDecl 0x5625230895f8 <line:59:5, col:22> col:13 referenced arp_tpa 'uint8_t [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ether_arp = type { %struct.click_arp, [6 x i8], [4 x i8], [6 x i8], [4 x i8] }
  NonVirtualBaseLLVMType:%struct.click_ether_arp = type { %struct.click_arp, [6 x i8], [4 x i8], [6 x i8], [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523173e60 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x562523314878 <line:167:18>
|-CXXRecordDecl 0x562523314938 prev 0x562523173e60 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x562523314a48 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class Timestamp>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class Timestamp * _ptr
        24 |   class Timestamp _slot
        24 |     union Timestamp::rep_t _t
        24 |       int64_t x
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class IPAddress>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class IPAddress * _ptr
        24 |   class IPAddress _slot
        24 |     uint32_t _addr
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class ARPTable *>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class ARPTable ** _ptr
        24 |   class ARPTable * _slot
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522bb9c58 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522bb9d78 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x562522dcbbf0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x562522dcbcd0 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x562522dcbcd0
| `-ParmVarDecl 0x562522dcbdb8 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x562522dcbe58 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x562522dcbe58
| `-ParmVarDecl 0x562522dcbf68 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x562522f68c50 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523072d50 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x56252307f778 prev 0x562523072d50 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x56252307f808 <col:38, col:44> col:38 public
|-TypedefDecl 0x56252307f9d0 <line:304:5, col:53> col:53 size_type 'typename HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >::size_type':'unsigned long'
| `-ElaboratedType 0x56252307f980 'typename HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >::size_type' sugar
|   `-TypedefType 0x5625230728c0 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::size_type' sugar
|     |-Typedef 0x562523072080 'size_type'
|     `-TypedefType 0x562522b09cd0 'size_t' sugar
|       |-Typedef 0x562522aceb20 'size_t'
|       `-BuiltinType 0x562522a5e430 'unsigned long'
|-TypedefDecl 0x56252307fb70 <line:305:5, col:61> col:61 referenced bucket_count_type 'typename HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x56252307fb20 'typename HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >::bucket_count_type' sugar
|   `-TypedefType 0x562523072a60 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type' sugar
|     |-Typedef 0x5625230720d8 'bucket_count_type'
|     `-TypedefType 0x562522bb9fe0 'uint32_t' sugar
|       |-Typedef 0x562522ac7408 'uint32_t'
|       `-TypedefType 0x562522aa0440 '__uint32_t' sugar
|         |-Typedef 0x562522aa0038 '__uint32_t'
|         `-BuiltinType 0x562522a5e410 'unsigned int'
|-CXXConstructorDecl 0x56252307fc00 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x56252307fd68 <line:312:5, line:314:5> line:312:8 used get 'ARPTable::ARPEntry *() const'
| `-CompoundStmt 0x56252330c9d0 <col:20, line:314:5>
|   `-ReturnStmt 0x56252330c9c0 <line:313:2, col:9>
|     `-ImplicitCastExpr 0x56252330c9a8 <col:9> 'ARPTable::ARPEntry *' <LValueToRValue>
|       `-MemberExpr 0x56252330c978 <col:9> 'ARPTable::ARPEntry *const' lvalue ->_element 0x562523080948
|         `-CXXThisExpr 0x56252330c968 <col:9> 'const HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' implicit this
|-CXXMethodDecl 0x56252307fe38 <line:317:5, line:319:5> line:317:8 used operator-> 'ARPTable::ARPEntry *() const'
| `-CompoundStmt 0x56252330ca50 <col:27, line:319:5>
|   `-ReturnStmt 0x56252330ca40 <line:318:2, col:9>
|     `-ImplicitCastExpr 0x56252330ca28 <col:9> 'ARPTable::ARPEntry *' <LValueToRValue>
|       `-MemberExpr 0x56252330c9f8 <col:9> 'ARPTable::ARPEntry *const' lvalue ->_element 0x562523080948
|         `-CXXThisExpr 0x56252330c9e8 <col:9> 'const HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' implicit this
|-CXXMethodDecl 0x56252307ff98 <line:323:5, line:325:5> line:323:8 operator* 'ARPTable::ARPEntry &() const'
|-CXXMethodDecl 0x562523080048 <line:328:5, line:330:5> line:328:17 live 'bool () const' inline
|-TypedefDecl 0x5625230801d8 <line:332:5, col:73> col:48 unspecified_bool_type 'ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const'
| `-MemberPointerType 0x562523080170 'ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const'
|   |-RecordType 0x562523072e50 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|   | `-ClassTemplateSpecialization 0x562523072d50 'HashContainer_const_iterator'
|   `-ParenType 0x562523080100 'ARPTable::ARPEntry *() const' sugar
|     `-FunctionProtoType 0x56252307fd20 'ARPTable::ARPEntry *() const' const cdecl
|       `-PointerType 0x56252307fcc0 'ARPTable::ARPEntry *'
|         `-SubstTemplateTypeParmType 0x56252307f830 'ARPTable::ARPEntry' sugar
|           |-TemplateTypeParmType 0x56252301da70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56252301da20 'T'
|           `-RecordType 0x56252306e150 'ARPTable::ARPEntry'
|             `-CXXRecord 0x56252306e0b8 'ARPEntry'
|-CXXConversionDecl 0x5625230802f0 <line:334:5, line:336:5> line:334:12 used operator ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::unspecified_bool_type () const' inline
| `-CompoundStmt 0x56252330c950 <col:51, line:336:5>
|   `-ReturnStmt 0x56252330c940 <line:335:2, col:57>
|     `-ConditionalOperator 0x56252330c910 <col:9, col:57> 'ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const'
|       |-ImplicitCastExpr 0x56252330c8e0 <col:9> 'bool' <PointerToBoolean>
|       | `-ImplicitCastExpr 0x56252330c8c8 <col:9> 'ARPTable::ARPEntry *' <LValueToRValue>
|       |   `-MemberExpr 0x56252330c7e8 <col:9> 'ARPTable::ARPEntry *const' lvalue ->_element 0x562523080948
|       |     `-CXXThisExpr 0x56252330c7a8 <col:9> 'const HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' implicit this
|       |-UnaryOperator 0x56252330c8b0 <col:20, col:51> 'ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x56252330c850 <col:21, col:51> 'ARPTable::ARPEntry *() const' CXXMethod 0x56252307fd68 'get' 'ARPTable::ARPEntry *() const'
|       `-ImplicitCastExpr 0x56252330c8f8 <col:57> 'ARPTable::ARPEntry *(HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x562523020038 <col:57> 'int' 0
|-CXXMethodDecl 0x562523080548 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *() const'
|-CXXMethodDecl 0x562523080668 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type () const'
|-CXXMethodDecl 0x562523080718 <line:349:5, line:361:5> line:349:10 operator++ 'void ()'
|-CXXMethodDecl 0x562523080858 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x5625230807c8 <col:21> col:24 'int'
|-AccessSpecDecl 0x562523080910 <line:368:3, col:10> col:3 private
|-FieldDecl 0x562523080948 <line:370:5, col:8> col:8 referenced _element 'ARPTable::ARPEntry *'
|-FieldDecl 0x5625230809e0 <line:371:5, col:9> col:9 referenced _pprev 'ARPTable::ARPEntry **'
|-FieldDecl 0x562523080a40 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x562523080b88 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
|-CXXConstructorDecl 0x562523080de8 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *)' inline
| `-ParmVarDecl 0x562523080cd8 <col:41, col:68> col:68 hc 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
|-CXXConstructorDecl 0x562523081278 <line:387:5, line:390:5> line:387:12 used HashContainer_const_iterator 'void (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *, HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type, ARPTable::ARPEntry **, ARPTable::ARPEntry *)' inline
| |-ParmVarDecl 0x562523080fa8 <col:41, col:68> col:68 used hc 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
| |-ParmVarDecl 0x562523081020 <col:72, col:90> col:90 used b 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x5625230810a0 <col:93, col:97> col:97 used pprev 'ARPTable::ARPEntry **'
| |-ParmVarDecl 0x562523081118 <col:104, col:107> col:107 used element 'ARPTable::ARPEntry *'
| |-CXXCtorInitializer Field 0x562523080948 '_element' 'ARPTable::ARPEntry *'
| | `-ImplicitCastExpr 0x56252330c5c8 <line:388:13> 'ARPTable::ARPEntry *' <LValueToRValue>
| |   `-DeclRefExpr 0x56252330c588 <col:13> 'ARPTable::ARPEntry *' lvalue ParmVar 0x562523081118 'element' 'ARPTable::ARPEntry *'
| |-CXXCtorInitializer Field 0x5625230809e0 '_pprev' 'ARPTable::ARPEntry **'
| | `-ImplicitCastExpr 0x56252330c648 <col:30> 'ARPTable::ARPEntry **' <LValueToRValue>
| |   `-DeclRefExpr 0x56252330c608 <col:30> 'ARPTable::ARPEntry **' lvalue ParmVar 0x5625230810a0 'pprev' 'ARPTable::ARPEntry **'
| |-CXXCtorInitializer Field 0x562523080a40 '_bucket' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int'
| | `-ImplicitCastExpr 0x56252330c6c8 <col:46> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x56252330c688 <col:46> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int' lvalue ParmVar 0x562523081020 'b' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int'
| |-CXXCtorInitializer Field 0x562523080b88 '_hc' 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
| | `-ImplicitCastExpr 0x56252330c748 <col:54> 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' <LValueToRValue>
| |   `-DeclRefExpr 0x56252330c708 <col:54> 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' lvalue ParmVar 0x562523080fa8 'hc' 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
| `-CompoundStmt 0x562523027c88 <col:58, line:390:5>
|   `-NullStmt 0x562523027c80 <line:389:66>
|-FriendDecl 0x562523081458 <line:392:5, col:36> col:12 'class HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-FriendDecl 0x5625230815a8 <line:393:5, col:45> col:12 'class HashContainer_iterator<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-CXXDestructorDecl 0x5625230826c0 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5625230827f8 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline default trivial noexcept-unevaluated 0x5625230827f8
| `-ParmVarDecl 0x562523082908 <col:7> col:7 'const HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
`-CXXConstructorDecl 0x5625230829a8 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x562523082ab8 <col:7> col:7 used 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer Field 0x562523080948 '_element' 'ARPTable::ARPEntry *'
  | `-ImplicitCastExpr 0x562523083058 <col:7> 'ARPTable::ARPEntry *' <LValueToRValue>
  |   `-MemberExpr 0x562523083010 <col:7> 'ARPTable::ARPEntry *' xvalue ._element 0x562523080948
  |     `-CXXStaticCastExpr 0x562523082fe0 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x562523082fb0 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x562523082ab8 '' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer Field 0x5625230809e0 '_pprev' 'ARPTable::ARPEntry **'
  | `-ImplicitCastExpr 0x562523083140 <col:7> 'ARPTable::ARPEntry **' <LValueToRValue>
  |   `-MemberExpr 0x5625230830f8 <col:7> 'ARPTable::ARPEntry **' xvalue ._pprev 0x5625230809e0
  |     `-CXXStaticCastExpr 0x5625230830c8 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x562523083098 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x562523082ab8 '' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer Field 0x562523080a40 '_bucket' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int'
  | `-ImplicitCastExpr 0x562523083228 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
  |   `-MemberExpr 0x5625230831e0 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x562523080a40
  |     `-CXXStaticCastExpr 0x5625230831b0 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x562523083180 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x562523082ab8 '' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer Field 0x562523080b88 '_hc' 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
  | `-ImplicitCastExpr 0x562523083310 <col:7> 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' <LValueToRValue>
  |   `-MemberExpr 0x5625230832c8 <col:7> 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' xvalue ._hc 0x562523080b88
  |     `-CXXStaticCastExpr 0x562523083298 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_const_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x562523083268 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x562523082ab8 '' 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  `-CompoundStmt 0x562523083370 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %"struct.ARPTable::ARPEntry"*, %"struct.ARPTable::ARPEntry"**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562523072f88 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-TemplateArgument type 'ARPTable::ARPEntry'
|-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>'
|-CXXRecordDecl 0x562523081630 prev 0x562523072f88 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x5625230816c0 <col:76, col:82> col:76 public
|-TypedefDecl 0x5625230817b0 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| `-TemplateSpecializationType 0x562523081710 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'ARPTable::ARPEntry':'ARPTable::ARPEntry'
|   |-TemplateArgument type 'HashContainer_adapter<ARPTable::ARPEntry>':'HashContainer_adapter<ARPTable::ARPEntry>'
|   `-RecordType 0x562523072e50 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|     `-ClassTemplateSpecialization 0x562523072d50 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x562523081840 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x5625230818f8 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x562523081b18 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *() const'
|-AccessSpecDecl 0x562523081bc8 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x562523081df8 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *)' inline
| `-ParmVarDecl 0x562523081ce8 <col:35, col:56> col:56 hc 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
|-CXXConstructorDecl 0x562523082388 <line:429:5, line:431:5> line:429:12 used HashContainer_iterator 'void (HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *, typename inherited::bucket_count_type, ARPTable::ARPEntry **, ARPTable::ARPEntry *)' inline
| |-ParmVarDecl 0x562523081fb8 <col:35, col:56> col:56 used hc 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
| |-ParmVarDecl 0x5625230820d0 <col:60, col:98> col:98 used b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x5625230821b0 <col:101, col:105> col:105 used pprev 'ARPTable::ARPEntry **'
| |-ParmVarDecl 0x562523082228 <col:112, col:115> col:115 used element 'ARPTable::ARPEntry *'
| |-CXXCtorInitializer 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::inherited':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
| | `-CXXConstructExpr 0x56252330c510 <line:430:4, col:35> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' 'void (const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *, HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >::bucket_count_type, ARPTable::ARPEntry **, ARPTable::ARPEntry *)'
| |   |-ImplicitCastExpr 0x56252330c4b0 <col:14> 'const HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' <NoOp>
| |   | `-ImplicitCastExpr 0x56252330c498 <col:14> 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x56252330c3d0 <col:14> 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *' lvalue ParmVar 0x562523081fb8 'hc' 'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > *'
| |   |-ImplicitCastExpr 0x56252330c4c8 <col:18> 'typename inherited::bucket_count_type':'unsigned int' <LValueToRValue>
| |   | `-DeclRefExpr 0x56252330c3f0 <col:18> 'typename inherited::bucket_count_type':'unsigned int' lvalue ParmVar 0x5625230820d0 'b' 'typename inherited::bucket_count_type':'unsigned int'
| |   |-ImplicitCastExpr 0x56252330c4e0 <col:21> 'ARPTable::ARPEntry **' <LValueToRValue>
| |   | `-DeclRefExpr 0x56252330c410 <col:21> 'ARPTable::ARPEntry **' lvalue ParmVar 0x5625230821b0 'pprev' 'ARPTable::ARPEntry **'
| |   `-ImplicitCastExpr 0x56252330c4f8 <col:28> 'ARPTable::ARPEntry *' <LValueToRValue>
| |     `-DeclRefExpr 0x56252330c430 <col:28> 'ARPTable::ARPEntry *' lvalue ParmVar 0x562523082228 'element' 'ARPTable::ARPEntry *'
| `-CompoundStmt 0x5625230296d8 <col:37, line:431:5>
|-FriendDecl 0x562523082568 <line:433:5, col:36> col:12 'class HashContainer<ARPEntry, HashContainer_adapter<ARPEntry> >':'HashContainer<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
|-CXXDestructorDecl 0x5625230825d8 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x562523082b28 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &)' inline default trivial noexcept-unevaluated 0x562523082b28
| `-ParmVarDecl 0x562523082c38 <col:7> col:7 'const HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &'
`-CXXConstructorDecl 0x562523082cd8 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x562523082de8 <col:7> col:7 used 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  |-CXXCtorInitializer 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >'
  | `-CXXConstructExpr 0x562523083380 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' 'void (HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&) noexcept'
  |   `-ImplicitCastExpr 0x562523082f90 <col:7> 'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >':'HashContainer_const_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
  |     `-CXXStaticCastExpr 0x562523082f60 <col:7> 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' xvalue static_cast<class HashContainer_iterator<struct ARPTable::ARPEntry, class HashContainer_adapter<struct ARPTable::ARPEntry> > &&> <NoOp>
  |       `-DeclRefExpr 0x562523082f30 <col:7> 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> >' lvalue ParmVar 0x562523082de8 '' 'HashContainer_iterator<ARPTable::ARPEntry, HashContainer_adapter<ARPTable::ARPEntry> > &&'
  `-CompoundStmt 0x562523083448 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<unsigned int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5625231251b0 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5625231252c8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x562523125358 <col:16, col:22> col:16 public
|-EnumDecl 0x562523125380 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x562523125480 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x5625231256d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523125460 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x562523125440 <col:21> 'int' 0
| |-EnumConstantDecl 0x562523125510 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x5625231256e8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5625231254f0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x5625231254d0 <col:24> 'int' 22
| |-EnumConstantDecl 0x5625231255a0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x562523125700 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523125580 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x562523125560 <col:24> 'int' 34
| |-EnumConstantDecl 0x562523125630 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x562523125718 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x562523125610 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x5625231255f0 <col:25> 'int' 95
| `-EnumConstantDecl 0x562523125680 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x562523127090 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5625231274c8 <col:7>
|-CXXConstructorDecl 0x562523127198 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x562523127198
| `-ParmVarDecl 0x5625231272a8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x562523127348 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562523127458 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x56252331ae70 <col:7>
`-CXXDestructorDecl 0x562523129668 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523125748 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x5625231258a8 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x562523125938 <col:32, col:38> col:32 public
|-TypedefDecl 0x562523125970 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x562522bb9fe0 'uint32_t' sugar
|   |-Typedef 0x562522ac7408 'uint32_t'
|   `-TypedefType 0x562522aa0440 '__uint32_t' sugar
|     |-Typedef 0x562522aa0038 '__uint32_t'
|     `-BuiltinType 0x562522a5e410 'unsigned int'
|-CXXConstructorDecl 0x562523125ab8 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x5625231259e0 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x562523126f98 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x5625231274d8 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x562523126850 'base' 'int'
| | `-ImplicitCastExpr 0x562523127038 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x562523126ff8 <col:16> 'int' lvalue ParmVar 0x5625231259e0 'b' 'int'
| `-CompoundStmt 0x562523127548 <col:19, line:1046:5>
|-CXXMethodDecl 0x562523125fb0 <line:1048:5, line:1050:50> line:1048:17 used parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x562523125b80 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x562523125c00 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x562523125c78 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x562523125cf8 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x562523125db8 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x562523125e38 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x562523126408 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x562523126080 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x562523126368 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x562523126128 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x5625231261c8 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x562523126240 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x562523126fb8 <col:82> 'const ArgContext' lvalue Var 0x56252311ca88 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x5625231284b8 <col:94, line:1067:5>
| |   |-DeclStmt 0x5625231276d8 <line:1054:9, col:64>
| |   | `-VarDecl 0x562523127568 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x562523127690 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x5625231278f8 <line:1055:9, col:91>
| |   | `-VarDecl 0x562523127708 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x5625231278d0 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x5625231278b0 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x562523127860 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x562523127840 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x5625231277e8 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x562523127798 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x5625231277c8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x562523127828 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x562523127808 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x562523127890 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x562523127a58 <line:1056:9, col:27>
| |   | `-VarDecl 0x5625231279f0 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x562523127eb0 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x562523127de0 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x562523127d50 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x56252303ecf8 0x562522fe3bc0 0x562522f83fc8 0x562522dcd5a8 0x562522dcd280 0x562522dbea60 0x562522dbe710 0x562522dbe000 0x562522d90970 0x562522d1ce30
| |   | | |-CallExpr 0x562523127c90 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x562523127a80 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x562523127b30 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x562523127b00 <col:19, col:23> '<bound member function type>' .begin 0x562522dadc68
| |   | | | |   `-DeclRefExpr 0x562523127ae0 <col:19> 'const String' lvalue ParmVar 0x562523126128 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x562523127ba0 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x562523127b70 <col:32, col:36> '<bound member function type>' .end 0x562522dade80
| |   | | | |   `-DeclRefExpr 0x562523127b50 <col:32> 'const String' lvalue ParmVar 0x562523126128 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x562523127bc0 <col:43> 'const bool' lvalue Var 0x562523127568 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x562523127c28 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x562523127c08 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x562523127c50 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x5625231279f0 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x562523127c70 <col:73> 'const int' lvalue Var 0x562523127708 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x562523127d30 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x562523127d00 <col:16, col:20> '<bound member function type>' .end 0x562522dade80
| |   | |     `-DeclRefExpr 0x562523127ce0 <col:16> 'const String' lvalue ParmVar 0x562523126128 'str' 'const String &'
| |   | `-BinaryOperator 0x562523127e90 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x562523127e28 <col:13> 'int' lvalue ->status 0x5625231268b8
| |   |   | `-CXXThisExpr 0x562523127e18 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x562523127e78 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x562523127e58 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x562523125510 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x562523128130 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x562523128018 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x562523128000 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x562523127fe8 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x562523127ed8 <col:13> 'int' lvalue ->status 0x5625231268b8
| |   | | |     `-CXXThisExpr 0x562523127ec8 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x562523127fc8 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x562523127f98 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x562523127f18 <col:23> 'int' lvalue ->status 0x5625231268b8
| |   | |   |   `-CXXThisExpr 0x562523127f08 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x562523127fb0 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x562523127f48 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5625231255a0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x562523128110 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x5625231280b0 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x562523128058 <col:13, col:18> '<bound member function type>' .error 0x5625230c6210
| |   |   | | `-DeclRefExpr 0x562523128038 <col:13> 'const ArgContext' lvalue ParmVar 0x562523126240 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x5625231280d8 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x562523128088 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x562523128100 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x5625231280f0 <col:20> 'bool' false
| |   |-DeclStmt 0x562523128308 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x5625231282b0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x562523128240 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x562523128468 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x562523128320 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x562522d50df8
| |   | |-DeclRefExpr 0x562523128368 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x5625231279f0 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x562523128438 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x5625231283b0 <col:64> 'V' lvalue ParmVar 0x5625231261c8 'result' 'V &'
| |   `-ReturnStmt 0x5625231284a8 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x562523128498 <col:16> 'bool' true
| `-CXXMethodDecl 0x56252331e628 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, unsigned int &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x56252331e400 <col:27, col:41> col:41 used str 'const String &'
|   |-ParmVarDecl 0x56252331e4d8 <col:46, col:49> col:49 used result 'unsigned int &'
|   |-ParmVarDecl 0x56252331e540 <col:57, col:82> col:75 used args 'const ArgContext &'
|   `-CompoundStmt 0x562523320460 <col:94, line:1067:5>
|     |-DeclStmt 0x56252331ee98 <line:1054:9, col:64>
|     | `-VarDecl 0x56252331ecb8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-ImplicitCastExpr 0x56252331ee28 <col:36, col:55> 'bool' <LValueToRValue>
|     |     `-DeclRefExpr 0x56252331edf8 <col:36, col:55> 'const bool' lvalue Var 0x562522d40010 'is_signed' 'const bool' non_odr_use_constant
|     |-DeclStmt 0x56252331f078 <line:1055:9, col:91>
|     | `-VarDecl 0x56252331eeb0 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x56252331eff8 <col:31, col:90> 'int' functional cast to int <NoOp>
|     |     `-ImplicitCastExpr 0x56252331efe0 <col:35, col:89> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-BinaryOperator 0x56252331efc0 <col:35, col:89> 'unsigned long' '/'
|     |         |-ParenExpr 0x56252331efa0 <col:35, col:69> 'unsigned long'
|     |         | `-BinaryOperator 0x56252331ef80 <col:36, col:68> 'unsigned long' '-'
|     |         |   |-BinaryOperator 0x56252331ef48 <col:36, col:64> 'unsigned long' '+'
|     |         |   | |-UnaryExprOrTypeTraitExpr 0x56252331ef28 <col:36, col:44> 'unsigned long' sizeof 'unsigned int':'unsigned int'
|     |         |   | `-UnaryExprOrTypeTraitExpr 0x5625231277c8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |         |   `-ImplicitCastExpr 0x56252331ef68 <col:68> 'unsigned long' <IntegralCast>
|     |         |     `-IntegerLiteral 0x562523127808 <col:68> 'int' 1
|     |         `-UnaryExprOrTypeTraitExpr 0x562523127890 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x56252331f210 <line:1056:9, col:27>
|     | `-VarDecl 0x56252331f1a8 <col:9, col:26> col:19 used x 'IntArg::limb_type [1]'
|     |-IfStmt 0x56252331f6a8 <line:1057:9, line:1059:22>
|     | |-BinaryOperator 0x56252331f650 <line:1057:13, line:1058:24> 'bool' '!='
|     | | |-CXXMemberCallExpr 0x56252331f508 <line:1057:13, col:78> 'const char *'
|     | | | |-MemberExpr 0x56252331f4d8 <col:13> '<bound member function type>' ->parse 0x562523125fb0
|     | | | | `-CXXThisExpr 0x56252331f4c8 <col:13> 'IntArg *' implicit this
|     | | | |-CXXMemberCallExpr 0x56252331f368 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x56252331f338 <col:19, col:23> '<bound member function type>' .begin 0x562522dadc68
|     | | | |   `-DeclRefExpr 0x56252331f318 <col:19> 'const String' lvalue ParmVar 0x56252331e400 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x56252331f3d8 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x56252331f3a8 <col:32, col:36> '<bound member function type>' .end 0x562522dade80
|     | | | |   `-DeclRefExpr 0x56252331f388 <col:32> 'const String' lvalue ParmVar 0x56252331e400 'str' 'const String &'
|     | | | |-ImplicitCastExpr 0x56252331f578 <col:43> 'bool' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x56252331f558 <col:43> 'const bool' lvalue Var 0x56252331ecb8 'is_signed' 'const bool' non_odr_use_constant
|     | | | |-CXXFunctionalCastExpr 0x56252331f460 <col:54, col:67> 'int' functional cast to int <NoOp>
|     | | | | `-ImplicitCastExpr 0x56252331f448 <col:58, col:66> 'int' <IntegralCast> part_of_explicit_cast
|     | | | |   `-UnaryExprOrTypeTraitExpr 0x56252331f428 <col:58, col:66> 'unsigned long' sizeof 'unsigned int':'unsigned int'
|     | | | |-ImplicitCastExpr 0x56252331f590 <col:70> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | | | | `-DeclRefExpr 0x56252331f488 <col:70> 'IntArg::limb_type [1]' lvalue Var 0x56252331f1a8 'x' 'IntArg::limb_type [1]'
|     | | | `-ImplicitCastExpr 0x56252331f5c8 <col:73> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x56252331f5a8 <col:73> 'const int' lvalue Var 0x56252331eeb0 'nlimb' 'const int' non_odr_use_constant
|     | | `-CXXMemberCallExpr 0x56252331f630 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x56252331f600 <col:16, col:20> '<bound member function type>' .end 0x562522dade80
|     | |     `-DeclRefExpr 0x56252331f5e0 <col:16> 'const String' lvalue ParmVar 0x56252331e400 'str' 'const String &'
|     | `-BinaryOperator 0x56252331f688 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x562523127e28 <col:13> 'int' lvalue ->status 0x5625231268b8
|     |   | `-CXXThisExpr 0x562523127e18 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x56252331f670 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x562523127e58 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x562523125510 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x56252331f850 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x56252331f770 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x56252331f758 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x56252331f740 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x562523127ed8 <col:13> 'int' lvalue ->status 0x5625231268b8
|     | | |     `-CXXThisExpr 0x562523127ec8 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x56252331f720 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x56252331f6f0 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x562523127f18 <col:23> 'int' lvalue ->status 0x5625231268b8
|     | |   |   `-CXXThisExpr 0x562523127f08 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x56252331f708 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x562523127f48 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5625231255a0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x56252331f830 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x56252331f7e0 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x56252331f7b0 <col:13, col:18> '<bound member function type>' .error 0x5625230c6210
|     |   | | `-DeclRefExpr 0x56252331f790 <col:13> 'const ArgContext' lvalue ParmVar 0x56252331e540 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x56252331f808 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x562523128088 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x56252331f820 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x5625231280f0 <col:20> 'bool' false
|     |-DeclStmt 0x56252331fd98 <line:1064:9, col:64>
|     | `-TypedefDecl 0x56252331fd40 <col:9, col:49> col:49 unsigned_v_type 'typename make_unsigned<unsigned int>::type':'unsigned int'
|     |   `-ElaboratedType 0x56252331fcf0 'typename make_unsigned<unsigned int>::type' sugar
|     |     `-TypedefType 0x56252331fcd0 'make_unsigned<unsigned int>::type' sugar
|     |       |-Typedef 0x56252331fc60 'type'
|     |       `-ElaboratedType 0x56252331fc10 'typename integer_traits<unsigned int>::unsigned_type' sugar
|     |         `-TypedefType 0x56252331fbf0 'integer_traits<unsigned int>::unsigned_type' sugar
|     |           |-Typedef 0x562522d40168 'unsigned_type'
|     |           `-BuiltinType 0x562522a5e410 'unsigned int'
|     |-CallExpr 0x5625233203f0 <line:1065:9, col:71> 'void'
|     | |-ImplicitCastExpr 0x5625233203d8 <col:9> 'void (*)(const unsigned int *, unsigned int &)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x562523320358 <col:9> 'void (const unsigned int *, unsigned int &)' lvalue Function 0x562523320238 'extract_integer' 'void (const unsigned int *, unsigned int &)' (FunctionTemplate 0x562522d50df8 'extract_integer')
|     | |-ImplicitCastExpr 0x562523320438 <col:25> 'const unsigned int *' <NoOp>
|     | | `-ImplicitCastExpr 0x562523320420 <col:25> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | |   `-DeclRefExpr 0x56252331fdf8 <col:25> 'IntArg::limb_type [1]' lvalue Var 0x56252331f1a8 'x' 'IntArg::limb_type [1]'
|     | `-CXXReinterpretCastExpr 0x56252331fec8 <col:28, col:70> 'unsigned_v_type':'unsigned int' lvalue reinterpret_cast<unsigned_v_type &> <NoOp>
|     |   `-DeclRefExpr 0x56252331fe78 <col:64> 'unsigned int':'unsigned int' lvalue ParmVar 0x56252331e4d8 'result' 'unsigned int &'
|     `-ReturnStmt 0x562523320450 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x562523128498 <col:16> 'bool' true
|-FunctionTemplateDecl 0x5625231267c8 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x562523126478 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x562523126728 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x562523126528 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x5625231265c8 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x562523126640 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x562523126fd8 <col:71> 'const ArgContext' lvalue Var 0x56252311ca88 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x562523128c88 <col:83, line:1083:5>
| |   |-DeclStmt 0x562523128580 <line:1071:9, col:12>
| |   | `-VarDecl 0x562523128518 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x562523128c60 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x562523128840 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x562523128698 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x562523128660 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x5625231285a8 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x562523128600 <col:31> 'const String' lvalue ParmVar 0x562523126528 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x562523128620 <col:36> 'V' lvalue Var 0x562523128518 'x' 'V'
| |     | |   `-DeclRefExpr 0x562523128640 <col:39> 'const ArgContext' lvalue ParmVar 0x562523126640 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x562523128820 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x562523128800 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x5625231287e8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x5625231287d0 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x5625231286c0 <col:17> 'int' lvalue ->status 0x5625231268b8
| |     |     |     `-CXXThisExpr 0x5625231286b0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x5625231287b0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x562523128780 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x562523128700 <col:27> 'int' lvalue ->status 0x5625231268b8
| |     |       |   `-CXXThisExpr 0x5625231286f0 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x562523128798 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x562523128730 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5625231255a0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x562523128870 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x562523128860 <col:20> 'bool' false
| |     `-IfStmt 0x562523128c38 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x562523128940 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x562523128910 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x562523128890 <col:18> 'int' lvalue ->status 0x5625231268b8
| |       | |   `-CXXThisExpr 0x562523128880 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x562523128928 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x5625231288c0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5625231255a0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x562523128b78 <col:42, line:1079:9>
| |       | |-CallExpr 0x562523128b20 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x562523128970 <line:1076:13> '<bound member function type>' ->range_error 0x562523126ec8
| |       | | | `-CXXThisExpr 0x562523128960 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x5625231289a0 <col:25> 'const ArgContext' lvalue ParmVar 0x562523126640 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x562523128a80 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x562523128af8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x562523128ad8 <col:43> 'V' lvalue Var 0x562523128518 'x' 'V'
| |       | `-ReturnStmt 0x562523128b68 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x562523128b58 <col:20> 'bool' false
| |       `-CompoundStmt 0x562523128c18 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x562523128bd8 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x562523128b98 <col:13> 'V' lvalue ParmVar 0x5625231265c8 'result' 'V &'
| |         | `-DeclRefExpr 0x562523128bb8 <col:22> 'V' lvalue Var 0x562523128518 'x' 'V'
| |         `-ReturnStmt 0x562523128c08 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x562523128bf8 <col:20> 'bool' true
| `-CXXMethodDecl 0x56252331dfe8 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, unsigned int &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x56252331ddc0 <col:16, col:30> col:30 used str 'const String &'
|   |-ParmVarDecl 0x56252331de98 <col:35, col:38> col:38 used result 'unsigned int &'
|   |-ParmVarDecl 0x56252331df00 <col:46, col:71> col:64 used args 'const ArgContext &'
|   `-CompoundStmt 0x56252331ec98 <col:83, line:1083:5>
|     |-DeclStmt 0x56252331e270 <line:1071:9, col:12>
|     | `-VarDecl 0x56252331e208 <col:9, col:11> col:11 used x 'unsigned int':'unsigned int'
|     `-IfStmt 0x56252331ec70 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x56252331e8d0 <line:1072:13, line:1073:49> 'bool' '||'
|       | |-UnaryOperator 0x56252331e7c8 <line:1072:13, col:43> 'bool' prefix '!' cannot overflow
|       | | `-CXXMemberCallExpr 0x56252331e790 <col:14, col:43> 'bool'
|       | |   |-MemberExpr 0x56252331e748 <col:14> '<bound member function type>' ->parse_saturating 0x56252331e628
|       | |   | `-CXXThisExpr 0x56252331e738 <col:14> 'IntArg *' implicit this
|       | |   |-DeclRefExpr 0x56252331e2e0 <col:31> 'const String' lvalue ParmVar 0x56252331ddc0 'str' 'const String &'
|       | |   |-DeclRefExpr 0x56252331e300 <col:36> 'unsigned int':'unsigned int' lvalue Var 0x56252331e208 'x' 'unsigned int':'unsigned int'
|       | |   `-DeclRefExpr 0x56252331e320 <col:39> 'const ArgContext' lvalue ParmVar 0x56252331df00 'args' 'const ArgContext &'
|       | `-ParenExpr 0x56252331e8b0 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x56252331e890 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x56252331e878 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x56252331e860 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x5625231286c0 <col:17> 'int' lvalue ->status 0x5625231268b8
|       |     |     `-CXXThisExpr 0x5625231286b0 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x56252331e840 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x56252331e810 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x562523128700 <col:27> 'int' lvalue ->status 0x5625231268b8
|       |       |   `-CXXThisExpr 0x5625231286f0 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x56252331e828 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x562523128730 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5625231255a0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x56252331e8f0 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x562523128860 <col:20> 'bool' false
|       `-IfStmt 0x56252331ec48 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x56252331e960 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x56252331e930 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x562523128890 <col:18> 'int' lvalue ->status 0x5625231268b8
|         | |   `-CXXThisExpr 0x562523128880 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x56252331e948 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x5625231288c0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5625231255a0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x56252331eb80 <col:42, line:1079:9>
|         | |-CXXMemberCallExpr 0x56252331eaf0 <line:1076:13, line:1077:45> 'void'
|         | | |-MemberExpr 0x562523128970 <line:1076:13> '<bound member function type>' ->range_error 0x562523126ec8
|         | | | `-CXXThisExpr 0x562523128960 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x56252331e980 <col:25> 'const ArgContext' lvalue ParmVar 0x56252331df00 'args' 'const ArgContext &'
|         | | |-ImplicitCastExpr 0x56252331eb58 <col:31, col:50> 'bool' <LValueToRValue>
|         | | | `-DeclRefExpr 0x56252331eb28 <col:31, col:50> 'const bool' lvalue Var 0x562522d40010 'is_signed' 'const bool' non_odr_use_constant
|         | | `-CXXFunctionalCastExpr 0x56252331eac8 <line:1077:25, col:44> 'click_int_large_t':'long long' functional cast to click_int_large_t <NoOp>
|         | |   `-ImplicitCastExpr 0x56252331eab0 <col:43> 'click_int_large_t':'long long' <IntegralCast> part_of_explicit_cast
|         | |     `-ImplicitCastExpr 0x56252331ea98 <col:43> 'unsigned int':'unsigned int' <LValueToRValue> part_of_explicit_cast
|         | |       `-DeclRefExpr 0x56252331ea78 <col:43> 'unsigned int':'unsigned int' lvalue Var 0x56252331e208 'x' 'unsigned int':'unsigned int'
|         | `-ReturnStmt 0x56252331eb70 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x562523128b58 <col:20> 'bool' false
|         `-CompoundStmt 0x56252331ec28 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x56252331ebf8 <line:1080:13, col:22> 'unsigned int':'unsigned int' lvalue '='
|           | |-DeclRefExpr 0x56252331eba0 <col:13> 'unsigned int':'unsigned int' lvalue ParmVar 0x56252331de98 'result' 'unsigned int &'
|           | `-ImplicitCastExpr 0x56252331ebe0 <col:22> 'unsigned int':'unsigned int' <LValueToRValue>
|           |   `-DeclRefExpr 0x56252331ebc0 <col:22> 'unsigned int':'unsigned int' lvalue Var 0x56252331e208 'x' 'unsigned int':'unsigned int'
|           `-ReturnStmt 0x56252331ec18 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x562523128bf8 <col:20> 'bool' true
|-FieldDecl 0x562523126850 <line:1085:5, col:9> col:9 referenced base 'int'
|-FieldDecl 0x5625231268b8 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x562523126908 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x562523126bc0 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x562523126948 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x5625231269c8 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x562523126a40 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x562523126ac0 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x562523126ec8 <line:1092:5, line:1093:45> line:1092:10 used range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x562523126c90 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x562523126d08 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x562523126da0 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x5625231294e8 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x5625231294e8
| `-ParmVarDecl 0x5625231295f8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x562523129778 <col:7> col:7 implicit used constexpr IntArg 'void (IntArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562523129888 <col:7> col:7 used 'IntArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x56252331ae80 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x56252331ae50 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x56252331ae20 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x56252331adf0 <col:7> 'IntArg' lvalue ParmVar 0x562523129888 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x562523126850 'base' 'int'
| | `-ImplicitCastExpr 0x56252331af78 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56252331af48 <col:7> 'int' xvalue .base 0x562523126850
| |     `-CXXStaticCastExpr 0x56252331af18 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x56252331aee8 <col:7> 'IntArg' lvalue ParmVar 0x562523129888 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x5625231268b8 'status' 'int'
| | `-ImplicitCastExpr 0x56252331b048 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56252331b018 <col:7> 'int' xvalue .status 0x5625231268b8
| |     `-CXXStaticCastExpr 0x56252331afe8 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x56252331afb8 <col:7> 'IntArg' lvalue ParmVar 0x562523129888 '' 'IntArg &&'
| `-CompoundStmt 0x56252331b0a0 <col:7>
`-CXXDestructorDecl 0x562523319fe0 <col:7> col:7 implicit ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56252312da90 <../dummy_inc/click/args.hh:1182:1, col:61> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x56252312dce8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x562523319f08 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x56252331a480 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x56252331a460 <<invalid sloc>> 'int'
| `-CompoundStmt 0x56252331a4f0 <col:19>
|-CXXConstructorDecl 0x56252331a0e8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<unsigned int> &)' inline default trivial noexcept-unevaluated 0x56252331a0e8
| `-ParmVarDecl 0x56252331a1f8 <col:19> col:19 'const DefaultArg<unsigned int> &'
|-CXXConstructorDecl 0x56252331a298 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<unsigned int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56252331a3a8 <col:19> col:19 used 'DefaultArg<unsigned int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x56252331b0b0 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x56252331add0 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x56252331ada0 <col:19> 'DefaultArg<unsigned int>' xvalue static_cast<struct DefaultArg<unsigned int> &&> <NoOp>
| |       `-DeclRefExpr 0x56252331ad70 <col:19> 'DefaultArg<unsigned int>' lvalue ParmVar 0x56252331a3a8 '' 'DefaultArg<unsigned int> &&'
| `-CompoundStmt 0x56252331b120 <col:19>
`-CXXDestructorDecl 0x56252331a530 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TimestampArg
         0 |   _Bool is_signed
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class Timestamp>
         0 |   class TimestampArg (base)
         0 |     _Bool is_signed
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522f8bea0 <../dummy_inc/click/timestamp.hh:1525:1, line:1534:1> line:1525:7 referenced class TimestampArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522f8bfb8 <col:1, col:7> col:7 implicit referenced class TimestampArg
|-AccessSpecDecl 0x562522f8c048 <col:22, col:28> col:22 public
|-CXXConstructorDecl 0x562522f8c158 <line:1526:5, line:1528:5> line:1526:5 used TimestampArg 'void (bool)'
| |-ParmVarDecl 0x562522f8c080 <col:18, col:35> col:23 used is_signed 'bool' cinit
| | `-CXXBoolLiteralExpr 0x562522f8c518 <col:35> 'bool' false
| |-CXXCtorInitializer Field 0x562522f8c4b0 'is_signed' 'bool'
| | `-ImplicitCastExpr 0x562522f8c588 <line:1527:21> 'bool' <LValueToRValue>
| |   `-DeclRefExpr 0x562522f8c548 <col:21> 'bool' lvalue ParmVar 0x562522f8c080 'is_signed' 'bool'
| `-CompoundStmt 0x562522f8c5d0 <col:32, line:1528:5>
|-CXXMethodDecl 0x562522f8c3e8 <line:1529:5, line:1532:5> line:1529:10 used parse 'bool (const String &, Timestamp &, const ArgContext &)'
| |-ParmVarDecl 0x562522f8c218 <col:16, col:30> col:30 used str 'const String &'
| |-ParmVarDecl 0x562522f8c290 <col:35, col:46> col:46 used value 'Timestamp &'
| |-ParmVarDecl 0x562522f8c308 <col:53, col:78> col:71 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x562522f8c528 <col:78> 'const ArgContext' lvalue Var 0x562522f8bb98 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x562522f8c7e0 <col:90, line:1532:5>
|   |-CStyleCastExpr 0x562522f8c610 <line:1530:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x562522f8c5e0 <col:16> 'const ArgContext' lvalue ParmVar 0x562522f8c308 'args' 'const ArgContext &'
|   `-ReturnStmt 0x562522f8c7d0 <line:1531:9, col:46>
|     `-CallExpr 0x562522f8c780 <col:16, col:46> 'bool'
|       |-ImplicitCastExpr 0x562522f8c768 <col:16> 'bool (*)(const String &, Timestamp *, bool)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522f8c718 <col:16> 'bool (const String &, Timestamp *, bool)' lvalue Function 0x562522f8bde8 'cp_time' 'bool (const String &, Timestamp *, bool)'
|       |-DeclRefExpr 0x562522f8c680 <col:24> 'const String' lvalue ParmVar 0x562522f8c218 'str' 'const String &'
|       |-UnaryOperator 0x562522f8c6c0 <col:29, col:30> 'Timestamp *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x562522f8c6a0 <col:30> 'Timestamp' lvalue ParmVar 0x562522f8c290 'value' 'Timestamp &'
|       `-ImplicitCastExpr 0x562522f8c7b8 <col:37> 'bool' <LValueToRValue>
|         `-MemberExpr 0x562522f8c6e8 <col:37> 'bool' lvalue ->is_signed 0x562522f8c4b0
|           `-CXXThisExpr 0x562522f8c6d8 <col:37> 'TimestampArg *' implicit this
|-FieldDecl 0x562522f8c4b0 <line:1533:5, col:10> col:10 referenced is_signed 'bool'
|-CXXDestructorDecl 0x5625233284e0 <line:1525:7> col:7 implicit ~TimestampArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x562523328618 <col:7> col:7 implicit constexpr TimestampArg 'void (const TimestampArg &)' inline default trivial noexcept-unevaluated 0x562523328618
| `-ParmVarDecl 0x562523328728 <col:7> col:7 'const TimestampArg &'
`-CXXConstructorDecl 0x5625233287c8 <col:7> col:7 implicit used constexpr TimestampArg 'void (TimestampArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5625233288d8 <col:7> col:7 used 'TimestampArg &&'
  |-CXXCtorInitializer Field 0x562522f8c4b0 'is_signed' 'bool'
  | `-ImplicitCastExpr 0x5625233296a0 <col:7> 'bool' <LValueToRValue>
  |   `-MemberExpr 0x562523329670 <col:7> 'bool' xvalue .is_signed 0x562522f8c4b0
  |     `-CXXStaticCastExpr 0x562523329640 <col:7> 'TimestampArg' xvalue static_cast<class TimestampArg &&> <NoOp>
  |       `-DeclRefExpr 0x562523329610 <col:7> 'TimestampArg' lvalue ParmVar 0x5625233288d8 '' 'TimestampArg &&'
  `-CompoundStmt 0x5625233296e8 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.TimestampArg = type { i8 }
  NonVirtualBaseLLVMType:%class.TimestampArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562522f8c828 <../dummy_inc/click/timestamp.hh:1536:1, col:64> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'TimestampArg'
|-TemplateArgument type 'Timestamp'
|-CXXRecordDecl 0x562522f8ca88 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x562523328408 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'TimestampArg'
| | `-CXXConstructExpr 0x562523328ce0 <col:19> 'TimestampArg' 'void (bool)'
| |   `-CXXDefaultArgExpr 0x562523328cc0 <<invalid sloc>> 'bool'
| `-CompoundStmt 0x562523328d50 <col:19>
|-CXXConstructorDecl 0x562523328948 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<Timestamp> &)' inline default trivial noexcept-unevaluated 0x562523328948
| `-ParmVarDecl 0x562523328a58 <col:19> col:19 'const DefaultArg<Timestamp> &'
|-CXXConstructorDecl 0x562523328af8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<Timestamp> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562523328c08 <col:19> col:19 used 'DefaultArg<Timestamp> &&'
| |-CXXCtorInitializer 'TimestampArg'
| | `-CXXConstructExpr 0x5625233296f8 <col:19> 'TimestampArg' 'void (TimestampArg &&) noexcept'
| |   `-ImplicitCastExpr 0x5625233295f0 <col:19> 'TimestampArg' xvalue <UncheckedDerivedToBase (TimestampArg)>
| |     `-CXXStaticCastExpr 0x5625233295c0 <col:19> 'DefaultArg<Timestamp>' xvalue static_cast<struct DefaultArg<class Timestamp> &&> <NoOp>
| |       `-DeclRefExpr 0x562523329590 <col:19> 'DefaultArg<Timestamp>' lvalue ParmVar 0x562523328c08 '' 'DefaultArg<Timestamp> &&'
| `-CompoundStmt 0x562523329768 <col:19>
`-CXXDestructorDecl 0x562523328d90 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.20 = type { %class.TimestampArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.20 = type { %class.TimestampArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPAddressArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class IPAddress> (empty)
         0 |   class IPAddressArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522dd3db0 prev 0x562522dc71a8 <../dummy_inc/click/ipaddress.hh:367:1, line:378:1> line:367:7 referenced class IPAddressArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522dd3ea8 <col:1, col:7> col:7 implicit class IPAddressArg
|-AccessSpecDecl 0x562522dd3f38 <col:22, col:28> col:22 public
|-CXXMethodDecl 0x562522dd4360 <line:368:5, line:369:43> line:368:24 basic_parse 'const char *(const char *, const char *, unsigned char *, int &)' static
| |-ParmVarDecl 0x562522dd3f78 <col:36, col:48> col:48 begin 'const char *'
| |-ParmVarDecl 0x562522dd3ff8 <col:55, col:67> col:67 end 'const char *'
| |-ParmVarDecl 0x562522dd4130 <line:369:8, col:29> col:22 value 'unsigned char *':'unsigned char *'
| `-ParmVarDecl 0x562522dd41e0 <col:32, col:37> col:37 nbytes 'int &'
|-CXXMethodDecl 0x562522dd4628 <line:370:5, line:371:44> line:370:17 used parse 'bool (const String &, IPAddress &, const ArgContext &)' static
| |-ParmVarDecl 0x562522dd4430 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x562522dd44a8 <col:42, col:53> col:53 result 'IPAddress &'
| `-ParmVarDecl 0x562522dd4548 <line:371:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x562522dd8fc8 <col:34> 'const ArgContext' lvalue Var 0x562522dc7140 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x562522dd8a20 <line:372:5, line:375:5> line:372:17 parse 'bool (const String &, struct in_addr &, const ArgContext &)' static
| |-ParmVarDecl 0x562522dd46f0 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x562522dd47e0 <col:42, col:58> col:58 used result 'struct in_addr &'
| |-ParmVarDecl 0x562522dd4858 <line:373:9, col:34> col:27 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x562522dd8fe8 <col:34> 'const ArgContext' lvalue Var 0x562522dc7140 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x562522dd91c8 <col:46, line:375:5>
|   `-ReturnStmt 0x562522dd91b8 <line:374:2, col:63>
|     `-CallExpr 0x562522dd9180 <col:9, col:63> 'bool'
|       |-ImplicitCastExpr 0x562522dd9168 <col:9> 'bool (*)(const String &, IPAddress &, const ArgContext &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522dd9120 <col:9> 'bool (const String &, IPAddress &, const ArgContext &)' lvalue CXXMethod 0x562522dd4628 'parse' 'bool (const String &, IPAddress &, const ArgContext &)'
|       |-DeclRefExpr 0x562522dd9080 <col:15> 'const String' lvalue ParmVar 0x562522dd46f0 'str' 'const String &'
|       |-CXXReinterpretCastExpr 0x562522dd90d0 <col:20, col:56> 'IPAddress' lvalue reinterpret_cast<class IPAddress &> <LValueBitCast>
|       | `-DeclRefExpr 0x562522dd90a0 <col:50> 'struct in_addr':'in_addr' lvalue ParmVar 0x562522dd47e0 'result' 'struct in_addr &'
|       `-DeclRefExpr 0x562522dd9100 <col:59> 'const ArgContext' lvalue ParmVar 0x562522dd4858 'args' 'const ArgContext &'
|-CXXMethodDecl 0x562522dd8ef8 <line:376:5, line:377:44> line:376:17 parse 'bool (const String &, Vector<IPAddress> &, const ArgContext &)' static
| |-ParmVarDecl 0x562522dd8ae8 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x562522dd8d60 <col:42, col:61> col:61 result 'Vector<IPAddress> &'
| `-ParmVarDecl 0x562522dd8dd8 <line:377:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x562522dd9008 <col:34> 'const ArgContext' lvalue Var 0x562522dc7140 'blank_args' 'const ArgContext'
|-CXXConstructorDecl 0x562523334188 <line:367:7> col:7 implicit constexpr IPAddressArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x562523334260 <col:7> col:7 implicit ~IPAddressArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x562523334398 <col:7> col:7 implicit constexpr IPAddressArg 'void (const IPAddressArg &)' inline default trivial noexcept-unevaluated 0x562523334398
| `-ParmVarDecl 0x5625233344a8 <col:7> col:7 'const IPAddressArg &'
`-CXXConstructorDecl 0x562523334548 <col:7> col:7 implicit used constexpr IPAddressArg 'void (IPAddressArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x562523334658 <col:7> col:7 'IPAddressArg &&'
  `-CompoundStmt 0x5625233352b0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.IPAddressArg = type { i8 }
  NonVirtualBaseLLVMType:%class.IPAddressArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562522dd9ff8 <../dummy_inc/click/ipaddress.hh:398:1, col:64> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IPAddressArg'
|-TemplateArgument type 'IPAddress'
|-CXXRecordDecl 0x562522dda258 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x562523334098 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5625233346c8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<IPAddress> &)' inline default trivial noexcept-unevaluated 0x5625233346c8
| `-ParmVarDecl 0x5625233347d8 <col:19> col:19 'const DefaultArg<IPAddress> &'
|-CXXConstructorDecl 0x562523334878 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<IPAddress> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562523334988 <col:19> col:19 used 'DefaultArg<IPAddress> &&'
| |-CXXCtorInitializer 'IPAddressArg'
| | `-CXXConstructExpr 0x5625233352c0 <col:19> 'IPAddressArg' 'void (IPAddressArg &&) noexcept'
| |   `-ImplicitCastExpr 0x562523335290 <col:19> 'IPAddressArg' xvalue <UncheckedDerivedToBase (IPAddressArg)>
| |     `-CXXStaticCastExpr 0x562523335260 <col:19> 'DefaultArg<IPAddress>' xvalue static_cast<struct DefaultArg<class IPAddress> &&> <NoOp>
| |       `-DeclRefExpr 0x562523335230 <col:19> 'DefaultArg<IPAddress>' lvalue ParmVar 0x562523334988 '' 'DefaultArg<IPAddress> &&'
| `-CompoundStmt 0x562523335330 <col:19>
`-CXXDestructorDecl 0x562523334a28 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.21 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.21 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562523132e50 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562523132f68 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x562523132ff8 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x562523133238 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x562523133030 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x5625231330b0 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x562523133128 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x562523133450 <col:81> 'const ArgContext' lvalue Var 0x56252311ca88 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x562523133390 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x562523133300 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x5625231335a8 <col:35, line:1261:5>
|   `-ReturnStmt 0x562523133598 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x562523133580 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x562523133550 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x562523133538 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x562523133510 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x5625231334f0 <col:16, col:24> 'String' (CXXTemporary 0x5625231334f0)
|               `-CXXConstructExpr 0x5625231334b8 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x5625231334a0 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x562523133480 <col:23> 'bool' lvalue ParmVar 0x562523133300 'x' 'bool'
|-CXXConstructorDecl 0x56252334dbe8 <line:1257:7> col:7 implicit constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x56252334dcc0 <col:7> col:7 implicit ~BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56252334ddf8 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x56252334ddf8
| `-ParmVarDecl 0x56252334df08 <col:7> col:7 'const BoolArg &'
`-CXXConstructorDecl 0x56252334dfa8 <col:7> col:7 implicit used constexpr BoolArg 'void (BoolArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56252334e0b8 <col:7> col:7 'BoolArg &&'
  `-CompoundStmt 0x56252334ed10 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5625231335e8 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x562523133848 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x56252334daf8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56252334e128 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x56252334e128
| `-ParmVarDecl 0x56252334e238 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x56252334e2d8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56252334e3e8 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x56252334ed20 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x56252334ecf0 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x56252334ecc0 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x56252334ec90 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x56252334e3e8 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x56252334ed90 <col:19>
`-CXXDestructorDecl 0x56252334e488 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.22 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.22 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class EtherAddressArg
         0 |   int flags_
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class EtherAddress>
         0 |   class EtherAddressArg (base)
         0 |     int flags_
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x562522fe4358 <../dummy_inc/click/etheraddress.hh:205:1, line:224:1> line:205:7 referenced class EtherAddressArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x562522fe4478 <col:1, col:7> col:7 implicit referenced class EtherAddressArg
|-AccessSpecDecl 0x562522fe4508 <col:25, col:31> col:25 public
|-TypedefDecl 0x562522fe4540 <line:206:5, col:18> col:18 referenced enable_direct_parse 'void'
| `-BuiltinType 0x562522a5e2d0 'void'
|-CXXConstructorDecl 0x562522fe4688 <line:207:5, col:53> col:5 used EtherAddressArg 'void (int)'
| |-ParmVarDecl 0x562522fe45b0 <col:21, col:33> col:25 used flags 'int' cinit
| | `-IntegerLiteral 0x562522fe5910 <col:33> 'int' 0
| |-CXXCtorInitializer Field 0x562522fe5240 'flags_' 'int'
| | `-ImplicitCastExpr 0x562522fe59b0 <col:45> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x562522fe5970 <col:45> 'int' lvalue ParmVar 0x562522fe45b0 'flags' 'int'
| `-CompoundStmt 0x562522fe59f8 <col:52, col:53>
|-CXXMethodDecl 0x562522fe4948 <line:208:5, line:210:5> line:208:17 used parse 'bool (const String &, EtherAddress &, const ArgContext &)' inline
| |-ParmVarDecl 0x562522fe4748 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x562522fe47e8 <col:42, col:56> col:56 used value 'EtherAddress &'
| |-ParmVarDecl 0x562522fe4860 <col:63, col:88> col:81 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x562522fe5930 <col:88> 'const ArgContext' lvalue Var 0x562522fe42f0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x562522f45688 <col:100, line:210:5>
|   `-ReturnStmt 0x562522f45678 <line:209:9, col:46>
|     `-CallExpr 0x562522f45620 <col:16, col:46> 'bool'
|       |-ImplicitCastExpr 0x562522f45608 <col:16> 'bool (*)(const String &, EtherAddress &, const ArgContext &, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522f455c0 <col:16> 'bool (const String &, EtherAddress &, const ArgContext &, int)' lvalue CXXMethod 0x562522fe5508 'parse' 'bool (const String &, EtherAddress &, const ArgContext &, int)'
|       |-DeclRefExpr 0x562522fe5a70 <col:22> 'const String' lvalue ParmVar 0x562522fe4748 'str' 'const String &'
|       |-DeclRefExpr 0x562522fe5a90 <col:27> 'EtherAddress' lvalue ParmVar 0x562522fe47e8 'value' 'EtherAddress &'
|       |-DeclRefExpr 0x562522fe5ab0 <col:34> 'const ArgContext' lvalue ParmVar 0x562522fe4860 'args' 'const ArgContext &'
|       `-ImplicitCastExpr 0x562522f45660 <col:40> 'int' <LValueToRValue>
|         `-MemberExpr 0x562522fe5ae0 <col:40> 'int' lvalue ->flags_ 0x562522fe5240
|           `-CXXThisExpr 0x562522fe5ad0 <col:40> 'EtherAddressArg *' implicit this
|-CXXMethodDecl 0x562522fe4be8 <line:211:5, line:213:5> line:211:17 parse 'bool (const String &, unsigned char *, const ArgContext &)' inline
| |-ParmVarDecl 0x562522fe4a10 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x562522fe4a90 <col:42, col:57> col:57 used value 'unsigned char *'
| |-ParmVarDecl 0x562522fe4b08 <col:64, col:89> col:82 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x562522fe5950 <col:89> 'const ArgContext' lvalue Var 0x562522fe42f0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x562522f45860 <col:101, line:213:5>
|   `-ReturnStmt 0x562522f45850 <line:212:2, col:66>
|     `-CXXMemberCallExpr 0x562522f45818 <col:9, col:66> 'bool'
|       |-MemberExpr 0x562522f457e8 <col:9> '<bound member function type>' ->parse 0x562522fe4948
|       | `-CXXThisExpr 0x562522f457d8 <col:9> 'EtherAddressArg *' implicit this
|       |-DeclRefExpr 0x562522f45708 <col:15> 'const String' lvalue ParmVar 0x562522fe4a10 'str' 'const String &'
|       |-UnaryOperator 0x562522f457a0 <col:20, col:59> 'EtherAddress' lvalue prefix '*' cannot overflow
|       | `-CXXReinterpretCastExpr 0x562522f45770 <col:21, col:59> 'EtherAddress *' reinterpret_cast<class EtherAddress *> <BitCast>
|       |   `-ImplicitCastExpr 0x562522f45758 <col:54> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|       |     `-DeclRefExpr 0x562522f45728 <col:54> 'unsigned char *' lvalue ParmVar 0x562522fe4a90 'value' 'unsigned char *'
|       `-DeclRefExpr 0x562522f457b8 <col:62> 'const ArgContext' lvalue ParmVar 0x562522fe4b08 'args' 'const ArgContext &'
|-CXXMethodDecl 0x562522fe4ea8 <line:214:5, line:216:5> line:214:17 used direct_parse 'bool (const String &, EtherAddress &, Args &)' inline
| |-ParmVarDecl 0x562522fe4cb0 <col:30, col:44> col:44 used str 'const String &'
| |-ParmVarDecl 0x562522fe4d28 <col:49, col:63> col:63 used value 'EtherAddress &'
| |-ParmVarDecl 0x562522fe4dc8 <col:70, col:76> col:76 used args 'Args &'
| `-CompoundStmt 0x562522f45a48 <col:82, line:216:5>
|   `-ReturnStmt 0x562522f45a38 <line:215:9, col:53>
|     `-CallExpr 0x562522f459e0 <col:16, col:53> 'bool'
|       |-ImplicitCastExpr 0x562522f459c8 <col:16> 'bool (*)(const String &, EtherAddress &, Args &, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x562522f45980 <col:16> 'bool (const String &, EtherAddress &, Args &, int)' lvalue CXXMethod 0x562522fe5838 'direct_parse' 'bool (const String &, EtherAddress &, Args &, int)'
|       |-DeclRefExpr 0x562522f458e0 <col:29> 'const String' lvalue ParmVar 0x562522fe4cb0 'str' 'const String &'
|       |-DeclRefExpr 0x562522f45900 <col:34> 'EtherAddress' lvalue ParmVar 0x562522fe4d28 'value' 'EtherAddress &'
|       |-DeclRefExpr 0x562522f45920 <col:41> 'Args' lvalue ParmVar 0x562522fe4dc8 'args' 'Args &'
|       `-ImplicitCastExpr 0x562522f45a20 <col:47> 'int' <LValueToRValue>
|         `-MemberExpr 0x562522f45950 <col:47> 'int' lvalue ->flags_ 0x562522fe5240
|           `-CXXThisExpr 0x562522f45940 <col:47> 'EtherAddressArg *' implicit this
|-CXXMethodDecl 0x562522fe5148 <line:217:5, line:219:5> line:217:17 direct_parse 'bool (const String &, unsigned char *, Args &)' inline
| |-ParmVarDecl 0x562522fe4f70 <col:30, col:44> col:44 used str 'const String &'
| |-ParmVarDecl 0x562522fe4ff0 <col:49, col:64> col:64 used value 'unsigned char *'
| |-ParmVarDecl 0x562522fe5068 <col:71, col:77> col:77 used args 'Args &'
| `-CompoundStmt 0x562522f45c20 <col:83, line:219:5>
|   `-ReturnStmt 0x562522f45c10 <line:218:2, col:73>
|     `-CXXMemberCallExpr 0x562522f45bd8 <col:9, col:73> 'bool'
|       |-MemberExpr 0x562522f45ba8 <col:9> '<bound member function type>' ->direct_parse 0x562522fe4ea8
|       | `-CXXThisExpr 0x562522f45b98 <col:9> 'EtherAddressArg *' implicit this
|       |-DeclRefExpr 0x562522f45ac8 <col:22> 'const String' lvalue ParmVar 0x562522fe4f70 'str' 'const String &'
|       |-UnaryOperator 0x562522f45b60 <col:27, col:66> 'EtherAddress' lvalue prefix '*' cannot overflow
|       | `-CXXReinterpretCastExpr 0x562522f45b30 <col:28, col:66> 'EtherAddress *' reinterpret_cast<class EtherAddress *> <BitCast>
|       |   `-ImplicitCastExpr 0x562522f45b18 <col:61> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|       |     `-DeclRefExpr 0x562522f45ae8 <col:61> 'unsigned char *' lvalue ParmVar 0x562522fe4ff0 'value' 'unsigned char *'
|       `-DeclRefExpr 0x562522f45b78 <col:69> 'Args' lvalue ParmVar 0x562522fe5068 'args' 'Args &'
|-AccessSpecDecl 0x562522fe5200 <line:220:3, col:10> col:3 private
|-FieldDecl 0x562522fe5240 <line:221:5, col:9> col:9 referenced flags_ 'int'
|-CXXMethodDecl 0x562522fe5508 <line:222:5, col:96> col:17 used parse 'bool (const String &, EtherAddress &, const ArgContext &, int)' static
| |-ParmVarDecl 0x562522fe52a0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x562522fe5318 <col:42, col:56> col:56 value 'EtherAddress &'
| |-ParmVarDecl 0x562522fe5390 <col:63, col:81> col:81 args 'const ArgContext &'
| `-ParmVarDecl 0x562522fe5410 <col:87, col:91> col:91 flags 'int'
|-CXXMethodDecl 0x562522fe5838 <line:223:5, col:91> col:17 used direct_parse 'bool (const String &, EtherAddress &, Args &, int)' static
| |-ParmVarDecl 0x562522fe55d8 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x562522fe5650 <col:49, col:63> col:63 value 'EtherAddress &'
| |-ParmVarDecl 0x562522fe56c8 <col:70, col:76> col:76 args 'Args &'
| `-ParmVarDecl 0x562522fe5748 <col:82, col:86> col:86 flags 'int'
|-CXXDestructorDecl 0x562523361b20 <line:205:7> col:7 implicit ~EtherAddressArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x562523361c58 <col:7> col:7 implicit constexpr EtherAddressArg 'void (const EtherAddressArg &)' inline default trivial noexcept-unevaluated 0x562523361c58
| `-ParmVarDecl 0x562523361d68 <col:7> col:7 'const EtherAddressArg &'
`-CXXConstructorDecl 0x562523361e08 <col:7> col:7 implicit used constexpr EtherAddressArg 'void (EtherAddressArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x562523361f18 <col:7> col:7 used 'EtherAddressArg &&'
  |-CXXCtorInitializer Field 0x562522fe5240 'flags_' 'int'
  | `-ImplicitCastExpr 0x562523362cf8 <col:7> 'int' <LValueToRValue>
  |   `-MemberExpr 0x562523362cb0 <col:7> 'int' xvalue .flags_ 0x562522fe5240
  |     `-CXXStaticCastExpr 0x562523362c80 <col:7> 'EtherAddressArg' xvalue static_cast<class EtherAddressArg &&> <NoOp>
  |       `-DeclRefExpr 0x562523362c50 <col:7> 'EtherAddressArg' lvalue ParmVar 0x562523361f18 '' 'EtherAddressArg &&'
  `-CompoundStmt 0x562523362d40 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddressArg = type { i32 }
  NonVirtualBaseLLVMType:%class.EtherAddressArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x562522f45c60 <../dummy_inc/click/etheraddress.hh:226:1, col:70> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'EtherAddressArg'
|-TemplateArgument type 'EtherAddress'
|-CXXRecordDecl 0x562522f45eb8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x562523361a48 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'EtherAddressArg'
| | `-CXXConstructExpr 0x562523362320 <col:19> 'EtherAddressArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x562523362300 <<invalid sloc>> 'int'
| `-CompoundStmt 0x562523362390 <col:19>
|-CXXConstructorDecl 0x562523361f88 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<EtherAddress> &)' inline default trivial noexcept-unevaluated 0x562523361f88
| `-ParmVarDecl 0x562523362098 <col:19> col:19 'const DefaultArg<EtherAddress> &'
|-CXXConstructorDecl 0x562523362138 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<EtherAddress> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x562523362248 <col:19> col:19 used 'DefaultArg<EtherAddress> &&'
| |-CXXCtorInitializer 'EtherAddressArg'
| | `-CXXConstructExpr 0x562523362d50 <col:19> 'EtherAddressArg' 'void (EtherAddressArg &&) noexcept'
| |   `-ImplicitCastExpr 0x562523362c30 <col:19> 'EtherAddressArg' xvalue <UncheckedDerivedToBase (EtherAddressArg)>
| |     `-CXXStaticCastExpr 0x562523362c00 <col:19> 'DefaultArg<EtherAddress>' xvalue static_cast<struct DefaultArg<class EtherAddress> &&> <NoOp>
| |       `-DeclRefExpr 0x562523362bd0 <col:19> 'DefaultArg<EtherAddress>' lvalue ParmVar 0x562523362248 '' 'DefaultArg<EtherAddress> &&'
| `-CompoundStmt 0x562523362dc0 <col:19>
`-CXXDestructorDecl 0x5625233623d0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.23 = type { %class.EtherAddressArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.23 = type { %class.EtherAddressArg }
  IsZeroInitializable:1
  BitFields:[
]>
