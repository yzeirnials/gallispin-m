
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181dbc39e8 prev 0x56181dbbb188 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181dbc3ae0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56181dbc3b70 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56181dbc3be8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56181dbc3ca8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56181dbc3d70 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56181dbc3ee8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56181dbc3e20 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56181dbc3f90 <col:24>
| `-OptimizeNoneAttr 0x56181dbc3fe8 <col:34>
|-CXXMethodDecl 0x56181dbc4030 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56181dbc42e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56181dbc40e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56181dbc4158 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56181dbc41d8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56181dbc43a0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56181dbc43d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56181dbc4440 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56181dbc44c8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56181dbc47e8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56181dbc4580 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56181dbc45f8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56181dbc4670 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56181dbc46f0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56181dbc4900 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56181dbcc278 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56181dbcc278
| `-ParmVarDecl 0x56181dbcc388 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56181dbcc428 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56181dbcc428
| `-ParmVarDecl 0x56181dbcc538 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56181dc36088 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181dbb6a00 prev 0x56181dbb6780 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56181dbb6af8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56181dbb6b88 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56181dbb6be8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x56181dbb6cd8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x56181dbb6dd8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56181dbb6fa8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56181dbb6e58 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56181dbb6ed0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56181dbb7138 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56181dbb7070 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56181dbb71e0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56181dbb7318 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56181dbb7250 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56181dbb74b8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56181dbb73f8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56181dbb7658 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56181dbb7598 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56181dbb7700 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56181dbb7800 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56181dbb78e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbb77e0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56181dbb77c0 <col:26> 'int' 1
| `-EnumConstantDecl 0x56181dbb7890 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56181dbb78f8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181dbb7870 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56181dbb7850 <col:44> 'int' 2
|-CXXMethodDecl 0x56181dbb7a40 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56181dbb7928 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56181dbb79a8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56181dbb7b98 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56181dbb7b08 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56181dbb7dd8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56181dbb7c58 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56181dbb7cd0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56181dbb7e88 <col:20>
| `-OptimizeNoneAttr 0x56181dbb7ee0 <col:30>
|-CXXMethodDecl 0x56181dbb7fe8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56181dbb7f20 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56181dbb8090 <col:20>
| `-OptimizeNoneAttr 0x56181dbb80e8 <col:30>
|-CXXMethodDecl 0x56181dbb8138 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56181dbb8200 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56181dbb8318 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56181dbb83a0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56181dbb8428 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56181dbb84b0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x56181dbb8538 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56181dbb85c8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56181dbb8688 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56181dbb8710 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x56181dbb8798 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56181dbb8820 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56181dbb88a8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56181dbb8930 <line:67:5, col:39> col:23 used PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56181dbb89c0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56181dbb8a80 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56181dbb8b10 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56181dbb8c60 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56181dbb8bc8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56181dbb8df0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56181dbb8d20 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56181dbb90a0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56181dbb8ea8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56181dbb8f28 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56181dbb8fa8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56181dbb9158 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56181dbb9260 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56181dbb94f0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbb9240 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56181dbb9220 <col:33> 'int' 0
| |-EnumConstantDecl 0x56181dbb92f0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56181dbb9508 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbb92d0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56181dbb92b0 <col:32> 'int' 20
| |-EnumConstantDecl 0x56181dbb9380 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56181dbb9520 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbb9360 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56181dbb9340 <col:38> 'int' 90
| |-EnumConstantDecl 0x56181dbb9410 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56181dbb9538 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbb93f0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56181dbb93d0 <col:35> 'int' 100
| `-EnumConstantDecl 0x56181dbb94a0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56181dbb9550 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181dbb9480 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56181dbb9460 <col:32> 'int' 2000
|-CXXMethodDecl 0x56181dbb9590 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56181dbb99d0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56181dbb9840 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56181dbb98b8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56181dbb9aa0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56181dbb9c20 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56181dbb9b50 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56181dbb9e28 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56181dbb9cd8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56181dbb9d50 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56181dbb9f28 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56181dbb9fc8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56181dbba090 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56181dbba120 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56181dbba350 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbba100 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56181dbba0e0 <col:36> 'int' EnumConstant 0x56181dbba090 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56181dbba170 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56181dbba1c0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56181dbba210 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56181dbba260 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56181dbba2b0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56181dbba300 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56181dbba438 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56181dbba378 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56181dbba500 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56181dbba5c0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56181dbba680 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56181dbba740 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56181dbba858 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56181dbba920 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x56181dbbaaa0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56181dbba9d0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56181dbbabc8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56181dbbadc8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56181dbbac78 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56181dbbacf8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56181dbc8718 <col:54, line:127:5>
|   |-ParenExpr 0x56181dbc85c8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56181dbc8598 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56181dbc8288 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56181dbc8260 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56181dbc8248 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56181dbc8230 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56181dbc8200 <col:31> 'Router *' lvalue ->_router 0x56181dbc60e0
|   |   |         `-CXXThisExpr 0x56181dbc81f0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56181dbc82e8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181dbc82c8 <col:48> 'int' 0
|   |   `-CallExpr 0x56181dbc84f8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56181dbc84e0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181dbc84c0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181dbc8538 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181dbc8358 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56181dbc8550 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181dbc8378 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56181dbc8568 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181dbc83b0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56181dbc8580 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181dbc84a8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181dbc8490 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181dbc8448 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56181dbc8660 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56181dbc85f8 <col:9> 'Router *' lvalue ->_router 0x56181dbc60e0
|   | | `-CXXThisExpr 0x56181dbc85e8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56181dbc8648 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181dbc8628 <col:19> 'Router *' lvalue ParmVar 0x56181dbbac78 'r' 'Router *'
|   `-BinaryOperator 0x56181dbc86f8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56181dbc8690 <col:9> 'int' lvalue ->_eindex 0x56181dbc6148
|     | `-CXXThisExpr 0x56181dbc8680 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56181dbc86e0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56181dbc86c0 <col:19> 'int' lvalue ParmVar 0x56181dbbacf8 'eindex' 'int'
|-CXXMethodDecl 0x56181dbbaf50 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56181dbbae88 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56181dbbb020 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56181dbbb0e8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56181dbbb188 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56181dbbb3d8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56181dbbb250 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56181dbbb2d0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56181dbbb488 <col:20>
| `-OptimizeNoneAttr 0x56181dbbb4e0 <col:30>
|-CXXMethodDecl 0x56181dbbb5e8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56181dbbb520 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56181dbbb690 <col:20>
| `-OptimizeNoneAttr 0x56181dbbb6e8 <col:30>
|-CXXMethodDecl 0x56181dbbb7b8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56181dbbb728 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56181dbbb860 <col:20>
| `-OptimizeNoneAttr 0x56181dbbb8b8 <col:30>
|-CXXMethodDecl 0x56181dbbba48 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56181dbbb8f0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56181dbbb970 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56181dbbbbd8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56181dbbbb10 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56181dbbbd28 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56181dbbbc98 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56181dbbbe78 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56181dbbbde8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56181dbbbfc8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56181dbbbf38 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56181dbbc288 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56181dbbc080 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56181dbbc100 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56181dbbc1a8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56181dbbc360 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56181dbbc420 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56181dbbc6f0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56181dbbc5a0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56181dbbc618 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56181dbbc818 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56181dbbc9f0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56181dbbc8d0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56181dbbc950 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56181dbbcbd8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56181dbbcab8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56181dbbcb38 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56181dbbcf48 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56181dbbcc98 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56181dbbcd10 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56181dbbcd90 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56181dbc7d00 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56181dbc7ce0 <col:106> 'int' 0
| `-ParmVarDecl 0x56181dbbce08 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56181dbc7d38 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56181dbc7d18 <col:126> 'int' 0
|-CXXMethodDecl 0x56181dbbd2e8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56181dbbd018 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56181dbbd0b0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56181dbbd130 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56181dbbd1a8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56181dbc7d70 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56181dbc7d50 <col:114> 'int' 0
|-CXXMethodDecl 0x56181dbbd678 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56181dbbd3c0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56181dbbd438 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56181dbbd4b8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56181dbc7d88 <col:96> 'int' 0
| `-ParmVarDecl 0x56181dbbd530 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56181dbc7dc8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56181dbc7da8 <col:116> 'int' 0
|-CXXMethodDecl 0x56181dbbd9f8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56181dbbd748 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56181dbbd7c0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56181dbbd840 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56181dbc7e00 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56181dbc7de0 <col:109> 'int' 0
| `-ParmVarDecl 0x56181dbbd8b8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56181dbc7e38 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56181dbc7e18 <col:129> 'int' 0
|-CXXMethodDecl 0x56181dbbdd78 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56181dbbdac8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56181dbbdb40 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56181dbbdbc0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56181dbbdc38 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56181dbc7e70 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56181dbc7e50 <col:117> 'int' 0
|-CXXMethodDecl 0x56181dbbe108 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56181dbbde50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbbdec8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56181dbbdf48 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56181dbc7e88 <col:99> 'int' 0
| `-ParmVarDecl 0x56181dbbdfc0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56181dbc7ec8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56181dbc7ea8 <col:119> 'int' 0
|-CXXMethodDecl 0x56181dbbe528 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56181dbbe1d8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56181dbbe258 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56181dbbe2d0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56181dbbe350 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56181dbc7f00 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56181dbc7ee0 <col:108> 'int' 0
| `-ParmVarDecl 0x56181dbbe3d0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56181dbc7f38 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56181dbc7f18 <col:141> 'int' 0
|-CXXMethodDecl 0x56181dbbe948 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56181dbbe600 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56181dbbe680 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56181dbbe6f8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56181dbbe778 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56181dbbe7f8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56181dbc7f50 <col:121> 'int' 0
|-CXXMethodDecl 0x56181dbbed78 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56181dbbea28 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56181dbbeaa8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56181dbbeb20 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56181dbbeba0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56181dbc7f70 <col:98> 'int' 0
| `-ParmVarDecl 0x56181dbbec20 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56181dbc7f90 <col:123> 'int' 0
|-CXXMethodDecl 0x56181dbbf040 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56181dbbee50 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56181dbbeed0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56181dbbef50 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56181dbc7fb0 <col:80> 'int' 0
|-EnumDecl 0x56181dbbf0f8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56181dbbf200 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56181dbbf490 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbbf1e0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56181dbbf1c0 <col:42> 'int' 1
| |-EnumConstantDecl 0x56181dbbf290 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56181dbbf4a8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbbf270 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56181dbbf250 <col:40> 'int' 2
| |-EnumConstantDecl 0x56181dbbf320 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56181dbbf4c0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbbf300 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56181dbbf2e0 <col:44> 'int' 4
| |-EnumConstantDecl 0x56181dbbf3b0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56181dbbf4d8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dbbf390 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56181dbbf370 <col:36> 'int' 7
| `-EnumConstantDecl 0x56181dbbf440 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56181dbbf4f0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181dbbf420 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56181dbbf400 <col:34> 'int' 6
|-CXXMethodDecl 0x56181dbbf7a8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56181dbbf518 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56181dbbf5b8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56181dbbf638 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56181dbbf6b0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56181dbc8068 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56181dbc8050 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56181dbc8038 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56181dbc8018 <col:98, col:105> 'String' (CXXTemporary 0x56181dbc8018)
|           `-CXXTemporaryObjectExpr 0x56181dbc7fe0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56181dbbfa48 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56181dbbf878 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56181dbbf8f0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56181dbbf968 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56181dbc8118 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56181dbc8100 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56181dbc80e8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56181dbc80c8 <col:94, col:101> 'String' (CXXTemporary 0x56181dbc80c8)
| |         `-CXXTemporaryObjectExpr 0x56181dbc8090 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56181dbc8900 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56181dbc8878 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56181dbc8848 <col:9> '<bound member function type>' ->add_task_handlers 0x56181dbbf7a8
|     | `-CXXThisExpr 0x56181dbc8838 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56181dbc88b8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56181dbc87b8 <col:27> 'Task *' lvalue ParmVar 0x56181dbbf878 'task' 'Task *'
|     |-ImplicitCastExpr 0x56181dbc88d0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56181dbc87d8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56181dbbf8f0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56181dbc88e8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56181dbc87f8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56181dbbf440 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56181dbc8818 <col:62> 'const String' lvalue ParmVar 0x56181dbbf968 'prefix' 'const String &'
|-CXXMethodDecl 0x56181dbbfc58 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56181dbbfb10 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56181dbbfb88 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56181dbc81c8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56181dbc81b0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56181dbc8198 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56181dbc8178 <col:70, col:77> 'String' (CXXTemporary 0x56181dbc8178)
| |         `-CXXTemporaryObjectExpr 0x56181dbc8140 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56181dbc8ad8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56181dbc8a50 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56181dbc8a20 <col:9> '<bound member function type>' ->add_task_handlers 0x56181dbbf7a8
|     | `-CXXThisExpr 0x56181dbc8a10 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56181dbc8a90 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56181dbc8990 <col:27> 'Task *' lvalue ParmVar 0x56181dbbfb10 'task' 'Task *'
|     |-ImplicitCastExpr 0x56181dbc8aa8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56181dbc89b0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56181dbc8ac0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56181dbc89d0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56181dbbf440 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56181dbc89f0 <col:57> 'const String' lvalue ParmVar 0x56181dbbfb88 'prefix' 'const String &'
|-CXXMethodDecl 0x56181dbbff38 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56181dbbfd20 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbbfda0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbbfe18 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56181dbc01e8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56181dbc0008 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc0088 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc0108 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56181dbc04d8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56181dbc02b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc0338 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc03b0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56181dbc0788 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56181dbc05a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc0628 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc06a8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56181dbc0a38 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56181dbc0858 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc08d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc0958 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56181dbc0ce8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56181dbc0b08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc0b88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc0c00 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56181dbc0f98 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56181dbc0db8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc0e38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc0eb8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56181dbc12a8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56181dbc10c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc1140 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc11c0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56181dbc1588 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56181dbc1378 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc13f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc14a0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56181dbc1868 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56181dbc1658 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc16d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc1780 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56181dbc1ad0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56181dbc1938 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56181dbc19b8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56181dbc1a30 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56181dbc1d78 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56181dbc1ba0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56181dbc1c20 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56181dbc1c98 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56181dbc2028 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56181dbc1e48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc1ec8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc1f48 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56181dbc22d8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56181dbc20f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc2178 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc21f0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56181dbc2588 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56181dbc23a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc2428 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc24a0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56181dbc2858 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56181dbc2658 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc26d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56181dbc2778 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56181dbc2b88 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56181dbc2928 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56181dbc29a8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56181dbc2a20 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56181dbc2a98 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56181dbc81e0 <col:93> 'bool' false
|-CXXMethodDecl 0x56181dbc2d70 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56181dbc2c58 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56181dbc2cd8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56181dbc2f48 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56181dbc2e30 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56181dbc2eb0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56181dbc3228 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56181dbc3008 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56181dbc3080 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56181dbc3100 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56181dbc3178 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56181dbc3518 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56181dbc32f8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56181dbc3370 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56181dbc33f0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56181dbc3468 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56181dbc3750 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56181dbc35f0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56181dbc3670 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56181dbc3938 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56181dbc3818 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56181dbc3898 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56181dbc39e8 prev 0x56181dbbb188 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56181dbc3ae0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56181dbc3b70 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56181dbc3be8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56181dbc3ca8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56181dbc3d70 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56181dbc3ee8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56181dbc3e20 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56181dbc3f90 <col:24>
| | `-OptimizeNoneAttr 0x56181dbc3fe8 <col:34>
| |-CXXMethodDecl 0x56181dbc4030 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56181dbc42e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56181dbc40e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56181dbc4158 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56181dbc41d8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56181dbc43a0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56181dbc43d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56181dbc4440 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56181dbc44c8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56181dbc47e8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56181dbc4580 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56181dbc45f8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56181dbc4670 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56181dbc46f0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56181dbc4900 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56181dbcc278 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56181dbcc278
| | `-ParmVarDecl 0x56181dbcc388 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56181dbcc428 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56181dbcc428
| | `-ParmVarDecl 0x56181dbcc538 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56181dc36088 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56181dbc4978 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56181dbc4a18 <col:38> "" ""
|-CXXMethodDecl 0x56181dbc4aa8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56181dbc4b48 <col:44> "" ""
|-AccessSpecDecl 0x56181dbc4bb8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56181dbc4be0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56181dbc4ce0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56181dbc4d30 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181dbc4cc0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56181dbc4ca0 <col:27> 'int' 4
|-FieldDecl 0x56181dbc4de8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56181dbc4f98 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56181dbc5050 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56181dbc60e0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56181dbc6148 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56181dbc6298 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56181dbc61d8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56181dbc6448 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56181dbc6358 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56181dbc6628 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56181dbc6508 <col:20> col:23 'int'
| `-ParmVarDecl 0x56181dbc6588 <col:25> col:28 'int'
|-CXXMethodDecl 0x56181dbc68d0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56181dbc66f0 <col:23> col:26 'int'
| |-ParmVarDecl 0x56181dbc6770 <col:28> col:31 'int'
| `-ParmVarDecl 0x56181dbc67e8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56181dbc6988 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56181dbc6a50 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56181dbc6aa0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56181dbc6af0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56181dbc6cd0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56181dbc6b80 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56181dbc6bf8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56181dbc6f78 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56181dbc6d98 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56181dbc6e18 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56181dbc6e90 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56181dbc7198 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56181dbc7048 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56181dbc70c8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56181dbc74d0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56181dbc7258 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56181dbc72d8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56181dbc7350 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56181dbc73d0 <col:57> col:60 'int'
|-CXXMethodDecl 0x56181dbc76b8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56181dbc75a0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56181dbc7620 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56181dbc7808 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56181dbc7778 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56181dbc7b88 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56181dbc78c8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56181dbc7948 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56181dbc79c0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56181dbc7a40 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56181dbc7ca0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ICMPPingResponder
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181dbcf3e8 <../elements/icmp/icmppingresponder.hh:33:1, line:44:1> line:33:7 class ICMPPingResponder definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56181dbcf548 <col:1, col:7> col:7 implicit referenced class ICMPPingResponder
|-AccessSpecDecl 0x56181dbcf5d8 <col:44, col:50> col:44 public
|-CXXConstructorDecl 0x56181dbcf660 <line:35:3, col:21> col:3 ICMPPingResponder 'void ()'
|-CXXDestructorDecl 0x56181dbcf750 <line:36:3, col:22> col:3 ~ICMPPingResponder 'void ()' noexcept-unevaluated 0x56181dbcf750
| `-Overrides: [ 0x56181dbb6cd8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x56181dbcf880 <line:38:3, col:64> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x56181dbb8138 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56181dbcffb0 <col:34, col:64>
|   `-ReturnStmt 0x56181dbcffa0 <col:36, col:43>
|     `-ImplicitCastExpr 0x56181dbcff88 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56181dbcff58 <col:43> 'const char [18]' lvalue "ICMPPingResponder"
|-CXXMethodDecl 0x56181dbcf948 <line:39:3, col:56> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x56181dbb8200 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56181dbd0010 <col:34, col:56>
|   `-ReturnStmt 0x56181dbd0000 <col:36, col:43>
|     `-ImplicitCastExpr 0x56181dbcffe8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56181dbcffc8 <col:43> 'const char []' lvalue Var 0x56181dbb8538 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x56181dbcfa10 <line:40:3, col:60> col:15 processing 'const char *() const'
| |-Overrides: [ 0x56181dbb85c8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x56181dbd0070 <col:34, col:60>
|   `-ReturnStmt 0x56181dbd0060 <col:36, col:43>
|     `-ImplicitCastExpr 0x56181dbd0048 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56181dbd0028 <col:43> 'const char []' lvalue Var 0x56181dbb8930 'PROCESSING_A_AH' 'const char []'
|-CXXMethodDecl 0x56181dbcfb50 <line:42:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x56181dbb7318 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x56181dbcfac0 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x56181dbcfc28 <line:33:7> col:7 implicit ICMPPingResponder 'void (const ICMPPingResponder &)' inline default_delete noexcept-unevaluated 0x56181dbcfc28
| `-ParmVarDecl 0x56181dbcfd38 <col:7> col:7 'const ICMPPingResponder &'
`-CXXMethodDecl 0x56181dbcfdd8 <col:7> col:7 implicit operator= 'ICMPPingResponder &(const ICMPPingResponder &)' inline default_delete noexcept-unevaluated 0x56181dbcfdd8
  `-ParmVarDecl 0x56181dbcfee8 <col:7> col:7 'const ICMPPingResponder &'

Layout: <CGRecordLayout
  LLVMType:%class.ICMPPingResponder = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.ICMPPingResponder.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp_sequenced
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint16_t icmp_identifier
         6 |   uint16_t icmp_sequence
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181d9754b0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181d9755c8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56181d975658 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56181d975728 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56181d975810 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56181d975a28 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56181d9758d0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d975bd8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56181d975ae0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56181d975d20 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56181d975c90 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56181d975e68 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56181d975dd8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d975fb0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56181d975f20 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d976078 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x56181d9761c0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x56181d976130 <col:28> col:31 'int'
|-CXXMethodDecl 0x56181d976288 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x56181d9763d0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56181d976340 <col:28> col:31 'int'
|-CXXMethodDecl 0x56181d976548 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56181d976488 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d976690 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56181d976600 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d976758 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56181d976918 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56181d976808 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56181d976880 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d976b68 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56181d9769d8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56181d976a50 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56181d976c18 <col:86> "" ""
|-CXXMethodDecl 0x56181d976e88 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56181d976cf8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56181d976d70 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d977038 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56181d976f48 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56181d9771e8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56181d9770f0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56181d9774b8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56181d9772a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56181d977318 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56181d977390 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d977798 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56181d977580 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56181d9775f8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56181d977670 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56181d977850 <col:115> "" ""
|-AccessSpecDecl 0x56181d9778c0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56181d9778f8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181d978e10 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56181d978e10
| `-ParmVarDecl 0x56181d978f18 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56181d978fb8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56181d978fb8
| `-ParmVarDecl 0x56181d9790c8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56181d9ae6f8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56181dba04f0 <col:7>
|-CXXConstructorDecl 0x56181d9ae7d0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56181d9ae7d0
| `-ParmVarDecl 0x56181d9ae8e8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56181d9ae958 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56181d9ae958
| `-ParmVarDecl 0x56181d9aea68 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56181dba2ef0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181db8f098 prev 0x56181db842a0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181db8f190 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56181db8f280 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56181db8f3a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56181db8f528 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56181db8f6a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56181db8f828 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56181dba0658 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56181dba0ec8 <col:11>
|-CXXDestructorDecl 0x56181dba0730 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56181dba0868 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56181dba0868
| `-ParmVarDecl 0x56181dba0978 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56181dba0a18 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56181dba0a18
| `-ParmVarDecl 0x56181dba0b28 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56181dba38e8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181dba39f8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56181dba3c78 <col:11>
|   `-ReturnStmt 0x56181dba3c68 <col:11>
|     `-UnaryOperator 0x56181dba3c50 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56181dba3c40 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56181dba3a68 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56181dba3a68
  `-ParmVarDecl 0x56181dba3b78 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181db8f890 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181db8f9a8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56181db8fa48 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56181db8fab0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56181db8fb18 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56181db8fb80 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56181db8fbe0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56181db8fca0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56181db8fd00 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56181db8fd60 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56181dba0568 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56181db8fa48 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56181dba0ed8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56181dba0f30 <col:12>
|-CXXConstructorDecl 0x56181dba0b98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56181dba0b98
| `-ParmVarDecl 0x56181dba0ca8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56181dba0d48 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56181dba0d48
| `-ParmVarDecl 0x56181dba0e58 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56181dba2fd0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181db7d9b0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56181db7dac8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56181db7db58 <col:16, col:22> col:16 public
|-EnumDecl 0x56181db7db80 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56181db7dc80 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56181db7dd60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db7dc60 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56181db7dc40 <col:21> 'int' 28
| `-EnumConstantDecl 0x56181db7dd10 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56181db7dd78 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181db7dcf0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56181db7dcd0 <col:22> 'int' 64
|-CXXMethodDecl 0x56181db7e0b8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56181db7dda0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56181db7de20 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56181db7de98 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56181db7df10 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56181db7e178 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56181db7e378 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56181db7e1f0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56181db7e268 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56181db7e428 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56181db7e588 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56181db7e498 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56181db7e630 <col:72> warn_unused_result ""
|-TypedefDecl 0x56181db7e990 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56181db7e920 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56181db7e8c0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56181db7e880 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56181d6562d0 'void'
|       |-PointerType 0x56181d8fdd50 'unsigned char *'
|       | `-BuiltinType 0x56181d6563d0 'unsigned char'
|       |-TypedefType 0x56181d6fa2c0 'size_t' sugar
|       | |-Typedef 0x56181d6c6b20 'size_t'
|       | `-BuiltinType 0x56181d656430 'unsigned long'
|       `-PointerType 0x56181d656ad0 'void *'
|         `-BuiltinType 0x56181d6562d0 'void'
|-CXXMethodDecl 0x56181db7ee08 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56181db7ea00 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56181db7ea78 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56181db7eb10 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56181db7eb90 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56181db99500 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56181db994e8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56181db994b0 <col:58> 'int' 0
| |-ParmVarDecl 0x56181db7ec10 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56181db99528 <col:76> 'int' 0
| |-ParmVarDecl 0x56181db7ec90 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56181db99548 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56181db7eed8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56181db7ef58 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56181db7f018 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56181db7f0b8 <col:20>
| `-OptimizeNoneAttr 0x56181db7f110 <col:30>
|-CXXMethodDecl 0x56181db7f188 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56181db7f228 <col:20>
| `-OptimizeNoneAttr 0x56181db7f280 <col:30>
|-CXXMethodDecl 0x56181db7f2f8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56181db7f398 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56181db7f448 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56181db7f4e8 <col:20>
| |-OptimizeNoneAttr 0x56181db7f540 <col:30>
| `-WarnUnusedResultAttr 0x56181db7f568 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56181db7f5c0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56181db7f660 <col:20>
| `-OptimizeNoneAttr 0x56181db7f6b8 <col:30>
|-CXXMethodDecl 0x56181db7f708 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56181db7f7a8 <col:20>
| `-OptimizeNoneAttr 0x56181db7f800 <col:30>
|-CXXMethodDecl 0x56181db7f848 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x56181db7f8e8 <col:20>
| `-OptimizeNoneAttr 0x56181db7f940 <col:30>
|-CXXMethodDecl 0x56181db7f988 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db7fa48 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db7fb10 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56181db7fbd8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56181db7fc98 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db7fdb8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56181db99610 <col:54, line:99:5>
|   `-ReturnStmt 0x56181db99600 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56181db995e8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56181db995b8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56181db90098
|         `-CXXThisExpr 0x56181db995a8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56181db7ff58 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56181db7fe68 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56181db996c0 <col:67, line:103:5>
|   `-BinaryOperator 0x56181db996a0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56181db99638 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56181db90098
|     | `-CXXThisExpr 0x56181db99628 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56181db99688 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56181db99668 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56181db7fe68 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56181db80050 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56181db99740 <col:33, line:107:5>
|   `-ReturnStmt 0x56181db99730 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56181db99718 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56181db996e8 <col:16> 'void *' lvalue ->_destructor_argument 0x56181db90100
|         `-CXXThisExpr 0x56181db996d8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56181db80110 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56181db99d70 <col:25, line:113:5>
|   |-ParenExpr 0x56181db99ab8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56181db99a88 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56181db997f8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56181db997d0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56181db99798 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56181db99768 <col:24> '<bound member function type>' ->shared 0x56181db7f188
|   |   |       `-ImplicitCastExpr 0x56181db997b8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56181db99758 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56181db99858 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db99838 <col:42> 'int' 0
|   |   `-CallExpr 0x56181db999e8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56181db999d0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db999b0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db99a28 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db998c8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56181db99a40 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db998f0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db99a58 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db99928 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56181db99a70 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db99998 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db99980 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db99948 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56181db99cb8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56181db99ae8 <col:2> 'unsigned char *' lvalue ->_head 0x56181db8fea0
|   | | `-CXXThisExpr 0x56181db99ad8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56181db99ca0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56181db99c80 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56181db99b28 <col:10> 'unsigned char *' lvalue ->_data 0x56181db8ff08
|   |     | `-CXXThisExpr 0x56181db99b18 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56181db99c68 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56181db99c48 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56181db99b68 <col:18> 'unsigned char *' lvalue ->_tail 0x56181db8ff70
|   |         | `-CXXThisExpr 0x56181db99b58 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56181db99c30 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56181db99c10 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56181db99ba8 <col:26> 'unsigned char *' lvalue ->_end 0x56181db8ffd8
|   |             | `-CXXThisExpr 0x56181db99b98 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56181db99bf8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56181db99bd8 <col:33> 'int' 0
|   `-BinaryOperator 0x56181db99d50 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56181db99ce8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56181db90098
|     | `-CXXThisExpr 0x56181db99cd8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56181db99d38 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56181db99d18 <col:16> 'int' 0
|-CXXMethodDecl 0x56181db80250 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56181db801c0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56181db802f8 <col:20>
| |-OptimizeNoneAttr 0x56181db80350 <col:30>
| `-WarnUnusedResultAttr 0x56181db80378 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56181db80448 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56181db803b8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56181db804f0 <col:20>
| |-OptimizeNoneAttr 0x56181db80548 <col:30>
| `-WarnUnusedResultAttr 0x56181db80570 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56181db806a8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56181db805b0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56181db80750 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56181db80850 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56181db807c0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56181db808f8 <col:20>
| `-OptimizeNoneAttr 0x56181db80950 <col:30>
|-CXXMethodDecl 0x56181db80a18 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56181db80988 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56181db80ac0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56181db80bc0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56181db80b30 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56181db80c68 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56181db80d68 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56181db80cd8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56181db80e10 <col:20>
| `-OptimizeNoneAttr 0x56181db80e68 <col:30>
|-CXXMethodDecl 0x56181db80ff8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56181db80ea8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56181db80f20 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56181db99568 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56181db810a8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56181db812a8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56181db81120 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56181db81198 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db814b8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56181db81368 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56181db813e0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db816c8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56181db81578 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56181db815f8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56181db99578 <col:39> 'int' 0
|-CXXMethodDecl 0x56181db81798 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56181db81860 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56181db81928 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56181db819e8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db81ab0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56181db81bf8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56181db81b68 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56181db81dc8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56181db81cb8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56181db81d30 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db81e98 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56181db81f58 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56181db81ff8 <col:20>
| `-OptimizeNoneAttr 0x56181db82050 <col:30>
|-CXXMethodDecl 0x56181db820a0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56181db82140 <col:20>
| `-OptimizeNoneAttr 0x56181db82198 <col:30>
|-CXXMethodDecl 0x56181db821e8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56181db822a8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db82370 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56181db82410 <col:20>
| `-OptimizeNoneAttr 0x56181db82468 <col:30>
|-CXXMethodDecl 0x56181db825b8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56181db824a8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56181db82520 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db82708 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56181db82678 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db827e0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56181db828a0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56181db82940 <col:20>
| `-OptimizeNoneAttr 0x56181db82998 <col:30>
|-CXXMethodDecl 0x56181db829e8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56181db82a88 <col:20>
| `-OptimizeNoneAttr 0x56181db82ae0 <col:30>
|-CXXMethodDecl 0x56181db82b30 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56181db82bf8 <line:300:5, col:63> col:44 used transport_length 'int () const'
| |-NoInlineAttr 0x56181db82c98 <col:20>
| `-OptimizeNoneAttr 0x56181db82cf0 <col:30>
|-CXXMethodDecl 0x56181db82d38 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56181db82e58 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56181db82fc8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56181db82f08 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56181db830b8 <line:307:5, col:68> col:56 used ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56181db83158 <col:20>
| `-OptimizeNoneAttr 0x56181db831b0 <col:30>
|-CXXMethodDecl 0x56181db83200 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56181db832c0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db834f8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56181db83370 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56181db833e8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56181db835a8 <col:20>
| `-OptimizeNoneAttr 0x56181db83600 <col:30>
|-CXXMethodDecl 0x56181db836a8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56181db83748 <col:20>
| `-OptimizeNoneAttr 0x56181db837a0 <col:30>
|-CXXMethodDecl 0x56181db837f0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56181db83890 <col:20>
| `-OptimizeNoneAttr 0x56181db838e8 <col:30>
|-CXXMethodDecl 0x56181db83930 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56181db839d0 <col:20>
| `-OptimizeNoneAttr 0x56181db83a28 <col:30>
|-CXXMethodDecl 0x56181db83b28 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56181db83a60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56181db83bd0 <col:20>
| `-OptimizeNoneAttr 0x56181db83c28 <col:30>
|-CXXMethodDecl 0x56181db83de8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56181db83c60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56181db83cd8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56181db83e98 <col:20>
| `-OptimizeNoneAttr 0x56181db83ef0 <col:30>
|-CXXMethodDecl 0x56181db83f98 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56181db840b8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56181db841d8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56181db84278 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56181db842a0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56181db843c8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56181db84468 <col:20>
| `-OptimizeNoneAttr 0x56181db844c0 <col:30>
|-CXXMethodDecl 0x56181db84568 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56181db84608 <col:20>
| `-OptimizeNoneAttr 0x56181db84660 <col:30>
|-AccessSpecDecl 0x56181db84688 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56181db846b0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56181db847b0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56181db84800 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181db84790 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56181db84770 <col:14> 'int' 48
|-CXXMethodDecl 0x56181db84868 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56181db84908 <col:20>
| `-OptimizeNoneAttr 0x56181db84960 <col:30>
|-CXXMethodDecl 0x56181db849d8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56181db84a78 <col:20>
| `-OptimizeNoneAttr 0x56181db84ad0 <col:30>
|-CXXMethodDecl 0x56181db84b98 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56181db84b08 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56181db84d38 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56181db84ed8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56181db84de8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56181db84f80 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56181db85080 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56181db85430 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db85060 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56181db85040 <col:9> 'int' 0
| |-EnumConstantDecl 0x56181db85110 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56181db85448 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db850f0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56181db850d0 <col:14> 'int' 1
| |-EnumConstantDecl 0x56181db851a0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56181db85460 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db85180 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56181db85160 <col:14> 'int' 2
| |-EnumConstantDecl 0x56181db85230 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56181db85478 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db85210 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56181db851f0 <col:14> 'int' 3
| |-EnumConstantDecl 0x56181db852c0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56181db85490 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db852a0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56181db85280 <col:13> 'int' 4
| |-EnumConstantDecl 0x56181db85350 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56181db854a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db85330 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56181db85310 <col:13> 'int' 5
| `-EnumConstantDecl 0x56181db853e0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56181db854c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181db853c0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56181db853a0 <col:14> 'int' 6
|-CXXMethodDecl 0x56181db85528 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56181db855c8 <col:20>
| `-OptimizeNoneAttr 0x56181db85620 <col:30>
|-CXXMethodDecl 0x56181db85718 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56181db85658 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56181db857c0 <col:20>
| `-OptimizeNoneAttr 0x56181db85818 <col:30>
|-CXXMethodDecl 0x56181db85888 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56181db859b0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56181db85b28 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56181db85a60 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56181db85bf0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56181db85cb8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56181db85df8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56181db85d68 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56181db85ea0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56181db85fa0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56181db861a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db85f80 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56181db85f60 <col:23> 'int' 0
| |-EnumConstantDecl 0x56181db86030 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56181db861b8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db86010 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56181db85ff0 <col:45> 'int' 4
| |-EnumConstantDecl 0x56181db860c0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56181db861d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db860a0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56181db86080 <col:24> 'int' 0
| `-EnumConstantDecl 0x56181db86150 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56181db861e8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181db86130 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56181db86110 <col:47> 'int' 16
|-CXXMethodDecl 0x56181db86248 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56181db863b8 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56181db862f8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56181db86460 <col:20>
| `-OptimizeNoneAttr 0x56181db864b8 <col:30>
|-CXXMethodDecl 0x56181db86508 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56181db99e90 <col:18, col:36>
|   `-ReturnStmt 0x56181db99e80 <col:20, col:33>
|     `-ImplicitCastExpr 0x56181db99e68 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56181db99e48 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56181db99e18 <col:27> '<bound member function type>' ->xanno 0x56181db84568
|           `-CXXThisExpr 0x56181db99e08 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56181db86600 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56181db99fa0 <col:30, col:48>
|   `-ReturnStmt 0x56181db99f90 <col:32, col:45>
|     `-ImplicitCastExpr 0x56181db99f78 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56181db99f58 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56181db99f28 <col:39> '<bound member function type>' ->xanno 0x56181db843c8
|           `-CXXThisExpr 0x56181db99f18 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56181db866e8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56181db9a138 <col:24, col:50>
|   `-ReturnStmt 0x56181db9a128 <col:26, col:47>
|     `-UnaryOperator 0x56181db9a110 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56181db9a0f0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56181db9a0d8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56181db9a088 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56181db8f3a8
|         |   `-CXXMemberCallExpr 0x56181db9a068 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56181db9a038 <col:34> '<bound member function type>' ->xanno 0x56181db84568
|         |       `-CXXThisExpr 0x56181db9a028 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56181db9a0b8 <col:46> 'int' 0
|-CXXMethodDecl 0x56181db867f0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56181db9a308 <col:36, col:62>
|   `-ReturnStmt 0x56181db9a2f8 <col:38, col:59>
|     `-UnaryOperator 0x56181db9a2e0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56181db9a2c0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56181db9a2a8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56181db9a220 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56181db8f3a8
|         |   `-CXXMemberCallExpr 0x56181db9a200 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56181db9a1d0 <col:46> '<bound member function type>' ->xanno 0x56181db843c8
|         |       `-CXXThisExpr 0x56181db9a1c0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56181db9a250 <col:58> 'int' 0
|-CXXMethodDecl 0x56181db86908 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56181db9a4a0 <col:26, col:53>
|   `-ReturnStmt 0x56181db9a490 <col:28, col:50>
|     `-UnaryOperator 0x56181db9a478 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56181db9a458 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56181db9a440 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56181db9a3f0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56181db8f6a8
|         |   `-CXXMemberCallExpr 0x56181db9a3d0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56181db9a3a0 <col:36> '<bound member function type>' ->xanno 0x56181db84568
|         |       `-CXXThisExpr 0x56181db9a390 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56181db9a420 <col:49> 'int' 0
|-CXXMethodDecl 0x56181db86a28 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56181db9a678 <col:38, col:65>
|   `-ReturnStmt 0x56181db9a668 <col:40, col:62>
|     `-UnaryOperator 0x56181db9a650 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56181db9a630 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56181db9a618 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56181db9a588 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56181db8f6a8
|         |   `-CXXMemberCallExpr 0x56181db9a568 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56181db9a538 <col:48> '<bound member function type>' ->xanno 0x56181db843c8
|         |       `-CXXThisExpr 0x56181db9a528 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56181db9a5b8 <col:61> 'int' 0
|-CXXMethodDecl 0x56181db86bd8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56181db86ae0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56181db9ad48 <col:34, line:463:5>
|   |-ParenExpr 0x56181db9ab90 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56181db9ab60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9a7c8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9a798 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9a6e8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9a6d0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9a690 <col:23> 'int' lvalue ParmVar 0x56181db86ae0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9a6b0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9a778 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9a748 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9a708 <col:33> 'int' lvalue ParmVar 0x56181db86ae0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56181db9a760 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56181db9a728 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56181db9a828 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9a808 <col:56> 'int' 0
|   |   `-CallExpr 0x56181db9aac0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56181db9aaa8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9aa88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9ab00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9a918 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56181db9ab18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9a948 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9ab30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9a980 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56181db9ab48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9aa70 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9aa58 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9aa18 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56181db9ad38 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56181db9ad20 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56181db9ad00 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56181db9acd0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56181db9ac80 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56181db8f3a8
|         |   `-CXXMemberCallExpr 0x56181db9ac60 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56181db9ac30 <col:9> '<bound member function type>' ->xanno 0x56181db843c8
|         |       `-CXXThisExpr 0x56181db9ac20 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56181db9ace8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56181db9acb0 <col:21> 'int' lvalue ParmVar 0x56181db86ae0 'i' 'int'
|-CXXMethodDecl 0x56181db86e28 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56181db86c98 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56181db86d10 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56181db9b3d8 <col:40, line:472:5>
|   |-ParenExpr 0x56181db9b1f0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56181db9b1c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9aea0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9ae70 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9adc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9ada8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9ad68 <col:23> 'int' lvalue ParmVar 0x56181db86c98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9ad88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9ae50 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9ae20 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9ade0 <col:33> 'int' lvalue ParmVar 0x56181db86c98 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56181db9ae38 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56181db9ae00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56181db9af00 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9aee0 <col:56> 'int' 0
|   |   `-CallExpr 0x56181db9b120 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56181db9b108 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9b0e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9b160 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9af70 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56181db9b178 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9afa0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9b190 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9afd8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56181db9b1a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9b0d0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9b0b8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9b078 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56181db9b3b8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56181db9b360 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56181db9b330 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56181db9b2e0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56181db8f3a8
|     | |   `-CXXMemberCallExpr 0x56181db9b2c0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56181db9b290 <col:2> '<bound member function type>' ->xanno 0x56181db84568
|     | |       `-CXXThisExpr 0x56181db9b280 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56181db9b348 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56181db9b310 <col:14> 'int' lvalue ParmVar 0x56181db86c98 'i' 'int'
|     `-ImplicitCastExpr 0x56181db9b3a0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56181db9b380 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56181db86d10 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56181db86fe8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56181db86ef0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56181db9bb58 <col:36, line:485:5>
|   |-ParenExpr 0x56181db9b8c0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9b890 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9b570 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9b540 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9b450 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9b438 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9b3f8 <col:23> 'int' lvalue ParmVar 0x56181db86ef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9b418 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9b520 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9b508 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9b470 <col:33> 'int' lvalue ParmVar 0x56181db86ef0 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9b4e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9b4d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9b490 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9b4b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56181db9b5d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9b5b0 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9b7f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9b7d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9b7b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9b830 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9b640 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56181db9b848 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9b678 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9b860 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9b6b0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56181db9b878 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9b7a0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9b788 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9b748 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56181db9bb48 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56181db9bb30 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56181db9bb18 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56181db9bae8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56181db9ba88 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56181db9ba58 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56181db9b9d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56181db8f280
|             |   `-CXXMemberCallExpr 0x56181db9b9b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56181db9b980 <col:61> '<bound member function type>' ->xanno 0x56181db843c8
|             |       `-CXXThisExpr 0x56181db9b970 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56181db9ba70 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56181db9ba00 <col:74> 'int' lvalue ParmVar 0x56181db86ef0 'i' 'int'
|-CXXMethodDecl 0x56181db87238 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56181db870a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56181db87120 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56181db9c2a8 <col:42, line:500:5>
|   |-ParenExpr 0x56181db9c040 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9c010 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9bcf0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9bcc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9bbd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9bbb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9bb78 <col:23> 'int' lvalue ParmVar 0x56181db870a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9bb98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9bca0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9bc88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9bbf0 <col:33> 'int' lvalue ParmVar 0x56181db870a8 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9bc68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9bc50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9bc10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9bc30 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56181db9bd50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9bd30 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9bf70 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9bf58 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9bf38 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9bfb0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9bdc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56181db9bfc8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9bdf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9bfe0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9be30 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56181db9bff8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9bf20 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9bf08 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9bec8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56181db9c288 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56181db9c238 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56181db9c208 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56181db9c1b0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56181db9c180 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56181db9c130 <col:48, col:57> 'char [48]' lvalue ->c 0x56181db8f280
|     |     |   `-CXXMemberCallExpr 0x56181db9c110 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56181db9c0e0 <col:48> '<bound member function type>' ->xanno 0x56181db84568
|     |     |       `-CXXThisExpr 0x56181db9c0d0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56181db9c198 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56181db9c160 <col:61> 'int' lvalue ParmVar 0x56181db870a8 'i' 'int'
|     `-ImplicitCastExpr 0x56181db9c270 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56181db9c250 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56181db87120 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56181db873f8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56181db87300 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56181db9ca08 <col:35, line:513:5>
|   |-ParenExpr 0x56181db9c718 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9c6e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9c440 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9c410 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9c320 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9c308 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9c2c8 <col:23> 'int' lvalue ParmVar 0x56181db87300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9c2e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9c3f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9c3d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9c340 <col:33> 'int' lvalue ParmVar 0x56181db87300 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9c3b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9c3a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9c360 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9c380 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56181db9c4a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9c480 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9c648 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9c630 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9c610 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9c688 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9c510 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56181db9c6a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9c548 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9c6b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9c580 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56181db9c6d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9c5f8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9c5e0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9c5a0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56181db9c9f8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56181db9c9e0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56181db9c9c8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56181db9c998 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56181db9c910 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56181db9c8e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56181db9c890 <col:60, col:69> 'char const[48]' lvalue ->c 0x56181db8f280
|             |   `-CXXMemberCallExpr 0x56181db9c870 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56181db9c840 <col:60> '<bound member function type>' ->xanno 0x56181db843c8
|             |       `-CXXThisExpr 0x56181db9c830 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56181db9c8f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56181db9c8c0 <col:73> 'int' lvalue ParmVar 0x56181db87300 'i' 'int'
|-CXXMethodDecl 0x56181db87648 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56181db874b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56181db87530 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56181db9d128 <col:41, line:528:5>
|   |-ParenExpr 0x56181db9ceb0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9ce80 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9cba0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9cb70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9ca80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9ca68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9ca28 <col:23> 'int' lvalue ParmVar 0x56181db874b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9ca48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9cb50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9cb38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9caa0 <col:33> 'int' lvalue ParmVar 0x56181db874b8 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9cb18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9cb00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9cac0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9cae0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56181db9cc00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9cbe0 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9cde0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9cdc8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9cda8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9ce20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9cc70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56181db9ce38 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9cca8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9ce50 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9cce0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56181db9ce68 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9cd90 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9cd78 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9cd38 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56181db9d108 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56181db9d0b8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56181db9d088 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56181db9d030 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56181db9cff0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56181db9cfa0 <col:47, col:56> 'char [48]' lvalue ->c 0x56181db8f280
|     |     |   `-CXXMemberCallExpr 0x56181db9cf80 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56181db9cf50 <col:47> '<bound member function type>' ->xanno 0x56181db84568
|     |     |       `-CXXThisExpr 0x56181db9cf40 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56181db9d008 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56181db9cfd0 <col:60> 'int' lvalue ParmVar 0x56181db874b8 'i' 'int'
|     `-ImplicitCastExpr 0x56181db9d0f0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56181db9d0d0 <col:65> 'int16_t':'short' lvalue ParmVar 0x56181db87530 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56181db87808 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56181db87710 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56181db9d7f8 <col:36, line:541:5>
|   |-ParenExpr 0x56181db9d598 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9d568 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9d2c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9d290 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9d1a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9d188 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9d148 <col:23> 'int' lvalue ParmVar 0x56181db87710 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9d168 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9d270 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9d258 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9d1c0 <col:33> 'int' lvalue ParmVar 0x56181db87710 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9d238 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9d220 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9d1e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9d200 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56181db9d320 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9d300 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9d4c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9d4b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9d490 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9d508 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9d390 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56181db9d520 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9d3c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9d538 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9d400 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56181db9d550 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9d478 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9d460 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9d420 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56181db9d7e8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56181db9d7d0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56181db9d7b8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56181db9d788 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56181db9d730 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56181db9d700 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56181db9d6b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56181db8f280
|             |   `-CXXMemberCallExpr 0x56181db9d690 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56181db9d660 <col:61> '<bound member function type>' ->xanno 0x56181db843c8
|             |       `-CXXThisExpr 0x56181db9d650 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56181db9d718 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56181db9d6e0 <col:74> 'int' lvalue ParmVar 0x56181db87710 'i' 'int'
|-CXXMethodDecl 0x56181db879d8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56181db878c8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56181db87940 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56181db87a88 <col:20>
| `-OptimizeNoneAttr 0x56181db87ae0 <col:30>
|-CXXMethodDecl 0x56181db87c18 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56181db87b20 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56181db9dec8 <col:35, line:562:5>
|   |-ParenExpr 0x56181db9dc68 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9dc38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9d990 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9d960 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9d870 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9d858 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9d818 <col:23> 'int' lvalue ParmVar 0x56181db87b20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9d838 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9d940 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9d928 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9d890 <col:33> 'int' lvalue ParmVar 0x56181db87b20 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9d908 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9d8f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9d8b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9d8d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56181db9d9f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9d9d0 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9db98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9db80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9db60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9dbd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9da60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56181db9dbf0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9da98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9dc08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9dad0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56181db9dc20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9db48 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9db30 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9daf0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56181db9deb8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56181db9dea0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56181db9de88 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56181db9de58 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56181db9de00 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56181db9ddd0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56181db9dd80 <col:60, col:69> 'char const[48]' lvalue ->c 0x56181db8f280
|             |   `-CXXMemberCallExpr 0x56181db9dd60 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56181db9dd30 <col:60> '<bound member function type>' ->xanno 0x56181db843c8
|             |       `-CXXThisExpr 0x56181db9dd20 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56181db9dde8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56181db9ddb0 <col:73> 'int' lvalue ParmVar 0x56181db87b20 'i' 'int'
|-CXXMethodDecl 0x56181db87e28 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56181db87cd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56181db87d50 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56181db9e5a8 <col:41, line:577:5>
|   |-ParenExpr 0x56181db9e338 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9e308 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9e060 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9e030 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9df40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9df28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9dee8 <col:23> 'int' lvalue ParmVar 0x56181db87cd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9df08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9e010 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9dff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9df60 <col:33> 'int' lvalue ParmVar 0x56181db87cd8 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9dfd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9dfc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9df80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9dfa0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56181db9e0c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9e0a0 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9e268 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9e250 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9e230 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9e2a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9e130 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56181db9e2c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9e168 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9e2d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9e1a0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56181db9e2f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9e218 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9e200 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9e1c0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56181db9e588 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56181db9e538 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56181db9e508 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56181db9e4a8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56181db9e478 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56181db9e428 <col:47, col:56> 'char [48]' lvalue ->c 0x56181db8f280
|     |     |   `-CXXMemberCallExpr 0x56181db9e408 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56181db9e3d8 <col:47> '<bound member function type>' ->xanno 0x56181db84568
|     |     |       `-CXXThisExpr 0x56181db9e3c8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56181db9e490 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56181db9e458 <col:60> 'int' lvalue ParmVar 0x56181db87cd8 'i' 'int'
|     `-ImplicitCastExpr 0x56181db9e570 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56181db9e550 <col:65> 'int32_t':'int' lvalue ParmVar 0x56181db87d50 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56181db87fe8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56181db87ef0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56181db9ecd8 <col:36, line:591:5>
|   |-ParenExpr 0x56181db9ea18 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9e9e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9e740 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9e710 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9e620 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9e608 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9e5c8 <col:23> 'int' lvalue ParmVar 0x56181db87ef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9e5e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9e6f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9e6d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9e640 <col:33> 'int' lvalue ParmVar 0x56181db87ef0 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9e6b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9e6a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9e660 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9e680 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56181db9e7a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9e780 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9e948 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9e930 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9e910 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9e988 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9e810 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56181db9e9a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9e848 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9e9b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9e880 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56181db9e9d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9e8f8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9e8e0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9e8a0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56181db9ecc8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56181db9ecb0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56181db9ec98 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56181db9ec68 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56181db9ebe0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56181db9ebb0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56181db9eb60 <col:61, col:70> 'char const[48]' lvalue ->c 0x56181db8f280
|             |   `-CXXMemberCallExpr 0x56181db9eb40 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56181db9eb10 <col:61> '<bound member function type>' ->xanno 0x56181db843c8
|             |       `-CXXThisExpr 0x56181db9eb00 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56181db9ebc8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56181db9eb90 <col:74> 'int' lvalue ParmVar 0x56181db87ef0 'i' 'int'
|-CXXMethodDecl 0x56181db88238 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56181db880a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56181db88120 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56181db9f3b8 <col:42, line:606:5>
|   |-ParenExpr 0x56181db9f148 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56181db9f118 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9ee70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9ee40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9ed50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9ed38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9ecf8 <col:23> 'int' lvalue ParmVar 0x56181db880a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9ed18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9ee20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56181db9ee08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9ed70 <col:33> 'int' lvalue ParmVar 0x56181db880a8 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9ede8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9edd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9ed90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56181db9edb0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56181db9eed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9eeb0 <col:60> 'int' 0
|   |   `-CallExpr 0x56181db9f078 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56181db9f060 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9f040 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9f0b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9ef40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56181db9f0d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9ef78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9f0e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9efb0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56181db9f100 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9f028 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9f010 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9efd0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56181db9f398 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56181db9f348 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56181db9f318 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56181db9f2b8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56181db9f288 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56181db9f238 <col:48, col:57> 'char [48]' lvalue ->c 0x56181db8f280
|     |     |   `-CXXMemberCallExpr 0x56181db9f218 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56181db9f1e8 <col:48> '<bound member function type>' ->xanno 0x56181db84568
|     |     |       `-CXXThisExpr 0x56181db9f1d8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56181db9f2a0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56181db9f268 <col:61> 'int' lvalue ParmVar 0x56181db880a8 'i' 'int'
|     `-ImplicitCastExpr 0x56181db9f380 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56181db9f360 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56181db88120 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56181db883d0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56181db88300 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56181db9fc28 <col:33, line:620:5>
|   |-ParenExpr 0x56181db9f9a0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56181db9f970 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9f5c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9f590 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9f430 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9f418 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9f3d8 <col:23> 'int' lvalue ParmVar 0x56181db88300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9f3f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9f570 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56181db9f558 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9f450 <col:33> 'int' lvalue ParmVar 0x56181db88300 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9f538 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9f520 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9f470 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56181db9f4f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56181db9f4e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56181db9f4a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56181db9f620 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9f600 <col:79> 'int' 0
|   |   `-CallExpr 0x56181db9f8d0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56181db9f8b8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db9f898 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181db9f910 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9f708 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56181db9f928 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9f750 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181db9f940 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9f788 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56181db9f958 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181db9f880 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181db9f868 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181db9f828 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56181db9fc18 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56181db9fc00 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56181db9fbe8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56181db9fbb8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56181db9fb30 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56181db9fb00 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56181db9fab0 <col:67, col:76> 'char const[48]' lvalue ->c 0x56181db8f280
|             |   `-CXXMemberCallExpr 0x56181db9fa90 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56181db9fa60 <col:67> '<bound member function type>' ->xanno 0x56181db843c8
|             |       `-CXXThisExpr 0x56181db9fa50 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56181db9fb18 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56181db9fae0 <col:80> 'int' lvalue ParmVar 0x56181db88300 'i' 'int'
|-CXXMethodDecl 0x56181db885e8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56181db88490 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56181db88510 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56181dba0450 <col:45, line:635:5>
|   |-ParenExpr 0x56181dba0198 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56181dba0168 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56181db9fe30 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56181db9fe00 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56181db9fca0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56181db9fc88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56181db9fc48 <col:23> 'int' lvalue ParmVar 0x56181db88490 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56181db9fc68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56181db9fde0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56181db9fdc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56181db9fcc0 <col:33> 'int' lvalue ParmVar 0x56181db88490 'i' 'int'
|   |   |     `-BinaryOperator 0x56181db9fda8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56181db9fd90 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56181db9fce0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56181db847b0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56181db9fd68 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56181db9fd50 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56181db9fd18 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56181db9fe90 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56181db9fe70 <col:79> 'int' 0
|   |   `-CallExpr 0x56181dba00c8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56181dba00b0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181dba0090 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56181dba0108 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9ff00 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56181dba0120 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56181db9ff48 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56181dba0138 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56181db9ff80 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56181dba0150 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56181dba0078 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56181dba0060 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56181dba0018 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56181dba0430 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56181dba0398 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56181dba0368 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56181dba0308 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56181dba02d8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56181dba0288 <col:54, col:63> 'char [48]' lvalue ->c 0x56181db8f280
|     |     |   `-CXXMemberCallExpr 0x56181dba0268 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56181dba0238 <col:54> '<bound member function type>' ->xanno 0x56181db84568
|     |     |       `-CXXThisExpr 0x56181dba0228 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56181dba02f0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56181dba02b8 <col:67> 'int' lvalue ParmVar 0x56181db88490 'i' 'int'
|     `-CXXConstCastExpr 0x56181dba0400 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56181dba03e8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56181dba03b0 <col:91> 'const void *' lvalue ParmVar 0x56181db88510 'x' 'const void *'
|-CXXMethodDecl 0x56181db886b8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56181dba04d8 <col:34, line:640:5>
|   `-ReturnStmt 0x56181dba04c8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56181dba04b0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56181dba0480 <col:16> 'Packet *' lvalue ->_data_packet 0x56181db8fe38
|         `-CXXThisExpr 0x56181dba0470 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56181db887f8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56181db88768 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56181db99598 <col:46> 'bool' true
|-CXXMethodDecl 0x56181db88978 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56181db888b0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56181db88a20 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56181db891d0 <line:660:22> "" ""
| |-EnumConstantDecl 0x56181db88b20 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db89240 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88b00 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56181db88ae0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56181db7dc80 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56181db88bb0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db89258 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88b90 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56181db88b70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56181db7dd10 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56181db88c40 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db89270 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88c20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56181db88c00 <col:21> 'int' 0
| |-EnumConstantDecl 0x56181db88cd0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db89288 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88cb0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56181db88c90 <col:19> 'int' 16
| |-EnumConstantDecl 0x56181db88d60 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db892a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88d40 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56181db88d20 <col:21> 'int' 16
| |-EnumConstantDecl 0x56181db88df0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db892b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88dd0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56181db88db0 <col:19> 'int' 32
| |-EnumConstantDecl 0x56181db88e80 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db892d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88e60 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56181db88e40 <col:19> 'int' EnumConstant 0x56181db88cd0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56181db88f10 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db892e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88ef0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56181db88ed0 <col:19> 'int' EnumConstant 0x56181db88df0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56181db88fe0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db89300 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db88fc0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56181db88fa0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56181db88f60 <col:23> 'int' EnumConstant 0x56181db88f10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56181db88f80 <col:40> 'int' 2
| |-EnumConstantDecl 0x56181db890b0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56181db89318 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db89090 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56181db89070 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56181db89030 <col:23> 'int' EnumConstant 0x56181db88f10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56181db89050 <col:40> 'int' 4
| `-EnumConstantDecl 0x56181db89180 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56181db89330 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181db89160 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56181db89140 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56181db89100 <col:23> 'int' EnumConstant 0x56181db88f10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56181db89120 <col:40> 'int' 8
|-CXXMethodDecl 0x56181db89370 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56181db89410 <col:68> "" ""
|-CXXMethodDecl 0x56181db894a8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56181db89548 <col:45> "" ""
|-CXXMethodDecl 0x56181db895e0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56181db89680 <col:57> "" ""
|-CXXMethodDecl 0x56181db89718 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56181db897b8 <col:45> "" ""
|-CXXMethodDecl 0x56181db89850 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56181db898f0 <col:57> "" ""
|-CXXMethodDecl 0x56181db89980 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56181db89a20 <col:51> "" ""
|-CXXMethodDecl 0x56181db89ab0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56181db89b50 <col:63> "" ""
|-CXXMethodDecl 0x56181db89be0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56181db89c80 <col:53> "" ""
|-CXXMethodDecl 0x56181db89d10 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56181db89db0 <col:65> "" ""
|-CXXMethodDecl 0x56181db89ec8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56181db89e38 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56181db89f70 <col:61> "" ""
|-CXXMethodDecl 0x56181db8a108 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56181db89ff8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56181db8a070 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56181db8a1b8 <col:67> "" ""
|-CXXMethodDecl 0x56181db8a2d0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56181db8a240 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56181db8a378 <col:63> "" ""
|-CXXMethodDecl 0x56181db8a510 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56181db8a400 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56181db8a478 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56181db8a5c0 <col:69> "" ""
|-CXXMethodDecl 0x56181db8a6d8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56181db8a648 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56181db8a780 <col:63> "" ""
|-CXXMethodDecl 0x56181db8ce58 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56181db8cd48 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56181db8cdc0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56181db8cf08 <col:69> "" ""
|-CXXMethodDecl 0x56181db8d020 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56181db8cf90 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56181db8d0c8 <col:62> "" ""
|-CXXMethodDecl 0x56181db8d260 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56181db8d150 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56181db8d1c8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56181db8d310 <col:68> "" ""
|-CXXMethodDecl 0x56181db8d428 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56181db8d398 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56181db8d4d0 <col:63> "" ""
|-CXXMethodDecl 0x56181db8d668 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56181db8d558 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56181db8d5d0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56181db8d718 <col:69> "" ""
|-CXXMethodDecl 0x56181db8d7a8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56181db8d848 <col:64> "" ""
|-CXXMethodDecl 0x56181db8d8d8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56181db8d978 <col:52> "" ""
|-CXXMethodDecl 0x56181db8da08 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56181db8daa8 <col:67> "" ""
|-CXXMethodDecl 0x56181db8db38 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56181db8dbd8 <col:55> "" ""
|-CXXMethodDecl 0x56181db8dcf0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56181db8dc60 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56181db8dd98 <col:58> "" ""
|-CXXMethodDecl 0x56181db8df30 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56181db8de20 <col:33> col:36 'int'
| |-ParmVarDecl 0x56181db8de98 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56181db8dfe0 <col:62> "" ""
|-CXXMethodDecl 0x56181db8e0f8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56181db8e068 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56181db8e1a0 <col:58> "" ""
|-CXXMethodDecl 0x56181db8e338 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56181db8e228 <col:33> col:36 'int'
| |-ParmVarDecl 0x56181db8e2a0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56181db8e3e8 <col:62> "" ""
|-CXXMethodDecl 0x56181db8e500 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56181db8e470 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56181db8e5a8 <col:60> "" ""
|-CXXMethodDecl 0x56181db8e740 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56181db8e630 <col:34> col:37 'int'
| |-ParmVarDecl 0x56181db8e6a8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56181db8e7f0 <col:64> "" ""
|-CXXMethodDecl 0x56181db8e908 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56181db8e878 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56181db8e9b0 <col:58> "" ""
|-CXXMethodDecl 0x56181db8eb48 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56181db8ea38 <col:33> col:36 'int'
| |-ParmVarDecl 0x56181db8eab0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56181db8ebf8 <col:62> "" ""
|-CXXMethodDecl 0x56181db8ed10 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56181db8ec80 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56181db8edb8 <col:59> "" ""
|-CXXMethodDecl 0x56181db8ef50 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56181db8ee40 <col:33> col:36 'int'
| |-ParmVarDecl 0x56181db8eeb8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56181db8f000 <col:63> "" ""
|-AccessSpecDecl 0x56181db8f070 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56181db8f098 prev 0x56181db842a0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56181db8f190 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56181db8f280 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56181db8f3a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56181db8f528 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56181db8f6a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56181db8f828 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56181dba0658 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56181dba0ec8 <col:11>
| |-CXXDestructorDecl 0x56181dba0730 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56181dba0868 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56181dba0868
| | `-ParmVarDecl 0x56181dba0978 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56181dba0a18 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56181dba0a18
| | `-ParmVarDecl 0x56181dba0b28 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56181dba38e8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56181dba39f8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56181dba3c78 <col:11>
| |   `-ReturnStmt 0x56181dba3c68 <col:11>
| |     `-UnaryOperator 0x56181dba3c50 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56181dba3c40 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56181dba3a68 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56181dba3a68
|   `-ParmVarDecl 0x56181dba3b78 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56181db8f890 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56181db8f9a8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56181db8fa48 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56181db8fab0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56181db8fb18 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56181db8fb80 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56181db8fbe0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56181db8fca0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56181db8fd00 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56181db8fd60 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56181dba0568 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56181db8fa48 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56181dba0ed8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56181dba0f30 <col:12>
| |-CXXConstructorDecl 0x56181dba0b98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56181dba0b98
| | `-ParmVarDecl 0x56181dba0ca8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56181dba0d48 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56181dba0d48
| | `-ParmVarDecl 0x56181dba0e58 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56181dba2fd0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56181db8fdd8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56181db8fe38 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56181db8fea0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56181db8ff08 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56181db8ff70 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56181db8ffd8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56181db90038 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56181db90098 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56181db90100 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56181db90188 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56181db8fdd8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56181dba0500 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56181db90038 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56181dba0f40 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56181dba0fa0 <col:21, line:755:5>
|-CXXConstructorDecl 0x56181db90328 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56181db90268 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56181db90420 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56181db90608 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56181db90510 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56181db908d8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56181db906c0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56181db90738 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56181db907b0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db90af8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56181db909a8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56181db90a20 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56181db990d8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56181db90bb8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56181db90c30 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56181db90ca8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56181db99230 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56181db991a0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db99378 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56181db992e8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56181db99470 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181d8eb5d8 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181d8eb6f8 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x56181d8eb7c0 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x56181d9bbd90 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56181d9c10a8 <col:8>
|-CXXConstructorDecl 0x56181d9bbe98 <col:8> col:8 implicit used constexpr in_addr 'void (const in_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181d9bbfa8 <col:8> col:8 used 'const in_addr &'
| |-CXXCtorInitializer Field 0x56181d8eb7c0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181dc37690 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56181dc37660 <col:8> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x56181d8eb7c0
| |     `-DeclRefExpr 0x56181dc37640 <col:8> 'const in_addr' lvalue ParmVar 0x56181d9bbfa8 '' 'const in_addr &'
| `-CompoundStmt 0x56181dc376d8 <col:8>
|-CXXConstructorDecl 0x56181d9bc048 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56181d9bc158 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x56181d8eb7c0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181d9c12c0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56181d9c1290 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x56181d8eb7c0
| |     `-CXXStaticCastExpr 0x56181d9c1260 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x56181d9c1230 <col:8> 'in_addr' lvalue ParmVar 0x56181d9bc158 '' 'in_addr &&'
| `-CompoundStmt 0x56181d9c1308 <col:8>
|-CXXDestructorDecl 0x56181d9c1540 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56181dc37800 <col:8> col:8 implicit used constexpr operator= 'in_addr &(const in_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181dc37908 <col:8> col:8 used 'const in_addr &'
| `-CompoundStmt 0x56181dc37c60 <col:8>
|   |-BinaryOperator 0x56181dc37c08 <col:8> 'in_addr_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x56181dc37bc0 <col:8> 'in_addr_t':'unsigned int' lvalue ->s_addr 0x56181d8eb7c0
|   | | `-CXXThisExpr 0x56181dc37bb0 <col:8> 'in_addr *' this
|   | `-ImplicitCastExpr 0x56181dc37bf0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x56181dc37b80 <col:8> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x56181d8eb7c0
|   |     `-DeclRefExpr 0x56181dc37b60 <col:8> 'const in_addr' lvalue ParmVar 0x56181dc37908 '' 'const in_addr &'
|   `-ReturnStmt 0x56181dc37c50 <col:8>
|     `-UnaryOperator 0x56181dc37c38 <col:8> 'in_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56181dc37c28 <col:8> 'in_addr *' this
`-CXXMethodDecl 0x56181dc37978 <col:8> col:8 implicit constexpr operator= 'in_addr &(in_addr &&)' inline default trivial noexcept-unevaluated 0x56181dc37978
  `-ParmVarDecl 0x56181dc37a88 <col:8> col:8 'in_addr &&'

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181d9b4a88 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56181d9b4ba8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x56181d9b4c90 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x56181d9b4c70 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x56181d9b4c38 <col:22> 'int' 4
|-FieldDecl 0x56181d9b4d38 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x56181d9b4d18 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x56181d9b4ce0 <col:21> 'int' 4
|-FieldDecl 0x56181d9b4d98 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x56181d9b4df8 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x56181d9b4e58 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x56181d9b4eb8 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x56181d9b4f18 <line:47:5, col:13> col:13 referenced ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x56181d9b4f78 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x56181d9b4fd8 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x56181d9b5048 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x56181d9b50b8 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct click_icmp
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint32_t padding
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181dc344d0 prev 0x56181db7d590 <../dummy_inc/clicknet/icmp.h:17:1, line:23:1> line:17:8 referenced struct click_icmp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56181dc345c8 <col:1, col:8> col:8 implicit struct click_icmp
|-FieldDecl 0x56181dc34668 <line:18:5, col:13> col:13 referenced icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x56181dc346c8 <line:19:5, col:13> col:13 icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x56181dc34728 <line:20:5, col:14> col:14 icmp_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x56181dc34788 <line:21:5, col:14> col:14 padding 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181dba1040 prev 0x56181db7d900 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x56181dba1178 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x56181dba1208 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x56181dba12b0 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x56181dba1350 <col:20>
| `-OptimizeNoneAttr 0x56181dba13a8 <col:30>
|-CXXMethodDecl 0x56181dba13f8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x56181dba1498 <col:20>
| `-OptimizeNoneAttr 0x56181dba14f0 <col:30>
|-CXXMethodDecl 0x56181dba1540 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x56181dba1608 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x56181dba16d0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x56181dba17e8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x56181dba18b0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x56181dba1950 <col:20>
| `-OptimizeNoneAttr 0x56181dba19a8 <col:30>
|-CXXMethodDecl 0x56181dba1a18 <line:787:5, col:62> col:50 used ip_header 'click_ip *() const'
| |-NoInlineAttr 0x56181dba1ab8 <col:20>
| `-OptimizeNoneAttr 0x56181dba1b10 <col:30>
|-CXXMethodDecl 0x56181dba1bb8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x56181dba1c58 <col:20>
| `-OptimizeNoneAttr 0x56181dba1cb0 <col:30>
|-CXXMethodDecl 0x56181dba1d00 <line:789:5, col:46> col:27 used transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x56181dba1e18 <line:790:5, col:38> col:24 used icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x56181dba1f38 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x56181dba2058 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x56181dba2120 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x56181dba21c0 <col:62> "" ""
|-AccessSpecDecl 0x56181dba2230 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x56181dba2290 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x56181dba2e88 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x56181dba30b0 <col:29, col:31>
|-CXXMethodDecl 0x56181dba2358 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x56181dba2498 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x56181dba2408 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x56181dba2590 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x56181dba30c0 <col:23, col:25>
|-CXXMethodDecl 0x56181dba2748 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x56181dba2680 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x56181dba2a18 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56181dba2800 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56181dba2878 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56181dba28f0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181dba2ba8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x56181dba2ae0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x56181dba2ca0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x56181dba2d08 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x56181dba2d08
  `-ParmVarDecl 0x56181dba2e18 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181d9b79d0 prev 0x56181d91ca08 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181d9b7ac8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x56181d9b7b58 <col:19, col:25> col:19 public
|-TypedefDecl 0x56181d9b7b90 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x56181d7aa2e0 'uninitialized_type'
|   `-CXXRecord 0x56181d7aa248 'uninitialized_type'
|-CXXConstructorDecl 0x56181d9b7c50 <line:20:5, line:22:5> line:20:12 IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x56181d9bb3a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181d9bb448 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56181d9bb408 <col:10> 'int' 0
| `-CompoundStmt 0x56181d9bb490 <col:13, line:22:5>
|-CXXConstructorDecl 0x56181d9b7da0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x56181d9b7d10 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x56181d9bb3a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181d9bb4e0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x56181d9bb4a0 <col:10> 'unsigned int' lvalue ParmVar 0x56181d9b7d10 'x' 'unsigned int'
| `-CompoundStmt 0x56181d9bb528 <col:13, line:27:5>
|-CXXConstructorDecl 0x56181d9b7ef8 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x56181d9b7e68 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x56181d9bb3a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181d9bb590 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56181d9bb578 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x56181d9bb538 <col:10> 'int' lvalue ParmVar 0x56181d9b7e68 'x' 'int'
| `-CompoundStmt 0x56181d9bb5d8 <col:13, line:31:5>
|-CXXConstructorDecl 0x56181d9b8050 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x56181d9b7fc0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x56181d9bb3a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181d9bb640 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56181d9bb628 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x56181d9bb5e8 <col:10> 'unsigned long' lvalue ParmVar 0x56181d9b7fc0 'x' 'unsigned long'
| `-CompoundStmt 0x56181d9bb688 <col:13, line:35:5>
|-CXXConstructorDecl 0x56181d9b81a8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x56181d9b8118 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x56181d9bb3a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181d9bb6f0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56181d9bb6d8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x56181d9bb698 <col:10> 'long' lvalue ParmVar 0x56181d9b8118 'x' 'long'
| `-CompoundStmt 0x56181d9bb738 <col:13, line:39:5>
|-CXXConstructorDecl 0x56181d9b8368 <line:42:5, line:44:5> line:42:12 used IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x56181d9b8278 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x56181d9bb3a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181d9bb7b8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56181d9bb768 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x56181d8eb7c0
| |     `-DeclRefExpr 0x56181d9bb748 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x56181d9b8278 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x56181d9bb800 <col:20, line:44:5>
|-CXXConstructorDecl 0x56181d9b84f8 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x56181d9b8430 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x56181d9bb968 <col:51, line:56:5>
|   `-BinaryOperator 0x56181d9bb948 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x56181d9bb820 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x56181d9bb3a0
|     | `-CXXThisExpr 0x56181d9bb810 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x56181d9bb930 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56181d9bb918 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x56181d9bb8f8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x56181d9bb8c8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x56181d9bb8b0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x56181d9bb850 <col:47> 'const unsigned char *' lvalue ParmVar 0x56181d9b8430 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x56181d9b8648 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x56181d9b85b8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x56181d9b87f8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x56181d9b8738 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x56181d9bb9d8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x56181d9bb9b0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x56181d9bb980 <col:9> 'const uninitialized_type' lvalue ParmVar 0x56181d9b8738 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x56181d9b8988 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x56181d9b88c0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x56181d9b8a78 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x56181d9bc998 <col:46, line:83:5>
|   `-ReturnStmt 0x56181d9bc988 <line:82:2, col:29>
|     `-ExprWithCleanups 0x56181d9bc970 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x56181d9bc940 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56181d9bc7f8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x56181d9bc6e0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x56181d9bc5c8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x56181d9bba00 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x56181d9b8b68 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x56181d9bca48 <col:31, line:88:5>
|   `-ReturnStmt 0x56181d9bca38 <line:87:2, col:10>
|     `-UnaryOperator 0x56181d9bca20 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x56181d9bca08 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x56181d9bc9f0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x56181d9bc9c0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56181d9bb3a0
|             `-CXXThisExpr 0x56181d9bc9b0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x56181d9b8c28 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x56181d9bcac8 <col:34, line:93:5>
|   `-ReturnStmt 0x56181d9bcab8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x56181d9bcaa0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56181d9bca70 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56181d9bb3a0
|         `-CXXThisExpr 0x56181d9bca60 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x56181d9b8cf8 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x56181d9bcb48 <col:38, line:101:5>
|   `-ReturnStmt 0x56181d9bcb38 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x56181d9bcb20 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56181d9bcaf0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56181d9bb3a0
|         `-CXXThisExpr 0x56181d9bcae0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x56181d9b8dc8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x56181d9bce18 <col:38, line:108:5>
|   `-ReturnStmt 0x56181d9bce08 <line:107:2, col:58>
|     `-BinaryOperator 0x56181d9bcde8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x56181d9bcd00 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x56181d9bcce0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56181d9bccc8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56181d9bcb70 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56181d9bb3a0
|       |   |   `-CXXThisExpr 0x56181d9bcb60 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x56181d9bcca0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x56181d9bcc88 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56181d9bcc08 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x56181d8f9cf8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x56181d9bcbe8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x56181d9bcdc0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x56181d9bcda8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56181d9bcd88 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x56181d8f9cf8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x56181d9bcd68 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x56181d9b8e88 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x56181d9bd088 <col:39, line:112:5>
|   `-ReturnStmt 0x56181d9bd078 <line:111:2, col:56>
|     `-BinaryOperator 0x56181d9bd058 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x56181d9bcf70 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x56181d9bcf50 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56181d9bcf38 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56181d9bce40 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56181d9bb3a0
|       |   |   `-CXXThisExpr 0x56181d9bce30 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x56181d9bcf10 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x56181d9bcef8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56181d9bced8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x56181d8f9cf8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x56181d9bceb8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x56181d9bd030 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x56181d9bd018 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56181d9bcff8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x56181d8f9cf8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x56181d9bcfd8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x56181d9b8fb8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x56181d9b90c0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x56181d9b91d0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x56181d9ba298 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56181d9ba358 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56181d9ba420 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x56181d9ba618 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x56181d9ba4d0 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x56181d9ba548 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x56181d9ba798 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56181d9ba6d8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x56181d9ba8e0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56181d9ba850 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x56181d9baa88 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56181d9ba998 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56181d9babd0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56181d9bab40 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56181d9bad18 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56181d9bac88 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56181d9bade0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x56181d9baea0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x56181d9bb018 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x56181d9baf50 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x56181d9bb0e0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x56181d9bb1c8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x56181d9bb270 <col:51> "" ""
|-TypedefDecl 0x56181d9bb310 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x56181d91caa0 'IPAddress'
|   `-CXXRecord 0x56181d9b79d0 'IPAddress'
|-AccessSpecDecl 0x56181d9bb368 <line:150:3, col:10> col:3 private
|-FieldDecl 0x56181d9bb3a0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56181d9bba48 <line:15:7> col:7 implicit constexpr IPAddress 'void (const IPAddress &)' inline default trivial noexcept-unevaluated 0x56181d9bba48
| `-ParmVarDecl 0x56181d9bbb58 <col:7> col:7 'const IPAddress &'
|-CXXConstructorDecl 0x56181d9bbbf8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56181d9bbd08 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x56181d9bb3a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56181d9bc8e8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56181d9bc8a0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x56181d9bb3a0
| |     `-CXXStaticCastExpr 0x56181d9bc870 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x56181d9bc840 <col:7> 'IPAddress' lvalue ParmVar 0x56181d9bbd08 '' 'IPAddress &&'
| `-CompoundStmt 0x56181d9bc930 <col:7>
`-CXXDestructorDecl 0x56181d9bc5f8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181db4f330 prev 0x56181db46170 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181db4f428 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56181db4f4c8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x56181db56290 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56181db56678 <col:11>
|-CXXConstructorDecl 0x56181db56370 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181db56458 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56181db56dc0 <col:11>
|-CXXConstructorDecl 0x56181db564f8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56181db56608 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x56181db58618 <col:11>
|-CXXDestructorDecl 0x56181db57928 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56181d85e4d8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181d85e5e8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56181d85eeb0 <col:11>
|   `-ReturnStmt 0x56181d85eea0 <col:11>
|     `-UnaryOperator 0x56181d85ee88 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56181d85ee78 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x56181d85e658 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x56181d85e658
  `-ParmVarDecl 0x56181d85e768 <col:11> col:11 'Timestamp::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181db45328 prev 0x56181db45038 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181db45420 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x56181db454b0 <col:19, col:25> col:19 public
|-TypedefDecl 0x56181db454e8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x56181d7aa6b0 'int32_t' sugar
|   |-Typedef 0x56181d6bf268 'int32_t'
|   `-TypedefType 0x56181d6983b0 '__int32_t' sugar
|     |-Typedef 0x56181d697fc8 '__int32_t'
|     `-BuiltinType 0x56181d656370 'int'
|-TypedefDecl 0x56181db45550 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x56181d7aa870 'int64_t' sugar
|   |-Typedef 0x56181d6bf2d0 'int64_t'
|   `-TypedefType 0x56181d6984d0 '__int64_t' sugar
|     |-Typedef 0x56181d6980a8 '__int64_t'
|     `-BuiltinType 0x56181d656390 'long'
|-EnumDecl 0x56181db455a8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x56181db45720 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x56181db45700 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x56181db456d8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x56181db456c0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x56181db45690 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x56181db45818 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x56181db457f8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x56181db457d0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x56181db457b8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x56181db45790 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x56181db45770 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x56181db45868 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x56181db45970 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56181db45ec0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db45950 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x56181db45930 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x56181db45a00 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56181db45ed8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db459e0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56181db459c0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x56181db45a90 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56181db45ef0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db45a70 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56181db45a50 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56181db45b20 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56181db45f08 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db45b00 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56181db45ae0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x56181db45bb0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56181db45f20 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db45b90 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56181db45b70 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56181db45c40 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56181db45f38 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db45c20 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x56181db45c00 <col:24> 'int' 1000
| |-EnumConstantDecl 0x56181db45cd0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56181db45f50 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db45cb0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x56181db45c90 <col:26> 'int' EnumConstant 0x56181db45970 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x56181db45da0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56181db45f68 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db45d80 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x56181db45d60 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x56181db45d20 <col:27> 'int' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x56181db45d40 <col:44> 'int' EnumConstant 0x56181db45c40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x56181db45e70 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x56181db45f80 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181db45e50 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x56181db45e30 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x56181db45df0 <col:27> 'int' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x56181db45e10 <col:44> 'int' EnumConstant 0x56181db45b20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x56181db45f98 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x56181db460a0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x56181db460f0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181db46080 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x56181db46060 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x56181db46118 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x56181d7aa2e0 'uninitialized_type'
|   `-CXXRecord 0x56181d7aa248 'uninitialized_type'
|-CXXRecordDecl 0x56181db46170 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x56181db46280 <line:174:5, line:176:5> line:174:12 Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db56688 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56181db567a8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x56181db56760 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x56181db566f0 <col:9> '<bound member function type>' ->assign 0x56181db4aec8
|     | `-CXXThisExpr 0x56181db566e0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56181db56720 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56181db56790 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56181db56740 <col:19> 'int' 0
|-CXXConstructorDecl 0x56181db464c8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x56181db46340 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x56181db463b8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56181db51fc0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56181db51fa0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db567c0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56181db56910 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x56181db56898 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x56181db56828 <col:9> '<bound member function type>' ->assign 0x56181db4aec8
|     | `-CXXThisExpr 0x56181db56818 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56181db568e0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56181db568c8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56181db56858 <col:16> 'long' lvalue ParmVar 0x56181db46340 'sec' 'long'
|     `-ImplicitCastExpr 0x56181db568f8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56181db56878 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db463b8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56181db46728 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56181db46598 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x56181db46610 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56181db51ff8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56181db51fd8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db56928 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56181db56a60 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x56181db56a00 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x56181db56990 <col:9> '<bound member function type>' ->assign 0x56181db4aec8
|     | `-CXXThisExpr 0x56181db56980 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56181db56a30 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56181db569c0 <col:16> 'int' lvalue ParmVar 0x56181db46598 'sec' 'int'
|     `-ImplicitCastExpr 0x56181db56a48 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56181db569e0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db46610 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56181db46988 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x56181db467f8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x56181db46870 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56181db52030 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56181db52010 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db56a78 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56181db56bc8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x56181db56b50 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x56181db56ae0 <col:9> '<bound member function type>' ->assign 0x56181db4aec8
|     | `-CXXThisExpr 0x56181db56ad0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56181db56b98 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56181db56b80 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56181db56b10 <col:16> 'unsigned long' lvalue ParmVar 0x56181db467f8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x56181db56bb0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56181db56b30 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db46870 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56181db47b20 <line:199:5, line:201:5> line:199:21 Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x56181db46a58 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x56181db46ad0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56181db52068 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56181db52048 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db56be0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56181db56d30 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x56181db56cb8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x56181db56c48 <col:9> '<bound member function type>' ->assign 0x56181db4aec8
|     | `-CXXThisExpr 0x56181db56c38 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56181db56d00 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56181db56ce8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56181db56c78 <col:16> 'unsigned int' lvalue ParmVar 0x56181db46a58 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x56181db56d18 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56181db56c98 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db46ad0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56181db47c80 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x56181db47bf0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x56181db47e18 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x56181db47d58 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x56181db48048 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x56181db47f50 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x56181db481f8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x56181db48138 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db56dd0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x56181db56d48 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x56181db48138 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56181db56e30 <col:19, line:214:5>
|-CXXConstructorDecl 0x56181db483c8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x56181db48308 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db56e40 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56181db56ef0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x56181db56ec8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x56181db56e98 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x56181db48308 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x56181db485b8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x56181db48530 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x56181db450d0 'Timestamp'
|   | `-CXXRecord 0x56181db45328 'Timestamp'
|   `-ParenType 0x56181db484d0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x56181db484a0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x56181db45670 'Timestamp::seconds_type' sugar
|         |-Typedef 0x56181db454e8 'seconds_type'
|         `-TypedefType 0x56181d7aa6b0 'int32_t' sugar
|           |-Typedef 0x56181d6bf268 'int32_t'
|           `-TypedefType 0x56181d6983b0 '__int32_t' sugar
|             |-Typedef 0x56181d697fc8 '__int32_t'
|             `-BuiltinType 0x56181d656370 'int'
|-CXXConversionDecl 0x56181db486f8 <line:222:5, col:45> col:12 operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56181db487c8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x56181db56ff8 <col:37, line:231:5>
|   `-ReturnStmt 0x56181db56fe8 <line:227:9, col:23>
|     `-BinaryOperator 0x56181db56fc8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x56181db56f98 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56181db56f48 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56181db4f4c8
|       |   `-MemberExpr 0x56181db56f18 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56181db50478
|       |     `-CXXThisExpr 0x56181db56f08 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56181db56fb0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x56181db56f78 <col:23> 'int' 0
|-CXXMethodDecl 0x56181db48888 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x56181db48948 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db48a08 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db48ac8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db48b88 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56181db48cf8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x56181db48c38 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x56181db48e40 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x56181db48db0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db48f08 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56181db48fa8 <col:54> "" ""
|-CXXMethodDecl 0x56181db49038 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56181db490d8 <col:54> "" ""
|-CXXMethodDecl 0x56181db49168 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56181db49208 <col:54> "" ""
|-CXXMethodDecl 0x56181db49308 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x56181db493d8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x56181db49508 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x56181db49600 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x56181db49738 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56181db57210 <col:39, line:271:5>
|   `-ReturnStmt 0x56181db57200 <line:267:9, col:61>
|     `-CallExpr 0x56181db571a0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56181db57188 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56181db57010 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56181db507a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56181db571d0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56181db57070 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56181db4f4c8
|       |   `-MemberExpr 0x56181db57040 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56181db50478
|       |     `-CXXThisExpr 0x56181db57030 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56181db571e8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56181db57110 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56181db570e0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56181db570a0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56181db570f8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56181db570c0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45c40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56181db497f8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56181db573d0 <col:39, line:279:5>
|   `-ReturnStmt 0x56181db573c0 <line:275:9, col:61>
|     `-CallExpr 0x56181db57360 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56181db57348 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56181db57228 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56181db507a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56181db57390 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56181db57288 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56181db4f4c8
|       |   `-MemberExpr 0x56181db57258 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56181db50478
|       |     `-CXXThisExpr 0x56181db57248 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56181db573a8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56181db57328 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56181db572f8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56181db572b8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56181db57310 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56181db572d8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45b20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56181db498b8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56181db57568 <col:39, line:287:5>
|   `-ReturnStmt 0x56181db57558 <line:283:9, col:53>
|     `-BinaryOperator 0x56181db57538 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x56181db57508 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56181db57428 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56181db4f4c8
|       |   `-MemberExpr 0x56181db573f8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56181db50478
|       |     `-CXXThisExpr 0x56181db573e8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56181db57520 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x56181db574e8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56181db574c8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56181db57498 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56181db57458 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45970 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56181db574b0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56181db57478 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56181db499a8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56181db58800 <col:40, line:293:5>
|   |-DeclStmt 0x56181db576b0 <line:291:9, col:48>
|   | `-VarDecl 0x56181db57590 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56181db57690 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56181db57638 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56181db57608 <col:22> '<bound member function type>' ->subsec 0x56181db48948
|   |     |   `-CXXThisExpr 0x56181db575f8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56181db57678 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56181db57658 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45da0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56181db587f0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x56181db587d8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56181db587a8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56181db58790 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56181db58770 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56181db58740 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56181db584d8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56181db584c0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56181db576c8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56181db57590 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56181db586e0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56181db586c8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56181db58698 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56181db584f0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56181db58460 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56181db58448 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56181db583f8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56181db45278 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56181db58398 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56181db576f8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56181db576e8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56181db583e0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56181db583c8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56181db57bb8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56181db57720 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56181db577b0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56181db57780 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56181db57740 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45da0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56181db57798 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56181db57760 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56181db57590 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56181db58710 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56181db584a8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56181db58498 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56181db49a68 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56181db58d58 <col:40, line:302:5>
|   |-DeclStmt 0x56181db58950 <line:297:9, col:48>
|   | `-VarDecl 0x56181db58830 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56181db58930 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56181db588d8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56181db588a8 <col:22> '<bound member function type>' ->subsec 0x56181db48948
|   |     |   `-CXXThisExpr 0x56181db58898 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56181db58918 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56181db588f8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45e70 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56181db58d48 <line:298:9, col:70>
|     `-ExprWithCleanups 0x56181db58d30 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56181db58d00 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56181db58ce8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56181db58cc8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56181db58c98 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56181db58bc0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56181db58ba8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56181db58968 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56181db58830 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56181db58c38 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56181db58c20 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56181db58bf0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56181db58bd8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56181db58b48 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56181db58b30 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56181db58b10 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56181db45278 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56181db58ab0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56181db58998 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56181db58988 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56181db58af8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56181db58ae0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56181db58a70 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56181db589c0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56181db58a50 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56181db58a20 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56181db589e0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45e70 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56181db58a38 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56181db58a00 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56181db58830 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56181db58c68 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56181db58b90 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56181db58b80 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56181db49b28 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56181db58de0 <col:40, line:306:5>
|   `-ReturnStmt 0x56181db58dd0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x56181db58da0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x56181db58d88 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56181db58d78 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x56181db49cc8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x56181db49bd8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x56181db49e98 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x56181db49da0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x56181db49f88 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x56181db4a0f8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x56181db4a038 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x56181db58f28 <col:56, line:320:5>
|   `-ReturnStmt 0x56181db58f18 <line:319:9, col:32>
|     `-ExprWithCleanups 0x56181db58f00 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x56181db58ed0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56181db58eb8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56181db58e78 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56181db58e48 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56181db58e08 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56181db4a038 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x56181db58e60 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56181db58e28 <col:31> 'int' 0
|-CXXMethodDecl 0x56181db4a338 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56181db4a1b0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4a228 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db590f8 <col:72, line:326:5>
|   `-ReturnStmt 0x56181db590e8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x56181db590d0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56181db590a0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56181db59088 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56181db59048 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56181db59030 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56181db58f50 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56181db4a1b0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56181db58ff0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56181db58fd8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56181db58f70 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56181db4ec20 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56181db59018 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56181db58f90 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4a228 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db4a4e8 <line:328:5, line:337:5> line:328:29 make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56181db4a3f8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56181db597c0 <col:56, line:337:5>
|   |-DeclStmt 0x56181db593f8 <line:329:9, col:51>
|   | `-VarDecl 0x56181db59120 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56181db593e0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56181db593b0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56181db59398 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56181db59380 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56181db59350 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56181db59338 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56181db59320 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56181db59210 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56181db595b0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56181db59460 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56181db4f4c8
|   | | `-MemberExpr 0x56181db59430 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56181db50478
|   | |   `-DeclRefExpr 0x56181db59410 <col:9> 'Timestamp' lvalue Var 0x56181db59120 't' 'Timestamp'
|   | `-BinaryOperator 0x56181db59590 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56181db59560 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56181db59490 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56181db4a3f8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56181db59578 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56181db59540 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56181db59520 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56181db594f0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56181db594b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56181db59508 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56181db594d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45c40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56181db597a8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x56181db59778 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56181db59760 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56181db59740 <col:16> 'Timestamp' lvalue Var 0x56181db59120 't' 'Timestamp'
|-CXXMethodDecl 0x56181db4a6b0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56181db4a5a0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4a618 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db59978 <col:72, line:343:5>
|   `-ReturnStmt 0x56181db59968 <line:342:9, col:51>
|     `-ExprWithCleanups 0x56181db59950 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56181db59920 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56181db59908 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56181db598c8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56181db598b0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56181db597f8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56181db4a5a0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56181db59870 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56181db59858 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56181db59818 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56181db4ed68 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56181db59898 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56181db59838 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4a618 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db4a800 <line:345:5, line:354:5> line:345:29 make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56181db4a770 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56181db59dc0 <col:56, line:354:5>
|   |-DeclStmt 0x56181db59b68 <line:346:9, col:51>
|   | `-VarDecl 0x56181db599a0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56181db59b50 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56181db59b20 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56181db59b08 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56181db59af0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56181db59ac0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56181db59aa8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56181db59a90 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56181db59a60 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56181db59d20 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56181db59bd0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56181db4f4c8
|   | | `-MemberExpr 0x56181db59ba0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56181db50478
|   | |   `-DeclRefExpr 0x56181db59b80 <col:9> 'Timestamp' lvalue Var 0x56181db599a0 't' 'Timestamp'
|   | `-BinaryOperator 0x56181db59d00 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56181db59cd0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56181db59c00 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56181db4a770 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56181db59ce8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56181db59cb0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56181db59c90 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56181db59c60 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56181db59c20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56181db59c78 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56181db59c40 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45b20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56181db59da8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x56181db59d78 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56181db59d60 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56181db59d40 <col:16> 'Timestamp' lvalue Var 0x56181db599a0 't' 'Timestamp'
|-CXXMethodDecl 0x56181db4a9c8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56181db4a8b8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4a930 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db59f78 <col:72, line:360:5>
|   `-ReturnStmt 0x56181db59f68 <line:359:9, col:51>
|     `-ExprWithCleanups 0x56181db59f50 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56181db59f20 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56181db59f08 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56181db59ec8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56181db59eb0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56181db59df8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56181db4a8b8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56181db59e70 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56181db59e58 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56181db59e18 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56181db4eeb0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56181db59e98 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56181db59e38 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4a930 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db4ab18 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56181db4aa88 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56181db668e8 <col:56, line:371:5>
|   |-DeclStmt 0x56181db5a168 <line:363:9, col:51>
|   | `-VarDecl 0x56181db59fa0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56181db5a150 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56181db5a120 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56181db5a108 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56181db5a0f0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56181db5a0c0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56181db5a0a8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56181db5a090 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56181db5a060 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56181db66848 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56181db5a1d0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56181db4f4c8
|   | | `-MemberExpr 0x56181db5a1a0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56181db50478
|   | |   `-DeclRefExpr 0x56181db5a180 <col:9> 'Timestamp' lvalue Var 0x56181db59fa0 't' 'Timestamp'
|   | `-CallExpr 0x56181db667e8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x56181db667d0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56181db5a200 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56181db507a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x56181db66818 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56181db5a220 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x56181db4aa88 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56181db66830 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x56181db667b0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x56181db66780 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x56181db5a240 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45970 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x56181db66798 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x56181db5a260 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56181db668d0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x56181db668a0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56181db66888 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56181db66868 <col:16> 'Timestamp' lvalue Var 0x56181db59fa0 't' 'Timestamp'
|-CXXMethodDecl 0x56181db4ac08 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x56181db66a28 <col:39, line:377:5>
|   `-ReturnStmt 0x56181db66a18 <line:376:9, col:30>
|     `-ExprWithCleanups 0x56181db66a00 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x56181db669d0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56181db669b8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56181db66978 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x56181db66920 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x56181db66960 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56181db66940 <col:29> 'int' 1
|-CXXMethodDecl 0x56181db4acc8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x56181db66b08 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x56181db66ac0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x56181db66a50 <col:9> '<bound member function type>' ->assign 0x56181db4aec8
|     | `-CXXThisExpr 0x56181db66a40 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56181db66a80 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56181db66af0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56181db66aa0 <col:19> 'int' 0
|-CXXMethodDecl 0x56181db4aec8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56181db4ad78 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4adf0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56181db520a0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56181db52080 <col:60> 'int' 0
| `-CompoundStmt 0x56181db66d00 <col:63, line:395:5>
|   `-BinaryOperator 0x56181db66ce0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x56181db66b60 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56181db4f4c8
|     | `-MemberExpr 0x56181db66b30 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56181db50478
|     |   `-CXXThisExpr 0x56181db66b20 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x56181db66cc0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x56181db66c50 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x56181db66bf0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x56181db66bd8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x56181db66bc0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x56181db66b90 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56181db4ad78 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x56181db66c38 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x56181db66c18 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x56181db66ca8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x56181db66c90 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x56181db66c70 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4adf0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db4b098 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56181db4af88 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4b000 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db66e58 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x56181db66e10 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x56181db66d28 <col:9> '<bound member function type>' ->assign 0x56181db4aec8
|     | `-CXXThisExpr 0x56181db66d18 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56181db66e40 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56181db66d58 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56181db4af88 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56181db66dd0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56181db66db8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56181db66d78 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56181db4ed68 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56181db66df8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56181db66d98 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4b000 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db4b268 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56181db4b158 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4b1d0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db66fb0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x56181db66f68 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x56181db66e80 <col:9> '<bound member function type>' ->assign 0x56181db4aec8
|     | `-CXXThisExpr 0x56181db66e70 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56181db66f98 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56181db66eb0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56181db4b158 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56181db66f28 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56181db66f10 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56181db66ed0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56181db4eeb0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56181db66f50 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56181db66ef0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4b1d0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db4b438 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56181db4b328 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4b3a0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56181db520d8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56181db520b8 <col:57> 'int' 0
| `-DeprecatedAttr 0x56181db4b4e8 <col:75> "" ""
|-CXXMethodDecl 0x56181db4b678 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56181db4b568 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4b5e0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56181db4b728 <col:74> "" ""
|-CXXMethodDecl 0x56181db4b8b8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56181db4b7a8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56181db4b820 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56181db4b968 <col:74> "" ""
|-CXXMethodDecl 0x56181db4b9f8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x56181db4ba98 <col:42> "" ""
|-CXXMethodDecl 0x56181db4e2d0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x56181db4e1b0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56181db4e230 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x56181db4e3a0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x56181db4e460 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x56181db4e500 <col:20>
| `-OptimizeNoneAttr 0x56181db4e558 <col:30>
|-CXXMethodDecl 0x56181db4e5a0 <line:446:5, col:36> col:29 recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x56181db4e660 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x56181db4e720 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56181db4e7e0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x56181db4e8a0 <line:481:5, col:43> col:29 recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56181db4e960 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x56181db4ea20 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56181db4eae0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x56181db4ec20 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56181db4eb90 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db670f8 <col:58, line:512:5>
|   `-ReturnStmt 0x56181db670e8 <line:511:9, col:53>
|     `-BinaryOperator 0x56181db670c8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56181db67098 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56181db66fc8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4eb90 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56181db670b0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56181db67078 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56181db67058 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56181db67028 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56181db66fe8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56181db67040 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56181db67008 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45c40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56181db4ed68 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56181db4ecd8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db67240 <col:58, line:516:5>
|   `-ReturnStmt 0x56181db67230 <line:515:9, col:53>
|     `-BinaryOperator 0x56181db67210 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56181db671e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56181db67110 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4ecd8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56181db671f8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56181db671c0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56181db671a0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56181db67170 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56181db67130 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56181db67188 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56181db67150 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45b20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56181db4eeb0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56181db4ee20 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db67388 <col:58, line:520:5>
|   `-ReturnStmt 0x56181db67378 <line:519:9, col:53>
|     `-BinaryOperator 0x56181db67358 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56181db67328 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56181db67258 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4ee20 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56181db67340 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56181db67308 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56181db672e8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56181db672b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56181db67278 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45970 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56181db672d0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56181db67298 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56181db4eff8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56181db4ef68 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db674d0 <col:60, line:524:5>
|   `-ReturnStmt 0x56181db674c0 <line:523:9, col:55>
|     `-BinaryOperator 0x56181db674a0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56181db67470 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56181db673a0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4ef68 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56181db67488 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56181db67450 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56181db67430 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56181db67400 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56181db673c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56181db67418 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56181db673e0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45c40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56181db4f140 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56181db4f0b0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db67618 <col:60, line:528:5>
|   `-ReturnStmt 0x56181db67608 <line:527:9, col:55>
|     `-BinaryOperator 0x56181db675e8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56181db675b8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56181db674e8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4f0b0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56181db675d0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56181db67598 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56181db67578 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56181db67548 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56181db67508 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56181db67560 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56181db67528 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45b20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56181db4f288 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56181db4f1f8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db67760 <col:60, line:532:5>
|   `-ReturnStmt 0x56181db67750 <line:531:9, col:55>
|     `-BinaryOperator 0x56181db67730 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56181db67700 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56181db67630 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db4f1f8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56181db67718 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56181db676e0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56181db676c0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56181db67690 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56181db67650 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45970 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56181db676a8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56181db67670 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56181db45cd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56181db4f330 prev 0x56181db46170 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56181db4f428 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56181db4f4c8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x56181db56290 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56181db56678 <col:11>
| |-CXXConstructorDecl 0x56181db56370 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56181db56458 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56181db56dc0 <col:11>
| |-CXXConstructorDecl 0x56181db564f8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x56181db56608 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x56181db58618 <col:11>
| |-CXXDestructorDecl 0x56181db57928 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56181d85e4d8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56181d85e5e8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56181d85eeb0 <col:11>
| |   `-ReturnStmt 0x56181d85eea0 <col:11>
| |     `-UnaryOperator 0x56181d85ee88 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56181d85ee78 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x56181d85e658 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x56181d85e658
|   `-ParmVarDecl 0x56181d85e768 <col:11> col:11 'Timestamp::rep_t &&'
|-EnumDecl 0x56181db4f530 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56181db4f630 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56181db4f830 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db4f610 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56181db4f5f0 <col:21> 'int' 0
| |-EnumConstantDecl 0x56181db4f6c0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56181db4f848 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db4f6a0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56181db4f680 <col:23> 'int' 1
| |-EnumConstantDecl 0x56181db4f750 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56181db4f860 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181db4f730 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56181db4f710 <col:23> 'int' 2
| `-EnumConstantDecl 0x56181db4f7e0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56181db4f878 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181db4f7c0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56181db4f7a0 <col:27> 'int' 3
|-CXXMethodDecl 0x56181db4f8b8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56181db4f980 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56181db4fb88 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56181db4fa30 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56181db4fab0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x56181db520f0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56181db4fd98 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56181db4fc48 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56181db4fcc0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56181db4fe68 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56181db4ff28 <line:635:5, col:37> col:24 warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56181db50098 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56181db4ffd8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56181db50160 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56181db50220 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56181db502e0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56181db503a0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56181db50440 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56181db50478 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56181db504e8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x56181db67778 <col:27, line:684:5>
|-CXXMethodDecl 0x56181db505a8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x56181db67788 <col:27, line:696:5>
|-CXXMethodDecl 0x56181db507a8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56181db50658 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56181db506d0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db67910 <col:66, line:700:5>
|   `-ReturnStmt 0x56181db67900 <line:699:9, col:31>
|     `-CallExpr 0x56181db678a0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x56181db67888 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56181db67838 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x56181d9d2b58 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x56181db678d0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x56181db677f8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56181db50658 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x56181db678e8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56181db67818 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db506d0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56181db50b18 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56181db50868 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56181db508e0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56181db50958 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56181db509d0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56181db67c60 <col:64, line:707:5>
|   |-DeclStmt 0x56181db679a0 <line:704:9, col:24>
|   | `-VarDecl 0x56181db67938 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x56181db67bb0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x56181db679b8 <col:9> 'int32_t':'int' lvalue ParmVar 0x56181db508e0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x56181db67b98 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x56181db67b30 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x56181db67b18 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56181db67a98 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x56181d9d7e28 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x56181db67b68 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56181db67a38 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56181db50958 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x56181db67b80 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56181db67a58 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56181db509d0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x56181db67a78 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x56181db67938 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x56181db67c40 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x56181db67bd0 <col:9> 'int32_t':'int' lvalue ParmVar 0x56181db50868 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x56181db67c28 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56181db67c10 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x56181db67bf0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x56181db67938 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56181db50db8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56181db50be8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56181db50c60 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56181db50cd8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56181db51058 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56181db50e80 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56181db50ef8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56181db50f70 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56181db511e8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56181db51120 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56181db513e8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56181db512a0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56181db51318 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56181db516b8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56181db515f8 parent 0x56181d656278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56181db514a8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56181db51520 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56181db518d8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56181db51818 parent 0x56181d656278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56181db51708 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56181db51780 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x56181db51aa0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x56181db519e8 parent 0x56181d656278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56181db51928 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x56181db51d28 <line:720:5, col:73> col:30
| `-FunctionDecl 0x56181db51c68 parent 0x56181d656278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56181db51b18 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56181db51b90 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56181db51f48 <line:721:5, col:73> col:30
| `-FunctionDecl 0x56181db51e88 parent 0x56181d656278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56181db51d78 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56181db51df0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x56181db577d0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181db578b8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db58328 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x56181db582e0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56181db50478
| |     `-DeclRefExpr 0x56181db582c0 <col:7> 'const Timestamp' lvalue ParmVar 0x56181db578b8 '' 'const Timestamp &'
| `-CompoundStmt 0x56181db58388 <col:7>
|-CXXConstructorDecl 0x56181db57a38 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56181db57b48 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56181db50478 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56181db58628 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x56181db585d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56181db50478
| |     `-CXXStaticCastExpr 0x56181db585a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x56181db58570 <col:7> 'Timestamp' lvalue ParmVar 0x56181db57b48 '' 'Timestamp &&'
| `-CompoundStmt 0x56181db58688 <col:7>
|-CXXDestructorDecl 0x56181db57bf8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56181d85e328 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181d85e438 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x56181d85ef28 <col:7>
|   |-CXXMemberCallExpr 0x56181d85eec8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x56181d85ee08 <col:7> '<bound member function type>' .operator= 0x56181d85e4d8
|   | | `-MemberExpr 0x56181d85ed18 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56181db50478
|   | |   `-CXXThisExpr 0x56181d85ed08 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x56181d85edd8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56181db50478
|   |   `-DeclRefExpr 0x56181d85edb8 <col:7> 'const Timestamp' lvalue ParmVar 0x56181d85e438 '' 'const Timestamp &'
|   `-ReturnStmt 0x56181d85ef18 <col:7>
|     `-UnaryOperator 0x56181d85ef00 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56181d85eef0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x56181d85e7d8 <col:7> col:7 implicit operator= 'Timestamp &(Timestamp &&)' inline default trivial noexcept-unevaluated 0x56181d85e7d8
  `-ParmVarDecl 0x56181d85e8e8 <col:7> col:7 'Timestamp &&'

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181dc347f0 <../dummy_inc/clicknet/icmp.h:27:1, line:33:1> line:27:8 referenced struct click_icmp_sequenced definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56181dc34908 <col:1, col:8> col:8 implicit struct click_icmp_sequenced
|-FieldDecl 0x56181dc349a8 <line:28:5, col:13> col:13 referenced icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x56181dc34a08 <line:29:5, col:13> col:13 referenced icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x56181dc34a68 <line:30:5, col:14> col:14 referenced icmp_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x56181dc34ac8 <line:31:5, col:14> col:14 icmp_identifier 'uint16_t':'unsigned short'
`-FieldDecl 0x56181dc34b28 <line:32:5, col:14> col:14 icmp_sequence 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp_sequenced = type { i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_icmp_sequenced = type { i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181d98a8a0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56181d98a9b8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56181d98aa58 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56181d98aab8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56181d98ab18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56181d98abc8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181d98aed0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56181d98afe8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56181d98b090 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56181d98b0f8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56181d98b188 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56181d991220 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56181d991658 <col:12>
|-CXXConstructorDecl 0x56181d991328 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181d991438 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56181d98b090 'data' 'const char *'
| | `-ImplicitCastExpr 0x56181d993be0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56181d993bb0 <col:12> 'const char *const' lvalue .data 0x56181d98b090
| |     `-DeclRefExpr 0x56181d993b90 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d991438 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56181d98b0f8 'length' 'int'
| | `-ImplicitCastExpr 0x56181d993c70 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56181d993c40 <col:12> 'const int' lvalue .length 0x56181d98b0f8
| |     `-DeclRefExpr 0x56181d993c20 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d991438 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56181d98b188 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56181d993d00 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56181d993cd0 <col:12> 'String::memo_t *const' lvalue .memo 0x56181d98b188
| |     `-DeclRefExpr 0x56181d993cb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d991438 '' 'const String::rep_t &'
| `-CompoundStmt 0x56181d993d58 <col:12>
|-CXXConstructorDecl 0x56181d9914d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56181d9914d8
| `-ParmVarDecl 0x56181d9915e8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56181d996b40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56181d9a2558 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56181d9a2668 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56181d9a2b80 <col:12>
|   |-BinaryOperator 0x56181d9a2998 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56181d9a2950 <col:12> 'const char *' lvalue ->data 0x56181d98b090
|   | | `-CXXThisExpr 0x56181d9a2940 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56181d9a2980 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56181d9a2910 <col:12> 'const char *const' lvalue .data 0x56181d98b090
|   |     `-DeclRefExpr 0x56181d9a28f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d9a2668 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56181d9a2a60 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56181d9a2a18 <col:12> 'int' lvalue ->length 0x56181d98b0f8
|   | | `-CXXThisExpr 0x56181d9a2a08 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56181d9a2a48 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56181d9a29d8 <col:12> 'const int' lvalue .length 0x56181d98b0f8
|   |     `-DeclRefExpr 0x56181d9a29b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d9a2668 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56181d9a2b28 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56181d9a2ae0 <col:12> 'String::memo_t *' lvalue ->memo 0x56181d98b188
|   | | `-CXXThisExpr 0x56181d9a2ad0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56181d9a2b10 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56181d9a2aa0 <col:12> 'String::memo_t *const' lvalue .memo 0x56181d98b188
|   |     `-DeclRefExpr 0x56181d9a2a80 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d9a2668 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56181d9a2b70 <col:12>
|     `-UnaryOperator 0x56181d9a2b58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56181d9a2b48 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56181d9a26d8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56181d9a26d8
  `-ParmVarDecl 0x56181d9a27e8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181d981e10 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56181d981f28 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56181d981fb8 <col:16, col:22> col:16 public
|-TypedefDecl 0x56181d981ff8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56181d656dc0 'const char *'
|   `-QualType 0x56181d656311 'const char' const
|     `-BuiltinType 0x56181d656310 'char'
|-TypedefDecl 0x56181d982080 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56181d982050 'String::const_iterator' sugar
|   |-Typedef 0x56181d981ff8 'const_iterator'
|   `-PointerType 0x56181d656dc0 'const char *'
|     `-QualType 0x56181d656311 'const char' const
|       `-BuiltinType 0x56181d656310 'char'
|-TypedefDecl 0x56181d9821f0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56181d982160 'int (String::*)() const'
|   |-RecordType 0x56181d981ea0 'String'
|   | `-CXXRecord 0x56181d981e10 'String'
|   `-ParenType 0x56181d982100 'int () const' sugar
|     `-FunctionProtoType 0x56181d955c90 'int () const' const cdecl
|       `-BuiltinType 0x56181d656370 'int'
|-TypedefDecl 0x56181d982258 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56181d7aa870 'int64_t' sugar
|   |-Typedef 0x56181d6bf2d0 'int64_t'
|   `-TypedefType 0x56181d6984d0 '__int64_t' sugar
|     |-Typedef 0x56181d6980a8 '__int64_t'
|     `-BuiltinType 0x56181d656390 'long'
|-TypedefDecl 0x56181d9822c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56181d7aa790 'uint64_t' sugar
|   |-Typedef 0x56181d6bf470 'uint64_t'
|   `-TypedefType 0x56181d698560 '__uint64_t' sugar
|     |-Typedef 0x56181d698118 '__uint64_t'
|     `-BuiltinType 0x56181d656430 'unsigned long'
|-TypedefDecl 0x56181d982350 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56181d982320 'String::intmax_t' sugar
|   |-Typedef 0x56181d982258 'intmax_t'
|   `-TypedefType 0x56181d7aa870 'int64_t' sugar
|     |-Typedef 0x56181d6bf2d0 'int64_t'
|     `-TypedefType 0x56181d6984d0 '__int64_t' sugar
|       |-Typedef 0x56181d6980a8 '__int64_t'
|       `-BuiltinType 0x56181d656390 'long'
|-TypedefDecl 0x56181d9823e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56181d9823b0 'String::uintmax_t' sugar
|   |-Typedef 0x56181d9822c0 'uintmax_t'
|   `-TypedefType 0x56181d7aa790 'uint64_t' sugar
|     |-Typedef 0x56181d6bf470 'uint64_t'
|     `-TypedefType 0x56181d698560 '__uint64_t' sugar
|       |-Typedef 0x56181d698118 '__uint64_t'
|       `-BuiltinType 0x56181d656430 'unsigned long'
|-CXXConstructorDecl 0x56181d9824a0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56181d982648 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56181d982588 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56181d9827f8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56181d982738 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56181d982950 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56181d9828c0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56181d982b68 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56181d982a18 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56181d982a98 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56181d982d88 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56181d982c38 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56181d982cb8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56181d982fa8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56181d982e58 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56181d982ed8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56181d9831c8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56181d983078 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56181d9830f8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56181d983358 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56181d983290 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56181d9834d8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56181d983418 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56181d983668 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56181d9835a0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56181d9837c0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56181d983730 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56181d983918 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56181d983888 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56181d983a70 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56181d9839e0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56181d983bf8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56181d983b38 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56181d983d88 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56181d983cc0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56181d983f18 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56181d983e50 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56181d9840a8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56181d983fe0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56181d9841a0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56181d9842c8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56181d984448 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56181d984380 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56181d984598 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56181d984508 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56181d984650 <col:63> "" ""
|-CXXMethodDecl 0x56181d984798 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56181d9846d8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56181d9849a8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56181d984858 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56181d9848d8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56181d984bc8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56181d984a70 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56181d984af0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56181d984ea8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56181d984c88 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56181d984d08 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56181d990cf0 <col:55> 'int' 10
| `-ParmVarDecl 0x56181d984d80 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56181d990d10 <col:76> 'bool' true
|-CXXMethodDecl 0x56181d985188 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56181d984f70 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56181d984ff0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56181d990d20 <col:56> 'int' 10
| `-ParmVarDecl 0x56181d985068 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56181d990d40 <col:77> 'bool' true
|-CXXMethodDecl 0x56181d985290 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56181d985358 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56181d985420 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56181d9854c0 <col:20>
| `-OptimizeNoneAttr 0x56181d985518 <col:30>
|-CXXConversionDecl 0x56181d985608 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56181d9856d8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56181d985798 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56181d985888 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56181d985948 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56181d985ac8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56181d985a00 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56181d985c18 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56181d985b88 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56181d985d08 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56181d985dc8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56181d986018 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56181d985e80 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56181d985f00 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56181d986278 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56181d9860e0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56181d986160 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56181d986348 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56181d986558 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56181d986400 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56181d986480 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56181d986778 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56181d986620 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56181d9866a0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56181d986908 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56181d986840 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56181d9869f8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56181d986b68 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56181d986aa8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56181d986d78 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56181d986c28 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56181d986ca8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56181d986f90 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56181d986e38 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56181d986eb0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56181d987120 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56181d987050 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56181d987340 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56181d9871e0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56181d987260 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56181d987490 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56181d987400 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56181d987668 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56181d987550 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56181d9875d0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56181d9877b8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56181d987728 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56181d9879d0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56181d987870 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56181d9878f0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56181d990d50 <col:39> 'int' 0
|-CXXMethodDecl 0x56181d987bf0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56181d987a90 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56181d987b10 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56181d990d70 <col:48> 'int' 0
|-CXXMethodDecl 0x56181d987dd0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56181d987cb0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56181d987d30 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56181d990d90 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56181d987ea0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56181d987f60 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56181d988020 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56181d9880e0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56181d9881a0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56181d988348 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56181d988250 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56181d9884c8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56181d988400 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56181d9886a0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56181d988588 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56181d988818 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56181d988758 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56181d988960 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56181d9888d0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56181d988ab0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56181d988a20 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56181d988c88 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56181d988b70 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56181d988bf0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56181d988e68 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56181d988d50 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56181d988dd0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56181d988fb8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56181d988f28 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56181d9891c8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56181d989078 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56181d9890f8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56181d989328 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56181d989290 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56181d989480 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56181d9893e8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56181d989528 <col:57> "" ""
|-CXXMethodDecl 0x56181d989638 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56181d9895a8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56181d989788 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56181d9896f8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56181d989908 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56181d989840 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56181d9899d0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56181d989a90 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56181d989b50 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56181d989bf0 <col:49> "" ""
|-CXXMethodDecl 0x56181d989c80 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56181d989d40 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56181d989e30 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56181d989ef8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56181d989fb8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56181d98a078 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56181d98a170 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56181d98a238 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56181d98a300 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56181d98a4d8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56181d98a3b8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56181d98a438 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56181d98a700 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56181d98a5a0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56181d98a620 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56181d98a810 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56181d98a878 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56181d98a8a0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56181d98a9b8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56181d98aa58 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56181d98aab8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56181d98ab18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56181d98abc8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56181d98ac30 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56181d98ae68 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56181d98aeb8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181d98ae48 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56181d98ad58 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56181d98ad00 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56181d98ad40 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56181d98ad20 <col:32> 'int' 8
|-CXXRecordDecl 0x56181d98aed0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56181d98afe8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56181d98b090 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56181d98b0f8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56181d98b188 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56181d991220 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56181d991658 <col:12>
| |-CXXConstructorDecl 0x56181d991328 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56181d991438 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56181d98b090 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56181d993be0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56181d993bb0 <col:12> 'const char *const' lvalue .data 0x56181d98b090
| | |     `-DeclRefExpr 0x56181d993b90 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d991438 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56181d98b0f8 'length' 'int'
| | | `-ImplicitCastExpr 0x56181d993c70 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56181d993c40 <col:12> 'const int' lvalue .length 0x56181d98b0f8
| | |     `-DeclRefExpr 0x56181d993c20 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d991438 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56181d98b188 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56181d993d00 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56181d993cd0 <col:12> 'String::memo_t *const' lvalue .memo 0x56181d98b188
| | |     `-DeclRefExpr 0x56181d993cb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d991438 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56181d993d58 <col:12>
| |-CXXConstructorDecl 0x56181d9914d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56181d9914d8
| | `-ParmVarDecl 0x56181d9915e8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56181d996b40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56181d9a2558 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56181d9a2668 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56181d9a2b80 <col:12>
| |   |-BinaryOperator 0x56181d9a2998 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56181d9a2950 <col:12> 'const char *' lvalue ->data 0x56181d98b090
| |   | | `-CXXThisExpr 0x56181d9a2940 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56181d9a2980 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56181d9a2910 <col:12> 'const char *const' lvalue .data 0x56181d98b090
| |   |     `-DeclRefExpr 0x56181d9a28f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d9a2668 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56181d9a2a60 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56181d9a2a18 <col:12> 'int' lvalue ->length 0x56181d98b0f8
| |   | | `-CXXThisExpr 0x56181d9a2a08 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56181d9a2a48 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56181d9a29d8 <col:12> 'const int' lvalue .length 0x56181d98b0f8
| |   |     `-DeclRefExpr 0x56181d9a29b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d9a2668 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56181d9a2b28 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56181d9a2ae0 <col:12> 'String::memo_t *' lvalue ->memo 0x56181d98b188
| |   | | `-CXXThisExpr 0x56181d9a2ad0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56181d9a2b10 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56181d9a2aa0 <col:12> 'String::memo_t *const' lvalue .memo 0x56181d98b188
| |   |     `-DeclRefExpr 0x56181d9a2a80 <col:12> 'const String::rep_t' lvalue ParmVar 0x56181d9a2668 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56181d9a2b70 <col:12>
| |     `-UnaryOperator 0x56181d9a2b58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56181d9a2b48 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56181d9a26d8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56181d9a26d8
|   `-ParmVarDecl 0x56181d9a27e8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56181d98b200 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56181d98b448 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56181d98b268 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56181d98b2e8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56181d98b360 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56181d9911e0 <col:79, line:261:5>
|   |-BinaryOperator 0x56181d990e58 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56181d990df0 <col:2, col:5> 'const char *' lvalue .data 0x56181d98b090
|   | | `-MemberExpr 0x56181d990dc0 <col:2> 'String::rep_t' lvalue ->_r 0x56181d98b200
|   | |   `-CXXThisExpr 0x56181d990db0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56181d990e40 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181d990e20 <col:12> 'const char *' lvalue ParmVar 0x56181d98b268 'data' 'const char *'
|   |-BinaryOperator 0x56181d990f20 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56181d990eb8 <col:2, col:5> 'int' lvalue .length 0x56181d98b0f8
|   | | `-MemberExpr 0x56181d990e88 <col:2> 'String::rep_t' lvalue ->_r 0x56181d98b200
|   | |   `-CXXThisExpr 0x56181d990e78 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56181d990f08 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56181d990ee8 <col:14> 'int' lvalue ParmVar 0x56181d98b2e8 'length' 'int'
|   `-IfStmt 0x56181d9911c8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56181d991040 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56181d991028 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56181d991008 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56181d990fe8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56181d990f80 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56181d98b188
|     |       | `-MemberExpr 0x56181d990f50 <col:7> 'String::rep_t' lvalue ->_r 0x56181d98b200
|     |       |   `-CXXThisExpr 0x56181d990f40 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56181d990fd0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56181d990fb0 <col:17> 'String::memo_t *' lvalue ParmVar 0x56181d98b360 'memo' 'String::memo_t *'
|     `-CallExpr 0x56181d9911a0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56181d991188 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56181d991090 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56181d979e78 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56181d9910f8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56181d98aa58
|         `-ImplicitCastExpr 0x56181d9910e0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56181d9910c0 <col:27> 'String::memo_t *' lvalue ParmVar 0x56181d98b360 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56181d98b6f8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56181d98b518 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56181d98b598 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56181d98b610 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56181d98b200 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56181d991668 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56181d9917f8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56181d991760 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56181d9916d0 <col:2> '<bound member function type>' ->assign_memo 0x56181d98b448
|     | `-ImplicitCastExpr 0x56181d991798 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56181d9916c0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56181d9917b0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56181d991700 <col:14> 'const char *' lvalue ParmVar 0x56181d98b518 'data' 'const char *'
|     |-ImplicitCastExpr 0x56181d9917c8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56181d991720 <col:20> 'int' lvalue ParmVar 0x56181d98b598 'length' 'int'
|     `-ImplicitCastExpr 0x56181d9917e0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56181d991740 <col:28> 'String::memo_t *' lvalue ParmVar 0x56181d98b610 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56181d98b888 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56181d98b7c8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56181d991a50 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56181d9919d0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56181d991820 <col:2> '<bound member function type>' ->assign_memo 0x56181d98b448
|     | `-CXXThisExpr 0x56181d991810 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56181d991a08 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56181d9918a0 <col:14, col:19> 'const char *' lvalue .data 0x56181d98b090
|     |   `-MemberExpr 0x56181d991870 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56181d98b200
|     |     `-DeclRefExpr 0x56181d991850 <col:14> 'const String' lvalue ParmVar 0x56181d98b7c8 'x' 'const String &'
|     |-ImplicitCastExpr 0x56181d991a20 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56181d991920 <col:25, col:30> 'int' lvalue .length 0x56181d98b0f8
|     |   `-MemberExpr 0x56181d9918f0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56181d98b200
|     |     `-DeclRefExpr 0x56181d9918d0 <col:25> 'const String' lvalue ParmVar 0x56181d98b7c8 'x' 'const String &'
|     `-ImplicitCastExpr 0x56181d991a38 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56181d9919a0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56181d98b188
|         `-MemberExpr 0x56181d991970 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56181d98b200
|           `-DeclRefExpr 0x56181d991950 <col:38> 'const String' lvalue ParmVar 0x56181d98b7c8 'x' 'const String &'
|-CXXMethodDecl 0x56181d98b950 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56181d992410 <col:31, line:278:5>
|   `-IfStmt 0x56181d9923f8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56181d991af0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56181d991ad8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56181d991aa8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56181d98b188
|     |     `-MemberExpr 0x56181d991a78 <col:6> 'String::rep_t' lvalue ->_r 0x56181d98b200
|     |       `-CXXThisExpr 0x56181d991a68 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56181d9923d0 <col:15, line:277:2>
|       |-ParenExpr 0x56181d991fa0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56181d991f70 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56181d991c00 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56181d991be8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56181d991bd0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56181d991b90 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56181d98aa58
|       |   |       `-ImplicitCastExpr 0x56181d991b78 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56181d991b48 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56181d98b188
|       |   |           `-MemberExpr 0x56181d991b18 <col:27> 'String::rep_t' lvalue ->_r 0x56181d98b200
|       |   |             `-CXXThisExpr 0x56181d991b08 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56181d991c60 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56181d991c40 <col:54> 'int' 0
|       |   `-CallExpr 0x56181d991ed0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56181d991eb8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56181d991e38 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56181d6f10d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56181d991f10 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56181d991d48 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56181d991f28 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56181d991d78 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56181d991f40 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56181d991db0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56181d991f58 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56181d991e20 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56181d991e08 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56181d991dd0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56181d9922f0 <line:274:6, line:275:22>
|       | |-CallExpr 0x56181d9921b0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56181d992198 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56181d992110 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56181d97b2c0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56181d9920e0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56181d98aa58
|       | |   `-ImplicitCastExpr 0x56181d9920c8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56181d992098 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56181d98b188
|       | |       `-MemberExpr 0x56181d992068 <col:40> 'String::rep_t' lvalue ->_r 0x56181d98b200
|       | |         `-CXXThisExpr 0x56181d992058 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56181d9922b0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56181d992298 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56181d9921d8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56181d990130 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56181d9922d8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56181d992238 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56181d98b188
|       |       `-MemberExpr 0x56181d992208 <col:15> 'String::rep_t' lvalue ->_r 0x56181d98b200
|       |         `-CXXThisExpr 0x56181d9921f8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56181d9923b0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56181d992348 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56181d98b188
|         | `-MemberExpr 0x56181d992318 <col:6> 'String::rep_t' lvalue ->_r 0x56181d98b200
|         |   `-CXXThisExpr 0x56181d992308 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56181d992398 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56181d992378 <col:16> 'int' 0
|-CXXMethodDecl 0x56181d98bbe8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56181d98ba08 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56181d98ba88 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56181d98bb00 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56181d98bcc0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56181d98bf10 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56181d98bd78 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56181d98bdf8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56181d98be70 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56181d98c0f8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56181d98bfe0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56181d98c060 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56181d98c1f8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56181d9924e8 <col:41, line:286:5>
|   `-ReturnStmt 0x56181d9924d8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56181d9924a8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56181d992470 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56181d992458 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56181d992438 <col:46> 'int' 1
|-CXXMethodDecl 0x56181d98c498 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56181d98c2b0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56181d98c330 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56181d98c3b0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56181d990130 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56181d98c560 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56181d990200 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56181d9903d0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56181d9902b8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56181d990338 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56181d990490 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56181d990558 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56181d990658 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56181d9906d0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56181d990748 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56181d9907b0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56181d9908b0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56181d990900 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181d990890 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56181d990870 <col:22> 'int' 14
|-CXXMethodDecl 0x56181d990b18 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56181d990930 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56181d9909b0 <col:38> col:41 'int'
| `-ParmVarDecl 0x56181d990a30 <col:43> col:46 'int'
|-FriendDecl 0x56181d990c20 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56181d990cb0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56181dbfde80 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x56181dbfe058 prev 0x56181dbfde80 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56181dbfe0e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56181dbfe110 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56181d656370 'int'
|-TypedefDecl 0x56181dbffa70 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x56181dbffa20 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x56181dbffa00 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x56181dbfe328 'type'
|     `-SubstTemplateTypeParmType 0x56181dbfe2f0 'String' sugar
|       |-TemplateTypeParmType 0x56181d9456b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56181d945660 'T'
|       `-RecordType 0x56181d981ea0 'String'
|         `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dbffb28 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x56181dbffaf0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x56181dbffad0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56181dbffa70 'type'
|     `-ElaboratedType 0x56181dbffa20 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x56181dbffa00 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x56181dbfe328 'type'
|         `-SubstTemplateTypeParmType 0x56181dbfe2f0 'String' sugar
|           |-TemplateTypeParmType 0x56181d9456b0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56181d945660 'T'
|           `-RecordType 0x56181d981ea0 'String'
|             `-CXXRecord 0x56181d981e10 'String'
|-CXXMethodDecl 0x56181dbffca8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x56181dbffbb8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x56181dbffd98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56181dbffe78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56181dbffe78
|-CXXMethodDecl 0x56181dc00148 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56181dc00050 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x56181dc00388 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56181dc00200 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56181dc00278 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56181dc00558 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56181dc00448 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56181dc004c0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56181dc006b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56181dc00788 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56181dc009d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56181dc00848 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56181dc008c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56181dc00c38 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x56181dc00aa8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56181dc00b20 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56181dc04e38 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56181dc00d08 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56181dc04ff8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56181dc04f00 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56181dc050b0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56181dc05160 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56181dc05398 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56181dc05210 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56181dc05288 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56181dc05638 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56181dc05540 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x56181dc05700 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x56181dc05750 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56181dc057a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56181dbb9640 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x56181dbfc8e8 prev 0x56181dbb9640 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56181dbfddf0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x56181dbfdda0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x56181dbfdd80 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56181dbfdc30 'type'
|     `-SubstTemplateTypeParmType 0x56181dbfdac0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x56181d91b460 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56181d91b408 'F'
|       `-RecordType 0x56181dbfd720 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x56181dbfd640 'typed_array_memory'
|-FieldDecl 0x56181dc057f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x56181dc05840 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56181dc05878 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x56181dbfc980 'String' sugar
|   |-TemplateTypeParmType 0x56181d9529d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56181d952978 'T'
|   `-RecordType 0x56181d981ea0 'String'
|     `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dc05908 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x56181dc058d0 'String &'
|   `-SubstTemplateTypeParmType 0x56181dbfc980 'String' sugar
|     |-TemplateTypeParmType 0x56181d9529d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56181d952978 'T'
|     `-RecordType 0x56181d981ea0 'String'
|       `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dc05998 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x56181dc05960 'const String &'
|   `-QualType 0x56181dbfc981 'const String' const
|     `-SubstTemplateTypeParmType 0x56181dbfc980 'String' sugar
|       |-TemplateTypeParmType 0x56181d9529d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56181d952978 'T'
|       `-RecordType 0x56181d981ea0 'String'
|         `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dc05a28 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x56181dc059f0 'String *'
|   `-SubstTemplateTypeParmType 0x56181dbfc980 'String' sugar
|     |-TemplateTypeParmType 0x56181d9529d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56181d952978 'T'
|     `-RecordType 0x56181d981ea0 'String'
|       `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dc05ab8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x56181dc05a80 'const String *'
|   `-QualType 0x56181dbfc981 'const String' const
|     `-SubstTemplateTypeParmType 0x56181dbfc980 'String' sugar
|       |-TemplateTypeParmType 0x56181d9529d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56181d952978 'T'
|       `-RecordType 0x56181d981ea0 'String'
|         `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dc06710 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x56181dc066c0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x56181dc066a0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x56181dc065d8 'type'
|     `-LValueReferenceType 0x56181dc065a0 'const String &'
|       `-QualType 0x56181dc06341 'const String' const
|         `-SubstTemplateTypeParmType 0x56181dc06340 'String' sugar
|           |-TemplateTypeParmType 0x56181d9253b0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56181d925358 'T'
|           `-RecordType 0x56181d981ea0 'String'
|             `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dc06778 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x56181dc05960 'const String &'
|   `-QualType 0x56181dbfc981 'const String' const
|     `-SubstTemplateTypeParmType 0x56181dbfc980 'String' sugar
|       |-TemplateTypeParmType 0x56181d9529d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56181d952978 'T'
|       `-RecordType 0x56181d981ea0 'String'
|         `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dc067d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56181d656370 'int'
|-TypedefDecl 0x56181dc06838 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x56181dc059f0 'String *'
|   `-SubstTemplateTypeParmType 0x56181dbfc980 'String' sugar
|     |-TemplateTypeParmType 0x56181d9529d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56181d952978 'T'
|     `-RecordType 0x56181d981ea0 'String'
|       `-CXXRecord 0x56181d981e10 'String'
|-TypedefDecl 0x56181dc068a0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x56181dc05a80 'const String *'
|   `-QualType 0x56181dbfc981 'const String' const
|     `-SubstTemplateTypeParmType 0x56181dbfc980 'String' sugar
|       |-TemplateTypeParmType 0x56181d9529d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56181d952978 'T'
|       `-RecordType 0x56181d981ea0 'String'
|         `-CXXRecord 0x56181d981e10 'String'
|-EnumDecl 0x56181dc068f8 <line:134:5> col:5
| `-EnumConstantDecl 0x56181dc069f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56181dc069d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56181d954058 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56181d954030 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56181d954010 <col:40> 'int' 1
|-CXXConstructorDecl 0x56181dc06a78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56181dc06d08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56181dc06b30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56181dc06bd0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x56181dc06f98 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x56181dc06e80 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x56181dc07258 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x56181dc07140 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x56181dc07570 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x56181dc07450 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x56181dc07880 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x56181dc07760 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x56181dc07b70 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56181dc079b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56181dc07a30 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56181dc07c98 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56181dc07d48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56181dc07da0 <col:30> Inherited
|-CXXMethodDecl 0x56181dc07de8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56181dc07e98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56181dc07ef0 <col:30> Inherited
|-CXXMethodDecl 0x56181dc07fb8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56181dc08068 <col:20> Inherited
| `-OptimizeNoneAttr 0x56181dc080c0 <col:30> Inherited
|-CXXMethodDecl 0x56181dc08108 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56181dc081b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56181dc08210 <col:30> Inherited
|-CXXMethodDecl 0x56181dc08258 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56181dc08308 <col:20> Inherited
| `-OptimizeNoneAttr 0x56181dc08360 <col:30> Inherited
|-CXXMethodDecl 0x56181dc083a8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56181dc08458 <col:20> Inherited
| `-OptimizeNoneAttr 0x56181dc084b0 <col:30> Inherited
|-CXXMethodDecl 0x56181dc084d8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56181dc08588 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56181dc08638 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56181dc087f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56181dc086e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56181dc08760 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56181dc08948 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56181dc088b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56181dc08af8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x56181dc08a00 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56181dc08bb0 <col:20>
| `-OptimizeNoneAttr 0x56181dc08c08 <col:30>
|-CXXMethodDecl 0x56181dc08d28 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x56181dc08c30 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56181dc08de0 <col:20>
| `-OptimizeNoneAttr 0x56181dc08e38 <col:30>
|-CXXMethodDecl 0x56181dc08ef0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56181dc08e60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56181dc09038 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56181dc08fa8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56181dc09168 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x56181dc09268 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x56181dc09338 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x56181dc09408 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x56181dc09548 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56181dc094b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56181dc09690 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56181dc09600 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56181dc097d8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x56181dc09748 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56181dc09890 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56181dc09990 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56181dc09900 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56181dc09a48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56181dc09b08 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x56181dc09c08 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x56181dc09d88 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56181dc09cc8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x56181dc0a548 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56181dc09e40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x56181dc0a4a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x56181dc0a3a8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x56181dc0a628 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56181dc0a778 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56181dc0a6e8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56181dc0a830 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56181dc0aa78 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56181dc0a8f0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56181dc0a968 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56181dc0ac08 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x56181dc0ab48 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56181dc0ae18 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x56181dc0acd0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56181dc0ad48 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56181dc0aed8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56181dc0b138 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x56181dc0b040 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x56181dc0b208 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56181dc0b208

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56181dc1fd58 prev 0x56181dbd01a8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56181dc1fe50 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x56181dc1fee0 <col:22, col:28> col:22 public
|-EnumDecl 0x56181dc1ff08 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x56181dc20028 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc20008 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x56181dc1fff0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56181dc1ffd0 <col:14> 'int' 999
| |-EnumConstantDecl 0x56181dc200d0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc200b0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x56181dc20098 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56181dc20078 <col:14> 'int' 1
| |-EnumConstantDecl 0x56181dc20160 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc20140 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x56181dc20120 <col:17> 'int' 0
| |-EnumConstantDecl 0x56181dc201f0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc201d0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x56181dc201b0 <col:13> 'int' 1
| |-EnumConstantDecl 0x56181dc20280 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc20260 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x56181dc20240 <col:16> 'int' 2
| |-EnumConstantDecl 0x56181dc20310 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc202f0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x56181dc202d0 <col:13> 'int' 3
| |-EnumConstantDecl 0x56181dc203a0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc20380 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x56181dc20360 <col:15> 'int' 4
| |-EnumConstantDecl 0x56181dc20430 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc20410 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x56181dc203f0 <col:14> 'int' 5
| |-EnumConstantDecl 0x56181dc204c0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x56181dc204a0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x56181dc20480 <col:12> 'int' 6
| `-EnumConstantDecl 0x56181dc20550 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x56181dc20530 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x56181dc20510 <col:13> 'int' 7
|-VarDecl 0x56181dc205c0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x56181dc20648 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x56181dc206d0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x56181dc20758 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x56181dc207e0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x56181dc20868 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x56181dc208f0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x56181dc20978 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x56181dc20a00 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x56181dc20a88 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x56181dc20b10 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x56181dc20c10 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x56181dc25f88 '_nerrors' 'int'
| | `-IntegerLiteral 0x56181dc26718 <line:128:13> 'int' 0
| `-CompoundStmt 0x56181dc26788 <col:16, line:129:5>
|-CXXDestructorDecl 0x56181dc20d00 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x56181dc26798 <col:29, line:132:5>
|-CXXMethodDecl 0x56181dc20eb8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x56181dc20df0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56181dc20f80 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56181dc21068 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56181dc267f0 <col:44, line:161:5>
|   `-ReturnStmt 0x56181dc267e0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x56181dc267c8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56181dc267a8 <col:9> 'ErrorHandler *' lvalue Var 0x56181dc25fe8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x56181dc211d8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x56181dc21118 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56181dc212a0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56181dc26850 <col:43, line:173:5>
|   `-ReturnStmt 0x56181dc26840 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x56181dc26828 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56181dc26808 <col:9> 'ErrorHandler *' lvalue Var 0x56181dc26060 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x56181dc21358 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x56181dc213d8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x56181dc214e8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x56181dc21458 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x56181dc21638 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x56181dc215a8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x56181dc21790 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x56181dc216f8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x56181dc218e8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x56181dc21850 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56181dc21a40 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x56181dc219a8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56181dc21c50 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56181dc21af8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x56181dc21b78 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x56181dc21e28 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56181dc21d10 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x56181dc21d90 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x56181dc22048 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56181dc21ee8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x56181dc21f68 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x56181dc22228 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56181dc22108 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56181dc22188 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56181dc22408 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56181dc222e8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56181dc22368 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56181dc22590 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x56181dc224c8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x56181dc22760 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x56181dc22648 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56181dc226c0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x56181dc26aa8 <col:57, line:234:5>
|   `-ReturnStmt 0x56181dc26a98 <line:233:2, col:41>
|     `-ExprWithCleanups 0x56181dc26a80 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56181dc26a28 <col:9, col:41> 'int'
|         |-MemberExpr 0x56181dc269f8 <col:9> '<bound member function type>' ->xmessage 0x56181dc22590
|         | `-CXXThisExpr 0x56181dc269e8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x56181dc26a68 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56181dc26a50 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56181dc269c8 <col:18, col:40> 'String' (CXXTemporary 0x56181dc269c8)
|               `-CallExpr 0x56181dc26990 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x56181dc26978 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x56181dc268f0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56181dc247b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x56181dc26910 <col:31> 'const String' lvalue ParmVar 0x56181dc226c0 'str' 'const String &'
|                 `-DeclRefExpr 0x56181dc26930 <col:36> 'const String' lvalue ParmVar 0x56181dc22648 'anno' 'const String &'
|-CXXMethodDecl 0x56181dc22aa0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56181dc22820 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56181dc228a0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x56181dc22970 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56181dc26d38 <col:68, line:243:5>
|   `-ReturnStmt 0x56181dc26d28 <line:242:2, col:41>
|     `-ExprWithCleanups 0x56181dc26d10 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56181dc26cb0 <col:9, col:41> 'int'
|         |-MemberExpr 0x56181dc26c80 <col:9> '<bound member function type>' ->xmessage 0x56181dc22760
|         | `-CXXThisExpr 0x56181dc26c70 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56181dc26b48 <col:18> 'const String' lvalue ParmVar 0x56181dc22820 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56181dc26cf8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56181dc26ce0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56181dc26c50 <col:24, col:40> 'String' (CXXTemporary 0x56181dc26c50)
|               `-CXXMemberCallExpr 0x56181dc26be8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x56181dc26b78 <col:24> '<bound member function type>' ->vformat 0x56181dc23c80
|                 | `-CXXThisExpr 0x56181dc26b68 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56181dc26c18 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56181dc26ba8 <col:32> 'const char *' lvalue ParmVar 0x56181dc228a0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56181dc26c30 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56181dc26bc8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56181dc22970 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56181dc22d40 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x56181dc22b68 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56181dc22be0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56181dc22c58 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x56181dc27088 <col:23, line:254:5>
|   `-ReturnStmt 0x56181dc27078 <line:253:2, col:71>
|     `-ExprWithCleanups 0x56181dc27060 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x56181dc27000 <col:9, col:71> 'int'
|         |-MemberExpr 0x56181dc26fd0 <col:9> '<bound member function type>' ->xmessage 0x56181dc22760
|         | `-CXXThisExpr 0x56181dc26fc0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x56181dc27048 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x56181dc27030 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x56181dc26f80 <col:18, col:65> 'String' (CXXTemporary 0x56181dc26f80)
|         |     `-CallExpr 0x56181dc26f18 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x56181dc26f00 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x56181dc26dd8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56181dc247b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x56181dc26df8 <col:31> 'const String' lvalue ParmVar 0x56181dc22be0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x56181dc26f60 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x56181dc26f48 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x56181dc26ee0 <col:37, col:64> 'String' (CXXTemporary 0x56181dc26ee0)
|         |             `-CallExpr 0x56181dc26eb0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x56181dc26e98 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x56181dc26e30 <col:37> 'String (const String &)' lvalue CXXMethod 0x56181dc24e08 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x56181dc26e50 <col:56> 'const String' lvalue ParmVar 0x56181dc22b68 'landmark' 'const String &'
|         `-DeclRefExpr 0x56181dc26fa0 <col:68> 'const String' lvalue ParmVar 0x56181dc22c58 'str' 'const String &'
|-CXXMethodDecl 0x56181dc230c0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56181dc22e08 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56181dc22e80 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56181dc22f00 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x56181dc22f78 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56181dc27340 <col:34, line:267:5>
|   `-ReturnStmt 0x56181dc27330 <line:266:2, col:51>
|     `-ExprWithCleanups 0x56181dc27318 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x56181dc272b0 <col:9, col:51> 'int'
|         |-MemberExpr 0x56181dc27280 <col:9> '<bound member function type>' ->xmessage 0x56181dc22d40
|         | `-CXXThisExpr 0x56181dc27270 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56181dc27128 <col:18> 'const String' lvalue ParmVar 0x56181dc22e08 'landmark' 'const String &'
|         |-DeclRefExpr 0x56181dc27148 <col:28> 'const String' lvalue ParmVar 0x56181dc22e80 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56181dc27300 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x56181dc272e8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56181dc27250 <col:34, col:50> 'String' (CXXTemporary 0x56181dc27250)
|               `-CXXMemberCallExpr 0x56181dc271e8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x56181dc27178 <col:34> '<bound member function type>' ->vformat 0x56181dc23c80
|                 | `-CXXThisExpr 0x56181dc27168 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56181dc27218 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56181dc271a8 <col:42> 'const char *' lvalue ParmVar 0x56181dc22f00 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56181dc27230 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56181dc271c8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56181dc22f78 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56181dc231d0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x56181dc273c0 <col:25, line:288:5>
|   `-ReturnStmt 0x56181dc273b0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x56181dc27398 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x56181dc27368 <col:9> 'const int' lvalue ->_nerrors 0x56181dc25f88
|         `-CXXThisExpr 0x56181dc27358 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x56181dc233e0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x56181dc23288 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x56181dc23308 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x56181dc236c8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56181dc234a8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x56181dc23528 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x56181dc235a0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56181dc23860 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x56181dc23798 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x56181dc23aa8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56181dc23920 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x56181dc23998 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56181dc27620 <col:58, line:357:5>
|   `-ReturnStmt 0x56181dc27610 <line:356:2, col:29>
|     `-ExprWithCleanups 0x56181dc275f8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x56181dc275c8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56181dc275b0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56181dc27590 <col:9, col:29> 'String' (CXXTemporary 0x56181dc27590)
|             `-CallExpr 0x56181dc27520 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x56181dc27508 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56181dc27488 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x56181dc236c8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x56181dc27428 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x56181dc27558 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x56181dc27448 <col:21> 'const char *' lvalue ParmVar 0x56181dc23920 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x56181dc27570 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x56181dc27468 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56181dc23998 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56181dc23c80 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x56181dc23b70 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x56181dc23be8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56181dc23dd8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x56181dc23d48 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x56181dc23f20 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x56181dc23e90 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x56181dc241c0 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x56181dc23fd8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x56181dc24058 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x56181dc240d0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x56181dc24320 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x56181dc24290 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x56181dc27738 <col:37, line:441:5>
|   `-IfStmt 0x56181dc27720 <line:439:2, line:440:8>
|     |-BinaryOperator 0x56181dc276a8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x56181dc27678 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x56181dc27638 <col:6> 'int' lvalue ParmVar 0x56181dc24290 'level' 'int'
|     | `-ImplicitCastExpr 0x56181dc27690 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x56181dc27658 <col:15> 'ErrorHandler::Level' EnumConstant 0x56181dc20310 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x56181dc27708 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x56181dc276d8 <col:8> 'int' lvalue ->_nerrors 0x56181dc25f88
|         `-CXXThisExpr 0x56181dc276c8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x56181dc243e8 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x56181dc277d0 <col:26, line:448:5>
|   `-BinaryOperator 0x56181dc277b0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x56181dc27760 <col:2> 'int' lvalue ->_nerrors 0x56181dc25f88
|     | `-CXXThisExpr 0x56181dc27750 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x56181dc27790 <col:13> 'int' 0
|-CXXMethodDecl 0x56181dc245b0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x56181dc244a0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56181dc24518 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x56181dc247b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x56181dc24670 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x56181dc246e8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x56181dc24a68 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x56181dc24878 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x56181dc248f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x56181dc24978 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x56181dc24b20 <col:59> 0 0
|-CXXMethodDecl 0x56181dc24cb8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x56181dc24b98 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x56181dc24c18 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x56181dc27e40 <col:70, line:534:5>
|   |-DeclStmt 0x56181dc27940 <line:528:2, col:20>
|   | |-VarDecl 0x56181dc277f8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x56181dc27860 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x56181dc27898 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x56181dc27900 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x56181dc27a10 <line:529:2, col:23>
|   | `-VarDecl 0x56181dc27970 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x56181dc279f8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56181dc279d8 <col:18> 'const char *' lvalue ParmVar 0x56181dc24b98 'begin' 'const char *'
|   |-DoStmt 0x56181dc27dd8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x56181dc27d08 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x56181dc27cf0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x56181dc27cd0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x56181dc27a28 <col:6> 'const char *' lvalue Var 0x56181dc27970 'x' 'const char *'
|   | |     `-CallExpr 0x56181dc27c20 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x56181dc27c08 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x56181dc27bc0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x56181dc26460 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x56181dc27c88 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x56181dc27c70 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x56181dc27ae0 <col:20, col:27> 'String' (CXXTemporary 0x56181dc27ae0)
|   | |       |     `-CXXTemporaryObjectExpr 0x56181dc27aa8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x56181dc27ca0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56181dc27b00 <col:30> 'const char *' lvalue Var 0x56181dc27970 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x56181dc27cb8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56181dc27b20 <col:33> 'const char *' lvalue ParmVar 0x56181dc24c18 'end' 'const char *'
|   | |       |-UnaryOperator 0x56181dc27b60 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56181dc27b40 <col:39> 'String' lvalue Var 0x56181dc277f8 'name' 'String'
|   | |       |-UnaryOperator 0x56181dc27b98 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56181dc27b78 <col:46> 'String' lvalue Var 0x56181dc27898 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x56181dc27bb0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x56181dc27dc0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x56181dc27da8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x56181dc27d88 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x56181dc27d58 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56181d985608
|   |         `-ImplicitCastExpr 0x56181dc27d40 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x56181dc27d20 <col:11> 'String' lvalue Var 0x56181dc277f8 'name' 'String'
|   `-ReturnStmt 0x56181dc27e30 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x56181dc27e18 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56181dc27df8 <col:9> 'const char *' lvalue Var 0x56181dc27970 'x' 'const char *'
|-CXXMethodDecl 0x56181dc24e08 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x56181dc24d78 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x56181dc28448 <col:55, line:550:5>
|   `-IfStmt 0x56181dc28420 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x56181dc28080 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x56181dc28068 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56181dc28050 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56181dc28030 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56181dc28000 <col:6> '<bound member function type>' .operator int (String::*)() const 0x56181d985608
|     | |       `-DeclRefExpr 0x56181dc27ea0 <col:6> 'const String' lvalue ParmVar 0x56181dc24d78 'x' 'const String &'
|     | `-BinaryOperator 0x56181dc27fe0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x56181dc27fb0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x56181dc27f60 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x56181dc27f48 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x56181dc27f00 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x56181d99ee40 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x56181dc27ec0 <col:11> 'const String' lvalue ParmVar 0x56181dc24d78 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x56181dc27ee0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x56181dc27fc8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x56181dc27f98 <col:19> 'char' 123
|     |-ReturnStmt 0x56181dc280f0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x56181dc280c0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x56181dc280a0 <col:13> 'const String' lvalue ParmVar 0x56181dc24d78 'x' 'const String &'
|     `-IfStmt 0x56181dc283f8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x56181dc28188 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56181dc28170 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56181dc28150 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56181dc28120 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56181d985608
|       |       `-DeclRefExpr 0x56181dc28100 <col:11> 'const String' lvalue ParmVar 0x56181dc24d78 'x' 'const String &'
|       |-ReturnStmt 0x56181dc28310 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x56181dc282f8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x56181dc282c8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x56181dc282b0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x56181dc28290 <col:13, col:29> 'String' (CXXTemporary 0x56181dc28290)
|       |         `-CallExpr 0x56181dc28240 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x56181dc28228 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x56181dc281a0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x56181dc245b0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x56181dc28270 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x56181dc281c0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x56181dc281e0 <col:28> 'const String' lvalue ParmVar 0x56181dc24d78 'x' 'const String &'
|       `-ReturnStmt 0x56181dc283e8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x56181dc283d0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x56181dc283a0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x56181dc28388 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x56181dc28368 <col:13, col:20> 'String' (CXXTemporary 0x56181dc28368)
|                 `-CXXTemporaryObjectExpr 0x56181dc28330 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x56181dc24fd0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x56181dc24ec0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x56181dc24f38 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56181dc26708 <col:71> 'bool' false
|-CXXRecordDecl 0x56181dc25080 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x56181dc25378 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x56181dc25310 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x56181dc252b0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x56181dc25270 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x56181d981ea0 'String'
|       | `-CXXRecord 0x56181d981e10 'String'
|       |-BuiltinType 0x56181d656370 'int'
|       `-DecayedType 0x56181dc22940 '__va_list_tag *' sugar
|         |-TypedefType 0x56181dc22910 'va_list' sugar
|         | |-Typedef 0x56181d872f50 'va_list'
|         | `-TypedefType 0x56181d872f00 '__gnuc_va_list' sugar
|         |   |-Typedef 0x56181d7aab28 '__gnuc_va_list'
|         |   `-TypedefType 0x56181d7aaa90 '__builtin_va_list' sugar
|         |     |-Typedef 0x56181d697bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x56181d697b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x56181d6570c0 '__va_list_tag'
|         |         `-CXXRecord 0x56181d657028 '__va_list_tag'
|         `-PointerType 0x56181d8787f0 '__va_list_tag *'
|           `-RecordType 0x56181d6570c0 '__va_list_tag'
|             `-CXXRecord 0x56181d657028 '__va_list_tag'
|-EnumDecl 0x56181dc253d0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x56181dc254d0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25a30 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc254b0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x56181dc25490 <col:16> 'int' 1
| |-EnumConstantDecl 0x56181dc25560 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25a48 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc25540 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x56181dc25520 <col:21> 'int' 2
| |-EnumConstantDecl 0x56181dc255f0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25a60 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc255d0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x56181dc255b0 <col:22> 'int' 4
| |-EnumConstantDecl 0x56181dc25680 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25a78 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc25660 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x56181dc25640 <col:17> 'int' 8
| |-EnumConstantDecl 0x56181dc25710 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25a90 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc256f0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x56181dc256d0 <col:22> 'int' 16
| |-EnumConstantDecl 0x56181dc257a0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25aa8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc25780 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56181dc25760 <col:19> 'int' 32
| |-EnumConstantDecl 0x56181dc25830 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25ac0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc25810 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x56181dc257f0 <col:17> 'int' 64
| |-EnumConstantDecl 0x56181dc258c0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25ad8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc258a0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x56181dc25880 <col:14> 'int' 128
| |-EnumConstantDecl 0x56181dc25950 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56181dc25af0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56181dc25930 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x56181dc25910 <col:16> 'int' 256
| `-EnumConstantDecl 0x56181dc259e0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x56181dc25b08 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56181dc259c0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x56181dc259a0 <col:12> 'int' 1024
|-CXXMethodDecl 0x56181dc25d18 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x56181dc25b30 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x56181dc25bd0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x56181dc25ea0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x56181dc25dd8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x56181dc25f48 <line:580:3, col:10> col:3 private
|-FieldDecl 0x56181dc25f88 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x56181dc25fe8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x56181dc26060 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x56181dc26460 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x56181dc260d8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x56181dc26158 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x56181dc261d8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x56181dc26250 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x56181dc262c8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x56181dc26340 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x56181dc26588 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x56181dc26588
| `-ParmVarDecl 0x56181dc26698 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x56181dc287a8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x56181dc287a8
  `-ParmVarDecl 0x56181dc288b8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
