
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d7c3948 prev 0x56157d7bb0e8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56157d7c3a40 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56157d7c3ad0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56157d7c3b48 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56157d7c3c08 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56157d7c3cd0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56157d7c3e48 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56157d7c3d80 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56157d7c3ef0 <col:24>
| `-OptimizeNoneAttr 0x56157d7c3f48 <col:34>
|-CXXMethodDecl 0x56157d7c3f90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56157d7c4248 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56157d7c4040 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56157d7c40b8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56157d7c4138 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56157d7c4300 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56157d7c4338 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56157d7c43a0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56157d7c4428 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56157d7c4748 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56157d7c44e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56157d7c4558 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56157d7c45d0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56157d7c4650 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56157d7c4860 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56157d7cc1d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56157d7cc1d8
| `-ParmVarDecl 0x56157d7cc2e8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56157d7cc388 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56157d7cc388
| `-ParmVarDecl 0x56157d7cc498 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56157d7d0050 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d7b6960 prev 0x56157d7b66e0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56157d7b6a58 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56157d7b6ae8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56157d7b6b48 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x56157d7b6c38 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x56157d7b6d38 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56157d7b6f08 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56157d7b6db8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56157d7b6e30 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56157d7b7098 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56157d7b6fd0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56157d7b7140 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56157d7b7278 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56157d7b71b0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56157d7b7418 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56157d7b7358 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56157d7b75b8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56157d7b74f8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56157d7b7660 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56157d7b7760 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56157d7b7840 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7b7740 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56157d7b7720 <col:26> 'int' 1
| `-EnumConstantDecl 0x56157d7b77f0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56157d7b7858 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d7b77d0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56157d7b77b0 <col:44> 'int' 2
|-CXXMethodDecl 0x56157d7b79a0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56157d7b7888 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56157d7b7908 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56157d7b7af8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56157d7b7a68 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56157d7b7d38 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56157d7b7bb8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56157d7b7c30 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56157d7b7de8 <col:20>
| `-OptimizeNoneAttr 0x56157d7b7e40 <col:30>
|-CXXMethodDecl 0x56157d7b7f48 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56157d7b7e80 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56157d7b7ff0 <col:20>
| `-OptimizeNoneAttr 0x56157d7b8048 <col:30>
|-CXXMethodDecl 0x56157d7b8098 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56157d7b8160 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56157d7b8278 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56157d7b8300 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56157d7b8388 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56157d7b8410 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x56157d7b8498 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56157d7b8528 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56157d7b85e8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56157d7b8670 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x56157d7b86f8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56157d7b8780 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56157d7b8808 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56157d7b8890 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56157d7b8920 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56157d7b89e0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56157d7b8a70 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56157d7b8bc0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56157d7b8b28 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56157d7b8d50 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56157d7b8c80 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56157d7b9000 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56157d7b8e08 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56157d7b8e88 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56157d7b8f08 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56157d7b90b8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56157d7b91c0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56157d7b9450 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7b91a0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56157d7b9180 <col:33> 'int' 0
| |-EnumConstantDecl 0x56157d7b9250 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56157d7b9468 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7b9230 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56157d7b9210 <col:32> 'int' 20
| |-EnumConstantDecl 0x56157d7b92e0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56157d7b9480 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7b92c0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56157d7b92a0 <col:38> 'int' 90
| |-EnumConstantDecl 0x56157d7b9370 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56157d7b9498 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7b9350 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56157d7b9330 <col:35> 'int' 100
| `-EnumConstantDecl 0x56157d7b9400 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56157d7b94b0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d7b93e0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56157d7b93c0 <col:32> 'int' 2000
|-CXXMethodDecl 0x56157d7b94f0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56157d7b9930 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56157d7b97a0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56157d7b9818 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56157d7b9a00 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56157d7b9b80 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56157d7b9ab0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56157d7b9d88 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56157d7b9c38 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56157d7b9cb0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56157d7b9e88 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56157d7b9f28 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56157d7b9ff0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56157d7ba080 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56157d7ba2b0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7ba060 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56157d7ba040 <col:36> 'int' EnumConstant 0x56157d7b9ff0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56157d7ba0d0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56157d7ba120 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56157d7ba170 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56157d7ba1c0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56157d7ba210 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56157d7ba260 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56157d7ba398 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56157d7ba2d8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56157d7ba460 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56157d7ba520 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56157d7ba5e0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56157d7ba6a0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56157d7ba7b8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56157d7ba880 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x56157d7baa00 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56157d7ba930 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56157d7bab28 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56157d7bad28 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56157d7babd8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56157d7bac58 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56157d7c8678 <col:54, line:127:5>
|   |-ParenExpr 0x56157d7c8528 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56157d7c84f8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56157d7c81e8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56157d7c81c0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56157d7c81a8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56157d7c8190 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56157d7c8160 <col:31> 'Router *' lvalue ->_router 0x56157d7c6040
|   |   |         `-CXXThisExpr 0x56157d7c8150 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56157d7c8248 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d7c8228 <col:48> 'int' 0
|   |   `-CallExpr 0x56157d7c8458 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56157d7c8440 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d7c8420 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d7c8498 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d7c82b8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56157d7c84b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d7c82d8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56157d7c84c8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d7c8310 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56157d7c84e0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d7c8408 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d7c83f0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d7c83a8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56157d7c85c0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56157d7c8558 <col:9> 'Router *' lvalue ->_router 0x56157d7c6040
|   | | `-CXXThisExpr 0x56157d7c8548 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56157d7c85a8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56157d7c8588 <col:19> 'Router *' lvalue ParmVar 0x56157d7babd8 'r' 'Router *'
|   `-BinaryOperator 0x56157d7c8658 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56157d7c85f0 <col:9> 'int' lvalue ->_eindex 0x56157d7c60a8
|     | `-CXXThisExpr 0x56157d7c85e0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56157d7c8640 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56157d7c8620 <col:19> 'int' lvalue ParmVar 0x56157d7bac58 'eindex' 'int'
|-CXXMethodDecl 0x56157d7baeb0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56157d7bade8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56157d7baf80 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56157d7bb048 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56157d7bb0e8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56157d7bb338 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56157d7bb1b0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56157d7bb230 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56157d7bb3e8 <col:20>
| `-OptimizeNoneAttr 0x56157d7bb440 <col:30>
|-CXXMethodDecl 0x56157d7bb548 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56157d7bb480 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56157d7bb5f0 <col:20>
| `-OptimizeNoneAttr 0x56157d7bb648 <col:30>
|-CXXMethodDecl 0x56157d7bb718 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56157d7bb688 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56157d7bb7c0 <col:20>
| `-OptimizeNoneAttr 0x56157d7bb818 <col:30>
|-CXXMethodDecl 0x56157d7bb9a8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56157d7bb850 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56157d7bb8d0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56157d7bbb38 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56157d7bba70 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56157d7bbc88 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56157d7bbbf8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56157d7bbdd8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56157d7bbd48 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56157d7bbf28 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56157d7bbe98 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56157d7bc1e8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56157d7bbfe0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56157d7bc060 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56157d7bc108 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56157d7bc2c0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56157d7bc380 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56157d7bc650 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56157d7bc500 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56157d7bc578 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56157d7bc778 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56157d7bc950 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56157d7bc830 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56157d7bc8b0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56157d7bcb38 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56157d7bca18 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56157d7bca98 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56157d7bcea8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56157d7bcbf8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56157d7bcc70 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56157d7bccf0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56157d7c7c60 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56157d7c7c40 <col:106> 'int' 0
| `-ParmVarDecl 0x56157d7bcd68 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56157d7c7c98 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56157d7c7c78 <col:126> 'int' 0
|-CXXMethodDecl 0x56157d7bd248 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56157d7bcf78 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56157d7bd010 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56157d7bd090 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56157d7bd108 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56157d7c7cd0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56157d7c7cb0 <col:114> 'int' 0
|-CXXMethodDecl 0x56157d7bd5d8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56157d7bd320 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56157d7bd398 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56157d7bd418 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56157d7c7ce8 <col:96> 'int' 0
| `-ParmVarDecl 0x56157d7bd490 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56157d7c7d28 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56157d7c7d08 <col:116> 'int' 0
|-CXXMethodDecl 0x56157d7bd958 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56157d7bd6a8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56157d7bd720 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56157d7bd7a0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56157d7c7d60 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56157d7c7d40 <col:109> 'int' 0
| `-ParmVarDecl 0x56157d7bd818 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56157d7c7d98 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56157d7c7d78 <col:129> 'int' 0
|-CXXMethodDecl 0x56157d7bdcd8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56157d7bda28 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56157d7bdaa0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56157d7bdb20 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56157d7bdb98 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56157d7c7dd0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56157d7c7db0 <col:117> 'int' 0
|-CXXMethodDecl 0x56157d7be068 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56157d7bddb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7bde28 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56157d7bdea8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56157d7c7de8 <col:99> 'int' 0
| `-ParmVarDecl 0x56157d7bdf20 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56157d7c7e28 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56157d7c7e08 <col:119> 'int' 0
|-CXXMethodDecl 0x56157d7be488 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56157d7be138 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56157d7be1b8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56157d7be230 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56157d7be2b0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56157d7c7e60 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56157d7c7e40 <col:108> 'int' 0
| `-ParmVarDecl 0x56157d7be330 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56157d7c7e98 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56157d7c7e78 <col:141> 'int' 0
|-CXXMethodDecl 0x56157d7be8a8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56157d7be560 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56157d7be5e0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56157d7be658 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56157d7be6d8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56157d7be758 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56157d7c7eb0 <col:121> 'int' 0
|-CXXMethodDecl 0x56157d7becd8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56157d7be988 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56157d7bea08 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56157d7bea80 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56157d7beb00 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56157d7c7ed0 <col:98> 'int' 0
| `-ParmVarDecl 0x56157d7beb80 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56157d7c7ef0 <col:123> 'int' 0
|-CXXMethodDecl 0x56157d7befa0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56157d7bedb0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56157d7bee30 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56157d7beeb0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56157d7c7f10 <col:80> 'int' 0
|-EnumDecl 0x56157d7bf058 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56157d7bf160 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56157d7bf3f0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7bf140 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56157d7bf120 <col:42> 'int' 1
| |-EnumConstantDecl 0x56157d7bf1f0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56157d7bf408 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7bf1d0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56157d7bf1b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56157d7bf280 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56157d7bf420 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7bf260 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56157d7bf240 <col:44> 'int' 4
| |-EnumConstantDecl 0x56157d7bf310 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56157d7bf438 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7bf2f0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56157d7bf2d0 <col:36> 'int' 7
| `-EnumConstantDecl 0x56157d7bf3a0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56157d7bf450 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d7bf380 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56157d7bf360 <col:34> 'int' 6
|-CXXMethodDecl 0x56157d7bf708 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56157d7bf478 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56157d7bf518 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56157d7bf598 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56157d7bf610 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56157d7c7fc8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56157d7c7fb0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56157d7c7f98 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56157d7c7f78 <col:98, col:105> 'String' (CXXTemporary 0x56157d7c7f78)
|           `-CXXTemporaryObjectExpr 0x56157d7c7f40 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56157d7bf9a8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56157d7bf7d8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56157d7bf850 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56157d7bf8c8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56157d7c8078 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56157d7c8060 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56157d7c8048 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56157d7c8028 <col:94, col:101> 'String' (CXXTemporary 0x56157d7c8028)
| |         `-CXXTemporaryObjectExpr 0x56157d7c7ff0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56157d7c8860 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56157d7c87d8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56157d7c87a8 <col:9> '<bound member function type>' ->add_task_handlers 0x56157d7bf708
|     | `-CXXThisExpr 0x56157d7c8798 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56157d7c8818 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56157d7c8718 <col:27> 'Task *' lvalue ParmVar 0x56157d7bf7d8 'task' 'Task *'
|     |-ImplicitCastExpr 0x56157d7c8830 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56157d7c8738 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56157d7bf850 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56157d7c8848 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56157d7c8758 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56157d7bf3a0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56157d7c8778 <col:62> 'const String' lvalue ParmVar 0x56157d7bf8c8 'prefix' 'const String &'
|-CXXMethodDecl 0x56157d7bfbb8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56157d7bfa70 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56157d7bfae8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56157d7c8128 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56157d7c8110 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56157d7c80f8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56157d7c80d8 <col:70, col:77> 'String' (CXXTemporary 0x56157d7c80d8)
| |         `-CXXTemporaryObjectExpr 0x56157d7c80a0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56157d7c8a38 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56157d7c89b0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56157d7c8980 <col:9> '<bound member function type>' ->add_task_handlers 0x56157d7bf708
|     | `-CXXThisExpr 0x56157d7c8970 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56157d7c89f0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56157d7c88f0 <col:27> 'Task *' lvalue ParmVar 0x56157d7bfa70 'task' 'Task *'
|     |-ImplicitCastExpr 0x56157d7c8a08 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56157d7c8910 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56157d7c8a20 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56157d7c8930 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56157d7bf3a0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56157d7c8950 <col:57> 'const String' lvalue ParmVar 0x56157d7bfae8 'prefix' 'const String &'
|-CXXMethodDecl 0x56157d7bfe98 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56157d7bfc80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7bfd00 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7bfd78 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56157d7c0148 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56157d7bff68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7bffe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c0068 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56157d7c0438 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56157d7c0218 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c0298 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c0310 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56157d7c06e8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56157d7c0508 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c0588 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c0608 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56157d7c0998 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56157d7c07b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c0838 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c08b8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56157d7c0c48 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56157d7c0a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c0ae8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c0b60 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56157d7c0ef8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56157d7c0d18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c0d98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c0e18 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56157d7c1208 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56157d7c1020 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c10a0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c1120 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56157d7c14e8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56157d7c12d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c1358 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c1400 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56157d7c17c8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56157d7c15b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c1638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c16e0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56157d7c1a30 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56157d7c1898 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56157d7c1918 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56157d7c1990 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56157d7c1cd8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56157d7c1b00 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56157d7c1b80 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56157d7c1bf8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56157d7c1f88 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56157d7c1da8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c1e28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c1ea8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56157d7c2238 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56157d7c2058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c20d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c2150 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56157d7c24e8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56157d7c2308 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c2388 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c2400 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56157d7c27b8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56157d7c25b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c2638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56157d7c26d8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56157d7c2ae8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56157d7c2888 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56157d7c2908 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56157d7c2980 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56157d7c29f8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56157d7c8140 <col:93> 'bool' false
|-CXXMethodDecl 0x56157d7c2cd0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56157d7c2bb8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56157d7c2c38 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56157d7c2ea8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56157d7c2d90 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56157d7c2e10 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56157d7c3188 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56157d7c2f68 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56157d7c2fe0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56157d7c3060 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56157d7c30d8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56157d7c3478 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56157d7c3258 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56157d7c32d0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56157d7c3350 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56157d7c33c8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56157d7c36b0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56157d7c3550 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56157d7c35d0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56157d7c3898 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56157d7c3778 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56157d7c37f8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56157d7c3948 prev 0x56157d7bb0e8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56157d7c3a40 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56157d7c3ad0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56157d7c3b48 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56157d7c3c08 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56157d7c3cd0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56157d7c3e48 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56157d7c3d80 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56157d7c3ef0 <col:24>
| | `-OptimizeNoneAttr 0x56157d7c3f48 <col:34>
| |-CXXMethodDecl 0x56157d7c3f90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56157d7c4248 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56157d7c4040 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56157d7c40b8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56157d7c4138 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56157d7c4300 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56157d7c4338 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56157d7c43a0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56157d7c4428 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56157d7c4748 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56157d7c44e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56157d7c4558 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56157d7c45d0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56157d7c4650 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56157d7c4860 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56157d7cc1d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56157d7cc1d8
| | `-ParmVarDecl 0x56157d7cc2e8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56157d7cc388 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56157d7cc388
| | `-ParmVarDecl 0x56157d7cc498 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56157d7d0050 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56157d7c48d8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56157d7c4978 <col:38> "" ""
|-CXXMethodDecl 0x56157d7c4a08 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56157d7c4aa8 <col:44> "" ""
|-AccessSpecDecl 0x56157d7c4b18 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56157d7c4b40 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56157d7c4c40 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56157d7c4c90 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d7c4c20 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56157d7c4c00 <col:27> 'int' 4
|-FieldDecl 0x56157d7c4d48 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56157d7c4ef8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56157d7c4fb0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56157d7c6040 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56157d7c60a8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56157d7c61f8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56157d7c6138 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56157d7c63a8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56157d7c62b8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56157d7c6588 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56157d7c6468 <col:20> col:23 'int'
| `-ParmVarDecl 0x56157d7c64e8 <col:25> col:28 'int'
|-CXXMethodDecl 0x56157d7c6830 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56157d7c6650 <col:23> col:26 'int'
| |-ParmVarDecl 0x56157d7c66d0 <col:28> col:31 'int'
| `-ParmVarDecl 0x56157d7c6748 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56157d7c68e8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56157d7c69b0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56157d7c6a00 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56157d7c6a50 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56157d7c6c30 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56157d7c6ae0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56157d7c6b58 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56157d7c6ed8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56157d7c6cf8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56157d7c6d78 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56157d7c6df0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56157d7c70f8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56157d7c6fa8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56157d7c7028 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56157d7c7430 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56157d7c71b8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56157d7c7238 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56157d7c72b0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56157d7c7330 <col:57> col:60 'int'
|-CXXMethodDecl 0x56157d7c7618 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56157d7c7500 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56157d7c7580 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56157d7c7768 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56157d7c76d8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56157d7c7ae8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56157d7c7828 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56157d7c78a8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56157d7c7920 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56157d7c79a0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56157d7c7c00 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Scramble
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d7cf348 <../elements/radio/scramble.hh:18:1, line:28:1> line:18:7 class Scramble definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56157d7cf4a8 <col:1, col:7> col:7 implicit referenced class Scramble
|-AccessSpecDecl 0x56157d7cf538 <line:19:1, col:7> col:1 public
|-CXXConstructorDecl 0x56157d7cf5c0 <line:20:3, col:12> col:3 Scramble 'void ()'
|-CXXDestructorDecl 0x56157d7cf6b0 <line:21:3, col:13> col:3 ~Scramble 'void ()' noexcept-unevaluated 0x56157d7cf6b0
| `-Overrides: [ 0x56157d7b6c38 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x56157d7cf7e0 <line:23:3, col:55> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x56157d7b8098 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56157d7cfe30 <col:34, col:55>
|   `-ReturnStmt 0x56157d7cfe20 <col:36, col:43>
|     `-ImplicitCastExpr 0x56157d7cfe08 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56157d7cfde8 <col:43> 'const char [9]' lvalue "Scramble"
|-CXXMethodDecl 0x56157d7cf8a8 <line:24:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x56157d7b8160 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56157d7cfe90 <col:34, col:54>
|   `-ReturnStmt 0x56157d7cfe80 <col:36, col:43>
|     `-ImplicitCastExpr 0x56157d7cfe68 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56157d7cfe48 <col:43> 'const char []' lvalue Var 0x56157d7b8410 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x56157d7cf9e8 <line:26:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x56157d7b7278 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x56157d7cf958 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x56157d7cfab8 <line:18:7> col:7 implicit Scramble 'void (const Scramble &)' inline default_delete noexcept-unevaluated 0x56157d7cfab8
| `-ParmVarDecl 0x56157d7cfbc8 <col:7> col:7 'const Scramble &'
`-CXXMethodDecl 0x56157d7cfc68 <col:7> col:7 implicit operator= 'Scramble &(const Scramble &)' inline default_delete noexcept-unevaluated 0x56157d7cfc68
  `-ParmVarDecl 0x56157d7cfd78 <col:7> col:7 'const Scramble &'

Layout: <CGRecordLayout
  LLVMType:%class.Scramble = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.Scramble.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d575410 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56157d575528 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56157d5755b8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56157d575688 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56157d575770 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56157d575988 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56157d575830 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d575b38 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56157d575a40 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56157d575c80 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56157d575bf0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56157d575dc8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56157d575d38 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d575f10 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56157d575e80 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d575fd8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x56157d576120 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x56157d576090 <col:28> col:31 'int'
|-CXXMethodDecl 0x56157d5761e8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x56157d576330 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56157d5762a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x56157d5764a8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56157d5763e8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d5765f0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56157d576560 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d5766b8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56157d576878 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56157d576768 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56157d5767e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d576ac8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56157d576938 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56157d5769b0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56157d576b78 <col:86> "" ""
|-CXXMethodDecl 0x56157d576de8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56157d576c58 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56157d576cd0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d576f98 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56157d576ea8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56157d577148 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56157d577050 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56157d577418 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56157d577200 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56157d577278 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56157d5772f0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d5776f8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56157d5774e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56157d577558 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56157d5775d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56157d5777b0 <col:115> "" ""
|-AccessSpecDecl 0x56157d577820 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56157d577858 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d577d60 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56157d577d60
| `-ParmVarDecl 0x56157d577e68 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56157d577f08 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56157d577f08
| `-ParmVarDecl 0x56157d578018 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56157d5ad648 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56157d7a0450 <col:7>
|-CXXConstructorDecl 0x56157d5ad720 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56157d5ad720
| `-ParmVarDecl 0x56157d5ad838 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56157d5ad8a8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56157d5ad8a8
| `-ParmVarDecl 0x56157d5ad9b8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56157d7a2e50 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d78eff8 prev 0x56157d784200 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56157d78f0f0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56157d78f1e0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56157d78f308 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56157d78f488 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56157d78f608 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56157d78f788 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56157d7a05b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56157d7a0e28 <col:11>
|-CXXDestructorDecl 0x56157d7a0690 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56157d7a07c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56157d7a07c8
| `-ParmVarDecl 0x56157d7a08d8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56157d7a0978 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56157d7a0978
| `-ParmVarDecl 0x56157d7a0a88 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56157d7a3848 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56157d7a3958 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56157d7a3bd8 <col:11>
|   `-ReturnStmt 0x56157d7a3bc8 <col:11>
|     `-UnaryOperator 0x56157d7a3bb0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56157d7a3ba0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56157d7a39c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56157d7a39c8
  `-ParmVarDecl 0x56157d7a3ad8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d78f7f0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56157d78f908 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56157d78f9a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56157d78fa10 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56157d78fa78 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56157d78fae0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56157d78fb40 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56157d78fc00 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56157d78fc60 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56157d78fcc0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56157d7a04c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56157d78f9a8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56157d7a0e38 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56157d7a0e90 <col:12>
|-CXXConstructorDecl 0x56157d7a0af8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56157d7a0af8
| `-ParmVarDecl 0x56157d7a0c08 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56157d7a0ca8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56157d7a0ca8
| `-ParmVarDecl 0x56157d7a0db8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56157d7a2f30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d77d910 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56157d77da28 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56157d77dab8 <col:16, col:22> col:16 public
|-EnumDecl 0x56157d77dae0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56157d77dbe0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56157d77dcc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d77dbc0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56157d77dba0 <col:21> 'int' 28
| `-EnumConstantDecl 0x56157d77dc70 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56157d77dcd8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d77dc50 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56157d77dc30 <col:22> 'int' 64
|-CXXMethodDecl 0x56157d77e018 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56157d77dd00 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56157d77dd80 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56157d77ddf8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56157d77de70 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56157d77e0d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56157d77e2d8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56157d77e150 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56157d77e1c8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56157d77e388 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56157d77e4e8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56157d77e3f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56157d77e590 <col:72> warn_unused_result ""
|-TypedefDecl 0x56157d77e8f0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56157d77e880 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56157d77e820 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56157d77e7e0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56157d2574e0 'void'
|       |-PointerType 0x56157d4fdcb0 'unsigned char *'
|       | `-BuiltinType 0x56157d2575e0 'unsigned char'
|       |-TypedefType 0x56157d2fa280 'size_t' sugar
|       | |-Typedef 0x56157d2c7be0 'size_t'
|       | `-BuiltinType 0x56157d257640 'unsigned long'
|       `-PointerType 0x56157d257ce0 'void *'
|         `-BuiltinType 0x56157d2574e0 'void'
|-CXXMethodDecl 0x56157d77ed68 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56157d77e960 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56157d77e9d8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56157d77ea70 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56157d77eaf0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56157d799460 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56157d799448 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56157d799410 <col:58> 'int' 0
| |-ParmVarDecl 0x56157d77eb70 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56157d799488 <col:76> 'int' 0
| |-ParmVarDecl 0x56157d77ebf0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56157d7994a8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56157d77ee38 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56157d77eeb8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56157d77ef78 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56157d77f018 <col:20>
| `-OptimizeNoneAttr 0x56157d77f070 <col:30>
|-CXXMethodDecl 0x56157d77f0e8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56157d77f188 <col:20>
| `-OptimizeNoneAttr 0x56157d77f1e0 <col:30>
|-CXXMethodDecl 0x56157d77f258 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56157d77f2f8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56157d77f3a8 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56157d77f448 <col:20>
| |-OptimizeNoneAttr 0x56157d77f4a0 <col:30>
| `-WarnUnusedResultAttr 0x56157d77f4c8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56157d77f520 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56157d77f5c0 <col:20>
| `-OptimizeNoneAttr 0x56157d77f618 <col:30>
|-CXXMethodDecl 0x56157d77f668 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56157d77f708 <col:20>
| `-OptimizeNoneAttr 0x56157d77f760 <col:30>
|-CXXMethodDecl 0x56157d77f7a8 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x56157d77f848 <col:20>
| `-OptimizeNoneAttr 0x56157d77f8a0 <col:30>
|-CXXMethodDecl 0x56157d77f8e8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56157d77f9a8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56157d77fa70 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56157d77fb38 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56157d77fbf8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56157d77fd18 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56157d799570 <col:54, line:99:5>
|   `-ReturnStmt 0x56157d799560 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56157d799548 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56157d799518 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56157d78fff8
|         `-CXXThisExpr 0x56157d799508 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56157d77feb8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56157d77fdc8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56157d799620 <col:67, line:103:5>
|   `-BinaryOperator 0x56157d799600 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56157d799598 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56157d78fff8
|     | `-CXXThisExpr 0x56157d799588 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56157d7995e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56157d7995c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56157d77fdc8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56157d77ffb0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56157d7996a0 <col:33, line:107:5>
|   `-ReturnStmt 0x56157d799690 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56157d799678 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56157d799648 <col:16> 'void *' lvalue ->_destructor_argument 0x56157d790060
|         `-CXXThisExpr 0x56157d799638 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56157d780070 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56157d799cd0 <col:25, line:113:5>
|   |-ParenExpr 0x56157d799a18 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56157d7999e8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56157d799758 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56157d799730 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56157d7996f8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56157d7996c8 <col:24> '<bound member function type>' ->shared 0x56157d77f0e8
|   |   |       `-ImplicitCastExpr 0x56157d799718 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56157d7996b8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56157d7997b8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d799798 <col:42> 'int' 0
|   |   `-CallExpr 0x56157d799948 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56157d799930 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d799910 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d799988 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d799828 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56157d7999a0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d799850 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d7999b8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d799888 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56157d7999d0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d7998f8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d7998e0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d7998a8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56157d799c18 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56157d799a48 <col:2> 'unsigned char *' lvalue ->_head 0x56157d78fe00
|   | | `-CXXThisExpr 0x56157d799a38 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56157d799c00 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56157d799be0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56157d799a88 <col:10> 'unsigned char *' lvalue ->_data 0x56157d78fe68
|   |     | `-CXXThisExpr 0x56157d799a78 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56157d799bc8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56157d799ba8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56157d799ac8 <col:18> 'unsigned char *' lvalue ->_tail 0x56157d78fed0
|   |         | `-CXXThisExpr 0x56157d799ab8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56157d799b90 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56157d799b70 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56157d799b08 <col:26> 'unsigned char *' lvalue ->_end 0x56157d78ff38
|   |             | `-CXXThisExpr 0x56157d799af8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56157d799b58 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56157d799b38 <col:33> 'int' 0
|   `-BinaryOperator 0x56157d799cb0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56157d799c48 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56157d78fff8
|     | `-CXXThisExpr 0x56157d799c38 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56157d799c98 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56157d799c78 <col:16> 'int' 0
|-CXXMethodDecl 0x56157d7801b0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56157d780120 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56157d780258 <col:20>
| |-OptimizeNoneAttr 0x56157d7802b0 <col:30>
| `-WarnUnusedResultAttr 0x56157d7802d8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56157d7803a8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56157d780318 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56157d780450 <col:20>
| |-OptimizeNoneAttr 0x56157d7804a8 <col:30>
| `-WarnUnusedResultAttr 0x56157d7804d0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56157d780608 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56157d780510 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56157d7806b0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56157d7807b0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56157d780720 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56157d780858 <col:20>
| `-OptimizeNoneAttr 0x56157d7808b0 <col:30>
|-CXXMethodDecl 0x56157d780978 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56157d7808e8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56157d780a20 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56157d780b20 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56157d780a90 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56157d780bc8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56157d780cc8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56157d780c38 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56157d780d70 <col:20>
| `-OptimizeNoneAttr 0x56157d780dc8 <col:30>
|-CXXMethodDecl 0x56157d780f58 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56157d780e08 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56157d780e80 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56157d7994c8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56157d781008 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56157d781208 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56157d781080 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56157d7810f8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d781418 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56157d7812c8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56157d781340 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d781628 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56157d7814d8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56157d781558 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56157d7994d8 <col:39> 'int' 0
|-CXXMethodDecl 0x56157d7816f8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56157d7817c0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56157d781888 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56157d781948 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56157d781a10 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56157d781b58 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56157d781ac8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56157d781d28 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56157d781c18 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56157d781c90 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d781df8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56157d781eb8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56157d781f58 <col:20>
| `-OptimizeNoneAttr 0x56157d781fb0 <col:30>
|-CXXMethodDecl 0x56157d782000 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56157d7820a0 <col:20>
| `-OptimizeNoneAttr 0x56157d7820f8 <col:30>
|-CXXMethodDecl 0x56157d782148 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56157d782208 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56157d7822d0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56157d782370 <col:20>
| `-OptimizeNoneAttr 0x56157d7823c8 <col:30>
|-CXXMethodDecl 0x56157d782518 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56157d782408 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56157d782480 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d782668 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56157d7825d8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d782740 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56157d782800 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56157d7828a0 <col:20>
| `-OptimizeNoneAttr 0x56157d7828f8 <col:30>
|-CXXMethodDecl 0x56157d782948 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56157d7829e8 <col:20>
| `-OptimizeNoneAttr 0x56157d782a40 <col:30>
|-CXXMethodDecl 0x56157d782a90 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56157d782b58 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56157d782bf8 <col:20>
| `-OptimizeNoneAttr 0x56157d782c50 <col:30>
|-CXXMethodDecl 0x56157d782c98 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56157d782db8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56157d782f28 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56157d782e68 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56157d783018 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56157d7830b8 <col:20>
| `-OptimizeNoneAttr 0x56157d783110 <col:30>
|-CXXMethodDecl 0x56157d783160 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56157d783220 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56157d783458 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56157d7832d0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56157d783348 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56157d783508 <col:20>
| `-OptimizeNoneAttr 0x56157d783560 <col:30>
|-CXXMethodDecl 0x56157d783608 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56157d7836a8 <col:20>
| `-OptimizeNoneAttr 0x56157d783700 <col:30>
|-CXXMethodDecl 0x56157d783750 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56157d7837f0 <col:20>
| `-OptimizeNoneAttr 0x56157d783848 <col:30>
|-CXXMethodDecl 0x56157d783890 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56157d783930 <col:20>
| `-OptimizeNoneAttr 0x56157d783988 <col:30>
|-CXXMethodDecl 0x56157d783a88 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56157d7839c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56157d783b30 <col:20>
| `-OptimizeNoneAttr 0x56157d783b88 <col:30>
|-CXXMethodDecl 0x56157d783d48 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56157d783bc0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56157d783c38 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56157d783df8 <col:20>
| `-OptimizeNoneAttr 0x56157d783e50 <col:30>
|-CXXMethodDecl 0x56157d783ef8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56157d784018 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56157d784138 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56157d7841d8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56157d784200 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56157d784328 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56157d7843c8 <col:20>
| `-OptimizeNoneAttr 0x56157d784420 <col:30>
|-CXXMethodDecl 0x56157d7844c8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56157d784568 <col:20>
| `-OptimizeNoneAttr 0x56157d7845c0 <col:30>
|-AccessSpecDecl 0x56157d7845e8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56157d784610 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56157d784710 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56157d784760 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d7846f0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56157d7846d0 <col:14> 'int' 48
|-CXXMethodDecl 0x56157d7847c8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56157d784868 <col:20>
| `-OptimizeNoneAttr 0x56157d7848c0 <col:30>
|-CXXMethodDecl 0x56157d784938 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56157d7849d8 <col:20>
| `-OptimizeNoneAttr 0x56157d784a30 <col:30>
|-CXXMethodDecl 0x56157d784af8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56157d784a68 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56157d784c98 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56157d784e38 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56157d784d48 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56157d784ee0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56157d784fe0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56157d785390 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d784fc0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56157d784fa0 <col:9> 'int' 0
| |-EnumConstantDecl 0x56157d785070 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56157d7853a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d785050 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56157d785030 <col:14> 'int' 1
| |-EnumConstantDecl 0x56157d785100 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56157d7853c0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d7850e0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56157d7850c0 <col:14> 'int' 2
| |-EnumConstantDecl 0x56157d785190 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56157d7853d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d785170 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56157d785150 <col:14> 'int' 3
| |-EnumConstantDecl 0x56157d785220 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56157d7853f0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d785200 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56157d7851e0 <col:13> 'int' 4
| |-EnumConstantDecl 0x56157d7852b0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56157d785408 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d785290 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56157d785270 <col:13> 'int' 5
| `-EnumConstantDecl 0x56157d785340 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56157d785420 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d785320 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56157d785300 <col:14> 'int' 6
|-CXXMethodDecl 0x56157d785488 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56157d785528 <col:20>
| `-OptimizeNoneAttr 0x56157d785580 <col:30>
|-CXXMethodDecl 0x56157d785678 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56157d7855b8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56157d785720 <col:20>
| `-OptimizeNoneAttr 0x56157d785778 <col:30>
|-CXXMethodDecl 0x56157d7857e8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56157d785910 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56157d785a88 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56157d7859c0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56157d785b50 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56157d785c18 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56157d785d58 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56157d785cc8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56157d785e00 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56157d785f00 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56157d786100 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d785ee0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56157d785ec0 <col:23> 'int' 0
| |-EnumConstantDecl 0x56157d785f90 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56157d786118 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d785f70 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56157d785f50 <col:45> 'int' 4
| |-EnumConstantDecl 0x56157d786020 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56157d786130 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d786000 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56157d785fe0 <col:24> 'int' 0
| `-EnumConstantDecl 0x56157d7860b0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56157d786148 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d786090 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56157d786070 <col:47> 'int' 16
|-CXXMethodDecl 0x56157d7861a8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56157d786318 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56157d786258 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56157d7863c0 <col:20>
| `-OptimizeNoneAttr 0x56157d786418 <col:30>
|-CXXMethodDecl 0x56157d786468 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56157d799df0 <col:18, col:36>
|   `-ReturnStmt 0x56157d799de0 <col:20, col:33>
|     `-ImplicitCastExpr 0x56157d799dc8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56157d799da8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56157d799d78 <col:27> '<bound member function type>' ->xanno 0x56157d7844c8
|           `-CXXThisExpr 0x56157d799d68 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56157d786560 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56157d799f00 <col:30, col:48>
|   `-ReturnStmt 0x56157d799ef0 <col:32, col:45>
|     `-ImplicitCastExpr 0x56157d799ed8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56157d799eb8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56157d799e88 <col:39> '<bound member function type>' ->xanno 0x56157d784328
|           `-CXXThisExpr 0x56157d799e78 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56157d786648 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56157d79a098 <col:24, col:50>
|   `-ReturnStmt 0x56157d79a088 <col:26, col:47>
|     `-UnaryOperator 0x56157d79a070 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56157d79a050 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56157d79a038 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56157d799fe8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56157d78f308
|         |   `-CXXMemberCallExpr 0x56157d799fc8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56157d799f98 <col:34> '<bound member function type>' ->xanno 0x56157d7844c8
|         |       `-CXXThisExpr 0x56157d799f88 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56157d79a018 <col:46> 'int' 0
|-CXXMethodDecl 0x56157d786750 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56157d79a268 <col:36, col:62>
|   `-ReturnStmt 0x56157d79a258 <col:38, col:59>
|     `-UnaryOperator 0x56157d79a240 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56157d79a220 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56157d79a208 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56157d79a180 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56157d78f308
|         |   `-CXXMemberCallExpr 0x56157d79a160 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56157d79a130 <col:46> '<bound member function type>' ->xanno 0x56157d784328
|         |       `-CXXThisExpr 0x56157d79a120 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56157d79a1b0 <col:58> 'int' 0
|-CXXMethodDecl 0x56157d786868 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56157d79a400 <col:26, col:53>
|   `-ReturnStmt 0x56157d79a3f0 <col:28, col:50>
|     `-UnaryOperator 0x56157d79a3d8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56157d79a3b8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56157d79a3a0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56157d79a350 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56157d78f608
|         |   `-CXXMemberCallExpr 0x56157d79a330 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56157d79a300 <col:36> '<bound member function type>' ->xanno 0x56157d7844c8
|         |       `-CXXThisExpr 0x56157d79a2f0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56157d79a380 <col:49> 'int' 0
|-CXXMethodDecl 0x56157d786988 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56157d79a5d8 <col:38, col:65>
|   `-ReturnStmt 0x56157d79a5c8 <col:40, col:62>
|     `-UnaryOperator 0x56157d79a5b0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56157d79a590 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56157d79a578 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56157d79a4e8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56157d78f608
|         |   `-CXXMemberCallExpr 0x56157d79a4c8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56157d79a498 <col:48> '<bound member function type>' ->xanno 0x56157d784328
|         |       `-CXXThisExpr 0x56157d79a488 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56157d79a518 <col:61> 'int' 0
|-CXXMethodDecl 0x56157d786b38 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56157d786a40 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56157d79aca8 <col:34, line:463:5>
|   |-ParenExpr 0x56157d79aaf0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56157d79aac0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79a728 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79a6f8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79a648 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79a630 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79a5f0 <col:23> 'int' lvalue ParmVar 0x56157d786a40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79a610 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79a6d8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79a6a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79a668 <col:33> 'int' lvalue ParmVar 0x56157d786a40 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56157d79a6c0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56157d79a688 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56157d79a788 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79a768 <col:56> 'int' 0
|   |   `-CallExpr 0x56157d79aa20 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56157d79aa08 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79a9e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79aa60 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79a878 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56157d79aa78 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79a8a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79aa90 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79a8e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56157d79aaa8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79a9d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79a9b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79a978 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56157d79ac98 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56157d79ac80 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56157d79ac60 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56157d79ac30 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56157d79abe0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56157d78f308
|         |   `-CXXMemberCallExpr 0x56157d79abc0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56157d79ab90 <col:9> '<bound member function type>' ->xanno 0x56157d784328
|         |       `-CXXThisExpr 0x56157d79ab80 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56157d79ac48 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56157d79ac10 <col:21> 'int' lvalue ParmVar 0x56157d786a40 'i' 'int'
|-CXXMethodDecl 0x56157d786d88 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56157d786bf8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56157d786c70 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56157d79b338 <col:40, line:472:5>
|   |-ParenExpr 0x56157d79b150 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56157d79b120 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79ae00 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79add0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79ad20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79ad08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79acc8 <col:23> 'int' lvalue ParmVar 0x56157d786bf8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79ace8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79adb0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79ad80 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79ad40 <col:33> 'int' lvalue ParmVar 0x56157d786bf8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56157d79ad98 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56157d79ad60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56157d79ae60 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79ae40 <col:56> 'int' 0
|   |   `-CallExpr 0x56157d79b080 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56157d79b068 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79b048 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79b0c0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79aed0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56157d79b0d8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79af00 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79b0f0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79af38 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56157d79b108 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79b030 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79b018 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79afd8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56157d79b318 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56157d79b2c0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56157d79b290 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56157d79b240 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56157d78f308
|     | |   `-CXXMemberCallExpr 0x56157d79b220 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56157d79b1f0 <col:2> '<bound member function type>' ->xanno 0x56157d7844c8
|     | |       `-CXXThisExpr 0x56157d79b1e0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56157d79b2a8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56157d79b270 <col:14> 'int' lvalue ParmVar 0x56157d786bf8 'i' 'int'
|     `-ImplicitCastExpr 0x56157d79b300 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56157d79b2e0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56157d786c70 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56157d786f48 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56157d786e50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56157d79bab8 <col:36, line:485:5>
|   |-ParenExpr 0x56157d79b820 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79b7f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79b4d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79b4a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79b3b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79b398 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79b358 <col:23> 'int' lvalue ParmVar 0x56157d786e50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79b378 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79b480 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79b468 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79b3d0 <col:33> 'int' lvalue ParmVar 0x56157d786e50 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79b448 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79b430 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79b3f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79b410 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56157d79b530 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79b510 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79b750 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79b738 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79b718 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79b790 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79b5a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56157d79b7a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79b5d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79b7c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79b610 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56157d79b7d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79b700 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79b6e8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79b6a8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56157d79baa8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56157d79ba90 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56157d79ba78 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56157d79ba48 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56157d79b9e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56157d79b9b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56157d79b930 <col:61, col:70> 'char const[48]' lvalue ->c 0x56157d78f1e0
|             |   `-CXXMemberCallExpr 0x56157d79b910 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56157d79b8e0 <col:61> '<bound member function type>' ->xanno 0x56157d784328
|             |       `-CXXThisExpr 0x56157d79b8d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56157d79b9d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56157d79b960 <col:74> 'int' lvalue ParmVar 0x56157d786e50 'i' 'int'
|-CXXMethodDecl 0x56157d787198 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56157d787008 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56157d787080 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56157d79c208 <col:42, line:500:5>
|   |-ParenExpr 0x56157d79bfa0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79bf70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79bc50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79bc20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79bb30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79bb18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79bad8 <col:23> 'int' lvalue ParmVar 0x56157d787008 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79baf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79bc00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79bbe8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79bb50 <col:33> 'int' lvalue ParmVar 0x56157d787008 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79bbc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79bbb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79bb70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79bb90 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56157d79bcb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79bc90 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79bed0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79beb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79be98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79bf10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79bd20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56157d79bf28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79bd58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79bf40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79bd90 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56157d79bf58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79be80 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79be68 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79be28 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56157d79c1e8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56157d79c198 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56157d79c168 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56157d79c110 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56157d79c0e0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56157d79c090 <col:48, col:57> 'char [48]' lvalue ->c 0x56157d78f1e0
|     |     |   `-CXXMemberCallExpr 0x56157d79c070 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56157d79c040 <col:48> '<bound member function type>' ->xanno 0x56157d7844c8
|     |     |       `-CXXThisExpr 0x56157d79c030 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56157d79c0f8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56157d79c0c0 <col:61> 'int' lvalue ParmVar 0x56157d787008 'i' 'int'
|     `-ImplicitCastExpr 0x56157d79c1d0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56157d79c1b0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56157d787080 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56157d787358 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56157d787260 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56157d79c968 <col:35, line:513:5>
|   |-ParenExpr 0x56157d79c678 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79c648 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79c3a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79c370 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79c280 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79c268 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79c228 <col:23> 'int' lvalue ParmVar 0x56157d787260 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79c248 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79c350 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79c338 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79c2a0 <col:33> 'int' lvalue ParmVar 0x56157d787260 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79c318 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79c300 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79c2c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79c2e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56157d79c400 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79c3e0 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79c5a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79c590 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79c570 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79c5e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79c470 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56157d79c600 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79c4a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79c618 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79c4e0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56157d79c630 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79c558 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79c540 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79c500 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56157d79c958 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56157d79c940 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56157d79c928 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56157d79c8f8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56157d79c870 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56157d79c840 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56157d79c7f0 <col:60, col:69> 'char const[48]' lvalue ->c 0x56157d78f1e0
|             |   `-CXXMemberCallExpr 0x56157d79c7d0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56157d79c7a0 <col:60> '<bound member function type>' ->xanno 0x56157d784328
|             |       `-CXXThisExpr 0x56157d79c790 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56157d79c858 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56157d79c820 <col:73> 'int' lvalue ParmVar 0x56157d787260 'i' 'int'
|-CXXMethodDecl 0x56157d7875a8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56157d787418 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56157d787490 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56157d79d088 <col:41, line:528:5>
|   |-ParenExpr 0x56157d79ce10 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79cde0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79cb00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79cad0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79c9e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79c9c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79c988 <col:23> 'int' lvalue ParmVar 0x56157d787418 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79c9a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79cab0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79ca98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79ca00 <col:33> 'int' lvalue ParmVar 0x56157d787418 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79ca78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79ca60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79ca20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79ca40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56157d79cb60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79cb40 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79cd40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79cd28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79cd08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79cd80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79cbd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56157d79cd98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79cc08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79cdb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79cc40 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56157d79cdc8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79ccf0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79ccd8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79cc98 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56157d79d068 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56157d79d018 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56157d79cfe8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56157d79cf90 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56157d79cf50 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56157d79cf00 <col:47, col:56> 'char [48]' lvalue ->c 0x56157d78f1e0
|     |     |   `-CXXMemberCallExpr 0x56157d79cee0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56157d79ceb0 <col:47> '<bound member function type>' ->xanno 0x56157d7844c8
|     |     |       `-CXXThisExpr 0x56157d79cea0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56157d79cf68 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56157d79cf30 <col:60> 'int' lvalue ParmVar 0x56157d787418 'i' 'int'
|     `-ImplicitCastExpr 0x56157d79d050 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56157d79d030 <col:65> 'int16_t':'short' lvalue ParmVar 0x56157d787490 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56157d787768 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56157d787670 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56157d79d758 <col:36, line:541:5>
|   |-ParenExpr 0x56157d79d4f8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79d4c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79d220 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79d1f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79d100 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79d0e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79d0a8 <col:23> 'int' lvalue ParmVar 0x56157d787670 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79d0c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79d1d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79d1b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79d120 <col:33> 'int' lvalue ParmVar 0x56157d787670 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79d198 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79d180 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79d140 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79d160 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56157d79d280 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79d260 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79d428 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79d410 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79d3f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79d468 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79d2f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56157d79d480 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79d328 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79d498 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79d360 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56157d79d4b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79d3d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79d3c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79d380 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56157d79d748 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56157d79d730 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56157d79d718 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56157d79d6e8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56157d79d690 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56157d79d660 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56157d79d610 <col:61, col:70> 'char const[48]' lvalue ->c 0x56157d78f1e0
|             |   `-CXXMemberCallExpr 0x56157d79d5f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56157d79d5c0 <col:61> '<bound member function type>' ->xanno 0x56157d784328
|             |       `-CXXThisExpr 0x56157d79d5b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56157d79d678 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56157d79d640 <col:74> 'int' lvalue ParmVar 0x56157d787670 'i' 'int'
|-CXXMethodDecl 0x56157d787938 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56157d787828 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56157d7878a0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56157d7879e8 <col:20>
| `-OptimizeNoneAttr 0x56157d787a40 <col:30>
|-CXXMethodDecl 0x56157d787b78 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56157d787a80 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56157d79de28 <col:35, line:562:5>
|   |-ParenExpr 0x56157d79dbc8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79db98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79d8f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79d8c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79d7d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79d7b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79d778 <col:23> 'int' lvalue ParmVar 0x56157d787a80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79d798 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79d8a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79d888 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79d7f0 <col:33> 'int' lvalue ParmVar 0x56157d787a80 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79d868 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79d850 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79d810 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79d830 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56157d79d950 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79d930 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79daf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79dae0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79dac0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79db38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79d9c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56157d79db50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79d9f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79db68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79da30 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56157d79db80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79daa8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79da90 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79da50 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56157d79de18 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56157d79de00 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56157d79dde8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56157d79ddb8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56157d79dd60 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56157d79dd30 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56157d79dce0 <col:60, col:69> 'char const[48]' lvalue ->c 0x56157d78f1e0
|             |   `-CXXMemberCallExpr 0x56157d79dcc0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56157d79dc90 <col:60> '<bound member function type>' ->xanno 0x56157d784328
|             |       `-CXXThisExpr 0x56157d79dc80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56157d79dd48 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56157d79dd10 <col:73> 'int' lvalue ParmVar 0x56157d787a80 'i' 'int'
|-CXXMethodDecl 0x56157d787d88 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56157d787c38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56157d787cb0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56157d79e508 <col:41, line:577:5>
|   |-ParenExpr 0x56157d79e298 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79e268 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79dfc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79df90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79dea0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79de88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79de48 <col:23> 'int' lvalue ParmVar 0x56157d787c38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79de68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79df70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79df58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79dec0 <col:33> 'int' lvalue ParmVar 0x56157d787c38 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79df38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79df20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79dee0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79df00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56157d79e020 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79e000 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79e1c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79e1b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79e190 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79e208 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79e090 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56157d79e220 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79e0c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79e238 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79e100 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56157d79e250 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79e178 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79e160 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79e120 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56157d79e4e8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56157d79e498 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56157d79e468 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56157d79e408 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56157d79e3d8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56157d79e388 <col:47, col:56> 'char [48]' lvalue ->c 0x56157d78f1e0
|     |     |   `-CXXMemberCallExpr 0x56157d79e368 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56157d79e338 <col:47> '<bound member function type>' ->xanno 0x56157d7844c8
|     |     |       `-CXXThisExpr 0x56157d79e328 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56157d79e3f0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56157d79e3b8 <col:60> 'int' lvalue ParmVar 0x56157d787c38 'i' 'int'
|     `-ImplicitCastExpr 0x56157d79e4d0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56157d79e4b0 <col:65> 'int32_t':'int' lvalue ParmVar 0x56157d787cb0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56157d787f48 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56157d787e50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56157d79ec38 <col:36, line:591:5>
|   |-ParenExpr 0x56157d79e978 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79e948 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79e6a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79e670 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79e580 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79e568 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79e528 <col:23> 'int' lvalue ParmVar 0x56157d787e50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79e548 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79e650 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79e638 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79e5a0 <col:33> 'int' lvalue ParmVar 0x56157d787e50 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79e618 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79e600 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79e5c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79e5e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56157d79e700 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79e6e0 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79e8a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79e890 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79e870 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79e8e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79e770 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56157d79e900 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79e7a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79e918 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79e7e0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56157d79e930 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79e858 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79e840 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79e800 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56157d79ec28 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56157d79ec10 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56157d79ebf8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56157d79ebc8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56157d79eb40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56157d79eb10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56157d79eac0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56157d78f1e0
|             |   `-CXXMemberCallExpr 0x56157d79eaa0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56157d79ea70 <col:61> '<bound member function type>' ->xanno 0x56157d784328
|             |       `-CXXThisExpr 0x56157d79ea60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56157d79eb28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56157d79eaf0 <col:74> 'int' lvalue ParmVar 0x56157d787e50 'i' 'int'
|-CXXMethodDecl 0x56157d788198 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56157d788008 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56157d788080 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56157d79f318 <col:42, line:606:5>
|   |-ParenExpr 0x56157d79f0a8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56157d79f078 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79edd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79eda0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79ecb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79ec98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79ec58 <col:23> 'int' lvalue ParmVar 0x56157d788008 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79ec78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79ed80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56157d79ed68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79ecd0 <col:33> 'int' lvalue ParmVar 0x56157d788008 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79ed48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79ed30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79ecf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56157d79ed10 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56157d79ee30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79ee10 <col:60> 'int' 0
|   |   `-CallExpr 0x56157d79efd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56157d79efc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79efa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79f018 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79eea0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56157d79f030 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79eed8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79f048 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79ef10 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56157d79f060 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79ef88 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79ef70 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79ef30 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56157d79f2f8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56157d79f2a8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56157d79f278 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56157d79f218 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56157d79f1e8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56157d79f198 <col:48, col:57> 'char [48]' lvalue ->c 0x56157d78f1e0
|     |     |   `-CXXMemberCallExpr 0x56157d79f178 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56157d79f148 <col:48> '<bound member function type>' ->xanno 0x56157d7844c8
|     |     |       `-CXXThisExpr 0x56157d79f138 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56157d79f200 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56157d79f1c8 <col:61> 'int' lvalue ParmVar 0x56157d788008 'i' 'int'
|     `-ImplicitCastExpr 0x56157d79f2e0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56157d79f2c0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56157d788080 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56157d788330 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56157d788260 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56157d79fb88 <col:33, line:620:5>
|   |-ParenExpr 0x56157d79f900 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56157d79f8d0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79f520 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79f4f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79f390 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79f378 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79f338 <col:23> 'int' lvalue ParmVar 0x56157d788260 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79f358 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79f4d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56157d79f4b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79f3b0 <col:33> 'int' lvalue ParmVar 0x56157d788260 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79f498 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79f480 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79f3d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56157d79f458 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56157d79f440 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56157d79f408 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56157d79f580 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79f560 <col:79> 'int' 0
|   |   `-CallExpr 0x56157d79f830 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56157d79f818 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79f7f8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d79f870 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79f668 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56157d79f888 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79f6b0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d79f8a0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79f6e8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56157d79f8b8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79f7e0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79f7c8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79f788 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56157d79fb78 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56157d79fb60 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56157d79fb48 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56157d79fb18 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56157d79fa90 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56157d79fa60 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56157d79fa10 <col:67, col:76> 'char const[48]' lvalue ->c 0x56157d78f1e0
|             |   `-CXXMemberCallExpr 0x56157d79f9f0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56157d79f9c0 <col:67> '<bound member function type>' ->xanno 0x56157d784328
|             |       `-CXXThisExpr 0x56157d79f9b0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56157d79fa78 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56157d79fa40 <col:80> 'int' lvalue ParmVar 0x56157d788260 'i' 'int'
|-CXXMethodDecl 0x56157d788548 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56157d7883f0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56157d788470 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56157d7a03b0 <col:45, line:635:5>
|   |-ParenExpr 0x56157d7a00f8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56157d7a00c8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56157d79fd90 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56157d79fd60 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56157d79fc00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56157d79fbe8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56157d79fba8 <col:23> 'int' lvalue ParmVar 0x56157d7883f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56157d79fbc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56157d79fd40 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56157d79fd28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56157d79fc20 <col:33> 'int' lvalue ParmVar 0x56157d7883f0 'i' 'int'
|   |   |     `-BinaryOperator 0x56157d79fd08 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56157d79fcf0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56157d79fc40 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56157d784710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56157d79fcc8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56157d79fcb0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56157d79fc78 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56157d79fdf0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56157d79fdd0 <col:79> 'int' 0
|   |   `-CallExpr 0x56157d7a0028 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56157d7a0010 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56157d79fff0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56157d7a0068 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79fe60 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56157d7a0080 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56157d79fea8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56157d7a0098 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56157d79fee0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56157d7a00b0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56157d79ffd8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56157d79ffc0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56157d79ff78 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56157d7a0390 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56157d7a02f8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56157d7a02c8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56157d7a0268 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56157d7a0238 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56157d7a01e8 <col:54, col:63> 'char [48]' lvalue ->c 0x56157d78f1e0
|     |     |   `-CXXMemberCallExpr 0x56157d7a01c8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56157d7a0198 <col:54> '<bound member function type>' ->xanno 0x56157d7844c8
|     |     |       `-CXXThisExpr 0x56157d7a0188 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56157d7a0250 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56157d7a0218 <col:67> 'int' lvalue ParmVar 0x56157d7883f0 'i' 'int'
|     `-CXXConstCastExpr 0x56157d7a0360 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56157d7a0348 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56157d7a0310 <col:91> 'const void *' lvalue ParmVar 0x56157d788470 'x' 'const void *'
|-CXXMethodDecl 0x56157d788618 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56157d7a0438 <col:34, line:640:5>
|   `-ReturnStmt 0x56157d7a0428 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56157d7a0410 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56157d7a03e0 <col:16> 'Packet *' lvalue ->_data_packet 0x56157d78fd98
|         `-CXXThisExpr 0x56157d7a03d0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56157d788758 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56157d7886c8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56157d7994f8 <col:46> 'bool' true
|-CXXMethodDecl 0x56157d7888d8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56157d788810 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56157d788980 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56157d789130 <line:660:22> "" ""
| |-EnumConstantDecl 0x56157d788a80 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d7891a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788a60 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56157d788a40 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56157d77dbe0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56157d788b10 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d7891b8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788af0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56157d788ad0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56157d77dc70 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56157d788ba0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d7891d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788b80 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56157d788b60 <col:21> 'int' 0
| |-EnumConstantDecl 0x56157d788c30 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d7891e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788c10 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56157d788bf0 <col:19> 'int' 16
| |-EnumConstantDecl 0x56157d788cc0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d789200 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788ca0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56157d788c80 <col:21> 'int' 16
| |-EnumConstantDecl 0x56157d788d50 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d789218 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788d30 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56157d788d10 <col:19> 'int' 32
| |-EnumConstantDecl 0x56157d788de0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d789230 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788dc0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56157d788da0 <col:19> 'int' EnumConstant 0x56157d788c30 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56157d788e70 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d789248 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788e50 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56157d788e30 <col:19> 'int' EnumConstant 0x56157d788d50 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56157d788f40 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d789260 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788f20 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56157d788f00 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56157d788ec0 <col:23> 'int' EnumConstant 0x56157d788e70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56157d788ee0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56157d789010 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56157d789278 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56157d788ff0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56157d788fd0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56157d788f90 <col:23> 'int' EnumConstant 0x56157d788e70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56157d788fb0 <col:40> 'int' 4
| `-EnumConstantDecl 0x56157d7890e0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56157d789290 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d7890c0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56157d7890a0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56157d789060 <col:23> 'int' EnumConstant 0x56157d788e70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56157d789080 <col:40> 'int' 8
|-CXXMethodDecl 0x56157d7892d0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56157d789370 <col:68> "" ""
|-CXXMethodDecl 0x56157d789408 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56157d7894a8 <col:45> "" ""
|-CXXMethodDecl 0x56157d789540 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56157d7895e0 <col:57> "" ""
|-CXXMethodDecl 0x56157d789678 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56157d789718 <col:45> "" ""
|-CXXMethodDecl 0x56157d7897b0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56157d789850 <col:57> "" ""
|-CXXMethodDecl 0x56157d7898e0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56157d789980 <col:51> "" ""
|-CXXMethodDecl 0x56157d789a10 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56157d789ab0 <col:63> "" ""
|-CXXMethodDecl 0x56157d789b40 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56157d789be0 <col:53> "" ""
|-CXXMethodDecl 0x56157d789c70 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56157d789d10 <col:65> "" ""
|-CXXMethodDecl 0x56157d789e28 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56157d789d98 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56157d789ed0 <col:61> "" ""
|-CXXMethodDecl 0x56157d78a068 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56157d789f58 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56157d789fd0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56157d78a118 <col:67> "" ""
|-CXXMethodDecl 0x56157d78a230 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56157d78a1a0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56157d78a2d8 <col:63> "" ""
|-CXXMethodDecl 0x56157d78a470 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56157d78a360 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56157d78a3d8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56157d78a520 <col:69> "" ""
|-CXXMethodDecl 0x56157d78a638 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56157d78a5a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56157d78a6e0 <col:63> "" ""
|-CXXMethodDecl 0x56157d78cdb8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56157d78cca8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56157d78cd20 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56157d78ce68 <col:69> "" ""
|-CXXMethodDecl 0x56157d78cf80 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56157d78cef0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56157d78d028 <col:62> "" ""
|-CXXMethodDecl 0x56157d78d1c0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56157d78d0b0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56157d78d128 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56157d78d270 <col:68> "" ""
|-CXXMethodDecl 0x56157d78d388 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56157d78d2f8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56157d78d430 <col:63> "" ""
|-CXXMethodDecl 0x56157d78d5c8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56157d78d4b8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56157d78d530 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56157d78d678 <col:69> "" ""
|-CXXMethodDecl 0x56157d78d708 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56157d78d7a8 <col:64> "" ""
|-CXXMethodDecl 0x56157d78d838 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56157d78d8d8 <col:52> "" ""
|-CXXMethodDecl 0x56157d78d968 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56157d78da08 <col:67> "" ""
|-CXXMethodDecl 0x56157d78da98 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56157d78db38 <col:55> "" ""
|-CXXMethodDecl 0x56157d78dc50 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56157d78dbc0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56157d78dcf8 <col:58> "" ""
|-CXXMethodDecl 0x56157d78de90 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56157d78dd80 <col:33> col:36 'int'
| |-ParmVarDecl 0x56157d78ddf8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56157d78df40 <col:62> "" ""
|-CXXMethodDecl 0x56157d78e058 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56157d78dfc8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56157d78e100 <col:58> "" ""
|-CXXMethodDecl 0x56157d78e298 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56157d78e188 <col:33> col:36 'int'
| |-ParmVarDecl 0x56157d78e200 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56157d78e348 <col:62> "" ""
|-CXXMethodDecl 0x56157d78e460 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56157d78e3d0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56157d78e508 <col:60> "" ""
|-CXXMethodDecl 0x56157d78e6a0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56157d78e590 <col:34> col:37 'int'
| |-ParmVarDecl 0x56157d78e608 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56157d78e750 <col:64> "" ""
|-CXXMethodDecl 0x56157d78e868 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56157d78e7d8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56157d78e910 <col:58> "" ""
|-CXXMethodDecl 0x56157d78eaa8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56157d78e998 <col:33> col:36 'int'
| |-ParmVarDecl 0x56157d78ea10 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56157d78eb58 <col:62> "" ""
|-CXXMethodDecl 0x56157d78ec70 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56157d78ebe0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56157d78ed18 <col:59> "" ""
|-CXXMethodDecl 0x56157d78eeb0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56157d78eda0 <col:33> col:36 'int'
| |-ParmVarDecl 0x56157d78ee18 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56157d78ef60 <col:63> "" ""
|-AccessSpecDecl 0x56157d78efd0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56157d78eff8 prev 0x56157d784200 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56157d78f0f0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56157d78f1e0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56157d78f308 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56157d78f488 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56157d78f608 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56157d78f788 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56157d7a05b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56157d7a0e28 <col:11>
| |-CXXDestructorDecl 0x56157d7a0690 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56157d7a07c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56157d7a07c8
| | `-ParmVarDecl 0x56157d7a08d8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56157d7a0978 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56157d7a0978
| | `-ParmVarDecl 0x56157d7a0a88 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56157d7a3848 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56157d7a3958 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56157d7a3bd8 <col:11>
| |   `-ReturnStmt 0x56157d7a3bc8 <col:11>
| |     `-UnaryOperator 0x56157d7a3bb0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56157d7a3ba0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56157d7a39c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56157d7a39c8
|   `-ParmVarDecl 0x56157d7a3ad8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56157d78f7f0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56157d78f908 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56157d78f9a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56157d78fa10 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56157d78fa78 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56157d78fae0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56157d78fb40 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56157d78fc00 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56157d78fc60 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56157d78fcc0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56157d7a04c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56157d78f9a8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56157d7a0e38 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56157d7a0e90 <col:12>
| |-CXXConstructorDecl 0x56157d7a0af8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56157d7a0af8
| | `-ParmVarDecl 0x56157d7a0c08 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56157d7a0ca8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56157d7a0ca8
| | `-ParmVarDecl 0x56157d7a0db8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56157d7a2f30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56157d78fd38 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56157d78fd98 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56157d78fe00 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56157d78fe68 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56157d78fed0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56157d78ff38 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56157d78ff98 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56157d78fff8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56157d790060 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56157d7900e8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56157d78fd38 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56157d7a0460 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56157d78ff98 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56157d7a0ea0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56157d7a0f00 <col:21, line:755:5>
|-CXXConstructorDecl 0x56157d790288 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56157d7901c8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56157d790380 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56157d790568 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56157d790470 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56157d790838 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56157d790620 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56157d790698 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56157d790710 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d790a58 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56157d790908 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56157d790980 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56157d799038 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56157d790b18 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56157d790b90 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56157d790c08 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56157d799190 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56157d799100 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d7992d8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56157d799248 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56157d7993d0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d7a0fa0 prev 0x56157d77d860 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x56157d7a10d8 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x56157d7a1168 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x56157d7a1210 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x56157d7a12b0 <col:20>
| `-OptimizeNoneAttr 0x56157d7a1308 <col:30>
|-CXXMethodDecl 0x56157d7a1358 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x56157d7a13f8 <col:20>
| `-OptimizeNoneAttr 0x56157d7a1450 <col:30>
|-CXXMethodDecl 0x56157d7a14a0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x56157d7a1568 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x56157d7a1630 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x56157d7a1748 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x56157d7a1810 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x56157d7a18b0 <col:20>
| `-OptimizeNoneAttr 0x56157d7a1908 <col:30>
|-CXXMethodDecl 0x56157d7a1978 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x56157d7a1a18 <col:20>
| `-OptimizeNoneAttr 0x56157d7a1a70 <col:30>
|-CXXMethodDecl 0x56157d7a1b18 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x56157d7a1bb8 <col:20>
| `-OptimizeNoneAttr 0x56157d7a1c10 <col:30>
|-CXXMethodDecl 0x56157d7a1c60 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x56157d7a1d78 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x56157d7a1e98 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x56157d7a1fb8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x56157d7a2080 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x56157d7a2120 <col:62> "" ""
|-AccessSpecDecl 0x56157d7a2190 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x56157d7a21f0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x56157d7a2de8 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x56157d7a3010 <col:29, col:31>
|-CXXMethodDecl 0x56157d7a22b8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x56157d7a23f8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x56157d7a2368 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x56157d7a24f0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x56157d7a3020 <col:23, col:25>
|-CXXMethodDecl 0x56157d7a26a8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x56157d7a25e0 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x56157d7a2978 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56157d7a2760 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56157d7a27d8 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56157d7a2850 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56157d7a2b08 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x56157d7a2a40 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x56157d7a2c00 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x56157d7a2c68 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x56157d7a2c68
  `-ParmVarDecl 0x56157d7a2d78 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d5897f0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56157d589908 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56157d5899a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56157d589a08 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56157d589a68 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56157d589b18 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d589e20 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56157d589f38 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56157d589fe0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56157d58a048 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56157d58a0d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56157d590170 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56157d5905a8 <col:12>
|-CXXConstructorDecl 0x56157d590278 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56157d590388 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56157d589fe0 'data' 'const char *'
| | `-ImplicitCastExpr 0x56157d592b30 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56157d592b00 <col:12> 'const char *const' lvalue .data 0x56157d589fe0
| |     `-DeclRefExpr 0x56157d592ae0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d590388 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56157d58a048 'length' 'int'
| | `-ImplicitCastExpr 0x56157d592bc0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56157d592b90 <col:12> 'const int' lvalue .length 0x56157d58a048
| |     `-DeclRefExpr 0x56157d592b70 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d590388 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56157d58a0d8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56157d592c50 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56157d592c20 <col:12> 'String::memo_t *const' lvalue .memo 0x56157d58a0d8
| |     `-DeclRefExpr 0x56157d592c00 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d590388 '' 'const String::rep_t &'
| `-CompoundStmt 0x56157d592ca8 <col:12>
|-CXXConstructorDecl 0x56157d590428 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56157d590428
| `-ParmVarDecl 0x56157d590538 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56157d595a90 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56157d5a14a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56157d5a15b8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56157d5a1ad0 <col:12>
|   |-BinaryOperator 0x56157d5a18e8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56157d5a18a0 <col:12> 'const char *' lvalue ->data 0x56157d589fe0
|   | | `-CXXThisExpr 0x56157d5a1890 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56157d5a18d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56157d5a1860 <col:12> 'const char *const' lvalue .data 0x56157d589fe0
|   |     `-DeclRefExpr 0x56157d5a1840 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d5a15b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56157d5a19b0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56157d5a1968 <col:12> 'int' lvalue ->length 0x56157d58a048
|   | | `-CXXThisExpr 0x56157d5a1958 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56157d5a1998 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56157d5a1928 <col:12> 'const int' lvalue .length 0x56157d58a048
|   |     `-DeclRefExpr 0x56157d5a1908 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d5a15b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56157d5a1a78 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56157d5a1a30 <col:12> 'String::memo_t *' lvalue ->memo 0x56157d58a0d8
|   | | `-CXXThisExpr 0x56157d5a1a20 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56157d5a1a60 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56157d5a19f0 <col:12> 'String::memo_t *const' lvalue .memo 0x56157d58a0d8
|   |     `-DeclRefExpr 0x56157d5a19d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d5a15b8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56157d5a1ac0 <col:12>
|     `-UnaryOperator 0x56157d5a1aa8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56157d5a1a98 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56157d5a1628 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56157d5a1628
  `-ParmVarDecl 0x56157d5a1738 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56157d580d60 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56157d580e78 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56157d580f08 <col:16, col:22> col:16 public
|-TypedefDecl 0x56157d580f48 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56157d257fd0 'const char *'
|   `-QualType 0x56157d257521 'const char' const
|     `-BuiltinType 0x56157d257520 'char'
|-TypedefDecl 0x56157d580fd0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56157d580fa0 'String::const_iterator' sugar
|   |-Typedef 0x56157d580f48 'const_iterator'
|   `-PointerType 0x56157d257fd0 'const char *'
|     `-QualType 0x56157d257521 'const char' const
|       `-BuiltinType 0x56157d257520 'char'
|-TypedefDecl 0x56157d581140 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56157d5810b0 'int (String::*)() const'
|   |-RecordType 0x56157d580df0 'String'
|   | `-CXXRecord 0x56157d580d60 'String'
|   `-ParenType 0x56157d581050 'int () const' sugar
|     `-FunctionProtoType 0x56157d555bf0 'int () const' const cdecl
|       `-BuiltinType 0x56157d257580 'int'
|-TypedefDecl 0x56157d5811a8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56157d3aa7d0 'int64_t' sugar
|   |-Typedef 0x56157d2c0390 'int64_t'
|   `-TypedefType 0x56157d299630 '__int64_t' sugar
|     |-Typedef 0x56157d299208 '__int64_t'
|     `-BuiltinType 0x56157d2575a0 'long'
|-TypedefDecl 0x56157d581210 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56157d3aa6f0 'uint64_t' sugar
|   |-Typedef 0x56157d2c0530 'uint64_t'
|   `-TypedefType 0x56157d2996c0 '__uint64_t' sugar
|     |-Typedef 0x56157d299278 '__uint64_t'
|     `-BuiltinType 0x56157d257640 'unsigned long'
|-TypedefDecl 0x56157d5812a0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56157d581270 'String::intmax_t' sugar
|   |-Typedef 0x56157d5811a8 'intmax_t'
|   `-TypedefType 0x56157d3aa7d0 'int64_t' sugar
|     |-Typedef 0x56157d2c0390 'int64_t'
|     `-TypedefType 0x56157d299630 '__int64_t' sugar
|       |-Typedef 0x56157d299208 '__int64_t'
|       `-BuiltinType 0x56157d2575a0 'long'
|-TypedefDecl 0x56157d581330 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56157d581300 'String::uintmax_t' sugar
|   |-Typedef 0x56157d581210 'uintmax_t'
|   `-TypedefType 0x56157d3aa6f0 'uint64_t' sugar
|     |-Typedef 0x56157d2c0530 'uint64_t'
|     `-TypedefType 0x56157d2996c0 '__uint64_t' sugar
|       |-Typedef 0x56157d299278 '__uint64_t'
|       `-BuiltinType 0x56157d257640 'unsigned long'
|-CXXConstructorDecl 0x56157d5813f0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56157d581598 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56157d5814d8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56157d581748 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56157d581688 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56157d5818a0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56157d581810 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56157d581ab8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56157d581968 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56157d5819e8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56157d581cd8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56157d581b88 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56157d581c08 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56157d581ef8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56157d581da8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56157d581e28 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56157d582118 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56157d581fc8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56157d582048 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56157d5822a8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56157d5821e0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56157d582428 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56157d582368 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56157d5825b8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56157d5824f0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56157d582710 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56157d582680 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56157d582868 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56157d5827d8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56157d5829c0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56157d582930 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56157d582b48 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56157d582a88 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56157d582cd8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56157d582c10 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56157d582e68 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56157d582da0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56157d582ff8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56157d582f30 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56157d5830f0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56157d583218 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56157d583398 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56157d5832d0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56157d5834e8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56157d583458 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56157d5835a0 <col:63> "" ""
|-CXXMethodDecl 0x56157d5836e8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56157d583628 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56157d5838f8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56157d5837a8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56157d583828 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56157d583b18 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56157d5839c0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56157d583a40 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56157d583df8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56157d583bd8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56157d583c58 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56157d58fc40 <col:55> 'int' 10
| `-ParmVarDecl 0x56157d583cd0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56157d58fc60 <col:76> 'bool' true
|-CXXMethodDecl 0x56157d5840d8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56157d583ec0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56157d583f40 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56157d58fc70 <col:56> 'int' 10
| `-ParmVarDecl 0x56157d583fb8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56157d58fc90 <col:77> 'bool' true
|-CXXMethodDecl 0x56157d5841e0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56157d5842a8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56157d584370 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56157d584410 <col:20>
| `-OptimizeNoneAttr 0x56157d584468 <col:30>
|-CXXConversionDecl 0x56157d584558 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56157d584628 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56157d5846e8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56157d5847d8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56157d584898 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56157d584a18 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56157d584950 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56157d584b68 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56157d584ad8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56157d584c58 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56157d584d18 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56157d584f68 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56157d584dd0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56157d584e50 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56157d5851c8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56157d585030 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56157d5850b0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56157d585298 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56157d5854a8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56157d585350 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56157d5853d0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56157d5856c8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56157d585570 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56157d5855f0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56157d585858 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56157d585790 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56157d585948 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56157d585ab8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56157d5859f8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56157d585cc8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56157d585b78 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56157d585bf8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56157d585ee0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56157d585d88 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56157d585e00 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56157d586070 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56157d585fa0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56157d586290 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56157d586130 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56157d5861b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56157d5863e0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56157d586350 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56157d5865b8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56157d5864a0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56157d586520 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56157d586708 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56157d586678 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56157d586920 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56157d5867c0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56157d586840 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56157d58fca0 <col:39> 'int' 0
|-CXXMethodDecl 0x56157d586b40 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56157d5869e0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56157d586a60 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56157d58fcc0 <col:48> 'int' 0
|-CXXMethodDecl 0x56157d586d20 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56157d586c00 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56157d586c80 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56157d58fce0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56157d586df0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56157d586eb0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56157d586f70 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56157d587030 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56157d5870f0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56157d587298 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56157d5871a0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56157d587418 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56157d587350 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56157d5875f0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56157d5874d8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56157d587768 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56157d5876a8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56157d5878b0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56157d587820 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56157d587a00 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56157d587970 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56157d587bd8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56157d587ac0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56157d587b40 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56157d587db8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56157d587ca0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56157d587d20 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56157d587f08 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56157d587e78 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56157d588118 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56157d587fc8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56157d588048 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56157d588278 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56157d5881e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56157d5883d0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56157d588338 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56157d588478 <col:57> "" ""
|-CXXMethodDecl 0x56157d588588 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56157d5884f8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56157d5886d8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56157d588648 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56157d588858 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56157d588790 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56157d588920 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56157d5889e0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56157d588aa0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56157d588b40 <col:49> "" ""
|-CXXMethodDecl 0x56157d588bd0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56157d588c90 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56157d588d80 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56157d588e48 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56157d588f08 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56157d588fc8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56157d5890c0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56157d589188 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56157d589250 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56157d589428 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56157d589308 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56157d589388 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56157d589650 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56157d5894f0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56157d589570 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56157d589760 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56157d5897c8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56157d5897f0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56157d589908 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56157d5899a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56157d589a08 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56157d589a68 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56157d589b18 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56157d589b80 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56157d589db8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56157d589e08 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d589d98 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56157d589ca8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56157d589c50 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56157d589c90 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56157d589c70 <col:32> 'int' 8
|-CXXRecordDecl 0x56157d589e20 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56157d589f38 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56157d589fe0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56157d58a048 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56157d58a0d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56157d590170 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56157d5905a8 <col:12>
| |-CXXConstructorDecl 0x56157d590278 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56157d590388 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56157d589fe0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56157d592b30 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56157d592b00 <col:12> 'const char *const' lvalue .data 0x56157d589fe0
| | |     `-DeclRefExpr 0x56157d592ae0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d590388 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56157d58a048 'length' 'int'
| | | `-ImplicitCastExpr 0x56157d592bc0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56157d592b90 <col:12> 'const int' lvalue .length 0x56157d58a048
| | |     `-DeclRefExpr 0x56157d592b70 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d590388 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56157d58a0d8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56157d592c50 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56157d592c20 <col:12> 'String::memo_t *const' lvalue .memo 0x56157d58a0d8
| | |     `-DeclRefExpr 0x56157d592c00 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d590388 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56157d592ca8 <col:12>
| |-CXXConstructorDecl 0x56157d590428 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56157d590428
| | `-ParmVarDecl 0x56157d590538 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56157d595a90 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56157d5a14a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56157d5a15b8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56157d5a1ad0 <col:12>
| |   |-BinaryOperator 0x56157d5a18e8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56157d5a18a0 <col:12> 'const char *' lvalue ->data 0x56157d589fe0
| |   | | `-CXXThisExpr 0x56157d5a1890 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56157d5a18d0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56157d5a1860 <col:12> 'const char *const' lvalue .data 0x56157d589fe0
| |   |     `-DeclRefExpr 0x56157d5a1840 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d5a15b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56157d5a19b0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56157d5a1968 <col:12> 'int' lvalue ->length 0x56157d58a048
| |   | | `-CXXThisExpr 0x56157d5a1958 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56157d5a1998 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56157d5a1928 <col:12> 'const int' lvalue .length 0x56157d58a048
| |   |     `-DeclRefExpr 0x56157d5a1908 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d5a15b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56157d5a1a78 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56157d5a1a30 <col:12> 'String::memo_t *' lvalue ->memo 0x56157d58a0d8
| |   | | `-CXXThisExpr 0x56157d5a1a20 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56157d5a1a60 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56157d5a19f0 <col:12> 'String::memo_t *const' lvalue .memo 0x56157d58a0d8
| |   |     `-DeclRefExpr 0x56157d5a19d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56157d5a15b8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56157d5a1ac0 <col:12>
| |     `-UnaryOperator 0x56157d5a1aa8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56157d5a1a98 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56157d5a1628 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56157d5a1628
|   `-ParmVarDecl 0x56157d5a1738 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56157d58a150 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56157d58a398 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56157d58a1b8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56157d58a238 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56157d58a2b0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56157d590130 <col:79, line:261:5>
|   |-BinaryOperator 0x56157d58fda8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56157d58fd40 <col:2, col:5> 'const char *' lvalue .data 0x56157d589fe0
|   | | `-MemberExpr 0x56157d58fd10 <col:2> 'String::rep_t' lvalue ->_r 0x56157d58a150
|   | |   `-CXXThisExpr 0x56157d58fd00 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56157d58fd90 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56157d58fd70 <col:12> 'const char *' lvalue ParmVar 0x56157d58a1b8 'data' 'const char *'
|   |-BinaryOperator 0x56157d58fe70 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56157d58fe08 <col:2, col:5> 'int' lvalue .length 0x56157d58a048
|   | | `-MemberExpr 0x56157d58fdd8 <col:2> 'String::rep_t' lvalue ->_r 0x56157d58a150
|   | |   `-CXXThisExpr 0x56157d58fdc8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56157d58fe58 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56157d58fe38 <col:14> 'int' lvalue ParmVar 0x56157d58a238 'length' 'int'
|   `-IfStmt 0x56157d590118 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56157d58ff90 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56157d58ff78 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56157d58ff58 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56157d58ff38 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56157d58fed0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56157d58a0d8
|     |       | `-MemberExpr 0x56157d58fea0 <col:7> 'String::rep_t' lvalue ->_r 0x56157d58a150
|     |       |   `-CXXThisExpr 0x56157d58fe90 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56157d58ff20 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56157d58ff00 <col:17> 'String::memo_t *' lvalue ParmVar 0x56157d58a2b0 'memo' 'String::memo_t *'
|     `-CallExpr 0x56157d5900f0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56157d5900d8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56157d58ffe0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56157d578dc8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56157d590048 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56157d5899a8
|         `-ImplicitCastExpr 0x56157d590030 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56157d590010 <col:27> 'String::memo_t *' lvalue ParmVar 0x56157d58a2b0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56157d58a648 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56157d58a468 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56157d58a4e8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56157d58a560 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56157d58a150 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56157d5905b8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56157d590748 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56157d5906b0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56157d590620 <col:2> '<bound member function type>' ->assign_memo 0x56157d58a398
|     | `-ImplicitCastExpr 0x56157d5906e8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56157d590610 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56157d590700 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56157d590650 <col:14> 'const char *' lvalue ParmVar 0x56157d58a468 'data' 'const char *'
|     |-ImplicitCastExpr 0x56157d590718 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56157d590670 <col:20> 'int' lvalue ParmVar 0x56157d58a4e8 'length' 'int'
|     `-ImplicitCastExpr 0x56157d590730 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56157d590690 <col:28> 'String::memo_t *' lvalue ParmVar 0x56157d58a560 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56157d58a7d8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56157d58a718 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56157d5909a0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56157d590920 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56157d590770 <col:2> '<bound member function type>' ->assign_memo 0x56157d58a398
|     | `-CXXThisExpr 0x56157d590760 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56157d590958 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56157d5907f0 <col:14, col:19> 'const char *' lvalue .data 0x56157d589fe0
|     |   `-MemberExpr 0x56157d5907c0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56157d58a150
|     |     `-DeclRefExpr 0x56157d5907a0 <col:14> 'const String' lvalue ParmVar 0x56157d58a718 'x' 'const String &'
|     |-ImplicitCastExpr 0x56157d590970 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56157d590870 <col:25, col:30> 'int' lvalue .length 0x56157d58a048
|     |   `-MemberExpr 0x56157d590840 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56157d58a150
|     |     `-DeclRefExpr 0x56157d590820 <col:25> 'const String' lvalue ParmVar 0x56157d58a718 'x' 'const String &'
|     `-ImplicitCastExpr 0x56157d590988 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56157d5908f0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56157d58a0d8
|         `-MemberExpr 0x56157d5908c0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56157d58a150
|           `-DeclRefExpr 0x56157d5908a0 <col:38> 'const String' lvalue ParmVar 0x56157d58a718 'x' 'const String &'
|-CXXMethodDecl 0x56157d58a8a0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56157d591360 <col:31, line:278:5>
|   `-IfStmt 0x56157d591348 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56157d590a40 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56157d590a28 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56157d5909f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56157d58a0d8
|     |     `-MemberExpr 0x56157d5909c8 <col:6> 'String::rep_t' lvalue ->_r 0x56157d58a150
|     |       `-CXXThisExpr 0x56157d5909b8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56157d591320 <col:15, line:277:2>
|       |-ParenExpr 0x56157d590ef0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56157d590ec0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56157d590b50 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56157d590b38 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56157d590b20 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56157d590ae0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56157d5899a8
|       |   |       `-ImplicitCastExpr 0x56157d590ac8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56157d590a98 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56157d58a0d8
|       |   |           `-MemberExpr 0x56157d590a68 <col:27> 'String::rep_t' lvalue ->_r 0x56157d58a150
|       |   |             `-CXXThisExpr 0x56157d590a58 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56157d590bb0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56157d590b90 <col:54> 'int' 0
|       |   `-CallExpr 0x56157d590e20 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56157d590e08 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56157d590d88 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56157d2f0fe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56157d590e60 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56157d590c98 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56157d590e78 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56157d590cc8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56157d590e90 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56157d590d00 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56157d590ea8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56157d590d70 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56157d590d58 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56157d590d20 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56157d591240 <line:274:6, line:275:22>
|       | |-CallExpr 0x56157d591100 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56157d5910e8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56157d591060 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56157d57a210 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56157d591030 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56157d5899a8
|       | |   `-ImplicitCastExpr 0x56157d591018 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56157d590fe8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56157d58a0d8
|       | |       `-MemberExpr 0x56157d590fb8 <col:40> 'String::rep_t' lvalue ->_r 0x56157d58a150
|       | |         `-CXXThisExpr 0x56157d590fa8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56157d591200 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56157d5911e8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56157d591128 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56157d58f080 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56157d591228 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56157d591188 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56157d58a0d8
|       |       `-MemberExpr 0x56157d591158 <col:15> 'String::rep_t' lvalue ->_r 0x56157d58a150
|       |         `-CXXThisExpr 0x56157d591148 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56157d591300 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56157d591298 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56157d58a0d8
|         | `-MemberExpr 0x56157d591268 <col:6> 'String::rep_t' lvalue ->_r 0x56157d58a150
|         |   `-CXXThisExpr 0x56157d591258 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56157d5912e8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56157d5912c8 <col:16> 'int' 0
|-CXXMethodDecl 0x56157d58ab38 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56157d58a958 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56157d58a9d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56157d58aa50 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56157d58ac10 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56157d58ae60 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56157d58acc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56157d58ad48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56157d58adc0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56157d58b048 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56157d58af30 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56157d58afb0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56157d58b148 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56157d591438 <col:41, line:286:5>
|   `-ReturnStmt 0x56157d591428 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56157d5913f8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56157d5913c0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56157d5913a8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56157d591388 <col:46> 'int' 1
|-CXXMethodDecl 0x56157d58b3e8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56157d58b200 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56157d58b280 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56157d58b300 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56157d58f080 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56157d58b4b0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56157d58f150 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56157d58f320 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56157d58f208 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56157d58f288 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56157d58f3e0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56157d58f4a8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56157d58f5a8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56157d58f620 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56157d58f698 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56157d58f700 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56157d58f800 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56157d58f850 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56157d58f7e0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56157d58f7c0 <col:22> 'int' 14
|-CXXMethodDecl 0x56157d58fa68 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56157d58f880 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56157d58f900 <col:38> col:41 'int'
| `-ParmVarDecl 0x56157d58f980 <col:43> col:46 'int'
|-FriendDecl 0x56157d58fb70 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56157d58fc00 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
