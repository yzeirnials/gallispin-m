
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class EtherAddress
         0 |   uint16_t [3] _data
           | [sizeof=6, dsize=6, align=1,
           |  nvsize=6, nvalign=1]

*** Dumping AST Record Layout
         0 | struct EtherSwitch::AddrInfo
         0 |   int port
         8 |   class Timestamp stamp
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>
         0 |   class EtherAddress first
         0 |     uint16_t [3] _data
         8 |   struct EtherSwitch::AddrInfo second
         8 |     int port
        16 |     class Timestamp stamp
        16 |       union Timestamp::rep_t _t
        16 |         int64_t x
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt
         0 |   struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo> v
         0 |     class EtherAddress first
         0 |       uint16_t [3] _data
         8 |     struct EtherSwitch::AddrInfo second
         8 |       int port
        16 |       class Timestamp stamp
        16 |         union Timestamp::rep_t _t
        16 |           int64_t x
        24 |   struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt * _hashnext
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566461c4ff8 prev 0x5566461bc798 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566461c50f0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5566461c5180 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5566461c51f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5566461c52b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5566461c5380 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5566461c54f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5566461c5430 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5566461c55a0 <col:24>
| `-OptimizeNoneAttr 0x5566461c55f8 <col:34>
|-CXXMethodDecl 0x5566461c5640 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5566461c58f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5566461c56f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5566461c5768 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5566461c57e8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5566461c59b0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5566461c59e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5566461c5a50 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5566461c5ad8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5566461c5df8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5566461c5b90 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5566461c5c08 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5566461c5c80 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5566461c5d00 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5566461c5f10 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5566461cd888 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5566461cd888
| `-ParmVarDecl 0x5566461cd998 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5566461cda38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5566461cda38
| `-ParmVarDecl 0x5566461cdb48 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x556646276c98 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566461b8010 prev 0x5566461b7d90 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5566461b8108 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5566461b8198 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5566461b81f8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x5566461b82e8 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x5566461b83e8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5566461b85b8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5566461b8468 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5566461b84e0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5566461b8748 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5566461b8680 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5566461b87f0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5566461b8928 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5566461b8860 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5566461b8ac8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5566461b8a08 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5566461b8c68 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5566461b8ba8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5566461b8d10 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5566461b8e10 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5566461b8ef0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461b8df0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5566461b8dd0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5566461b8ea0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5566461b8f08 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566461b8e80 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5566461b8e60 <col:44> 'int' 2
|-CXXMethodDecl 0x5566461b9050 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5566461b8f38 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5566461b8fb8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5566461b91a8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5566461b9118 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5566461b93e8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5566461b9268 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5566461b92e0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5566461b9498 <col:20>
| `-OptimizeNoneAttr 0x5566461b94f0 <col:30>
|-CXXMethodDecl 0x5566461b95f8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5566461b9530 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5566461b96a0 <col:20>
| `-OptimizeNoneAttr 0x5566461b96f8 <col:30>
|-CXXMethodDecl 0x5566461b9748 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5566461b9810 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5566461b9928 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5566461b99b0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5566461b9a38 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5566461b9ac0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5566461b9b48 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5566461b9bd8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5566461b9c98 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5566461b9d20 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x5566461b9da8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5566461b9e30 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5566461b9eb8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5566461b9f40 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5566461b9fd0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5566461ba090 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5566461ba120 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5566461ba270 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5566461ba1d8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5566461ba400 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5566461ba330 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5566461ba6b0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5566461ba4b8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5566461ba538 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5566461ba5b8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5566461ba768 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5566461ba870 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5566461bab00 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461ba850 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5566461ba830 <col:33> 'int' 0
| |-EnumConstantDecl 0x5566461ba900 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5566461bab18 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461ba8e0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5566461ba8c0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5566461ba990 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5566461bab30 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461ba970 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5566461ba950 <col:38> 'int' 90
| |-EnumConstantDecl 0x5566461baa20 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5566461bab48 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461baa00 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5566461ba9e0 <col:35> 'int' 100
| `-EnumConstantDecl 0x5566461baab0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5566461bab60 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566461baa90 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5566461baa70 <col:32> 'int' 2000
|-CXXMethodDecl 0x5566461baba0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5566461bafe0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5566461bae50 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5566461baec8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5566461bb0b0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5566461bb230 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5566461bb160 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5566461bb438 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5566461bb2e8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5566461bb360 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5566461bb538 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5566461bb5d8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5566461bb6a0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566461bb730 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5566461bb960 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461bb710 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5566461bb6f0 <col:36> 'int' EnumConstant 0x5566461bb6a0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566461bb780 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566461bb7d0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566461bb820 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566461bb870 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5566461bb8c0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5566461bb910 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5566461bba48 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5566461bb988 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5566461bbb10 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5566461bbbd0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5566461bbc90 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5566461bbd50 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5566461bbe68 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5566461bbf30 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5566461bc0b0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5566461bbfe0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5566461bc1d8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5566461bc3d8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5566461bc288 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5566461bc308 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5566461c9d28 <col:54, line:127:5>
|   |-ParenExpr 0x5566461c9bd8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5566461c9ba8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5566461c9898 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5566461c9870 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5566461c9858 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5566461c9840 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5566461c9810 <col:31> 'Router *' lvalue ->_router 0x5566461c76f0
|   |   |         `-CXXThisExpr 0x5566461c9800 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5566461c98f8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5566461c98d8 <col:48> 'int' 0
|   |   `-CallExpr 0x5566461c9b08 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5566461c9af0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566461c9ad0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5566461c9b48 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566461c9968 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5566461c9b60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566461c9988 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5566461c9b78 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5566461c99c0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5566461c9b90 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566461c9ab8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566461c9aa0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566461c9a58 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5566461c9c70 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5566461c9c08 <col:9> 'Router *' lvalue ->_router 0x5566461c76f0
|   | | `-CXXThisExpr 0x5566461c9bf8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5566461c9c58 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5566461c9c38 <col:19> 'Router *' lvalue ParmVar 0x5566461bc288 'r' 'Router *'
|   `-BinaryOperator 0x5566461c9d08 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5566461c9ca0 <col:9> 'int' lvalue ->_eindex 0x5566461c7758
|     | `-CXXThisExpr 0x5566461c9c90 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5566461c9cf0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5566461c9cd0 <col:19> 'int' lvalue ParmVar 0x5566461bc308 'eindex' 'int'
|-CXXMethodDecl 0x5566461bc560 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5566461bc498 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5566461bc630 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5566461bc6f8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5566461bc798 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5566461bc9e8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5566461bc860 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5566461bc8e0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5566461bca98 <col:20>
| `-OptimizeNoneAttr 0x5566461bcaf0 <col:30>
|-CXXMethodDecl 0x5566461bcbf8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5566461bcb30 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5566461bcca0 <col:20>
| `-OptimizeNoneAttr 0x5566461bccf8 <col:30>
|-CXXMethodDecl 0x5566461bcdc8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5566461bcd38 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5566461bce70 <col:20>
| `-OptimizeNoneAttr 0x5566461bcec8 <col:30>
|-CXXMethodDecl 0x5566461bd058 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5566461bcf00 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5566461bcf80 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5566461bd1e8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5566461bd120 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5566461bd338 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5566461bd2a8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5566461bd488 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5566461bd3f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5566461bd5d8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5566461bd548 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5566461bd898 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5566461bd690 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5566461bd710 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5566461bd7b8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5566461bd970 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5566461bda30 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5566461bdd00 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5566461bdbb0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5566461bdc28 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5566461bde28 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5566461be000 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5566461bdee0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5566461bdf60 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5566461be1e8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5566461be0c8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5566461be148 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5566461be558 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5566461be2a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5566461be320 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5566461be3a0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5566461c9310 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5566461c92f0 <col:106> 'int' 0
| `-ParmVarDecl 0x5566461be418 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5566461c9348 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5566461c9328 <col:126> 'int' 0
|-CXXMethodDecl 0x5566461be8f8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5566461be628 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5566461be6c0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5566461be740 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5566461be7b8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5566461c9380 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5566461c9360 <col:114> 'int' 0
|-CXXMethodDecl 0x5566461bec88 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5566461be9d0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5566461bea48 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5566461beac8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5566461c9398 <col:96> 'int' 0
| `-ParmVarDecl 0x5566461beb40 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5566461c93d8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5566461c93b8 <col:116> 'int' 0
|-CXXMethodDecl 0x5566461bf008 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5566461bed58 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5566461bedd0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5566461bee50 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5566461c9410 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5566461c93f0 <col:109> 'int' 0
| `-ParmVarDecl 0x5566461beec8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5566461c9448 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5566461c9428 <col:129> 'int' 0
|-CXXMethodDecl 0x5566461bf388 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5566461bf0d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5566461bf150 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5566461bf1d0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5566461bf248 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5566461c9480 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5566461c9460 <col:117> 'int' 0
|-CXXMethodDecl 0x5566461bf718 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5566461bf460 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461bf4d8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5566461bf558 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5566461c9498 <col:99> 'int' 0
| `-ParmVarDecl 0x5566461bf5d0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5566461c94d8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5566461c94b8 <col:119> 'int' 0
|-CXXMethodDecl 0x5566461bfb38 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5566461bf7e8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5566461bf868 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5566461bf8e0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5566461bf960 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5566461c9510 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5566461c94f0 <col:108> 'int' 0
| `-ParmVarDecl 0x5566461bf9e0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5566461c9548 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5566461c9528 <col:141> 'int' 0
|-CXXMethodDecl 0x5566461bff58 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5566461bfc10 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5566461bfc90 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5566461bfd08 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5566461bfd88 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5566461bfe08 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5566461c9560 <col:121> 'int' 0
|-CXXMethodDecl 0x5566461c0388 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5566461c0038 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5566461c00b8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5566461c0130 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5566461c01b0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5566461c9580 <col:98> 'int' 0
| `-ParmVarDecl 0x5566461c0230 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5566461c95a0 <col:123> 'int' 0
|-CXXMethodDecl 0x5566461c0650 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5566461c0460 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5566461c04e0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5566461c0560 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5566461c95c0 <col:80> 'int' 0
|-EnumDecl 0x5566461c0708 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5566461c0810 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5566461c0aa0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461c07f0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5566461c07d0 <col:42> 'int' 1
| |-EnumConstantDecl 0x5566461c08a0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5566461c0ab8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461c0880 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5566461c0860 <col:40> 'int' 2
| |-EnumConstantDecl 0x5566461c0930 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5566461c0ad0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461c0910 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5566461c08f0 <col:44> 'int' 4
| |-EnumConstantDecl 0x5566461c09c0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5566461c0ae8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461c09a0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5566461c0980 <col:36> 'int' 7
| `-EnumConstantDecl 0x5566461c0a50 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5566461c0b00 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566461c0a30 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5566461c0a10 <col:34> 'int' 6
|-CXXMethodDecl 0x5566461c0db8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5566461c0b28 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5566461c0bc8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5566461c0c48 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5566461c0cc0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5566461c9678 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5566461c9660 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5566461c9648 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5566461c9628 <col:98, col:105> 'String' (CXXTemporary 0x5566461c9628)
|           `-CXXTemporaryObjectExpr 0x5566461c95f0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5566461c1058 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5566461c0e88 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5566461c0f00 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5566461c0f78 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5566461c9728 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5566461c9710 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5566461c96f8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5566461c96d8 <col:94, col:101> 'String' (CXXTemporary 0x5566461c96d8)
| |         `-CXXTemporaryObjectExpr 0x5566461c96a0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5566461c9f10 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5566461c9e88 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5566461c9e58 <col:9> '<bound member function type>' ->add_task_handlers 0x5566461c0db8
|     | `-CXXThisExpr 0x5566461c9e48 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5566461c9ec8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5566461c9dc8 <col:27> 'Task *' lvalue ParmVar 0x5566461c0e88 'task' 'Task *'
|     |-ImplicitCastExpr 0x5566461c9ee0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5566461c9de8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5566461c0f00 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5566461c9ef8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5566461c9e08 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5566461c0a50 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5566461c9e28 <col:62> 'const String' lvalue ParmVar 0x5566461c0f78 'prefix' 'const String &'
|-CXXMethodDecl 0x5566461c1268 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5566461c1120 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5566461c1198 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5566461c97d8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5566461c97c0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5566461c97a8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5566461c9788 <col:70, col:77> 'String' (CXXTemporary 0x5566461c9788)
| |         `-CXXTemporaryObjectExpr 0x5566461c9750 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5566461ca0e8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5566461ca060 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5566461ca030 <col:9> '<bound member function type>' ->add_task_handlers 0x5566461c0db8
|     | `-CXXThisExpr 0x5566461ca020 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5566461ca0a0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5566461c9fa0 <col:27> 'Task *' lvalue ParmVar 0x5566461c1120 'task' 'Task *'
|     |-ImplicitCastExpr 0x5566461ca0b8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5566461c9fc0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5566461ca0d0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5566461c9fe0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5566461c0a50 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5566461ca000 <col:57> 'const String' lvalue ParmVar 0x5566461c1198 'prefix' 'const String &'
|-CXXMethodDecl 0x5566461c1548 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5566461c1330 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c13b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c1428 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5566461c17f8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5566461c1618 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c1698 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c1718 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5566461c1ae8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5566461c18c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c1948 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c19c0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5566461c1d98 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5566461c1bb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c1c38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c1cb8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5566461c2048 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5566461c1e68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c1ee8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c1f68 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5566461c22f8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5566461c2118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c2198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c2210 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5566461c25a8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5566461c23c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c2448 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c24c8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5566461c28b8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5566461c26d0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c2750 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c27d0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5566461c2b98 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5566461c2988 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c2a08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c2ab0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5566461c2e78 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5566461c2c68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c2ce8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c2d90 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5566461c30e0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5566461c2f48 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5566461c2fc8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5566461c3040 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5566461c3388 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5566461c31b0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5566461c3230 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5566461c32a8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5566461c3638 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5566461c3458 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c34d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c3558 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5566461c38e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5566461c3708 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c3788 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c3800 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5566461c3b98 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5566461c39b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c3a38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c3ab0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5566461c3e68 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5566461c3c68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c3ce8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5566461c3d88 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5566461c4198 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5566461c3f38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5566461c3fb8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5566461c4030 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5566461c40a8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5566461c97f0 <col:93> 'bool' false
|-CXXMethodDecl 0x5566461c4380 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5566461c4268 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5566461c42e8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5566461c4558 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5566461c4440 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5566461c44c0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5566461c4838 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5566461c4618 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5566461c4690 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5566461c4710 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5566461c4788 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5566461c4b28 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5566461c4908 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5566461c4980 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5566461c4a00 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5566461c4a78 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5566461c4d60 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5566461c4c00 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5566461c4c80 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5566461c4f48 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5566461c4e28 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5566461c4ea8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5566461c4ff8 prev 0x5566461bc798 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5566461c50f0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5566461c5180 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5566461c51f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5566461c52b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5566461c5380 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5566461c54f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5566461c5430 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5566461c55a0 <col:24>
| | `-OptimizeNoneAttr 0x5566461c55f8 <col:34>
| |-CXXMethodDecl 0x5566461c5640 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5566461c58f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5566461c56f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5566461c5768 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5566461c57e8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5566461c59b0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5566461c59e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5566461c5a50 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5566461c5ad8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5566461c5df8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5566461c5b90 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5566461c5c08 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5566461c5c80 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5566461c5d00 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5566461c5f10 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5566461cd888 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5566461cd888
| | `-ParmVarDecl 0x5566461cd998 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5566461cda38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5566461cda38
| | `-ParmVarDecl 0x5566461cdb48 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x556646276c98 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5566461c5f88 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5566461c6028 <col:38> "" ""
|-CXXMethodDecl 0x5566461c60b8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5566461c6158 <col:44> "" ""
|-AccessSpecDecl 0x5566461c61c8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5566461c61f0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5566461c62f0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5566461c6340 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566461c62d0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5566461c62b0 <col:27> 'int' 4
|-FieldDecl 0x5566461c63f8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5566461c65a8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5566461c6660 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5566461c76f0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5566461c7758 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5566461c78a8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5566461c77e8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5566461c7a58 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5566461c7968 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5566461c7c38 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5566461c7b18 <col:20> col:23 'int'
| `-ParmVarDecl 0x5566461c7b98 <col:25> col:28 'int'
|-CXXMethodDecl 0x5566461c7ee0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5566461c7d00 <col:23> col:26 'int'
| |-ParmVarDecl 0x5566461c7d80 <col:28> col:31 'int'
| `-ParmVarDecl 0x5566461c7df8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5566461c7f98 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5566461c8060 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5566461c80b0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5566461c8100 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5566461c82e0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5566461c8190 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5566461c8208 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5566461c8588 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5566461c83a8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5566461c8428 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5566461c84a0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5566461c87a8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5566461c8658 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5566461c86d8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5566461c8ae0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5566461c8868 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5566461c88e8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5566461c8960 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5566461c89e0 <col:57> col:60 'int'
|-CXXMethodDecl 0x5566461c8cc8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5566461c8bb0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5566461c8c30 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5566461c8e18 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5566461c8d88 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5566461c9198 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5566461c8ed8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5566461c8f58 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5566461c8fd0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5566461c9050 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5566461c92b0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> >
         0 |   class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> (base) (empty)
         0 |   struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> >
         0 |   class HashContainer_rep<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
         0 |     class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> (base) (empty)
         0 |     struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<32>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>
         0 |   class HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
         0 |     class HashContainer_rep<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
         0 |       class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> (base) (empty)
         0 |       struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** buckets
         8 |       uint32_t nbuckets
        12 |       uint32_t first_bucket
        16 |       size_t size
        24 |       struct libdivide_u32_t bucket_divider
        24 |         uint32_t magic
        28 |         uint8_t more
        32 |   class SizedHashAllocator<32> _alloc
        32 |     class HashAllocator (base)
        32 |       struct HashAllocator::link * _free
        40 |       struct HashAllocator::buffer * _buffer
        48 |       size_t _size
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashTable<class EtherAddress, struct EtherSwitch::AddrInfo>
         0 |   class HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void> _rep
         0 |     class HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
         0 |       class HashContainer_rep<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
         0 |         class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> (base) (empty)
         0 |         struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** buckets
         8 |         uint32_t nbuckets
        12 |         uint32_t first_bucket
        16 |         size_t size
        24 |         struct libdivide_u32_t bucket_divider
        24 |           uint32_t magic
        28 |           uint8_t more
        32 |     class SizedHashAllocator<32> _alloc
        32 |       class HashAllocator (base)
        32 |         struct HashAllocator::link * _free
        40 |         struct HashAllocator::buffer * _buffer
        48 |         size_t _size
        56 |   struct EtherSwitch::AddrInfo _default_value
        56 |     int port
        64 |     class Timestamp stamp
        64 |       union Timestamp::rep_t _t
        64 |         int64_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class EtherSwitch
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashTable<class EtherAddress, struct EtherSwitch::AddrInfo> _table
       112 |     class HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void> _rep
       112 |       class HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
       112 |         class HashContainer_rep<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
       112 |           class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> (base) (empty)
       112 |           struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** buckets
       120 |           uint32_t nbuckets
       124 |           uint32_t first_bucket
       128 |           size_t size
       136 |           struct libdivide_u32_t bucket_divider
       136 |             uint32_t magic
       140 |             uint8_t more
       144 |       class SizedHashAllocator<32> _alloc
       144 |         class HashAllocator (base)
       144 |           struct HashAllocator::link * _free
       152 |           struct HashAllocator::buffer * _buffer
       160 |           size_t _size
       168 |     struct EtherSwitch::AddrInfo _default_value
       168 |       int port
       176 |       class Timestamp stamp
       176 |         union Timestamp::rep_t _t
       176 |           int64_t x
       184 |   uint32_t _timeout
           | [sizeof=192, dsize=188, align=8,
           |  nvsize=188, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55664625d368 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|-CXXRecordDecl 0x556646261a98 prev 0x55664625d368 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x556646261b28 <col:31, col:37> col:31 public
|-TypedefDecl 0x556646263620 <line:34:5, col:34> col:34 referenced key_type 'typename elt::key_type':'const EtherAddress'
| `-ElaboratedType 0x5566462635d0 'typename elt::key_type' sugar
|   `-TypedefType 0x5566462635b0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt::key_type' sugar
|     |-Typedef 0x556646261fd0 'key_type'
|     `-ElaboratedType 0x5566462615e0 'typename Pair<const EtherAddress, AddrInfo>::key_type' sugar
|       `-TypedefType 0x5566462615c0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_type' sugar
|         |-Typedef 0x55664625d950 'key_type'
|         `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|           |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55664613c778 'T'
|           `-QualType 0x5566461b7ff1 'const EtherAddress' const
|             `-RecordType 0x5566461b7ff0 'EtherAddress'
|               `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x5566462636f0 <line:35:5, col:45> col:45 key_const_reference 'typename elt::key_const_reference':'const EtherAddress &'
| `-ElaboratedType 0x5566462636a0 'typename elt::key_const_reference' sugar
|   `-TypedefType 0x5566462620c0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt::key_const_reference' sugar
|     |-Typedef 0x556646262068 'key_const_reference'
|     `-ElaboratedType 0x5566462616d0 'typename Pair<const EtherAddress, AddrInfo>::key_const_reference' sugar
|       `-TypedefType 0x5566462616b0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_const_reference' sugar
|         |-Typedef 0x55664625d9e8 'key_const_reference'
|         `-LValueReferenceType 0x55664625d9b0 'const EtherAddress &'
|           `-QualType 0x55664625d821 'const const EtherAddress' const
|             `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|               |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|               | `-TemplateTypeParm 0x55664613c778 'T'
|               `-QualType 0x5566461b7ff1 'const EtherAddress' const
|                 `-RecordType 0x5566461b7ff0 'EtherAddress'
|                   `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-CXXMethodDecl 0x5566462638e0 <line:36:5, line:38:5> line:36:16 hashnext 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *&(HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *)' static
| `-ParmVarDecl 0x5566462637e8 <col:25, col:28> col:28 e 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
|-CXXMethodDecl 0x556646263b18 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>::key_const_reference (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *)' static
| `-ParmVarDecl 0x556646263a28 <col:40, col:49> col:49 e 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
|-CXXMethodDecl 0x556646263d78 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>::key_type &, const HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>::key_type &)' static
| |-ParmVarDecl 0x556646263c28 <col:27, col:43> col:43 a 'const HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>::key_type &'
| `-ParmVarDecl 0x556646263ca0 <col:46, col:62> col:62 b 'const HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>::key_type &'
|-CXXConstructorDecl 0x556646267e28 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &)' inline default trivial noexcept-unevaluated 0x556646267e28
| `-ParmVarDecl 0x556646267f38 <col:7> col:7 'const HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &'
|-CXXConstructorDecl 0x556646267fd8 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &&)' inline default trivial noexcept-unevaluated 0x556646267fd8
| `-ParmVarDecl 0x5566462680e8 <col:7> col:7 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &&'
|-CXXDestructorDecl 0x5566462682f8 <col:7> col:7 implicit ~HashContainer_adapter 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556646268438 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &(const HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &)' inline default trivial noexcept-unevaluated 0x556646268438
| `-ParmVarDecl 0x556646268548 <col:7> col:7 'const HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &'
`-CXXMethodDecl 0x5566462685b8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &(HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &&)' inline default trivial noexcept-unevaluated 0x5566462685b8
  `-ParmVarDecl 0x5566462686c8 <col:7> col:7 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566461d09f8 prev 0x5566461b7f60 <../dummy_inc/click/etheraddress.hh:9:1, line:148:1> line:9:7 referenced class EtherAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-PackedAttr 0x5566461d2468 <line:148:18>
|-CXXRecordDecl 0x5566461d0af0 <line:9:1, col:7> col:7 implicit referenced class EtherAddress
|-AccessSpecDecl 0x5566461d0b80 <col:22, col:28> col:22 public
|-TypedefDecl 0x5566461d0bb8 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x556645dab8f0 'uninitialized_type'
|   `-CXXRecord 0x556645dab858 'uninitialized_type'
|-CXXConstructorDecl 0x5566461d0c48 <line:14:5, line:16:5> line:14:12 EtherAddress 'void ()' inline
| `-CompoundStmt 0x5566461d2768 <col:27, line:16:5>
|   `-BinaryOperator 0x5566461d2748 <line:15:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x5566461d2550 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x5566461d2538 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5566461d24e8 <col:2> 'uint16_t [3]' lvalue ->_data 0x5566461d2268
|     | |   `-CXXThisExpr 0x5566461d24d8 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x5566461d2518 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x5566461d2730 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x5566461d2710 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x5566461d25e8 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x5566461d25d0 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x5566461d2580 <col:13> 'uint16_t [3]' lvalue ->_data 0x5566461d2268
|         | |   `-CXXThisExpr 0x5566461d2570 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x5566461d25b0 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x5566461d26f8 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x5566461d26d8 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x5566461d2680 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x5566461d2668 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x5566461d2618 <col:24> 'uint16_t [3]' lvalue ->_data 0x5566461d2268
|             | |   `-CXXThisExpr 0x5566461d2608 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x5566461d2648 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x5566461d26c0 <col:35> 'uint16_t':'unsigned short' <IntegralCast>
|               `-IntegerLiteral 0x5566461d26a0 <col:35> 'int' 0
|-CXXConstructorDecl 0x5566461d0d98 <line:22:5, line:24:5> line:22:21 EtherAddress 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x5566461d0d08 <col:34, col:55> col:55 used data 'const unsigned char *'
| `-CompoundStmt 0x5566461d2930 <col:61, line:24:5>
|   `-CallExpr 0x5566461d2880 <line:23:2, col:23> 'void *'
|     |-ImplicitCastExpr 0x5566461d2868 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5566461d2848 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x556645eb5668 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x5566461d28d0 <col:9> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x5566461d28b8 <col:9> 'uint16_t *' <ArrayToPointerDecay>
|     |   `-MemberExpr 0x5566461d27d8 <col:9> 'uint16_t [3]' lvalue ->_data 0x5566461d2268
|     |     `-CXXThisExpr 0x5566461d27c8 <col:9> 'EtherAddress *' implicit this
|     |-ImplicitCastExpr 0x5566461d2900 <col:16> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x5566461d28e8 <col:16> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x5566461d2808 <col:16> 'const unsigned char *' lvalue ParmVar 0x5566461d0d08 'data' 'const unsigned char *'
|     `-ImplicitCastExpr 0x5566461d2918 <col:22> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x5566461d2828 <col:22> 'int' 6
|-CXXConstructorDecl 0x5566461d0ee8 <line:27:5, line:29:5> line:27:12 EtherAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5566461d0e58 <col:25, col:51> col:51 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x5566461d29a0 <col:59, line:29:5>
|   `-CStyleCastExpr 0x5566461d2978 <line:28:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5566461d2948 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5566461d0e58 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5566461d0fe8 <line:32:5, line:34:5> line:32:25 used make_broadcast 'EtherAddress ()' static
| `-CompoundStmt 0x5566461d30e8 <col:42, line:34:5>
|   `-ReturnStmt 0x5566461d30d8 <line:33:2, col:28>
|     `-ExprWithCleanups 0x5566461d30c0 <col:9, col:28> 'EtherAddress'
|       `-CXXConstructExpr 0x5566461d3090 <col:9, col:28> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5566461d2ec8 <col:9, col:28> 'EtherAddress' xvalue
|           `-CXXFunctionalCastExpr 0x5566461d2e40 <col:9, col:28> 'EtherAddress' functional cast to class EtherAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x5566461d2d30 <col:9, col:28> 'EtherAddress' 'void (uint16_t)'
|               `-ImplicitCastExpr 0x5566461d2d18 <col:22> 'uint16_t':'unsigned short' <IntegralCast>
|                 `-IntegerLiteral 0x5566461d29c8 <col:22> 'int' 65535
|-CXXMethodDecl 0x5566461d10a8 <line:36:5, col:70> col:32 broadcast 'EtherAddress ()' static inline
| `-DeprecatedAttr 0x5566461d1148 <col:59> "" ""
|-TypedefDecl 0x5566461d12c8 <line:39:5, col:59> col:34 referenced unspecified_bool_type 'bool (EtherAddress::*)() const'
| `-MemberPointerType 0x5566461d1240 'bool (EtherAddress::*)() const'
|   |-RecordType 0x5566461b7ff0 'EtherAddress'
|   | `-CXXRecord 0x5566461d09f8 'EtherAddress'
|   `-ParenType 0x5566461d11e0 'bool () const' sugar
|     `-FunctionProtoType 0x556645cfe670 'bool () const' const cdecl
|       `-BuiltinType 0x556645c56550 'bool'
|-CXXConversionDecl 0x5566461d1408 <line:41:5, line:43:5> line:41:12 operator bool (EtherAddress::*)() const 'EtherAddress::unspecified_bool_type () const' inline
| `-CompoundStmt 0x5566461d34c8 <col:51, line:43:5>
|   `-ReturnStmt 0x5566461d34b8 <line:42:2, col:70>
|     `-ConditionalOperator 0x5566461d3488 <col:9, col:70> 'bool (EtherAddress::*)() const'
|       |-BinaryOperator 0x5566461d33b0 <col:9, col:40> 'bool' '||'
|       | |-BinaryOperator 0x5566461d32c8 <col:9, col:28> 'bool' '||'
|       | | |-ImplicitCastExpr 0x5566461d3280 <col:9, col:16> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x5566461d3268 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x5566461d31b0 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x5566461d3198 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x5566461d3110 <col:9> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|       | | |     |   `-CXXThisExpr 0x5566461d3100 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x5566461d3140 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x5566461d32b0 <col:21, col:28> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x5566461d3298 <col:21, col:28> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x5566461d3248 <col:21, col:28> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x5566461d3230 <col:21> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x5566461d31e0 <col:21> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|       | |       |   `-CXXThisExpr 0x5566461d31d0 <col:21> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x5566461d3210 <col:27> 'int' 1
|       | `-ImplicitCastExpr 0x5566461d3398 <col:33, col:40> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x5566461d3380 <col:33, col:40> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x5566461d3360 <col:33, col:40> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x5566461d3348 <col:33> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x5566461d32f8 <col:33> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|       |       |   `-CXXThisExpr 0x5566461d32e8 <col:33> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x5566461d3328 <col:39> 'int' 2
|       |-UnaryOperator 0x5566461d3438 <col:44, col:59> 'bool (EtherAddress::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x5566461d3408 <col:45, col:59> 'bool () const' CXXMethod 0x5566461d14d8 'is_group' 'bool () const'
|       `-ImplicitCastExpr 0x5566461d3470 <col:70> 'bool (EtherAddress::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x5566461d3450 <col:70> 'int' 0
|-CXXMethodDecl 0x5566461d14d8 <line:49:5, line:51:5> line:49:17 used is_group 'bool () const' inline
| `-CompoundStmt 0x5566461d3688 <col:34, line:51:5>
|   `-ReturnStmt 0x5566461d3678 <line:50:2, col:21>
|     `-ImplicitCastExpr 0x5566461d3660 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5566461d3640 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x5566461d3628 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x5566461d3610 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x5566461d35d0 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x5566461d3590 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x5566461d3560 <col:9> '<bound member function type>' ->data 0x5566461d1970
|         |     |   `-CXXThisExpr 0x5566461d3550 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x5566461d35b0 <col:16> 'int' 0
|         `-IntegerLiteral 0x5566461d35f0 <col:21> 'int' 1
|-CXXMethodDecl 0x5566461d1598 <line:57:5, line:59:5> line:57:17 is_local 'bool () const' inline
| `-CompoundStmt 0x5566461d3848 <col:34, line:59:5>
|   `-ReturnStmt 0x5566461d3838 <line:58:2, col:21>
|     `-ImplicitCastExpr 0x5566461d3820 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5566461d3800 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x5566461d37e8 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x5566461d37d0 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x5566461d3790 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x5566461d3750 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x5566461d3720 <col:9> '<bound member function type>' ->data 0x5566461d1970
|         |     |   `-CXXThisExpr 0x5566461d3710 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x5566461d3770 <col:16> 'int' 0
|         `-IntegerLiteral 0x5566461d37b0 <col:21> 'int' 2
|-CXXMethodDecl 0x5566461d1658 <line:64:5, line:66:5> line:64:17 used is_broadcast 'bool () const' inline
| `-CompoundStmt 0x5566461d3b48 <col:38, line:66:5>
|   `-ReturnStmt 0x5566461d3b38 <line:65:2, col:43>
|     `-BinaryOperator 0x5566461d3b18 <col:9, col:43> 'bool' '=='
|       |-BinaryOperator 0x5566461d3ad8 <col:9, col:38> 'int' '+'
|       | |-BinaryOperator 0x5566461d39f0 <col:9, col:27> 'int' '+'
|       | | |-ImplicitCastExpr 0x5566461d39a8 <col:9, col:16> 'int' <IntegralCast>
|       | | | `-ImplicitCastExpr 0x5566461d3990 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x5566461d38d8 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x5566461d38c0 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x5566461d3870 <col:9> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|       | | |     |   `-CXXThisExpr 0x5566461d3860 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x5566461d38a0 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x5566461d39d8 <col:20, col:27> 'int' <IntegralCast>
|       | |   `-ImplicitCastExpr 0x5566461d39c0 <col:20, col:27> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x5566461d3970 <col:20, col:27> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x5566461d3958 <col:20> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x5566461d3908 <col:20> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|       | |       |   `-CXXThisExpr 0x5566461d38f8 <col:20> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x5566461d3938 <col:26> 'int' 1
|       | `-ImplicitCastExpr 0x5566461d3ac0 <col:31, col:38> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x5566461d3aa8 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x5566461d3a88 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x5566461d3a70 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x5566461d3a20 <col:31> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|       |       |   `-CXXThisExpr 0x5566461d3a10 <col:31> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x5566461d3a50 <col:37> 'int' 2
|       `-IntegerLiteral 0x5566461d3af8 <col:43> 'int' 196605
|-CXXMethodDecl 0x5566461d17d8 <line:69:5, line:75:5> line:69:24 is_broadcast 'bool (const unsigned char *)' static inline
| |-ParmVarDecl 0x5566461d1710 <col:37, col:58> col:58 used data 'const unsigned char *'
| `-CompoundStmt 0x5566461d3c98 <col:64, line:75:5>
|   `-ReturnStmt 0x5566461d3c88 <line:71:2, col:68>
|     `-CXXMemberCallExpr 0x5566461d3c68 <col:9, col:68> 'bool'
|       `-MemberExpr 0x5566461d3c38 <col:9, col:55> '<bound member function type>' ->is_broadcast 0x5566461d1658
|         `-CXXReinterpretCastExpr 0x5566461d3ba8 <col:9, col:52> 'const EtherAddress *' reinterpret_cast<const class EtherAddress *> <BitCast>
|           `-ImplicitCastExpr 0x5566461d3b90 <col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x5566461d3b60 <col:48> 'const unsigned char *' lvalue ParmVar 0x5566461d1710 'data' 'const unsigned char *'
|-CXXMethodDecl 0x5566461d18a8 <line:78:5, line:80:5> line:78:27 data 'unsigned char *()' inline
| `-CompoundStmt 0x5566461d3d60 <col:34, line:80:5>
|   `-ReturnStmt 0x5566461d3d50 <line:79:2, col:48>
|     `-CXXReinterpretCastExpr 0x5566461d3d20 <col:9, col:48> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x5566461d3d08 <col:43> 'uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x5566461d3cc0 <col:43> 'uint16_t [3]' lvalue ->_data 0x5566461d2268
|           `-CXXThisExpr 0x5566461d3cb0 <col:43> 'EtherAddress *' implicit this
|-CXXMethodDecl 0x5566461d1970 <line:83:5, line:85:5> line:83:33 used data 'const unsigned char *() const' inline
| `-CompoundStmt 0x5566461d3e28 <col:46, line:85:5>
|   `-ReturnStmt 0x5566461d3e18 <line:84:2, col:54>
|     `-CXXReinterpretCastExpr 0x5566461d3de8 <col:9, col:54> 'const unsigned char *' reinterpret_cast<const unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x5566461d3dd0 <col:49> 'const uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x5566461d3d88 <col:49> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|           `-CXXThisExpr 0x5566461d3d78 <col:49> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x5566461d1ab8 <line:89:5, line:91:5> line:89:28 used sdata 'const uint16_t *() const' inline
| `-CompoundStmt 0x5566461d3ea8 <col:42, line:91:5>
|   `-ReturnStmt 0x5566461d3e98 <line:90:2, col:9>
|     `-ImplicitCastExpr 0x5566461d3e80 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       `-MemberExpr 0x5566461d3e50 <col:9> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|         `-CXXThisExpr 0x5566461d3e40 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x5566461d1ba8 <line:94:5, line:97:5> line:94:19 hashcode 'size_t () const' inline
| `-CompoundStmt 0x5566461d42b8 <col:36, line:97:5>
|   `-ReturnStmt 0x5566461d42a8 <line:95:2, line:96:31>
|     `-BinaryOperator 0x5566461d4288 <line:95:9, line:96:31> 'unsigned long' '^'
|       |-ParenExpr 0x5566461d4108 <line:95:9, col:46> 'unsigned long'
|       | `-BinaryOperator 0x5566461d40e8 <col:10, col:45> 'unsigned long' '|'
|       |   |-ImplicitCastExpr 0x5566461d40d0 <col:10, col:17> 'unsigned long' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x5566461d40b8 <col:10, col:17> 'uint16_t':'unsigned short' <LValueToRValue>
|       |   |   `-ArraySubscriptExpr 0x5566461d3f38 <col:10, col:17> 'const uint16_t':'const unsigned short' lvalue
|       |   |     |-ImplicitCastExpr 0x5566461d3f20 <col:10> 'const uint16_t *' <ArrayToPointerDecay>
|       |   |     | `-MemberExpr 0x5566461d3ed0 <col:10> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|       |   |     |   `-CXXThisExpr 0x5566461d3ec0 <col:10> 'const EtherAddress *' implicit this
|       |   |     `-IntegerLiteral 0x5566461d3f00 <col:16> 'int' 2
|       |   `-ParenExpr 0x5566461d4098 <col:21, col:45> 'size_t':'unsigned long'
|       |     `-BinaryOperator 0x5566461d4078 <col:22, col:43> 'size_t':'unsigned long' '<<'
|       |       |-CStyleCastExpr 0x5566461d4030 <col:22, col:38> 'size_t':'unsigned long' <NoOp>
|       |       | `-ImplicitCastExpr 0x5566461d4018 <col:31, col:38> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|       |       |   `-ImplicitCastExpr 0x5566461d4000 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|       |       |     `-ArraySubscriptExpr 0x5566461d3fd0 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |       |-ImplicitCastExpr 0x5566461d3fb8 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       |       | `-MemberExpr 0x5566461d3f68 <col:31> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|       |       |       |   `-CXXThisExpr 0x5566461d3f58 <col:31> 'const EtherAddress *' implicit this
|       |       |       `-IntegerLiteral 0x5566461d3f98 <col:37> 'int' 1
|       |       `-IntegerLiteral 0x5566461d4058 <col:43> 'int' 16
|       `-ParenExpr 0x5566461d4268 <line:96:8, col:31> 'size_t':'unsigned long'
|         `-BinaryOperator 0x5566461d4248 <col:9, col:30> 'size_t':'unsigned long' '<<'
|           |-CStyleCastExpr 0x5566461d4200 <col:9, col:25> 'size_t':'unsigned long' <NoOp>
|           | `-ImplicitCastExpr 0x5566461d41e8 <col:18, col:25> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           |   `-ImplicitCastExpr 0x5566461d41d0 <col:18, col:25> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|           |     `-ArraySubscriptExpr 0x5566461d41a0 <col:18, col:25> 'const uint16_t':'const unsigned short' lvalue
|           |       |-ImplicitCastExpr 0x5566461d4188 <col:18> 'const uint16_t *' <ArrayToPointerDecay>
|           |       | `-MemberExpr 0x5566461d4138 <col:18> 'uint16_t const[3]' lvalue ->_data 0x5566461d2268
|           |       |   `-CXXThisExpr 0x5566461d4128 <col:18> 'const EtherAddress *' implicit this
|           |       `-IntegerLiteral 0x5566461d4168 <col:24> 'int' 0
|           `-IntegerLiteral 0x5566461d4228 <col:30> 'int' 9
|-CXXMethodDecl 0x5566461d1c68 <line:109:5, line:111:5> line:109:19 used unparse 'String () const' inline
| `-CompoundStmt 0x5566461d43c8 <col:35, line:111:5>
|   `-ReturnStmt 0x5566461d43b8 <line:110:2, col:22>
|     `-ExprWithCleanups 0x5566461d43a0 <col:9, col:22> 'String'
|       `-CXXConstructExpr 0x5566461d4370 <col:9, col:22> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5566461d4358 <col:9, col:22> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5566461d4338 <col:9, col:22> 'String' (CXXTemporary 0x5566461d4338)
|             `-CXXMemberCallExpr 0x5566461d4310 <col:9, col:22> 'String'
|               `-MemberExpr 0x5566461d42e0 <col:9> '<bound member function type>' ->unparse_dash 0x5566461d1de8
|                 `-CXXThisExpr 0x5566461d42d0 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x5566461d1d28 <line:118:5, col:28> col:12 unparse_colon 'String () const'
|-CXXMethodDecl 0x5566461d1de8 <line:126:5, col:27> col:12 used unparse_dash 'String () const'
|-CXXMethodDecl 0x5566461d1ea8 <line:131:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x5566461d1f48 <col:44> "" ""
|-CXXConversionDecl 0x5566461d1fe8 <line:136:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5566461d2090 <col:51> "" ""
|-TypedefDecl 0x5566461d2148 <line:138:5, col:33> col:33 parameter_type 'const EtherAddress &'
| `-LValueReferenceType 0x5566461d2110 'const EtherAddress &'
|   `-QualType 0x5566461b7ff1 'const EtherAddress' const
|     `-RecordType 0x5566461b7ff0 'EtherAddress'
|       `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-AccessSpecDecl 0x5566461d21a0 <line:140:2, col:9> col:2 private
|-FieldDecl 0x5566461d2268 <line:142:5, col:21> col:14 referenced _data 'uint16_t [3]'
|-CXXConstructorDecl 0x5566461d23b8 <line:144:5, line:146:5> line:144:5 used EtherAddress 'void (uint16_t)'
| |-ParmVarDecl 0x5566461d22c8 <col:18, col:27> col:27 used m 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5566461d4670 <col:30, line:146:5>
|   `-BinaryOperator 0x5566461d4650 <line:145:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x5566461d4458 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x5566461d4440 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5566461d43f0 <col:2> 'uint16_t [3]' lvalue ->_data 0x5566461d2268
|     | |   `-CXXThisExpr 0x5566461d43e0 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x5566461d4420 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x5566461d4638 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x5566461d4618 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x5566461d44f0 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x5566461d44d8 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x5566461d4488 <col:13> 'uint16_t [3]' lvalue ->_data 0x5566461d2268
|         | |   `-CXXThisExpr 0x5566461d4478 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x5566461d44b8 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x5566461d4600 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x5566461d45e0 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x5566461d4588 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x5566461d4570 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x5566461d4520 <col:24> 'uint16_t [3]' lvalue ->_data 0x5566461d2268
|             | |   `-CXXThisExpr 0x5566461d4510 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x5566461d4550 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x5566461d45c8 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-DeclRefExpr 0x5566461d45a8 <col:35> 'uint16_t':'unsigned short' lvalue ParmVar 0x5566461d22c8 'm' 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x5566461d29e8 <line:9:7> col:7 implicit constexpr EtherAddress 'void (const EtherAddress &)' inline default trivial noexcept-unevaluated 0x5566461d29e8
| `-ParmVarDecl 0x5566461d2af8 <col:7> col:7 'const EtherAddress &'
|-CXXConstructorDecl 0x5566461d2b98 <col:7> col:7 implicit used constexpr EtherAddress 'void (EtherAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5566461d2ca8 <col:7> col:7 used 'EtherAddress &&'
| |-CXXCtorInitializer Field 0x5566461d2268 '_data' 'uint16_t [3]'
| | `-ArrayInitLoopExpr 0x5566461d3030 <col:7> 'uint16_t [3]'
| |   |-OpaqueValueExpr 0x5566461d2fb8 <col:7> 'uint16_t [3]' xvalue
| |   | `-MemberExpr 0x5566461d2f70 <col:7> 'uint16_t [3]' xvalue ._data 0x5566461d2268
| |   |   `-CXXStaticCastExpr 0x5566461d2f40 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |   |     `-DeclRefExpr 0x5566461d2f10 <col:7> 'EtherAddress' lvalue ParmVar 0x5566461d2ca8 '' 'EtherAddress &&'
| |   `-ImplicitCastExpr 0x5566461d3018 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |     `-ArraySubscriptExpr 0x5566461d2ff8 <col:7> 'uint16_t':'unsigned short' xvalue
| |       |-ImplicitCastExpr 0x5566461d2fe0 <col:7> 'uint16_t *' <ArrayToPointerDecay>
| |       | `-OpaqueValueExpr 0x5566461d2fb8 <col:7> 'uint16_t [3]' xvalue
| |       |   `-MemberExpr 0x5566461d2f70 <col:7> 'uint16_t [3]' xvalue ._data 0x5566461d2268
| |       |     `-CXXStaticCastExpr 0x5566461d2f40 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |       |       `-DeclRefExpr 0x5566461d2f10 <col:7> 'EtherAddress' lvalue ParmVar 0x5566461d2ca8 '' 'EtherAddress &&'
| |       `-ArrayInitIndexExpr 0x5566461d2fd0 <<invalid sloc>> 'unsigned long'
| `-CompoundStmt 0x5566461d3080 <col:7>
|-CXXDestructorDecl 0x5566461d2d60 <col:7> col:7 implicit referenced ~EtherAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556646262e28 <col:7> col:7 implicit operator= 'EtherAddress &(const EtherAddress &)' inline default trivial noexcept-unevaluated 0x556646262e28
| `-ParmVarDecl 0x556646262f38 <col:7> col:7 'const EtherAddress &'
`-CXXMethodDecl 0x556646262fa8 <col:7> col:7 implicit operator= 'EtherAddress &(EtherAddress &&)' inline default trivial noexcept-unevaluated 0x556646262fa8
  `-ParmVarDecl 0x5566462630b8 <col:7> col:7 'EtherAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddress = type { [3 x i16] }
  NonVirtualBaseLLVMType:%class.EtherAddress = type { [3 x i16] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556646150940 prev 0x556646147780 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556646150a38 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x556646150ad8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x5566461578a0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556646157c88 <col:11>
|-CXXConstructorDecl 0x556646157980 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556646157a68 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5566461583d0 <col:11>
|-CXXConstructorDecl 0x556646157b08 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x556646157c18 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x556646159c28 <col:11>
|-CXXDestructorDecl 0x556646158f38 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556645e5fae8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556645e5fbf8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x556645e604c0 <col:11>
|   `-ReturnStmt 0x556645e604b0 <col:11>
|     `-UnaryOperator 0x556645e60498 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556645e60488 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x556645e5fc68 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x556645e5fc68
  `-ParmVarDecl 0x556645e5fd78 <col:11> col:11 'Timestamp::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556646146938 prev 0x556646146648 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556646146a30 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x556646146ac0 <col:19, col:25> col:19 public
|-TypedefDecl 0x556646146af8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x556645dabcc0 'int32_t' sugar
|   |-Typedef 0x556645cbf458 'int32_t'
|   `-TypedefType 0x556645c985b0 '__int32_t' sugar
|     |-Typedef 0x556645c981c8 '__int32_t'
|     `-BuiltinType 0x556645c565d0 'int'
|-TypedefDecl 0x556646146b60 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x556645dabe80 'int64_t' sugar
|   |-Typedef 0x556645cbf4c0 'int64_t'
|   `-TypedefType 0x556645c986d0 '__int64_t' sugar
|     |-Typedef 0x556645c982a8 '__int64_t'
|     `-BuiltinType 0x556645c565f0 'long'
|-EnumDecl 0x556646146bb8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x556646146d30 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x556646146d10 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x556646146ce8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x556646146cd0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x556646146ca0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x556646146e28 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x556646146e08 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x556646146de0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x556646146dc8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x556646146da0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x556646146d80 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x556646146e78 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x556646146f80 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566461474d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646146f60 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x556646146f40 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x556646147010 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5566461474e8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646146ff0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x556646146fd0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x5566461470a0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556646147500 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646147080 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x556646147060 <col:25> 'int' 1000
| |-EnumConstantDecl 0x556646147130 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556646147518 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646147110 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5566461470f0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x5566461471c0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556646147530 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461471a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x556646147180 <col:25> 'int' 1000
| |-EnumConstantDecl 0x556646147250 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556646147548 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646147230 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x556646147210 <col:24> 'int' 1000
| |-EnumConstantDecl 0x5566461472e0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556646147560 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461472c0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x5566461472a0 <col:26> 'int' EnumConstant 0x556646146f80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x5566461473b0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x556646147578 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646147390 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x556646147370 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x556646147330 <col:27> 'int' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x556646147350 <col:44> 'int' EnumConstant 0x556646147250 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x556646147480 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x556646147590 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556646147460 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x556646147440 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x556646147400 <col:27> 'int' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x556646147420 <col:44> 'int' EnumConstant 0x556646147130 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x5566461475a8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x5566461476b0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x556646147700 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556646147690 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x556646147670 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x556646147728 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x556645dab8f0 'uninitialized_type'
|   `-CXXRecord 0x556645dab858 'uninitialized_type'
|-CXXRecordDecl 0x556646147780 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x556646147890 <line:174:5, line:176:5> line:174:12 Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556646157c98 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556646157db8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x556646157d70 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x556646157d00 <col:9> '<bound member function type>' ->assign 0x55664614c4d8
|     | `-CXXThisExpr 0x556646157cf0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x556646157d30 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x556646157da0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x556646157d50 <col:19> 'int' 0
|-CXXConstructorDecl 0x556646147ad8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x556646147950 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x5566461479c8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566461535d0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566461535b0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556646157dd0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556646157f20 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x556646157ea8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x556646157e38 <col:9> '<bound member function type>' ->assign 0x55664614c4d8
|     | `-CXXThisExpr 0x556646157e28 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556646157ef0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x556646157ed8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x556646157e68 <col:16> 'long' lvalue ParmVar 0x556646147950 'sec' 'long'
|     `-ImplicitCastExpr 0x556646157f08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x556646157e88 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566461479c8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556646147d38 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x556646147ba8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x556646147c20 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556646153608 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566461535e8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556646157f38 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556646158070 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x556646158010 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x556646157fa0 <col:9> '<bound member function type>' ->assign 0x55664614c4d8
|     | `-CXXThisExpr 0x556646157f90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556646158040 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556646157fd0 <col:16> 'int' lvalue ParmVar 0x556646147ba8 'sec' 'int'
|     `-ImplicitCastExpr 0x556646158058 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x556646157ff0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x556646147c20 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556646147f98 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x556646147e08 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x556646147e80 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556646153640 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556646153620 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556646158088 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5566461581d8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x556646158160 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x5566461580f0 <col:9> '<bound member function type>' ->assign 0x55664614c4d8
|     | `-CXXThisExpr 0x5566461580e0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5566461581a8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x556646158190 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x556646158120 <col:16> 'unsigned long' lvalue ParmVar 0x556646147e08 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x5566461581c0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x556646158140 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x556646147e80 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556646149130 <line:199:5, line:201:5> line:199:21 Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x556646148068 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x5566461480e0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x556646153678 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556646153658 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566461581f0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556646158340 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x5566461582c8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x556646158258 <col:9> '<bound member function type>' ->assign 0x55664614c4d8
|     | `-CXXThisExpr 0x556646158248 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556646158310 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5566461582f8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x556646158288 <col:16> 'unsigned int' lvalue ParmVar 0x556646148068 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x556646158328 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5566461582a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566461480e0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x556646149290 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x556646149200 <col:31> col:37 'double'
|-CXXConstructorDecl 0x556646149428 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x556646149368 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x556646149658 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x556646149560 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x556646149808 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x556646149748 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5566461583e0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x556646158358 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x556646149748 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x556646158440 <col:19, line:214:5>
|-CXXConstructorDecl 0x5566461499d8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x556646149918 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556646158450 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556646158500 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5566461584d8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x5566461584a8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x556646149918 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x556646149bc8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x556646149b40 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x5566461466e0 'Timestamp'
|   | `-CXXRecord 0x556646146938 'Timestamp'
|   `-ParenType 0x556646149ae0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x556646149ab0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x556646146c80 'Timestamp::seconds_type' sugar
|         |-Typedef 0x556646146af8 'seconds_type'
|         `-TypedefType 0x556645dabcc0 'int32_t' sugar
|           |-Typedef 0x556645cbf458 'int32_t'
|           `-TypedefType 0x556645c985b0 '__int32_t' sugar
|             |-Typedef 0x556645c981c8 '__int32_t'
|             `-BuiltinType 0x556645c565d0 'int'
|-CXXConversionDecl 0x556646149d08 <line:222:5, col:45> col:12 operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556646149dd8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x556646158608 <col:37, line:231:5>
|   `-ReturnStmt 0x5566461585f8 <line:227:9, col:23>
|     `-BinaryOperator 0x5566461585d8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x5566461585a8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x556646158558 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x556646150ad8
|       |   `-MemberExpr 0x556646158528 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x556646151a88
|       |     `-CXXThisExpr 0x556646158518 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5566461585c0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x556646158588 <col:23> 'int' 0
|-CXXMethodDecl 0x556646149e98 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x556646149f58 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55664614a018 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55664614a0d8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55664614a198 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55664614a308 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55664614a248 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55664614a450 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55664614a3c0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55664614a518 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55664614a5b8 <col:54> "" ""
|-CXXMethodDecl 0x55664614a648 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55664614a6e8 <col:54> "" ""
|-CXXMethodDecl 0x55664614a778 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55664614a818 <col:54> "" ""
|-CXXMethodDecl 0x55664614a918 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55664614a9e8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55664614ab18 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55664614ac10 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55664614ad48 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x556646158820 <col:39, line:271:5>
|   `-ReturnStmt 0x556646158810 <line:267:9, col:61>
|     `-CallExpr 0x5566461587b0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x556646158798 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556646158620 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x556646151db8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5566461587e0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x556646158680 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x556646150ad8
|       |   `-MemberExpr 0x556646158650 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x556646151a88
|       |     `-CXXThisExpr 0x556646158640 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5566461587f8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x556646158720 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5566461586f0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5566461586b0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x556646158708 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5566461586d0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147250 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55664614ae08 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5566461589e0 <col:39, line:279:5>
|   `-ReturnStmt 0x5566461589d0 <line:275:9, col:61>
|     `-CallExpr 0x556646158970 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x556646158958 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556646158838 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x556646151db8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5566461589a0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x556646158898 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x556646150ad8
|       |   `-MemberExpr 0x556646158868 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x556646151a88
|       |     `-CXXThisExpr 0x556646158858 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5566461589b8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x556646158938 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x556646158908 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5566461588c8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x556646158920 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5566461588e8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147130 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55664614aec8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x556646158b78 <col:39, line:287:5>
|   `-ReturnStmt 0x556646158b68 <line:283:9, col:53>
|     `-BinaryOperator 0x556646158b48 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x556646158b18 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x556646158a38 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x556646150ad8
|       |   `-MemberExpr 0x556646158a08 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x556646151a88
|       |     `-CXXThisExpr 0x5566461589f8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x556646158b30 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x556646158af8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x556646158ad8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x556646158aa8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556646158a68 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646146f80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556646158ac0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556646158a88 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55664614afb8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x556646159e10 <col:40, line:293:5>
|   |-DeclStmt 0x556646158cc0 <line:291:9, col:48>
|   | `-VarDecl 0x556646158ba0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x556646158ca0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x556646158c48 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x556646158c18 <col:22> '<bound member function type>' ->subsec 0x556646149f58
|   |     |   `-CXXThisExpr 0x556646158c08 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x556646158c88 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x556646158c68 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461473b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x556646159e00 <line:292:9, col:70>
|     `-ExprWithCleanups 0x556646159de8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x556646159db8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556646159da0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x556646159d80 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x556646159d50 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x556646159ae8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x556646159ad0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x556646158cd8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x556646158ba0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x556646159cf0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x556646159cd8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x556646159ca8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x556646159b00 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x556646159a70 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x556646159a58 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x556646159a08 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x556646146888 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5566461599a8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x556646158d08 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x556646158cf8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5566461599f0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5566461599d8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5566461591c8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x556646158d30 <col:39> 'int' 0
|               |               `-BinaryOperator 0x556646158dc0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x556646158d90 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x556646158d50 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461473b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x556646158da8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x556646158d70 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x556646158ba0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x556646159d20 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x556646159ab8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x556646159aa8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55664614b078 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55664615a368 <col:40, line:302:5>
|   |-DeclStmt 0x556646159f60 <line:297:9, col:48>
|   | `-VarDecl 0x556646159e40 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x556646159f40 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x556646159ee8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x556646159eb8 <col:22> '<bound member function type>' ->subsec 0x556646149f58
|   |     |   `-CXXThisExpr 0x556646159ea8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x556646159f28 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x556646159f08 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147480 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55664615a358 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55664615a340 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55664615a310 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55664615a2f8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55664615a2d8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55664615a2a8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55664615a1d0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55664615a1b8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x556646159f78 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x556646159e40 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55664615a248 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55664615a230 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55664615a200 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55664615a1e8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55664615a158 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55664615a140 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55664615a120 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x556646146888 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55664615a0c0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x556646159fa8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x556646159f98 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55664615a108 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55664615a0f0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55664615a080 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x556646159fd0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55664615a060 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55664615a030 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x556646159ff0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147480 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55664615a048 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55664615a010 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x556646159e40 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55664615a278 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55664615a1a0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55664615a190 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55664614b138 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55664615a3f0 <col:40, line:306:5>
|   `-ReturnStmt 0x55664615a3e0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55664615a3b0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55664615a398 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55664615a388 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55664614b2d8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55664614b1e8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55664614b4a8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55664614b3b0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55664614b598 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55664614b708 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55664614b648 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55664615a538 <col:56, line:320:5>
|   `-ReturnStmt 0x55664615a528 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55664615a510 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55664615a4e0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55664615a4c8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55664615a488 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55664615a458 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55664615a418 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55664614b648 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55664615a470 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55664615a438 <col:31> 'int' 0
|-CXXMethodDecl 0x55664614b948 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55664614b7c0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614b838 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55664615a708 <col:72, line:326:5>
|   `-ReturnStmt 0x55664615a6f8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55664615a6e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55664615a6b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55664615a698 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55664615a658 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55664615a640 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55664615a560 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55664614b7c0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55664615a600 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55664615a5e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55664615a580 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x556646150230 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55664615a628 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55664615a5a0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55664614b838 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55664614baf8 <line:328:5, line:337:5> line:328:29 make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55664614ba08 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55664615add0 <col:56, line:337:5>
|   |-DeclStmt 0x55664615aa08 <line:329:9, col:51>
|   | `-VarDecl 0x55664615a730 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55664615a9f0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55664615a9c0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55664615a9a8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55664615a990 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55664615a960 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55664615a948 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55664615a930 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55664615a820 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55664615abc0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55664615aa70 <col:9, col:14> 'int64_t':'long' lvalue .x 0x556646150ad8
|   | | `-MemberExpr 0x55664615aa40 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x556646151a88
|   | |   `-DeclRefExpr 0x55664615aa20 <col:9> 'Timestamp' lvalue Var 0x55664615a730 't' 'Timestamp'
|   | `-BinaryOperator 0x55664615aba0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55664615ab70 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55664615aaa0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55664614ba08 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55664615ab88 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55664615ab50 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55664615ab30 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55664615ab00 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55664615aac0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55664615ab18 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55664615aae0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147250 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55664615adb8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55664615ad88 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55664615ad70 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55664615ad50 <col:16> 'Timestamp' lvalue Var 0x55664615a730 't' 'Timestamp'
|-CXXMethodDecl 0x55664614bcc0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55664614bbb0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614bc28 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55664615af88 <col:72, line:343:5>
|   `-ReturnStmt 0x55664615af78 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55664615af60 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55664615af30 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55664615af18 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55664615aed8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55664615aec0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55664615ae08 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55664614bbb0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55664615ae80 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55664615ae68 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55664615ae28 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x556646150378 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55664615aea8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55664615ae48 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55664614bc28 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55664614be10 <line:345:5, line:354:5> line:345:29 make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55664614bd80 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55664615b3d0 <col:56, line:354:5>
|   |-DeclStmt 0x55664615b178 <line:346:9, col:51>
|   | `-VarDecl 0x55664615afb0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55664615b160 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55664615b130 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55664615b118 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55664615b100 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55664615b0d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55664615b0b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55664615b0a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55664615b070 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55664615b330 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55664615b1e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x556646150ad8
|   | | `-MemberExpr 0x55664615b1b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x556646151a88
|   | |   `-DeclRefExpr 0x55664615b190 <col:9> 'Timestamp' lvalue Var 0x55664615afb0 't' 'Timestamp'
|   | `-BinaryOperator 0x55664615b310 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55664615b2e0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55664615b210 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55664614bd80 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55664615b2f8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55664615b2c0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55664615b2a0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55664615b270 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55664615b230 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55664615b288 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55664615b250 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147130 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55664615b3b8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55664615b388 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55664615b370 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55664615b350 <col:16> 'Timestamp' lvalue Var 0x55664615afb0 't' 'Timestamp'
|-CXXMethodDecl 0x55664614bfd8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55664614bec8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614bf40 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55664615b588 <col:72, line:360:5>
|   `-ReturnStmt 0x55664615b578 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55664615b560 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55664615b530 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55664615b518 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55664615b4d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55664615b4c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55664615b408 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55664614bec8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55664615b480 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55664615b468 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55664615b428 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5566461504c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55664615b4a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55664615b448 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55664614bf40 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55664614c128 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55664614c098 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x556646167ef8 <col:56, line:371:5>
|   |-DeclStmt 0x55664615b778 <line:363:9, col:51>
|   | `-VarDecl 0x55664615b5b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55664615b760 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55664615b730 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55664615b718 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55664615b700 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55664615b6d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55664615b6b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55664615b6a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55664615b670 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x556646167e58 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55664615b7e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x556646150ad8
|   | | `-MemberExpr 0x55664615b7b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x556646151a88
|   | |   `-DeclRefExpr 0x55664615b790 <col:9> 'Timestamp' lvalue Var 0x55664615b5b0 't' 'Timestamp'
|   | `-CallExpr 0x556646167df8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x556646167de0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55664615b810 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x556646151db8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x556646167e28 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55664615b830 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55664614c098 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x556646167e40 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x556646167dc0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x556646167d90 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55664615b850 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646146f80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x556646167da8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55664615b870 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x556646167ee0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x556646167eb0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x556646167e98 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x556646167e78 <col:16> 'Timestamp' lvalue Var 0x55664615b5b0 't' 'Timestamp'
|-CXXMethodDecl 0x55664614c218 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x556646168038 <col:39, line:377:5>
|   `-ReturnStmt 0x556646168028 <line:376:9, col:30>
|     `-ExprWithCleanups 0x556646168010 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x556646167fe0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x556646167fc8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x556646167f88 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x556646167f30 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x556646167f70 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x556646167f50 <col:29> 'int' 1
|-CXXMethodDecl 0x55664614c2d8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x556646168118 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5566461680d0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x556646168060 <col:9> '<bound member function type>' ->assign 0x55664614c4d8
|     | `-CXXThisExpr 0x556646168050 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x556646168090 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x556646168100 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5566461680b0 <col:19> 'int' 0
|-CXXMethodDecl 0x55664614c4d8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55664614c388 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614c400 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566461536b0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x556646153690 <col:60> 'int' 0
| `-CompoundStmt 0x556646168310 <col:63, line:395:5>
|   `-BinaryOperator 0x5566461682f0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x556646168170 <col:9, col:12> 'int64_t':'long' lvalue .x 0x556646150ad8
|     | `-MemberExpr 0x556646168140 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x556646151a88
|     |   `-CXXThisExpr 0x556646168130 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5566461682d0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x556646168260 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x556646168200 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5566461681e8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5566461681d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5566461681a0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55664614c388 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x556646168248 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x556646168228 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5566461682b8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5566461682a0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x556646168280 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55664614c400 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55664614c6a8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55664614c598 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614c610 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646168468 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x556646168420 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x556646168338 <col:9> '<bound member function type>' ->assign 0x55664614c4d8
|     | `-CXXThisExpr 0x556646168328 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x556646168450 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556646168368 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55664614c598 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5566461683e0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5566461683c8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556646168388 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x556646150378 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x556646168408 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5566461683a8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55664614c610 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55664614c878 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55664614c768 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614c7e0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5566461685c0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x556646168578 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x556646168490 <col:9> '<bound member function type>' ->assign 0x55664614c4d8
|     | `-CXXThisExpr 0x556646168480 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5566461685a8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5566461684c0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55664614c768 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x556646168538 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x556646168520 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5566461684e0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5566461504c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x556646168560 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556646168500 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55664614c7e0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55664614ca48 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55664614c938 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614c9b0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5566461536e8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5566461536c8 <col:57> 'int' 0
| `-DeprecatedAttr 0x55664614caf8 <col:75> "" ""
|-CXXMethodDecl 0x55664614cc88 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55664614cb78 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614cbf0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55664614cd38 <col:74> "" ""
|-CXXMethodDecl 0x55664614cec8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55664614cdb8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55664614ce30 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55664614cf78 <col:74> "" ""
|-CXXMethodDecl 0x55664614d008 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55664614d0a8 <col:42> "" ""
|-CXXMethodDecl 0x55664614f8e0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55664614f7c0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55664614f840 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55664614f9b0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55664614fa70 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55664614fb10 <col:20>
| `-OptimizeNoneAttr 0x55664614fb68 <col:30>
|-CXXMethodDecl 0x55664614fbb0 <line:446:5, col:36> col:29 recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55664614fc70 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55664614fd30 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55664614fdf0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55664614feb0 <line:481:5, col:43> col:29 recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55664614ff70 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x556646150030 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5566461500f0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x556646150230 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566461501a0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646168708 <col:58, line:512:5>
|   `-ReturnStmt 0x5566461686f8 <line:511:9, col:53>
|     `-BinaryOperator 0x5566461686d8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5566461686a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5566461685d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566461501a0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5566461686c0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556646168688 <col:23, col:53> 'int'
|           `-BinaryOperator 0x556646168668 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x556646168638 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566461685f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556646168650 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556646168618 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147250 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556646150378 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566461502e8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646168850 <col:58, line:516:5>
|   `-ReturnStmt 0x556646168840 <line:515:9, col:53>
|     `-BinaryOperator 0x556646168820 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5566461687f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556646168720 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566461502e8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556646168808 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5566461687d0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5566461687b0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x556646168780 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556646168740 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556646168798 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556646168760 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147130 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5566461504c0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556646150430 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646168998 <col:58, line:520:5>
|   `-ReturnStmt 0x556646168988 <line:519:9, col:53>
|     `-BinaryOperator 0x556646168968 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x556646168938 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556646168868 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556646150430 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556646168950 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556646168918 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5566461688f8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5566461688c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556646168888 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646146f80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5566461688e0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566461688a8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556646150608 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556646150578 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646168ae0 <col:60, line:524:5>
|   `-ReturnStmt 0x556646168ad0 <line:523:9, col:55>
|     `-BinaryOperator 0x556646168ab0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x556646168a80 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5566461689b0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556646150578 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556646168a98 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556646168a60 <col:25, col:55> 'int'
|           `-BinaryOperator 0x556646168a40 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x556646168a10 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5566461689d0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556646168a28 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5566461689f0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147250 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556646150750 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5566461506c0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646168c28 <col:60, line:528:5>
|   `-ReturnStmt 0x556646168c18 <line:527:9, col:55>
|     `-BinaryOperator 0x556646168bf8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x556646168bc8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556646168af8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5566461506c0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556646168be0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556646168ba8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x556646168b88 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x556646168b58 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556646168b18 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556646168b70 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556646168b38 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646147130 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x556646150898 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x556646150808 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646168d70 <col:60, line:532:5>
|   `-ReturnStmt 0x556646168d60 <line:531:9, col:55>
|     `-BinaryOperator 0x556646168d40 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x556646168d10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x556646168c40 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x556646150808 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x556646168d28 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x556646168cf0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x556646168cd0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x556646168ca0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x556646168c60 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x556646146f80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x556646168cb8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x556646168c80 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5566461472e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x556646150940 prev 0x556646147780 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556646150a38 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x556646150ad8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x5566461578a0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556646157c88 <col:11>
| |-CXXConstructorDecl 0x556646157980 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556646157a68 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5566461583d0 <col:11>
| |-CXXConstructorDecl 0x556646157b08 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x556646157c18 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x556646159c28 <col:11>
| |-CXXDestructorDecl 0x556646158f38 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x556645e5fae8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556645e5fbf8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x556645e604c0 <col:11>
| |   `-ReturnStmt 0x556645e604b0 <col:11>
| |     `-UnaryOperator 0x556645e60498 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556645e60488 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x556645e5fc68 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x556645e5fc68
|   `-ParmVarDecl 0x556645e5fd78 <col:11> col:11 'Timestamp::rep_t &&'
|-EnumDecl 0x556646150b40 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x556646150c40 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x556646150e40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646150c20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x556646150c00 <col:21> 'int' 0
| |-EnumConstantDecl 0x556646150cd0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x556646150e58 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646150cb0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x556646150c90 <col:23> 'int' 1
| |-EnumConstantDecl 0x556646150d60 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x556646150e70 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646150d40 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x556646150d20 <col:23> 'int' 2
| `-EnumConstantDecl 0x556646150df0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x556646150e88 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556646150dd0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x556646150db0 <col:27> 'int' 3
|-CXXMethodDecl 0x556646150ec8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x556646150f90 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x556646151198 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x556646151040 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x5566461510c0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x556646153700 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x5566461513a8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x556646151258 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x5566461512d0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x556646151478 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x556646151538 <line:635:5, col:37> col:24 warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x5566461516a8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x5566461515e8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x556646151770 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x556646151830 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x5566461518f0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5566461519b0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x556646151a50 <line:670:3, col:10> col:3 private
|-FieldDecl 0x556646151a88 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x556646151af8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x556646168d88 <col:27, line:684:5>
|-CXXMethodDecl 0x556646151bb8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x556646168d98 <col:27, line:696:5>
|-CXXMethodDecl 0x556646151db8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x556646151c68 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x556646151ce0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646168f20 <col:66, line:700:5>
|   `-ReturnStmt 0x556646168f10 <line:699:9, col:31>
|     `-CallExpr 0x556646168eb0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x556646168e98 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556646168e48 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x556645fd4168 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x556646168ee0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x556646168e08 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x556646151c68 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x556646168ef8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556646168e28 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x556646151ce0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556646152128 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x556646151e78 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x556646151ef0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x556646151f68 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x556646151fe0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x556646169270 <col:64, line:707:5>
|   |-DeclStmt 0x556646168fb0 <line:704:9, col:24>
|   | `-VarDecl 0x556646168f48 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5566461691c0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x556646168fc8 <col:9> 'int32_t':'int' lvalue ParmVar 0x556646151ef0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5566461691a8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x556646169140 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x556646169128 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566461690a8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x556645fd9438 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x556646169178 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x556646169048 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x556646151f68 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x556646169190 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x556646169068 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x556646151fe0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x556646169088 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x556646168f48 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x556646169250 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5566461691e0 <col:9> 'int32_t':'int' lvalue ParmVar 0x556646151e78 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x556646169238 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x556646169220 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x556646169200 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x556646168f48 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x5566461523c8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x5566461521f8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x556646152270 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x5566461522e8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x556646152668 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x556646152490 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x556646152508 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x556646152580 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x5566461527f8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x556646152730 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x5566461529f8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x5566461528b0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x556646152928 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x556646152cc8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x556646152c08 parent 0x556645c564d8 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x556646152ab8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x556646152b30 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x556646152ee8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x556646152e28 parent 0x556645c564d8 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x556646152d18 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x556646152d90 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x5566461530b0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x556646152ff8 parent 0x556645c564d8 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x556646152f38 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x556646153338 <line:720:5, col:73> col:30
| `-FunctionDecl 0x556646153278 parent 0x556645c564d8 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x556646153128 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5566461531a0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x556646153558 <line:721:5, col:73> col:30
| `-FunctionDecl 0x556646153498 parent 0x556645c564d8 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x556646153388 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x556646153400 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x556646158de0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x556646158ec8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556646159938 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5566461598f0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x556646151a88
| |     `-DeclRefExpr 0x5566461598d0 <col:7> 'const Timestamp' lvalue ParmVar 0x556646158ec8 '' 'const Timestamp &'
| `-CompoundStmt 0x556646159998 <col:7>
|-CXXConstructorDecl 0x556646159048 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x556646159158 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x556646151a88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x556646159c38 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x556646159be0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x556646151a88
| |     `-CXXStaticCastExpr 0x556646159bb0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x556646159b80 <col:7> 'Timestamp' lvalue ParmVar 0x556646159158 '' 'Timestamp &&'
| `-CompoundStmt 0x556646159c98 <col:7>
|-CXXDestructorDecl 0x556646159208 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556645e5f938 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x556645e5fa48 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x556645e60538 <col:7>
|   |-CXXMemberCallExpr 0x556645e604d8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x556645e60418 <col:7> '<bound member function type>' .operator= 0x556645e5fae8
|   | | `-MemberExpr 0x556645e60328 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x556646151a88
|   | |   `-CXXThisExpr 0x556645e60318 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x556645e603e8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x556646151a88
|   |   `-DeclRefExpr 0x556645e603c8 <col:7> 'const Timestamp' lvalue ParmVar 0x556645e5fa48 '' 'const Timestamp &'
|   `-ReturnStmt 0x556645e60528 <col:7>
|     `-UnaryOperator 0x556645e60510 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556645e60500 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x556645e5fde8 <col:7> col:7 implicit operator= 'Timestamp &(Timestamp &&)' inline default trivial noexcept-unevaluated 0x556645e5fde8
  `-ParmVarDecl 0x556645e5fef8 <col:7> col:7 'Timestamp &&'

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55664625c0c8 <../elements/etherswitch/etherswitch.hh:77:5, line:81:5> line:77:12 referenced struct AddrInfo definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55664625c1e8 <col:5, col:12> col:12 implicit referenced struct AddrInfo
|-FieldDecl 0x55664625c290 <line:78:2, col:6> col:6 port 'int'
|-FieldDecl 0x55664625c2f0 <line:79:2, col:12> col:12 stamp 'Timestamp'
|-CXXConstructorDecl 0x55664625c4e8 <line:80:2, col:43> col:9 AddrInfo 'void (int, const Timestamp &)' inline
| |-ParmVarDecl 0x55664625c358 <col:18, col:22> col:22 p 'int'
| `-ParmVarDecl 0x55664625c3d0 <col:25, col:42> col:42 t 'const Timestamp &'
|-CXXDestructorDecl 0x556646262810 <line:77:12> col:12 implicit ~AddrInfo 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5566462733c0 <col:12> col:12 implicit constexpr AddrInfo 'void (const EtherSwitch::AddrInfo &)' inline default trivial noexcept-unevaluated 0x5566462733c0
| `-ParmVarDecl 0x5566462734a8 <col:12> col:12 'const EtherSwitch::AddrInfo &'
`-CXXConstructorDecl 0x556646273548 <col:12> col:12 implicit constexpr AddrInfo 'void (EtherSwitch::AddrInfo &&)' inline default trivial noexcept-unevaluated 0x556646273548
  `-ParmVarDecl 0x556646273658 <col:12> col:12 'EtherSwitch::AddrInfo &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.EtherSwitch::AddrInfo" = type { i32, %class.Timestamp }
  NonVirtualBaseLLVMType:%"struct.EtherSwitch::AddrInfo" = type { i32, %class.Timestamp }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55664625ca38 <../dummy_inc/click/pair.hh:8:1, line:55:1> line:9:8 struct Pair definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'const EtherAddress'
|-TemplateArgument type 'EtherSwitch::AddrInfo'
|-CXXRecordDecl 0x55664625d790 prev 0x55664625ca38 <col:1, col:8> col:8 implicit struct Pair
|-TypedefDecl 0x55664625d858 <line:11:5, col:15> col:15 first_type 'const EtherAddress':'const EtherAddress'
| `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|   |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55664613c778 'T'
|   `-QualType 0x5566461b7ff1 'const EtherAddress' const
|     `-RecordType 0x5566461b7ff0 'EtherAddress'
|       `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x55664625d8e8 <line:12:5, col:15> col:15 second_type 'EtherSwitch::AddrInfo':'EtherSwitch::AddrInfo'
| `-SubstTemplateTypeParmType 0x55664625d8b0 'EtherSwitch::AddrInfo' sugar
|   |-TemplateTypeParmType 0x55664613c850 'U' dependent depth 0 index 1
|   | `-TemplateTypeParm 0x55664613c7f8 'U'
|   `-RecordType 0x55664625c160 'EtherSwitch::AddrInfo'
|     `-CXXRecord 0x55664625c0c8 'AddrInfo'
|-TypedefDecl 0x55664625d950 <line:13:5, col:15> col:15 referenced key_type 'const EtherAddress':'const EtherAddress'
| `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|   |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55664613c778 'T'
|   `-QualType 0x5566461b7ff1 'const EtherAddress' const
|     `-RecordType 0x5566461b7ff0 'EtherAddress'
|       `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x55664625d9e8 <line:14:5, col:22> col:22 referenced key_const_reference 'const EtherAddress &'
| `-LValueReferenceType 0x55664625d9b0 'const EtherAddress &'
|   `-QualType 0x55664625d821 'const const EtherAddress' const
|     `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|       |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55664613c778 'T'
|       `-QualType 0x5566461b7ff1 'const EtherAddress' const
|         `-RecordType 0x5566461b7ff0 'EtherAddress'
|           `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-FieldDecl 0x55664625da50 <line:16:5, col:7> col:7 first 'const EtherAddress':'const EtherAddress'
|-FieldDecl 0x55664625dab0 <line:17:5, col:7> col:7 second 'EtherSwitch::AddrInfo':'EtherSwitch::AddrInfo'
|-CXXConstructorDecl 0x55664625db38 <line:19:5, line:21:5> line:19:12 Pair 'void ()' inline
|-CXXConstructorDecl 0x556646260278 <line:23:5, line:26:5> line:23:12 Pair 'void (typename fast_argument<const EtherAddress>::type, typename fast_argument<AddrInfo>::type)' inline
| |-ParmVarDecl 0x55664625f030 <col:17, col:49> col:49 t 'typename fast_argument<const EtherAddress>::type':'const EtherAddress'
| `-ParmVarDecl 0x556646260140 <line:24:3, col:35> col:35 u 'typename fast_argument<AddrInfo>::type':'const EtherSwitch::AddrInfo &'
|-CXXConstructorDecl 0x556646260578 <line:28:5, line:30:5> line:28:12 Pair 'void (const Pair<const EtherAddress, EtherSwitch::AddrInfo> &)' inline
| `-ParmVarDecl 0x556646260468 <col:17, col:35> col:35 p 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> &'
|-FunctionTemplateDecl 0x556646260a10 <line:32:5, line:35:5> line:33:12 Pair
| |-TemplateTypeParmDecl 0x556646260638 <line:32:15, col:24> col:24 typename depth 0 index 0 V
| |-TemplateTypeParmDecl 0x5566462606b8 <col:27, col:36> col:36 typename depth 0 index 1 W
| |-CXXConstructorDecl 0x556646260968 <line:33:5, line:35:5> line:33:12 Pair 'void (const Pair<V, W> &)' inline
| | `-ParmVarDecl 0x556646260858 <col:17, col:35> col:35 p 'const Pair<V, W> &'
| `-CXXConstructorDecl 0x556646262488 <col:5, line:35:5> line:33:12 Pair 'void (const Pair<const EtherAddress, EtherSwitch::AddrInfo> &)' inline
|   |-TemplateArgument type 'const EtherAddress'
|   |-TemplateArgument type 'EtherSwitch::AddrInfo'
|   `-ParmVarDecl 0x5566462623c8 <col:17, col:35> col:35 p 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> &'
|-TypedefDecl 0x556646260c48 <line:37:5, col:63> col:38 unspecified_bool_type 'hashcode_t (Pair<const EtherAddress, EtherSwitch::AddrInfo>::*)() const'
| `-MemberPointerType 0x556646260be0 'hashcode_t (Pair<const EtherAddress, EtherSwitch::AddrInfo>::*)() const'
|   |-TemplateSpecializationType 0x556646260b10 'Pair<const EtherAddress, EtherSwitch::AddrInfo>' sugar Pair
|   | |-TemplateArgument type 'const EtherAddress':'const EtherAddress'
|   | |-TemplateArgument type 'EtherSwitch::AddrInfo':'EtherSwitch::AddrInfo'
|   | `-RecordType 0x55664625cb30 'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|   |   `-ClassTemplateSpecialization 0x55664625ca38 'Pair'
|   `-ParenType 0x55664613e490 'hashcode_t () const' sugar
|     `-FunctionProtoType 0x55664613e460 'hashcode_t () const' const cdecl
|       `-TypedefType 0x556646137fa0 'hashcode_t' sugar
|         |-Typedef 0x556646137ea0 'hashcode_t'
|         `-TypedefType 0x556645cfb930 'size_t' sugar
|           |-Typedef 0x556645cc6d10 'size_t'
|           `-BuiltinType 0x556645c56690 'unsigned long'
|-CXXConversionDecl 0x556646260d60 <line:38:5, line:40:5> line:38:12 operator unsigned long (Pair<const EtherAddress, EtherSwitch::AddrInfo>::*)() const 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556646260e98 <line:42:5, line:44:5> line:42:21 hashkey 'const EtherAddress &() const' inline
|-CXXMethodDecl 0x556646260f48 <line:46:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-FunctionTemplateDecl 0x5566462614c8 <line:48:5, line:53:5> line:49:17 operator=
| |-TemplateTypeParmDecl 0x556646260ff8 <line:48:15, col:24> col:24 typename depth 0 index 0 V
| |-TemplateTypeParmDecl 0x556646261078 <col:27, col:36> col:36 typename depth 0 index 1 W
| |-CXXMethodDecl 0x556646261428 <line:49:5, line:53:5> line:49:17 operator= 'Pair<const EtherAddress, EtherSwitch::AddrInfo> &(const Pair<V, W> &)'
| | `-ParmVarDecl 0x5566462612f8 <col:27, col:45> col:45 p 'const Pair<V, W> &'
| `-CXXMethodDecl 0x556646263478 <col:5, line:53:5> line:49:17 operator= 'Pair<const EtherAddress, EtherSwitch::AddrInfo> &(const Pair<const EtherAddress, EtherSwitch::AddrInfo> &)'
|   |-TemplateArgument type 'const EtherAddress'
|   |-TemplateArgument type 'EtherSwitch::AddrInfo'
|   `-ParmVarDecl 0x556646263378 <col:27, col:45> col:45 p 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> &'
|-CXXDestructorDecl 0x556646262728 <line:9:8> col:8 implicit ~Pair 'void ()' inline default trivial noexcept-unevaluated 0x556646262728
`-CXXMethodDecl 0x556646262ca8 <col:8> col:8 implicit operator= 'Pair<const EtherAddress, EtherSwitch::AddrInfo> &(const Pair<const EtherAddress, EtherSwitch::AddrInfo> &)' inline default_delete trivial noexcept-unevaluated 0x556646262ca8
  `-ParmVarDecl 0x556646262db8 <col:8> col:8 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> &'

Layout: <CGRecordLayout
  LLVMType:%struct.Pair = type { %class.EtherAddress, %"struct.EtherSwitch::AddrInfo" }
  NonVirtualBaseLLVMType:%struct.Pair = type { %class.EtherAddress, %"struct.EtherSwitch::AddrInfo" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55664625d260 <../dummy_inc/click/hashtable.hh:101:5, line:112:5> line:101:12 struct elt definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists trivial needs_overload_resolution
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x556646261c18 prev 0x55664625d260 <col:5, col:12> col:12 implicit struct elt
|-FieldDecl 0x556646261cb8 <line:102:2, col:4> col:4 v 'Pair<const EtherAddress, EtherSwitch::AddrInfo>':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|-FieldDecl 0x556646261d48 <line:103:2, col:7> col:7 _hashnext 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
|-CXXConstructorDecl 0x556646261ed0 <line:104:2, line:106:2> line:104:2 elt 'void (const Pair<const EtherAddress, EtherSwitch::AddrInfo> &)'
| `-ParmVarDecl 0x556646261dd8 <col:6, col:15> col:15 v_ 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> &'
|-TypedefDecl 0x556646261fd0 <line:107:2, col:31> col:31 referenced key_type 'typename Pair<const EtherAddress, AddrInfo>::key_type':'const EtherAddress'
| `-ElaboratedType 0x5566462615e0 'typename Pair<const EtherAddress, AddrInfo>::key_type' sugar
|   `-TypedefType 0x5566462615c0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_type' sugar
|     |-Typedef 0x55664625d950 'key_type'
|     `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|       |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55664613c778 'T'
|       `-QualType 0x5566461b7ff1 'const EtherAddress' const
|         `-RecordType 0x5566461b7ff0 'EtherAddress'
|           `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x556646262068 <line:108:2, col:42> col:42 referenced key_const_reference 'typename Pair<const EtherAddress, AddrInfo>::key_const_reference':'const EtherAddress &'
| `-ElaboratedType 0x5566462616d0 'typename Pair<const EtherAddress, AddrInfo>::key_const_reference' sugar
|   `-TypedefType 0x5566462616b0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_const_reference' sugar
|     |-Typedef 0x55664625d9e8 'key_const_reference'
|     `-LValueReferenceType 0x55664625d9b0 'const EtherAddress &'
|       `-QualType 0x55664625d821 'const const EtherAddress' const
|         `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|           |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55664613c778 'T'
|           `-QualType 0x5566461b7ff1 'const EtherAddress' const
|             `-RecordType 0x5566461b7ff0 'EtherAddress'
|               `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-CXXMethodDecl 0x556646262128 <line:109:2, line:111:2> line:109:22 hashkey 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt::key_const_reference () const'
|-CXXConstructorDecl 0x5566462625a8 <line:101:12> col:12 implicit elt 'void (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &)' inline default noexcept-unevaluated 0x5566462625a8
| `-ParmVarDecl 0x5566462626b8 <col:12> col:12 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &'
|-CXXConstructorDecl 0x556646262978 <col:12> col:12 implicit elt 'void (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &&)' inline default noexcept-unevaluated 0x556646262978
| `-ParmVarDecl 0x556646262a88 <col:12> col:12 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &&'
`-CXXMethodDecl 0x556646262b28 <col:12> col:12 implicit operator= 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &(HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &&)' inline default_delete trivial noexcept-unevaluated 0x556646262b28
  `-ParmVarDecl 0x556646262c38 <col:12> col:12 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt" = type { %struct.Pair, %"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt"* }
  NonVirtualBaseLLVMType:%"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt" = type { %struct.Pair, %"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566461ee5d8 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566461ee6f8 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x5566461ee798 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x5566461ee7f8 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5566461f18e0 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5566461f1d18 <col:8>
|-CXXConstructorDecl 0x5566461f19e8 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x5566461f19e8
| `-ParmVarDecl 0x5566461f1af8 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x5566461f1b98 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5566461f1ca8 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x5566461ee798 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5566461f4ff0 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5566461f4fc0 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x5566461ee798
| |     `-CXXStaticCastExpr 0x5566461f4f90 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x5566461f4f60 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x5566461f1ca8 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x5566461ee7f8 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x5566461f50c0 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x5566461f5090 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x5566461ee7f8
| |     `-CXXStaticCastExpr 0x5566461f5060 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x5566461f5030 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x5566461f1ca8 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x5566461f5110 <col:8>
|-CXXDestructorDecl 0x5566461f5488 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556646268768 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x556646268768
| `-ParmVarDecl 0x556646268878 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x5566462688e8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x5566462688e8
  `-ParmVarDecl 0x5566462689f8 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556646267440 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>':'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>'
|-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>'
|-CXXRecordDecl 0x5566462676d8 prev 0x556646267440 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x556646267840 <line:21:5, col:9> col:9 buckets 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **'
|-FieldDecl 0x556646267890 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x5566462678e0 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x556646267930 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x556646267980 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x556646267ad8 <line:26:5, col:36> col:12 'class HashContainer<elt, HashContainer_adapter<elt> >':'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-FriendDecl 0x556646267c28 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-FriendDecl 0x556646267d78 <line:28:5, col:45> col:12 'class HashContainer_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-CXXConstructorDecl 0x556646268170 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &)' inline default trivial noexcept-unevaluated 0x556646268170
| `-ParmVarDecl 0x556646268288 <col:7> col:7 'const HashContainer_rep<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &'
|-CXXMethodDecl 0x556646268a68 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &(const HashContainer_rep<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &)' inline default trivial noexcept-unevaluated 0x556646268a68
| `-ParmVarDecl 0x556646268b78 <col:7> col:7 'const HashContainer_rep<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &'
`-CXXDestructorDecl 0x556646276d80 <col:7> col:7 implicit ~HashContainer_rep 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt"**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt"**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55664625d4e0 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>'
|-CXXRecordDecl 0x5566462618a0 prev 0x55664625d4e0 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x556646261930 <col:23, col:29> col:23 public
|-TypedefDecl 0x556646263ea0 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<elt>::key_type':'const EtherAddress'
| `-ElaboratedType 0x556646263e50 'typename HashContainer_adapter<elt>::key_type' sugar
|   `-TypedefType 0x556646263bd0 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>::key_type' sugar
|     |-Typedef 0x556646263620 'key_type'
|     `-ElaboratedType 0x5566462635d0 'typename elt::key_type' sugar
|       `-TypedefType 0x5566462635b0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt::key_type' sugar
|         |-Typedef 0x556646261fd0 'key_type'
|         `-ElaboratedType 0x5566462615e0 'typename Pair<const EtherAddress, AddrInfo>::key_type' sugar
|           `-TypedefType 0x5566462615c0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_type' sugar
|             |-Typedef 0x55664625d950 'key_type'
|             `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|               |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|               | `-TemplateTypeParm 0x55664613c778 'T'
|               `-QualType 0x5566461b7ff1 'const EtherAddress' const
|                 `-RecordType 0x5566461b7ff0 'EtherAddress'
|                   `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x556646263f38 <line:90:5, col:15> col:15 value_type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt':'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
| `-SubstTemplateTypeParmType 0x556646263f00 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt' sugar
|   |-TemplateTypeParmType 0x5566461ff9a0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5566461ff950 'T'
|   `-RecordType 0x55664625d2f0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|     `-CXXRecord 0x55664625d260 'elt'
|-TypedefDecl 0x556646263f90 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x556645cfb930 'size_t' sugar
|   |-Typedef 0x556645cc6d10 'size_t'
|   `-BuiltinType 0x556645c56690 'unsigned long'
|-TypedefDecl 0x556646263fe8 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x556645dabbe0 'uint32_t' sugar
|   |-Typedef 0x556645cbf5f8 'uint32_t'
|   `-TypedefType 0x556645c98640 '__uint32_t' sugar
|     |-Typedef 0x556645c98238 '__uint32_t'
|     `-BuiltinType 0x556645c56670 'unsigned int'
|-EnumDecl 0x556646264040 <line:98:5> col:5
| |-EnumConstantDecl 0x556646264170 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x556646264150 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x556646264128 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x556646264110 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x5566461ffff0 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x5566461fffd0 <col:42> 'int' 1
| `-EnumConstantDecl 0x5566462641e0 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x556646264230 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566462641c0 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x5566462000a8 <col:25> 'int' 63
|-CXXConstructorDecl 0x556646264280 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x5566462643e8 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x556646264338 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x5566462644d0 <line:114:5, col:20> col:5 ~HashContainer 'void () noexcept'
|-CXXMethodDecl 0x5566462645c0 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x556646264670 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x556646264720 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x5566462648b8 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x5566462647f0 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x556646264ad8 <line:142:5, col:51> col:23 bucket 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &) const'
| `-ParmVarDecl 0x5566462649e8 <col:30, col:46> col:46 key 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x556646264b90 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x556646264e20 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
| `-TemplateSpecializationType 0x556646264d80 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt':'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|   |-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>':'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>'
|   `-RecordType 0x556646264d60 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|     `-ClassTemplateSpecialization 0x556646264c60 'HashContainer_const_iterator'
|-TypedefDecl 0x556646265050 <line:150:5, col:42> col:42 iterator 'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
| `-TemplateSpecializationType 0x556646264fb0 'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt':'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|   |-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>':'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>'
|   `-RecordType 0x556646264f90 'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|     `-ClassTemplateSpecialization 0x556646264e98 'HashContainer_iterator'
|-CXXMethodDecl 0x556646265148 <line:155:5, col:27> col:21 begin 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator ()' inline
|-CXXMethodDecl 0x556646265298 <line:157:5, col:35> col:27 begin 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::const_iterator () const' inline
|-CXXMethodDecl 0x556646265368 <line:161:5, col:25> col:21 end 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator ()' inline
|-CXXMethodDecl 0x556646265438 <line:163:5, col:33> col:27 end 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::const_iterator () const' inline
|-CXXMethodDecl 0x5566462655d8 <line:166:5, col:46> col:21 begin 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x5566462654e8 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x556646265788 <line:168:5, col:54> col:27 begin 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x556646265690 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x556646265948 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &) const' inline
| `-ParmVarDecl 0x556646265850 <col:26, col:42> col:42 key 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x556646265b08 <line:173:5, col:49> col:22 count 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::size_type (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &) const' inline
| `-ParmVarDecl 0x556646265a10 <col:28, col:44> col:44 key 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x556646265cc8 <line:183:5, col:45> col:21 find 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &)' inline
| `-ParmVarDecl 0x556646265bd0 <col:26, col:42> col:42 key 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x556646265e88 <line:185:5, col:53> col:27 find 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::const_iterator (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &) const' inline
| `-ParmVarDecl 0x556646265d90 <col:32, col:48> col:48 key 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x556646265fe0 <line:191:5, col:52> col:21 find_prefer 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &)' inline
| `-ParmVarDecl 0x556646265f50 <col:33, col:49> col:49 key 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x5566462661c8 <line:197:5, col:68> col:43 get 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *(const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &) const'
| |-ParmVarDecl 0x5566462660d8 <col:47, col:63> col:63 key 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &'
| |-NoInlineAttr 0x5566462662a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x556646266300 <col:30> Inherited
|-CXXMethodDecl 0x556646266528 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator &, HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *)' inline
| |-ParmVarDecl 0x556646266398 <col:27, col:37> col:37 it 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator &'
| `-ParmVarDecl 0x556646266410 <col:41, col:44> col:44 element 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
|-CXXMethodDecl 0x5566462667f8 <line:239:5, col:58> col:8 set 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *(HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator &, HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *, bool)'
| |-ParmVarDecl 0x5566462665f8 <col:12, col:22> col:22 it 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator &'
| |-ParmVarDecl 0x556646266670 <col:26, col:29> col:29 element 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
| `-ParmVarDecl 0x5566462666d8 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x5566462669c8 <line:249:5, col:57> col:43 set 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *(HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *)'
| |-ParmVarDecl 0x5566462668d0 <col:47, col:50> col:50 element 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
| |-NoInlineAttr 0x556646266a80 <col:20> Inherited
| `-OptimizeNoneAttr 0x556646266ad8 <col:30> Inherited
|-CXXMethodDecl 0x556646266c08 <line:256:5, col:33> col:15 erase 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *(HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator &)' inline
| `-ParmVarDecl 0x556646266b10 <col:21, col:31> col:31 it 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::iterator &'
|-CXXMethodDecl 0x556646266dc8 <line:262:5, col:40> col:15 erase 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *(const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &)' inline
| `-ParmVarDecl 0x556646266cd0 <col:21, col:37> col:37 key 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x556646266e80 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x556646267148 <line:269:5, col:44> col:17 swap 'void (HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &)' inline
| `-ParmVarDecl 0x556646267058 <col:22, col:43> col:43 x 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &'
|-CXXMethodDecl 0x556646267290 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x556646267200 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x556646267348 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x5566462673f8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x556646268c00 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_rep<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-CXXConstructorDecl 0x556646268e88 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &)'
| `-ParmVarDecl 0x556646268d78 <col:19, col:45> col:46 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &'
|-CXXMethodDecl 0x556646269228 <line:292:5, col:63> col:26 operator= 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &(const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &)'
| `-ParmVarDecl 0x5566462690f8 <col:36, col:62> col:63 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &'
|-FriendDecl 0x5566462693e8 <line:294:5, col:45> col:12 'class HashContainer_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
`-FriendDecl 0x556646269538 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556646228748 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x556646228868 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x556646228938 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566462289a0 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x556646228ab8 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x556646228b88 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x556646228be8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x556646228c48 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556646227d58 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556646227e78 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x556646227f08 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x556646228048 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x556646227f40 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x556646228140 <line:12:5, col:20> col:5 ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x5566462282c0 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x556646228230 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x556646229aa0 <col:48, line:17:5>
|   |-ParenExpr 0x5566462299e8 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x5566462299b8 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x556646229680 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556646229650 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556646229580 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x5566462294e0 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x5566462294c8 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x5566462294b0 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x556646229480 <col:24> 'HashAllocator::link *' lvalue ->_free 0x556646228f78
|   |   |   | |       `-CXXThisExpr 0x556646229470 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x556646229568 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x556646229550 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x556646229538 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x556646229508 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x556646228fd8
|   |   |   |         `-CXXThisExpr 0x5566462294f8 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x556646229630 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x556646229600 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566462295a0 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x556646228230 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x556646229618 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x5566462295d0 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x556646229038
|   |   |         `-CXXThisExpr 0x5566462295c0 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5566462296e0 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5566462296c0 <col:72> 'int' 0
|   |   `-CallExpr 0x556646229918 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x556646229900 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566462298e0 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556646229958 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556646229750 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x556646229970 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556646229790 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x556646229988 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5566462297d0 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x5566462299a0 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566462298c8 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566462298b0 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556646229868 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x556646229a80 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x556646229a18 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x556646229038
|     | `-CXXThisExpr 0x556646229a08 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x556646229a68 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x556646229a48 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x556646228230 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x556646228390 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x5566462284d8 <line:20:5, col:35> col:17 deallocate 'void (void *)' inline
| `-ParmVarDecl 0x556646228448 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x556646228678 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x5566462285b8 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x556646228720 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x556646228748 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556646228868 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x556646228938 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x5566462289a0 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556646228ab8 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x556646228b88 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x556646228be8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x556646228c48 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x556646228cb0 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x556646228db0 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x556646228f20 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646228d90 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x556646228d70 <col:20> 'int' 1024
| |-EnumConstantDecl 0x556646228e40 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x556646228f38 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646228e20 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x556646228e00 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x556646228ed0 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x556646228f50 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556646228eb0 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x556646228e90 <col:18> 'int' 8
|-FieldDecl 0x556646228f78 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x556646228fd8 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x556646229038 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x5566462290b0 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x556646229248 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x556646229188 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x5566462293c8 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x556646229308 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55664626cb70 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 32
|-CXXRecordDecl 0x55664626cd78 prev 0x55664626cb70 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55664626ce08 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55664626ce68 <line:61:5, line:63:5> line:61:5 SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55664626cf48 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<32> &)' inline default_delete noexcept-unevaluated 0x55664626cf48
| `-ParmVarDecl 0x55664626d058 <col:7> col:7 'const SizedHashAllocator<32> &'
|-CXXConstructorDecl 0x55664626d0f8 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<32> &&)' inline default_delete noexcept-unevaluated 0x55664626d0f8
| `-ParmVarDecl 0x55664626d208 <col:7> col:7 'SizedHashAllocator<32> &&'
|-CXXMethodDecl 0x55664626d2a8 <col:7> col:7 implicit operator= 'SizedHashAllocator<32> &(SizedHashAllocator<32> &&)' inline default_delete noexcept-unevaluated 0x55664626d2a8
| `-ParmVarDecl 0x55664626d3b8 <col:7> col:7 'SizedHashAllocator<32> &&'
`-CXXDestructorDecl 0x55664626d440 <col:7> col:7 implicit ~SizedHashAllocator 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55664625cbf0 <../dummy_inc/click/hashtable.hh:98:1, line:321:1> line:99:7 class HashTable definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-TemplateArgument type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|-TemplateArgument type 'void'
|-CXXRecordDecl 0x55664625d1d0 prev 0x55664625cbf0 <col:1, col:7> col:7 implicit class HashTable
|-CXXRecordDecl 0x55664625d260 <line:101:5, line:112:5> line:101:12 struct elt definition
| |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists trivial needs_overload_resolution
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556646261c18 prev 0x55664625d260 <col:5, col:12> col:12 implicit struct elt
| |-FieldDecl 0x556646261cb8 <line:102:2, col:4> col:4 v 'Pair<const EtherAddress, EtherSwitch::AddrInfo>':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
| |-FieldDecl 0x556646261d48 <line:103:2, col:7> col:7 _hashnext 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
| |-CXXConstructorDecl 0x556646261ed0 <line:104:2, line:106:2> line:104:2 elt 'void (const Pair<const EtherAddress, EtherSwitch::AddrInfo> &)'
| | `-ParmVarDecl 0x556646261dd8 <col:6, col:15> col:15 v_ 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> &'
| |-TypedefDecl 0x556646261fd0 <line:107:2, col:31> col:31 referenced key_type 'typename Pair<const EtherAddress, AddrInfo>::key_type':'const EtherAddress'
| | `-ElaboratedType 0x5566462615e0 'typename Pair<const EtherAddress, AddrInfo>::key_type' sugar
| |   `-TypedefType 0x5566462615c0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_type' sugar
| |     |-Typedef 0x55664625d950 'key_type'
| |     `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
| |       |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0x55664613c778 'T'
| |       `-QualType 0x5566461b7ff1 'const EtherAddress' const
| |         `-RecordType 0x5566461b7ff0 'EtherAddress'
| |           `-CXXRecord 0x5566461d09f8 'EtherAddress'
| |-TypedefDecl 0x556646262068 <line:108:2, col:42> col:42 referenced key_const_reference 'typename Pair<const EtherAddress, AddrInfo>::key_const_reference':'const EtherAddress &'
| | `-ElaboratedType 0x5566462616d0 'typename Pair<const EtherAddress, AddrInfo>::key_const_reference' sugar
| |   `-TypedefType 0x5566462616b0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_const_reference' sugar
| |     |-Typedef 0x55664625d9e8 'key_const_reference'
| |     `-LValueReferenceType 0x55664625d9b0 'const EtherAddress &'
| |       `-QualType 0x55664625d821 'const const EtherAddress' const
| |         `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
| |           |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
| |           | `-TemplateTypeParm 0x55664613c778 'T'
| |           `-QualType 0x5566461b7ff1 'const EtherAddress' const
| |             `-RecordType 0x5566461b7ff0 'EtherAddress'
| |               `-CXXRecord 0x5566461d09f8 'EtherAddress'
| |-CXXMethodDecl 0x556646262128 <line:109:2, line:111:2> line:109:22 hashkey 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt::key_const_reference () const'
| |-CXXConstructorDecl 0x5566462625a8 <line:101:12> col:12 implicit elt 'void (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &)' inline default noexcept-unevaluated 0x5566462625a8
| | `-ParmVarDecl 0x5566462626b8 <col:12> col:12 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &'
| |-CXXConstructorDecl 0x556646262978 <col:12> col:12 implicit elt 'void (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &&)' inline default noexcept-unevaluated 0x556646262978
| | `-ParmVarDecl 0x556646262a88 <col:12> col:12 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &&'
| `-CXXMethodDecl 0x556646262b28 <col:12> col:12 implicit operator= 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &(HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &&)' inline default_delete trivial noexcept-unevaluated 0x556646262b28
|   `-ParmVarDecl 0x556646262c38 <col:12> col:12 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &&'
|-TypedefDecl 0x55664625d670 <line:114:5, col:32> col:32 rep_type 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>':'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
| `-TemplateSpecializationType 0x55664625d600 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>' sugar HashContainer
|   |-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|   `-RecordType 0x55664625d5e0 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|     `-ClassTemplateSpecialization 0x55664625d4e0 'HashContainer'
|-AccessSpecDecl 0x55664625d6c8 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x556646261630 <line:119:5, col:34> col:34 key_type 'typename Pair<const EtherAddress, AddrInfo>::key_type':'const EtherAddress'
| `-ElaboratedType 0x5566462615e0 'typename Pair<const EtherAddress, AddrInfo>::key_type' sugar
|   `-TypedefType 0x5566462615c0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_type' sugar
|     |-Typedef 0x55664625d950 'key_type'
|     `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|       |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55664613c778 'T'
|       `-QualType 0x5566461b7ff1 'const EtherAddress' const
|         `-RecordType 0x5566461b7ff0 'EtherAddress'
|           `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x556646261720 <line:122:5, col:45> col:45 key_const_reference 'typename Pair<const EtherAddress, AddrInfo>::key_const_reference':'const EtherAddress &'
| `-ElaboratedType 0x5566462616d0 'typename Pair<const EtherAddress, AddrInfo>::key_const_reference' sugar
|   `-TypedefType 0x5566462616b0 'Pair<const EtherAddress, EtherSwitch::AddrInfo>::key_const_reference' sugar
|     |-Typedef 0x55664625d9e8 'key_const_reference'
|     `-LValueReferenceType 0x55664625d9b0 'const EtherAddress &'
|       `-QualType 0x55664625d821 'const const EtherAddress' const
|         `-SubstTemplateTypeParmType 0x55664625d820 'const EtherAddress' sugar
|           |-TemplateTypeParmType 0x55664613c7d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55664613c778 'T'
|           `-QualType 0x5566461b7ff1 'const EtherAddress' const
|             `-RecordType 0x5566461b7ff0 'EtherAddress'
|               `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x556646261788 <line:125:5, col:15> col:15 value_type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
| `-SubstTemplateTypeParmType 0x55664625d120 'Pair<const EtherAddress, EtherSwitch::AddrInfo>' sugar
|   |-TemplateTypeParmType 0x55664622ba20 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55664622b9c8 'T'
|   `-RecordType 0x55664625cb30 'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|     `-ClassTemplateSpecialization 0x55664625ca38 'Pair'
|-TypedefDecl 0x5566462695d0 <line:128:5, col:42> col:42 referenced size_type 'typename rep_type::size_type':'unsigned long'
| `-ElaboratedType 0x556646269580 'typename rep_type::size_type' sugar
|   `-TypedefType 0x5566462647d0 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::size_type' sugar
|     |-Typedef 0x556646263f90 'size_type'
|     `-TypedefType 0x556645cfb930 'size_t' sugar
|       |-Typedef 0x556645cc6d10 'size_t'
|       `-BuiltinType 0x556645c56690 'unsigned long'
|-TypedefDecl 0x5566462696a0 <line:131:5, col:50> col:50 referenced bucket_count_type 'typename rep_type::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x556646269650 'typename rep_type::bucket_count_type' sugar
|   `-TypedefType 0x556646264970 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type' sugar
|     |-Typedef 0x556646263fe8 'bucket_count_type'
|     `-TypedefType 0x556645dabbe0 'uint32_t' sugar
|       |-Typedef 0x556645cbf5f8 'uint32_t'
|       `-TypedefType 0x556645c98640 '__uint32_t' sugar
|         |-Typedef 0x556645c98238 '__uint32_t'
|         `-BuiltinType 0x556645c56670 'unsigned int'
|-CXXConstructorDecl 0x556646269730 <line:135:5, line:137:5> line:135:5 HashTable 'void ()'
|-CXXConstructorDecl 0x556646269908 <line:143:5, line:145:5> line:143:14 HashTable 'void (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::bucket_count_type)'
| `-ParmVarDecl 0x556646269820 <col:24, col:42> col:42 n 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::bucket_count_type':'unsigned int'
|-CXXConstructorDecl 0x556646269be8 <line:148:5, line:151:5> line:148:5 HashTable 'void (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &)'
| `-ParmVarDecl 0x556646269ad0 <col:15, col:35> col:35 x 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &'
|-CXXConstructorDecl 0x556646269ea8 <line:155:5, line:158:5> line:155:5 HashTable 'void (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&)'
| `-ParmVarDecl 0x556646269d90 <col:15, col:30> col:30 x 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&'
|-CXXDestructorDecl 0x556646269f90 <line:162:5, col:16> col:5 ~HashTable 'void () noexcept'
|-CXXMethodDecl 0x55664626a0e8 <line:166:5, line:168:5> line:166:22 size 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::size_type () const' inline
|-CXXMethodDecl 0x55664626a198 <line:171:5, line:173:5> line:171:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55664626a298 <line:176:5, line:178:5> line:176:30 bucket_count 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::bucket_count_type () const' inline
|-CXXMethodDecl 0x55664626a418 <line:182:5, line:184:5> line:182:22 bucket_size 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::size_type (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::bucket_count_type) const' inline
| `-ParmVarDecl 0x55664626a358 <col:34, col:52> col:52 n 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::bucket_count_type':'unsigned int'
|-TypedefDecl 0x55664626a650 <line:187:5, col:41> col:41 const_iterator 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >':'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
| `-TemplateSpecializationType 0x55664626a5e0 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' sugar HashTable_const_iterator
|   |-TemplateArgument type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|   `-RecordType 0x55664626a5c0 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|     `-ClassTemplateSpecialization 0x55664626a4e0 'HashTable_const_iterator'
|-TypedefDecl 0x55664626a830 <line:188:5, col:35> col:35 iterator 'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >':'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
| `-TemplateSpecializationType 0x55664626a7c0 'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' sugar HashTable_iterator
|   |-TemplateArgument type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|   `-RecordType 0x55664626a7a0 'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|     `-ClassTemplateSpecialization 0x55664626a6b8 'HashTable_iterator'
|-CXXMethodDecl 0x55664626a928 <line:193:5, col:27> col:21 begin 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator ()' inline
|-CXXMethodDecl 0x55664626aa78 <line:195:5, col:35> col:27 begin 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::const_iterator () const' inline
|-CXXMethodDecl 0x55664626ab48 <line:199:5, col:25> col:21 end 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator ()' inline
|-CXXMethodDecl 0x55664626ac18 <line:201:5, col:33> col:27 end 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::const_iterator () const' inline
|-CXXMethodDecl 0x55664626adc8 <line:205:5, col:53> col:22 count 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::size_type (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference) const' inline
| `-ParmVarDecl 0x55664626ad00 <col:28, col:48> col:48 key 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626af88 <line:210:5, col:49> col:21 find 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference)' inline
| `-ParmVarDecl 0x55664626ae90 <col:26, col:46> col:46 key 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626b148 <line:212:5, col:57> col:27 find 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::const_iterator (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference) const' inline
| `-ParmVarDecl 0x55664626b050 <col:32, col:52> col:52 key 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626b2a0 <line:221:5, col:56> col:21 find_prefer 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference)' inline
| `-ParmVarDecl 0x55664626b210 <col:33, col:53> col:53 key 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626b3f8 <line:234:5, col:56> col:21 find_insert 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference)' inline
| `-ParmVarDecl 0x55664626b368 <col:33, col:53> col:53 key 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626b5f8 <line:246:5, col:58> col:24 operator[] 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::value_type &(HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference)' inline
| `-ParmVarDecl 0x55664626b508 <col:35, col:55> col:55 key 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626b7d8 <line:257:5, col:56> col:21 find_insert 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::value_type &)' inline
| `-ParmVarDecl 0x55664626b6e8 <col:33, col:51> col:51 value 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::value_type &'
|-CXXMethodDecl 0x55664626b998 <line:268:5, col:37> col:10 set 'bool (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::value_type &)'
| `-ParmVarDecl 0x55664626b8a0 <col:14, col:32> col:32 value 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::value_type &'
|-CXXMethodDecl 0x55664626bba8 <line:273:5, col:38> col:14 erase 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator &)'
| `-ParmVarDecl 0x55664626bab8 <col:20, col:36> col:36 it 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::iterator &'
|-CXXMethodDecl 0x55664626bda8 <line:278:5, col:40> col:15 erase 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::size_type (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_type &)'
| `-ParmVarDecl 0x55664626bcb8 <col:21, col:37> col:37 key 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::key_type &'
|-CXXMethodDecl 0x55664626be60 <line:282:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55664626c0e8 <line:286:5, col:30> col:10 swap 'void (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &)'
| `-ParmVarDecl 0x55664626bff0 <col:15, col:29> col:29 x 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &'
|-CXXMethodDecl 0x55664626c240 <line:293:5, line:295:5> line:293:10 rehash 'void (HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::bucket_count_type)'
| `-ParmVarDecl 0x55664626c1b0 <col:17, col:35> col:35 n 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55664626c550 <line:299:5, col:50> col:19 operator= 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &(const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &)'
| `-ParmVarDecl 0x55664626c430 <col:29, col:49> col:49 x 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &'
|-CXXMethodDecl 0x55664626c860 <line:303:5, line:306:5> line:303:26 operator= 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &(HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&)' inline
| `-ParmVarDecl 0x55664626c740 <col:36, col:51> col:51 x 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&'
|-AccessSpecDecl 0x55664626c918 <line:309:3, col:10> col:3 private
|-FieldDecl 0x55664626c950 <line:311:5, col:14> col:14 _rep 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::rep_type':'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-FieldDecl 0x55664626d520 <line:312:5, col:37> col:37 _alloc 'SizedHashAllocator<sizeof(HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt)>':'SizedHashAllocator<32>'
|-CXXMethodDecl 0x55664626d6e8 <line:314:5, col:45> col:10 clone_elements 'void (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &)'
| `-ParmVarDecl 0x55664626d620 <col:25, col:44> col:45 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &'
|-CXXMethodDecl 0x55664626d918 <line:315:5, col:44> col:10 copy_elements 'void (const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &)'
| `-ParmVarDecl 0x55664626d850 <col:24, col:43> col:44 'const HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &'
|-FriendDecl 0x55664626da90 <line:317:5, col:38> col:12 'class HashTable_iterator<Pair<const EtherAddress, AddrInfo> >':'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|-FriendDecl 0x55664626db90 <line:318:5, col:44> col:12 'class HashTable_const_iterator<Pair<const EtherAddress, AddrInfo> >':'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
`-FriendDecl 0x55664626ddf8 <line:319:5, col:52> col:52
  `-ClassTemplateDecl 0x55664626dd80 parent 0x556645c564d8 prev 0x55664623e230 <col:5, col:52> col:52 HashTable
    |-TemplateTypeParmDecl 0x55664626dbd0 <col:15, col:24> col:24 typename depth 0 index 0 K
    |-TemplateTypeParmDecl 0x55664626dc48 <col:27, col:36> col:36 typename depth 0 index 1 V
    | `-TemplateArgument type 'void'
    |   `-inherited from TemplateTypeParm 0x55664622b028 'V'
    |-CXXRecordDecl 0x55664626dcf0 parent 0x556645c564d8 prev 0x55664623e1a0 <col:46, col:52> col:52 class HashTable
    |-ClassTemplateSpecialization 0x55664625c600 'HashTable'
    `-ClassTemplateSpecialization 0x55664625cbf0 'HashTable'

Layout: <CGRecordLayout
  LLVMType:%class.HashTable.0 = type { %class.HashContainer, %class.SizedHashAllocator }
  NonVirtualBaseLLVMType:%class.HashTable.0 = type { %class.HashContainer, %class.SizedHashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55664625c600 <../dummy_inc/click/hashtable.hh:569:1, line:876:1> line:570:7 class HashTable definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-TemplateArgument type 'EtherAddress'
|-TemplateArgument type 'EtherSwitch::AddrInfo'
|-CXXRecordDecl 0x55664625c928 prev 0x55664625c600 <col:1, col:7> col:7 implicit class HashTable
|-TypedefDecl 0x55664625cd80 <line:572:5, col:42> col:42 rep_type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> >':'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>'
| `-TemplateSpecializationType 0x55664625cd10 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' sugar HashTable
|   |-TemplateArgument type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|   `-RecordType 0x55664625ccf0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>'
|     `-ClassTemplateSpecialization 0x55664625cbf0 'HashTable'
|-AccessSpecDecl 0x55664625cdd8 <line:574:3, col:9> col:3 public
|-TypedefDecl 0x55664625ce10 <line:577:5, col:15> col:15 key_type 'EtherAddress':'EtherAddress'
| `-SubstTemplateTypeParmType 0x55664625c9c0 'EtherAddress' sugar
|   |-TemplateTypeParmType 0x55664623e0d0 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55664623e080 'K'
|   `-RecordType 0x5566461b7ff0 'EtherAddress'
|     `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x55664625cea8 <line:580:5, col:22> col:22 key_const_reference 'const EtherAddress &'
| `-LValueReferenceType 0x55664625ce70 'const EtherAddress &'
|   `-QualType 0x55664625c9c1 'const EtherAddress' const
|     `-SubstTemplateTypeParmType 0x55664625c9c0 'EtherAddress' sugar
|       |-TemplateTypeParmType 0x55664623e0d0 'K' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55664623e080 'K'
|       `-RecordType 0x5566461b7ff0 'EtherAddress'
|         `-CXXRecord 0x5566461d09f8 'EtherAddress'
|-TypedefDecl 0x55664625cf10 <line:583:5, col:15> col:15 mapped_type 'EtherSwitch::AddrInfo':'EtherSwitch::AddrInfo'
| `-SubstTemplateTypeParmType 0x55664625ca00 'EtherSwitch::AddrInfo' sugar
|   |-TemplateTypeParmType 0x55664623e150 'V' dependent depth 0 index 1
|   | `-TemplateTypeParm 0x55664623e0f8 'V'
|   `-RecordType 0x55664625c160 'EtherSwitch::AddrInfo'
|     `-CXXRecord 0x55664625c0c8 'AddrInfo'
|-TypedefDecl 0x55664625d030 <line:586:5, col:30> col:30 value_type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
| `-TemplateSpecializationType 0x55664625cf90 'Pair<const EtherAddress, EtherSwitch::AddrInfo>' sugar Pair
|   |-TemplateArgument type 'const EtherAddress':'const EtherAddress'
|   |-TemplateArgument type 'EtherSwitch::AddrInfo':'EtherSwitch::AddrInfo'
|   `-RecordType 0x55664625cb30 'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|     `-ClassTemplateSpecialization 0x55664625ca38 'Pair'
|-TypedefDecl 0x55664626de90 <line:589:5, col:42> col:42 size_type 'typename rep_type::size_type':'unsigned long'
| `-ElaboratedType 0x55664626de40 'typename rep_type::size_type' sugar
|   `-TypedefType 0x55664626a080 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::size_type' sugar
|     |-Typedef 0x5566462695d0 'size_type'
|     `-ElaboratedType 0x556646269580 'typename rep_type::size_type' sugar
|       `-TypedefType 0x5566462647d0 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::size_type' sugar
|         |-Typedef 0x556646263f90 'size_type'
|         `-TypedefType 0x556645cfb930 'size_t' sugar
|           |-Typedef 0x556645cc6d10 'size_t'
|           `-BuiltinType 0x556645c56690 'unsigned long'
|-TypedefDecl 0x55664626df60 <line:592:5, col:50> col:50 bucket_count_type 'typename rep_type::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x55664626df10 'typename rep_type::bucket_count_type' sugar
|   `-TypedefType 0x5566462697f0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::bucket_count_type' sugar
|     |-Typedef 0x5566462696a0 'bucket_count_type'
|     `-ElaboratedType 0x556646269650 'typename rep_type::bucket_count_type' sugar
|       `-TypedefType 0x556646264970 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type' sugar
|         |-Typedef 0x556646263fe8 'bucket_count_type'
|         `-TypedefType 0x556645dabbe0 'uint32_t' sugar
|           |-Typedef 0x556645cbf5f8 'uint32_t'
|           `-TypedefType 0x556645c98640 '__uint32_t' sugar
|             |-Typedef 0x556645c98238 '__uint32_t'
|             `-BuiltinType 0x556645c56670 'unsigned int'
|-CXXConstructorDecl 0x55664626dff0 <line:596:5, line:598:5> line:596:5 HashTable 'void ()'
|-CXXConstructorDecl 0x55664626e218 <line:601:5, line:603:5> line:601:14 HashTable 'void (const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &)'
| `-ParmVarDecl 0x55664626e108 <col:24, col:43> col:43 d 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &'
|-CXXConstructorDecl 0x55664626e4b8 <line:608:5, line:610:5> line:608:5 HashTable 'void (const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &, HashTable<EtherAddress, EtherSwitch::AddrInfo>::bucket_count_type)'
| |-ParmVarDecl 0x55664626e2e8 <col:15, col:34> col:34 d 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &'
| `-ParmVarDecl 0x55664626e380 <col:37, col:55> col:55 n 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::bucket_count_type':'unsigned int'
|-CXXConstructorDecl 0x55664626e7b8 <line:613:5, line:615:5> line:613:5 HashTable 'void (const HashTable<EtherAddress, EtherSwitch::AddrInfo> &)'
| `-ParmVarDecl 0x55664626e6a8 <col:15, col:38> col:38 x 'const HashTable<EtherAddress, EtherSwitch::AddrInfo> &'
|-CXXConstructorDecl 0x55664626eab8 <line:619:5, line:622:5> line:619:5 HashTable 'void (HashTable<EtherAddress, EtherSwitch::AddrInfo> &&)'
| `-ParmVarDecl 0x55664626e9a8 <col:15, col:33> col:33 x 'HashTable<EtherAddress, EtherSwitch::AddrInfo> &&'
|-CXXDestructorDecl 0x55664626eba0 <line:626:5, line:627:5> line:626:5 ~HashTable 'void () noexcept'
|-CXXMethodDecl 0x55664626ecf8 <line:631:5, line:633:5> line:631:22 size 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::size_type () const' inline
|-CXXMethodDecl 0x55664626eda8 <line:636:5, line:638:5> line:636:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55664626eea8 <line:641:5, line:643:5> line:641:30 bucket_count 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::bucket_count_type () const' inline
|-CXXMethodDecl 0x55664626f028 <line:647:5, line:649:5> line:647:22 bucket_size 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::size_type (HashTable<EtherAddress, EtherSwitch::AddrInfo>::bucket_count_type) const' inline
| `-ParmVarDecl 0x55664626ef68 <col:34, col:52> col:52 n 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55664626f158 <line:655:5, line:657:5> line:655:31 default_value 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &() const' inline
|-TypedefDecl 0x55664626f2b0 <line:660:5, col:50> col:50 const_iterator 'HashTable_const_iterator<HashTable<EtherAddress, EtherSwitch::AddrInfo>::value_type>':'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
| `-TemplateSpecializationType 0x55664626f240 'HashTable_const_iterator<HashTable<EtherAddress, EtherSwitch::AddrInfo>::value_type>' sugar HashTable_const_iterator
|   |-TemplateArgument type 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::value_type':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|   `-RecordType 0x55664626a5c0 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|     `-ClassTemplateSpecialization 0x55664626a4e0 'HashTable_const_iterator'
|-TypedefDecl 0x55664626f390 <line:661:5, col:44> col:44 iterator 'HashTable_iterator<HashTable<EtherAddress, EtherSwitch::AddrInfo>::value_type>':'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
| `-TemplateSpecializationType 0x55664626f320 'HashTable_iterator<HashTable<EtherAddress, EtherSwitch::AddrInfo>::value_type>' sugar HashTable_iterator
|   |-TemplateArgument type 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::value_type':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|   `-RecordType 0x55664626a7a0 'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|     `-ClassTemplateSpecialization 0x55664626a6b8 'HashTable_iterator'
|-CXXMethodDecl 0x55664626f458 <line:666:5, line:668:5> line:666:21 begin 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator ()' inline
|-CXXMethodDecl 0x55664626f578 <line:670:5, line:672:5> line:670:27 begin 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::const_iterator () const' inline
|-CXXMethodDecl 0x55664626f648 <line:676:5, line:678:5> line:676:21 end 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator ()' inline
|-CXXMethodDecl 0x55664626f718 <line:680:5, line:682:5> line:680:27 end 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::const_iterator () const' inline
|-CXXMethodDecl 0x55664626f8c8 <line:686:5, line:688:5> line:686:22 count 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::size_type (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference) const' inline
| `-ParmVarDecl 0x55664626f800 <col:28, col:48> col:48 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626fa58 <line:693:5, line:695:5> line:693:27 find 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::const_iterator (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference) const' inline
| `-ParmVarDecl 0x55664626f990 <col:32, col:52> col:52 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626fbe8 <line:697:5, line:699:5> line:697:21 find 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference)' inline
| `-ParmVarDecl 0x55664626fb20 <col:26, col:46> col:46 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626fd40 <line:705:5, line:707:5> line:705:21 find_prefer 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference)' inline
| `-ParmVarDecl 0x55664626fcb0 <col:33, col:53> col:53 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x55664626fef8 <line:714:5, line:719:5> line:714:24 get 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &(HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference) const'
| `-ParmVarDecl 0x55664626fe08 <col:28, col:48> col:48 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x5566462700d8 <line:725:5, line:730:5> line:725:18 get_pointer 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type *(HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference)'
| `-ParmVarDecl 0x55664626ffe8 <col:30, col:50> col:50 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x5566462702e8 <line:732:5, line:737:5> line:732:24 get_pointer 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type *(HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference) const'
| `-ParmVarDecl 0x5566462701f8 <col:36, col:56> col:56 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x556646270440 <line:747:5, line:752:5> line:747:24 operator[] 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &(HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference) const'
| `-ParmVarDecl 0x5566462703b0 <col:35, col:55> col:55 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x556646270658 <line:765:5, col:59> col:25 operator[] 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &(HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference)' inline
| `-ParmVarDecl 0x556646270568 <col:36, col:56> col:56 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x5566462707b0 <line:778:5, line:780:5> line:778:21 find_insert 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference)' inline
| `-ParmVarDecl 0x556646270720 <col:33, col:53> col:53 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x556646270a08 <line:791:5, line:794:5> line:791:21 find_insert 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference, const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &)' inline
| |-ParmVarDecl 0x556646270878 <col:33, col:53> col:53 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
| `-ParmVarDecl 0x5566462708f0 <line:792:33, col:52> col:52 value 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &'
|-CXXMethodDecl 0x556646270c68 <line:810:5, col:63> col:10 set 'bool (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference, const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &)'
| |-ParmVarDecl 0x556646270ad8 <col:14, col:34> col:34 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
| `-ParmVarDecl 0x556646270b50 <col:39, col:58> col:58 value 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &'
|-CXXMethodDecl 0x556646270e48 <line:817:5, col:95> col:10 replace 'bool (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference, const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &)'
| |-ParmVarDecl 0x556646270d38 <col:18, col:38> col:38 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
| |-ParmVarDecl 0x556646270db0 <col:43, col:62> col:62 value 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::mapped_type &'
| `-DeprecatedAttr 0x556646270f38 <col:84> Inherited "" ""
|-CXXMethodDecl 0x5566462710a8 <line:822:5, line:824:5> line:822:14 erase 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator (const HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator &)'
| `-ParmVarDecl 0x556646270fe8 <col:20, col:36> col:36 it 'const HashTable<EtherAddress, EtherSwitch::AddrInfo>::iterator &'
|-CXXMethodDecl 0x556646271238 <line:829:5, line:831:5> line:829:15 erase 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::size_type (HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference)'
| `-ParmVarDecl 0x556646271170 <col:21, col:41> col:41 key 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::key_const_reference':'const EtherAddress &'
|-CXXMethodDecl 0x5566462712f0 <line:835:5, line:837:5> line:835:10 clear 'void ()'
|-CXXMethodDecl 0x5566462715b8 <line:841:5, line:844:5> line:841:10 swap 'void (HashTable<EtherAddress, EtherSwitch::AddrInfo> &)'
| `-ParmVarDecl 0x5566462714c8 <col:15, col:32> col:32 x 'HashTable<EtherAddress, EtherSwitch::AddrInfo> &'
|-CXXMethodDecl 0x556646271748 <line:851:5, line:853:5> line:851:10 rehash 'void (HashTable<EtherAddress, EtherSwitch::AddrInfo>::bucket_count_type)'
| `-ParmVarDecl 0x556646271680 <col:17, col:35> col:35 nb 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x556646271ef8 <line:857:5, line:861:5> line:857:22 operator= 'HashTable<EtherAddress, EtherSwitch::AddrInfo> &(const HashTable<EtherAddress, EtherSwitch::AddrInfo> &)'
| `-ParmVarDecl 0x5566462719a8 <col:32, col:55> col:55 x 'const HashTable<EtherAddress, EtherSwitch::AddrInfo> &'
|-CXXMethodDecl 0x556646272288 <line:865:5, line:868:5> line:865:22 operator= 'HashTable<EtherAddress, EtherSwitch::AddrInfo> &(HashTable<EtherAddress, EtherSwitch::AddrInfo> &&)'
| `-ParmVarDecl 0x556646272158 <col:32, col:50> col:50 x 'HashTable<EtherAddress, EtherSwitch::AddrInfo> &&'
|-AccessSpecDecl 0x556646272340 <line:871:3, col:10> col:3 private
|-FieldDecl 0x556646272378 <line:873:5, col:14> col:14 _rep 'HashTable<EtherAddress, EtherSwitch::AddrInfo>::rep_type':'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>'
`-FieldDecl 0x5566462723d8 <line:874:5, col:7> col:7 _default_value 'EtherSwitch::AddrInfo':'EtherSwitch::AddrInfo'

Layout: <CGRecordLayout
  LLVMType:%class.HashTable = type { %class.HashTable.0, %"struct.EtherSwitch::AddrInfo" }
  NonVirtualBaseLLVMType:%class.HashTable = type { %class.HashTable.0, %"struct.EtherSwitch::AddrInfo" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55664625b3c0 <../elements/etherswitch/etherswitch.hh:62:1, line:95:1> line:62:7 referenced class EtherSwitch definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55664625b518 <col:1, col:7> col:7 implicit referenced class EtherSwitch
|-AccessSpecDecl 0x55664625b5a8 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x55664625b630 <line:64:3, col:15> col:3 used EtherSwitch 'void ()'
|-CXXDestructorDecl 0x55664625b720 <line:65:3, col:16> col:3 used ~EtherSwitch 'void () noexcept'
| `-Overrides: [ 0x5566461b82e8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55664625b850 <line:67:3, col:58> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x5566461b9748 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x556646273088 <col:34, col:58>
|   `-ReturnStmt 0x556646273078 <col:36, col:43>
|     `-ImplicitCastExpr 0x556646273060 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556646273038 <col:43> 'const char [12]' lvalue "EtherSwitch"
|-CXXMethodDecl 0x55664625b918 <line:68:3, col:51> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x5566461b9810 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x556646273160 <col:34, col:51>
|   `-ReturnStmt 0x556646273150 <col:36, col:43>
|     `-ImplicitCastExpr 0x556646273138 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556646273118 <col:43> 'const char [5]' lvalue "2-/="
|-CXXMethodDecl 0x55664625b9e0 <line:69:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x5566461b9bd8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5566462731c0 <col:34, col:49>
|   `-ReturnStmt 0x5566462731b0 <col:36, col:43>
|     `-ImplicitCastExpr 0x556646273198 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x556646273178 <col:43> 'const char []' lvalue Var 0x5566461b9d20 'PUSH' 'const char []'
|-CXXMethodDecl 0x55664625baa8 <line:70:3, col:52> col:15 flow_code 'const char *() const'
| |-Overrides: [ 0x5566461b9fd0 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x556646273220 <col:33, col:52>
|   `-ReturnStmt 0x556646273210 <col:35, col:42>
|     `-ImplicitCastExpr 0x5566462731f8 <col:42> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5566462731d8 <col:42> 'const char [7]' lvalue "#/[^#]"
|-CXXMethodDecl 0x55664625bd80 <line:72:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5566461bafe0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55664625bc30 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55664625bca8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55664625be50 <line:73:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5566461bb0b0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55664625c018 <line:75:3, col:32> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x5566461b85b8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55664625bf08 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x55664625bf80 <col:23, col:31> col:31 p 'Packet *'
|-CXXRecordDecl 0x55664625c0c8 <line:77:5, line:81:5> line:77:12 referenced struct AddrInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55664625c1e8 <col:5, col:12> col:12 implicit referenced struct AddrInfo
| |-FieldDecl 0x55664625c290 <line:78:2, col:6> col:6 port 'int'
| |-FieldDecl 0x55664625c2f0 <line:79:2, col:12> col:12 stamp 'Timestamp'
| |-CXXConstructorDecl 0x55664625c4e8 <line:80:2, col:43> col:9 AddrInfo 'void (int, const Timestamp &)' inline
| | |-ParmVarDecl 0x55664625c358 <col:18, col:22> col:22 p 'int'
| | `-ParmVarDecl 0x55664625c3d0 <col:25, col:42> col:42 t 'const Timestamp &'
| |-CXXDestructorDecl 0x556646262810 <line:77:12> col:12 implicit ~AddrInfo 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5566462733c0 <col:12> col:12 implicit constexpr AddrInfo 'void (const EtherSwitch::AddrInfo &)' inline default trivial noexcept-unevaluated 0x5566462733c0
| | `-ParmVarDecl 0x5566462734a8 <col:12> col:12 'const EtherSwitch::AddrInfo &'
| `-CXXConstructorDecl 0x556646273548 <col:12> col:12 implicit constexpr AddrInfo 'void (EtherSwitch::AddrInfo &&)' inline default trivial noexcept-unevaluated 0x556646273548
|   `-ParmVarDecl 0x556646273658 <col:12> col:12 'EtherSwitch::AddrInfo &&'
|-AccessSpecDecl 0x55664625c5b8 <line:83:3, col:10> col:3 private
|-TypedefDecl 0x55664625c808 <line:85:5, col:47> col:47 referenced Table 'HashTable<EtherAddress, EtherSwitch::AddrInfo>':'HashTable<EtherAddress, EtherSwitch::AddrInfo>'
| `-TemplateSpecializationType 0x55664625c720 'HashTable<EtherAddress, EtherSwitch::AddrInfo>' sugar HashTable
|   |-TemplateArgument type 'EtherAddress'
|   |-TemplateArgument type 'EtherSwitch::AddrInfo'
|   `-RecordType 0x55664625c700 'HashTable<EtherAddress, EtherSwitch::AddrInfo>'
|     `-ClassTemplateSpecialization 0x55664625c600 'HashTable'
|-FieldDecl 0x556646272428 <line:86:5, col:11> col:11 _table 'EtherSwitch::Table':'HashTable<EtherAddress, EtherSwitch::AddrInfo>'
|-FieldDecl 0x556646272488 <line:87:5, col:14> col:14 _timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556646272600 <line:89:5, col:39> col:10 broadcast 'void (int, Packet *)'
| |-ParmVarDecl 0x5566462724f0 <col:20, col:24> col:24 source 'int'
| `-ParmVarDecl 0x556646272568 <col:32, col:38> col:39 'Packet *'
|-CXXMethodDecl 0x5566462727d8 <line:91:5, col:43> col:19 reader 'String (Element *, void *)' static
| |-ParmVarDecl 0x5566462726c0 <col:26, col:34> col:35 'Element *'
| `-ParmVarDecl 0x556646272740 <col:37, col:42> col:43 'void *'
|-CXXMethodDecl 0x556646272ab8 <line:92:5, col:72> col:16 writer 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x556646272898 <col:23, col:36> col:37 'const String &'
| |-ParmVarDecl 0x556646272910 <col:39, col:47> col:48 'Element *'
| |-ParmVarDecl 0x556646272990 <col:50, col:55> col:56 'void *'
| `-ParmVarDecl 0x556646272a08 <col:58, col:71> col:72 'ErrorHandler *'
|-FriendDecl 0x556646272c98 <line:93:5, col:18> col:12 'class ListenEtherSwitch':'ListenEtherSwitch'
|-CXXConstructorDecl 0x556646272d08 <line:62:7> col:7 implicit EtherSwitch 'void (const EtherSwitch &)' inline default_delete noexcept-unevaluated 0x556646272d08
| `-ParmVarDecl 0x556646272e18 <col:7> col:7 'const EtherSwitch &'
`-CXXMethodDecl 0x556646272eb8 <col:7> col:7 implicit operator= 'EtherSwitch &(const EtherSwitch &)' inline default_delete noexcept-unevaluated 0x556646272eb8
  `-ParmVarDecl 0x556646272fc8 <col:7> col:7 'const EtherSwitch &'

Layout: <CGRecordLayout
  LLVMType:%class.EtherSwitch = type <{ %class.Element.base, [4 x i8], %class.HashTable, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.EtherSwitch.base = type <{ %class.Element.base, [4 x i8], %class.HashTable, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ListenEtherSwitch
         0 |   class EtherSwitch (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class HashTable<class EtherAddress, struct EtherSwitch::AddrInfo> _table
       112 |       class HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void> _rep
       112 |         class HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
       112 |           class HashContainer_rep<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
       112 |             class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> (base) (empty)
       112 |             struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** buckets
       120 |             uint32_t nbuckets
       124 |             uint32_t first_bucket
       128 |             size_t size
       136 |             struct libdivide_u32_t bucket_divider
       136 |               uint32_t magic
       140 |               uint8_t more
       144 |         class SizedHashAllocator<32> _alloc
       144 |           class HashAllocator (base)
       144 |             struct HashAllocator::link * _free
       152 |             struct HashAllocator::buffer * _buffer
       160 |             size_t _size
       168 |       struct EtherSwitch::AddrInfo _default_value
       168 |         int port
       176 |         class Timestamp stamp
       176 |           union Timestamp::rep_t _t
       176 |             int64_t x
       184 |     uint32_t _timeout
           | [sizeof=192, dsize=188, align=8,
           |  nvsize=188, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566462738f8 prev 0x556646272b78 <../elements/etherswitch/listenetherswitch.hh:28:1, line:38:1> line:28:7 class ListenEtherSwitch definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'EtherSwitch'
|-CXXRecordDecl 0x556646273a30 <col:1, col:7> col:7 implicit referenced class ListenEtherSwitch
|-AccessSpecDecl 0x556646273ac0 <col:48, col:54> col:48 public
|-CXXConstructorDecl 0x556646273b50 <line:30:5, col:23> col:5 ListenEtherSwitch 'void ()'
|-CXXDestructorDecl 0x556646273c40 <line:31:5, col:24> col:5 ~ListenEtherSwitch 'void ()' noexcept-unevaluated 0x556646273c40
| `-Overrides: [ 0x55664625b720 EtherSwitch::~EtherSwitch 'void () noexcept' ]
|-CXXMethodDecl 0x556646273d70 <line:33:5, col:66> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55664625b850 EtherSwitch::class_name 'const char *() const' ]
| `-CompoundStmt 0x556646274460 <col:36, col:66>
|   `-ReturnStmt 0x556646274450 <col:38, col:45>
|     `-ImplicitCastExpr 0x556646274438 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556646274408 <col:45> 'const char [18]' lvalue "ListenEtherSwitch"
|-CXXMethodDecl 0x556646273e38 <line:34:5, col:53> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55664625b918 EtherSwitch::port_count 'const char *() const' ]
| `-CompoundStmt 0x5566462744c0 <col:36, col:53>
|   `-ReturnStmt 0x5566462744b0 <col:38, col:45>
|     `-ImplicitCastExpr 0x556646274498 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556646274478 <col:45> 'const char [5]' lvalue "-/=+"
|-CXXMethodDecl 0x556646274000 <line:36:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55664625c018 EtherSwitch::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x556646273ef0 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x556646273f68 <col:25, col:33> col:33 p 'Packet *'
|-CXXConstructorDecl 0x5566462740d8 <line:28:7> col:7 implicit ListenEtherSwitch 'void (const ListenEtherSwitch &)' inline default_delete noexcept-unevaluated 0x5566462740d8
| `-ParmVarDecl 0x5566462741e8 <col:7> col:7 'const ListenEtherSwitch &'
`-CXXMethodDecl 0x556646274288 <col:7> col:7 implicit operator= 'ListenEtherSwitch &(const ListenEtherSwitch &)' inline default_delete noexcept-unevaluated 0x556646274288
  `-ParmVarDecl 0x556646274398 <col:7> col:7 'const ListenEtherSwitch &'

Layout: <CGRecordLayout
  LLVMType:%class.ListenEtherSwitch = type { %class.EtherSwitch.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.ListenEtherSwitch.base = type { %class.EtherSwitch.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556645f76ac0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556645f76bd8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x556645f76c68 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x556645f76d38 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x556645f76e20 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x556645f77038 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556645f76ee0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f771e8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x556645f770f0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x556645f77330 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x556645f772a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x556645f77478 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556645f773e8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f775c0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556645f77530 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f77688 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x556645f777d0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x556645f77740 <col:28> col:31 'int'
|-CXXMethodDecl 0x556645f77898 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x556645f779e0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x556645f77950 <col:28> col:31 'int'
|-CXXMethodDecl 0x556645f77b58 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x556645f77a98 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f77ca0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x556645f77c10 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f77d68 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x556645f77f28 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556645f77e18 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556645f77e90 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f78178 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556645f77fe8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556645f78060 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556645f78228 <col:86> "" ""
|-CXXMethodDecl 0x556645f78498 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x556645f78308 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x556645f78380 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f78648 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x556645f78558 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x556645f787f8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x556645f78700 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x556645f78ac8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x556645f788b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x556645f78928 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556645f789a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f78da8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x556645f78b90 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x556645f78c08 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556645f78c80 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556645f78e60 <col:115> "" ""
|-AccessSpecDecl 0x556645f78ed0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x556645f78f08 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556645f7a420 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x556645f7a420
| `-ParmVarDecl 0x556645f7a528 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x556645f7a5c8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x556645f7a5c8
| `-ParmVarDecl 0x556645f7a6d8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x556645fafd08 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5566461a1b00 <col:7>
|-CXXConstructorDecl 0x556645fafde0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x556645fafde0
| `-ParmVarDecl 0x556645fafef8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x556645faff68 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x556645faff68
| `-ParmVarDecl 0x556645fb0078 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5566461a4500 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566461906a8 prev 0x5566461858b0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5566461907a0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x556646190890 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5566461909b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x556646190b38 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x556646190cb8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x556646190e38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5566461a1c68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5566461a24d8 <col:11>
|-CXXDestructorDecl 0x5566461a1d40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5566461a1e78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5566461a1e78
| `-ParmVarDecl 0x5566461a1f88 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5566461a2028 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5566461a2028
| `-ParmVarDecl 0x5566461a2138 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5566461a4ef8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5566461a5008 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5566461a5288 <col:11>
|   `-ReturnStmt 0x5566461a5278 <col:11>
|     `-UnaryOperator 0x5566461a5260 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5566461a5250 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5566461a5078 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5566461a5078
  `-ParmVarDecl 0x5566461a5188 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556646190ea0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556646190fb8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x556646191058 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5566461910c0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x556646191128 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x556646191190 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5566461911f0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5566461912b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x556646191310 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x556646191370 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5566461a1b78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x556646191058 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5566461a24e8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5566461a2540 <col:12>
|-CXXConstructorDecl 0x5566461a21a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5566461a21a8
| `-ParmVarDecl 0x5566461a22b8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5566461a2358 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5566461a2358
| `-ParmVarDecl 0x5566461a2468 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5566461a45e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55664617efc0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55664617f0d8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55664617f168 <col:16, col:22> col:16 public
|-EnumDecl 0x55664617f190 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55664617f290 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55664617f370 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664617f270 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55664617f250 <col:21> 'int' 28
| `-EnumConstantDecl 0x55664617f320 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55664617f388 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55664617f300 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55664617f2e0 <col:22> 'int' 64
|-CXXMethodDecl 0x55664617f6c8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55664617f3b0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55664617f430 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55664617f4a8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55664617f520 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55664617f788 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55664617f988 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55664617f800 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55664617f878 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55664617fa38 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55664617fb98 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55664617faa8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55664617fc40 <col:72> warn_unused_result ""
|-TypedefDecl 0x55664617ffa0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55664617ff30 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55664617fed0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55664617fe90 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x556645c56530 'void'
|       |-PointerType 0x556645eff360 'unsigned char *'
|       | `-BuiltinType 0x556645c56630 'unsigned char'
|       |-TypedefType 0x556645cfb930 'size_t' sugar
|       | |-Typedef 0x556645cc6d10 'size_t'
|       | `-BuiltinType 0x556645c56690 'unsigned long'
|       `-PointerType 0x556645c56d30 'void *'
|         `-BuiltinType 0x556645c56530 'void'
|-CXXMethodDecl 0x556646180418 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x556646180010 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x556646180088 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556646180120 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5566461801a0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55664619ab10 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55664619aaf8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55664619aac0 <col:58> 'int' 0
| |-ParmVarDecl 0x556646180220 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55664619ab38 <col:76> 'int' 0
| |-ParmVarDecl 0x5566461802a0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55664619ab58 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5566461804e8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x556646180568 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x556646180628 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5566461806c8 <col:20>
| `-OptimizeNoneAttr 0x556646180720 <col:30>
|-CXXMethodDecl 0x556646180798 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x556646180838 <col:20>
| `-OptimizeNoneAttr 0x556646180890 <col:30>
|-CXXMethodDecl 0x556646180908 <line:76:5, col:55> col:13 used clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5566461809a8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x556646180a58 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x556646180af8 <col:20>
| |-OptimizeNoneAttr 0x556646180b50 <col:30>
| `-WarnUnusedResultAttr 0x556646180b78 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x556646180bd0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x556646180c70 <col:20>
| `-OptimizeNoneAttr 0x556646180cc8 <col:30>
|-CXXMethodDecl 0x556646180d18 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x556646180db8 <col:20>
| `-OptimizeNoneAttr 0x556646180e10 <col:30>
|-CXXMethodDecl 0x556646180e58 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x556646180ef8 <col:20>
| `-OptimizeNoneAttr 0x556646180f50 <col:30>
|-CXXMethodDecl 0x556646180f98 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x556646181058 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x556646181120 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5566461811e8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5566461812a8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5566461813c8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55664619ac20 <col:54, line:99:5>
|   `-ReturnStmt 0x55664619ac10 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55664619abf8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55664619abc8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5566461916a8
|         `-CXXThisExpr 0x55664619abb8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x556646181568 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x556646181478 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55664619acd0 <col:67, line:103:5>
|   `-BinaryOperator 0x55664619acb0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55664619ac48 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5566461916a8
|     | `-CXXThisExpr 0x55664619ac38 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55664619ac98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55664619ac78 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x556646181478 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x556646181660 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55664619ad50 <col:33, line:107:5>
|   `-ReturnStmt 0x55664619ad40 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55664619ad28 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55664619acf8 <col:16> 'void *' lvalue ->_destructor_argument 0x556646191710
|         `-CXXThisExpr 0x55664619ace8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x556646181720 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55664619b380 <col:25, line:113:5>
|   |-ParenExpr 0x55664619b0c8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55664619b098 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55664619ae08 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55664619ade0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55664619ada8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55664619ad78 <col:24> '<bound member function type>' ->shared 0x556646180798
|   |   |       `-ImplicitCastExpr 0x55664619adc8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55664619ad68 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55664619ae68 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619ae48 <col:42> 'int' 0
|   |   `-CallExpr 0x55664619aff8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55664619afe0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619afc0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619b038 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619aed8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55664619b050 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619af00 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619b068 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619af38 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55664619b080 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619afa8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619af90 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619af58 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55664619b2c8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55664619b0f8 <col:2> 'unsigned char *' lvalue ->_head 0x5566461914b0
|   | | `-CXXThisExpr 0x55664619b0e8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55664619b2b0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55664619b290 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55664619b138 <col:10> 'unsigned char *' lvalue ->_data 0x556646191518
|   |     | `-CXXThisExpr 0x55664619b128 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55664619b278 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55664619b258 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55664619b178 <col:18> 'unsigned char *' lvalue ->_tail 0x556646191580
|   |         | `-CXXThisExpr 0x55664619b168 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55664619b240 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55664619b220 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55664619b1b8 <col:26> 'unsigned char *' lvalue ->_end 0x5566461915e8
|   |             | `-CXXThisExpr 0x55664619b1a8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55664619b208 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55664619b1e8 <col:33> 'int' 0
|   `-BinaryOperator 0x55664619b360 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55664619b2f8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5566461916a8
|     | `-CXXThisExpr 0x55664619b2e8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55664619b348 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55664619b328 <col:16> 'int' 0
|-CXXMethodDecl 0x556646181860 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5566461817d0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556646181908 <col:20>
| |-OptimizeNoneAttr 0x556646181960 <col:30>
| `-WarnUnusedResultAttr 0x556646181988 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x556646181a58 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5566461819c8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556646181b00 <col:20>
| |-OptimizeNoneAttr 0x556646181b58 <col:30>
| `-WarnUnusedResultAttr 0x556646181b80 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x556646181cb8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x556646181bc0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556646181d60 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x556646181e60 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x556646181dd0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556646181f08 <col:20>
| `-OptimizeNoneAttr 0x556646181f60 <col:30>
|-CXXMethodDecl 0x556646182028 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x556646181f98 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5566461820d0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5566461821d0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x556646182140 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556646182278 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x556646182378 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5566461822e8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556646182420 <col:20>
| `-OptimizeNoneAttr 0x556646182478 <col:30>
|-CXXMethodDecl 0x556646182608 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5566461824b8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x556646182530 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55664619ab78 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5566461826b8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5566461828b8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x556646182730 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5566461827a8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556646182ac8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556646182978 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5566461829f0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556646182cd8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x556646182b88 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x556646182c08 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55664619ab88 <col:39> 'int' 0
|-CXXMethodDecl 0x556646182da8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x556646182e70 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x556646182f38 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x556646182ff8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5566461830c0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x556646183208 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x556646183178 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5566461833d8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5566461832c8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x556646183340 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5566461834a8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x556646183568 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x556646183608 <col:20>
| `-OptimizeNoneAttr 0x556646183660 <col:30>
|-CXXMethodDecl 0x5566461836b0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x556646183750 <col:20>
| `-OptimizeNoneAttr 0x5566461837a8 <col:30>
|-CXXMethodDecl 0x5566461837f8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5566461838b8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556646183980 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x556646183a20 <col:20>
| `-OptimizeNoneAttr 0x556646183a78 <col:30>
|-CXXMethodDecl 0x556646183bc8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x556646183ab8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x556646183b30 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556646183d18 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x556646183c88 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556646183df0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x556646183eb0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x556646183f50 <col:20>
| `-OptimizeNoneAttr 0x556646183fa8 <col:30>
|-CXXMethodDecl 0x556646183ff8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x556646184098 <col:20>
| `-OptimizeNoneAttr 0x5566461840f0 <col:30>
|-CXXMethodDecl 0x556646184140 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x556646184208 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5566461842a8 <col:20>
| `-OptimizeNoneAttr 0x556646184300 <col:30>
|-CXXMethodDecl 0x556646184348 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x556646184468 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5566461845d8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x556646184518 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5566461846c8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x556646184768 <col:20>
| `-OptimizeNoneAttr 0x5566461847c0 <col:30>
|-CXXMethodDecl 0x556646184810 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5566461848d0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556646184b08 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x556646184980 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5566461849f8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556646184bb8 <col:20>
| `-OptimizeNoneAttr 0x556646184c10 <col:30>
|-CXXMethodDecl 0x556646184cb8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x556646184d58 <col:20>
| `-OptimizeNoneAttr 0x556646184db0 <col:30>
|-CXXMethodDecl 0x556646184e00 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x556646184ea0 <col:20>
| `-OptimizeNoneAttr 0x556646184ef8 <col:30>
|-CXXMethodDecl 0x556646184f40 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x556646184fe0 <col:20>
| `-OptimizeNoneAttr 0x556646185038 <col:30>
|-CXXMethodDecl 0x556646185138 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x556646185070 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5566461851e0 <col:20>
| `-OptimizeNoneAttr 0x556646185238 <col:30>
|-CXXMethodDecl 0x5566461853f8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x556646185270 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5566461852e8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5566461854a8 <col:20>
| `-OptimizeNoneAttr 0x556646185500 <col:30>
|-CXXMethodDecl 0x5566461855a8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5566461856c8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5566461857e8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x556646185888 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5566461858b0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5566461859d8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x556646185a78 <col:20>
| `-OptimizeNoneAttr 0x556646185ad0 <col:30>
|-CXXMethodDecl 0x556646185b78 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x556646185c18 <col:20>
| `-OptimizeNoneAttr 0x556646185c70 <col:30>
|-AccessSpecDecl 0x556646185c98 <line:344:3, col:9> col:3 public
|-EnumDecl 0x556646185cc0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x556646185dc0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x556646185e10 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556646185da0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x556646185d80 <col:14> 'int' 48
|-CXXMethodDecl 0x556646185e78 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x556646185f18 <col:20>
| `-OptimizeNoneAttr 0x556646185f70 <col:30>
|-CXXMethodDecl 0x556646185fe8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x556646186088 <col:20>
| `-OptimizeNoneAttr 0x5566461860e0 <col:30>
|-CXXMethodDecl 0x5566461861a8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x556646186118 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x556646186348 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5566461864e8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5566461863f8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x556646186590 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x556646186690 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556646186a40 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646186670 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x556646186650 <col:9> 'int' 0
| |-EnumConstantDecl 0x556646186720 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556646186a58 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646186700 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5566461866e0 <col:14> 'int' 1
| |-EnumConstantDecl 0x5566461867b0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556646186a70 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646186790 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x556646186770 <col:14> 'int' 2
| |-EnumConstantDecl 0x556646186840 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556646186a88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646186820 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x556646186800 <col:14> 'int' 3
| |-EnumConstantDecl 0x5566461868d0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556646186aa0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461868b0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x556646186890 <col:13> 'int' 4
| |-EnumConstantDecl 0x556646186960 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556646186ab8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646186940 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x556646186920 <col:13> 'int' 5
| `-EnumConstantDecl 0x5566461869f0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x556646186ad0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5566461869d0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5566461869b0 <col:14> 'int' 6
|-CXXMethodDecl 0x556646186b38 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x556646186bd8 <col:20>
| `-OptimizeNoneAttr 0x556646186c30 <col:30>
|-CXXMethodDecl 0x556646186d28 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x556646186c68 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x556646186dd0 <col:20>
| `-OptimizeNoneAttr 0x556646186e28 <col:30>
|-CXXMethodDecl 0x556646186e98 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x556646186fc0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x556646187138 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x556646187070 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x556646187200 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5566461872c8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x556646187408 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x556646187378 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5566461874b0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5566461875b0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5566461877b0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646187590 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x556646187570 <col:23> 'int' 0
| |-EnumConstantDecl 0x556646187640 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5566461877c8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556646187620 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x556646187600 <col:45> 'int' 4
| |-EnumConstantDecl 0x5566461876d0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5566461877e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5566461876b0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x556646187690 <col:24> 'int' 0
| `-EnumConstantDecl 0x556646187760 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5566461877f8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556646187740 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x556646187720 <col:47> 'int' 16
|-CXXMethodDecl 0x556646187858 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5566461879c8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x556646187908 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x556646187a70 <col:20>
| `-OptimizeNoneAttr 0x556646187ac8 <col:30>
|-CXXMethodDecl 0x556646187b18 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55664619b4a0 <col:18, col:36>
|   `-ReturnStmt 0x55664619b490 <col:20, col:33>
|     `-ImplicitCastExpr 0x55664619b478 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55664619b458 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55664619b428 <col:27> '<bound member function type>' ->xanno 0x556646185b78
|           `-CXXThisExpr 0x55664619b418 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x556646187c10 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55664619b5b0 <col:30, col:48>
|   `-ReturnStmt 0x55664619b5a0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55664619b588 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55664619b568 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55664619b538 <col:39> '<bound member function type>' ->xanno 0x5566461859d8
|           `-CXXThisExpr 0x55664619b528 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x556646187cf8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55664619b748 <col:24, col:50>
|   `-ReturnStmt 0x55664619b738 <col:26, col:47>
|     `-UnaryOperator 0x55664619b720 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55664619b700 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55664619b6e8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55664619b698 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5566461909b8
|         |   `-CXXMemberCallExpr 0x55664619b678 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55664619b648 <col:34> '<bound member function type>' ->xanno 0x556646185b78
|         |       `-CXXThisExpr 0x55664619b638 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55664619b6c8 <col:46> 'int' 0
|-CXXMethodDecl 0x556646187e00 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55664619b918 <col:36, col:62>
|   `-ReturnStmt 0x55664619b908 <col:38, col:59>
|     `-UnaryOperator 0x55664619b8f0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55664619b8d0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55664619b8b8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55664619b830 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5566461909b8
|         |   `-CXXMemberCallExpr 0x55664619b810 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55664619b7e0 <col:46> '<bound member function type>' ->xanno 0x5566461859d8
|         |       `-CXXThisExpr 0x55664619b7d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55664619b860 <col:58> 'int' 0
|-CXXMethodDecl 0x556646187f18 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55664619bab0 <col:26, col:53>
|   `-ReturnStmt 0x55664619baa0 <col:28, col:50>
|     `-UnaryOperator 0x55664619ba88 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55664619ba68 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55664619ba50 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55664619ba00 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x556646190cb8
|         |   `-CXXMemberCallExpr 0x55664619b9e0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55664619b9b0 <col:36> '<bound member function type>' ->xanno 0x556646185b78
|         |       `-CXXThisExpr 0x55664619b9a0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55664619ba30 <col:49> 'int' 0
|-CXXMethodDecl 0x556646188038 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55664619bc88 <col:38, col:65>
|   `-ReturnStmt 0x55664619bc78 <col:40, col:62>
|     `-UnaryOperator 0x55664619bc60 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55664619bc40 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55664619bc28 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55664619bb98 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x556646190cb8
|         |   `-CXXMemberCallExpr 0x55664619bb78 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55664619bb48 <col:48> '<bound member function type>' ->xanno 0x5566461859d8
|         |       `-CXXThisExpr 0x55664619bb38 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55664619bbc8 <col:61> 'int' 0
|-CXXMethodDecl 0x5566461881e8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5566461880f0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55664619c358 <col:34, line:463:5>
|   |-ParenExpr 0x55664619c1a0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55664619c170 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55664619bdd8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619bda8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619bcf8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619bce0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619bca0 <col:23> 'int' lvalue ParmVar 0x5566461880f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619bcc0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619bd88 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619bd58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619bd18 <col:33> 'int' lvalue ParmVar 0x5566461880f0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55664619bd70 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55664619bd38 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55664619be38 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619be18 <col:56> 'int' 0
|   |   `-CallExpr 0x55664619c0d0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55664619c0b8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619c098 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619c110 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619bf28 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55664619c128 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619bf58 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619c140 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619bf90 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55664619c158 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619c080 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619c068 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619c028 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55664619c348 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55664619c330 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55664619c310 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55664619c2e0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55664619c290 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5566461909b8
|         |   `-CXXMemberCallExpr 0x55664619c270 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55664619c240 <col:9> '<bound member function type>' ->xanno 0x5566461859d8
|         |       `-CXXThisExpr 0x55664619c230 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55664619c2f8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55664619c2c0 <col:21> 'int' lvalue ParmVar 0x5566461880f0 'i' 'int'
|-CXXMethodDecl 0x556646188438 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5566461882a8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x556646188320 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55664619c9e8 <col:40, line:472:5>
|   |-ParenExpr 0x55664619c800 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55664619c7d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55664619c4b0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619c480 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619c3d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619c3b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619c378 <col:23> 'int' lvalue ParmVar 0x5566461882a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619c398 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619c460 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619c430 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619c3f0 <col:33> 'int' lvalue ParmVar 0x5566461882a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55664619c448 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55664619c410 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55664619c510 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619c4f0 <col:56> 'int' 0
|   |   `-CallExpr 0x55664619c730 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55664619c718 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619c6f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619c770 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619c580 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55664619c788 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619c5b0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619c7a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619c5e8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55664619c7b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619c6e0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619c6c8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619c688 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55664619c9c8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55664619c970 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55664619c940 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55664619c8f0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5566461909b8
|     | |   `-CXXMemberCallExpr 0x55664619c8d0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55664619c8a0 <col:2> '<bound member function type>' ->xanno 0x556646185b78
|     | |       `-CXXThisExpr 0x55664619c890 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55664619c958 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55664619c920 <col:14> 'int' lvalue ParmVar 0x5566461882a8 'i' 'int'
|     `-ImplicitCastExpr 0x55664619c9b0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55664619c990 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x556646188320 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5566461885f8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x556646188500 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55664619d168 <col:36, line:485:5>
|   |-ParenExpr 0x55664619ced0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55664619cea0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55664619cb80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619cb50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619ca60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619ca48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619ca08 <col:23> 'int' lvalue ParmVar 0x556646188500 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619ca28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619cb30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619cb18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619ca80 <col:33> 'int' lvalue ParmVar 0x556646188500 'i' 'int'
|   |   |     `-BinaryOperator 0x55664619caf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55664619cae0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55664619caa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55664619cac0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55664619cbe0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619cbc0 <col:60> 'int' 0
|   |   `-CallExpr 0x55664619ce00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55664619cde8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619cdc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619ce40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619cc50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55664619ce58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619cc88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619ce70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619ccc0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55664619ce88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619cdb0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619cd98 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619cd58 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55664619d158 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55664619d140 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55664619d128 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55664619d0f8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55664619d098 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55664619d068 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55664619cfe0 <col:61, col:70> 'char const[48]' lvalue ->c 0x556646190890
|             |   `-CXXMemberCallExpr 0x55664619cfc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55664619cf90 <col:61> '<bound member function type>' ->xanno 0x5566461859d8
|             |       `-CXXThisExpr 0x55664619cf80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55664619d080 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55664619d010 <col:74> 'int' lvalue ParmVar 0x556646188500 'i' 'int'
|-CXXMethodDecl 0x556646188848 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5566461886b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556646188730 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55664619d8b8 <col:42, line:500:5>
|   |-ParenExpr 0x55664619d650 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55664619d620 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55664619d300 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619d2d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619d1e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619d1c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619d188 <col:23> 'int' lvalue ParmVar 0x5566461886b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619d1a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619d2b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619d298 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619d200 <col:33> 'int' lvalue ParmVar 0x5566461886b8 'i' 'int'
|   |   |     `-BinaryOperator 0x55664619d278 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55664619d260 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55664619d220 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55664619d240 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55664619d360 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619d340 <col:60> 'int' 0
|   |   `-CallExpr 0x55664619d580 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55664619d568 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619d548 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619d5c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619d3d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55664619d5d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619d408 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619d5f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619d440 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55664619d608 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619d530 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619d518 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619d4d8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55664619d898 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55664619d848 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55664619d818 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55664619d7c0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55664619d790 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55664619d740 <col:48, col:57> 'char [48]' lvalue ->c 0x556646190890
|     |     |   `-CXXMemberCallExpr 0x55664619d720 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55664619d6f0 <col:48> '<bound member function type>' ->xanno 0x556646185b78
|     |     |       `-CXXThisExpr 0x55664619d6e0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55664619d7a8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55664619d770 <col:61> 'int' lvalue ParmVar 0x5566461886b8 'i' 'int'
|     `-ImplicitCastExpr 0x55664619d880 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55664619d860 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x556646188730 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x556646188a08 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x556646188910 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55664619e018 <col:35, line:513:5>
|   |-ParenExpr 0x55664619dd28 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55664619dcf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55664619da50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619da20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619d930 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619d918 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619d8d8 <col:23> 'int' lvalue ParmVar 0x556646188910 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619d8f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619da00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619d9e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619d950 <col:33> 'int' lvalue ParmVar 0x556646188910 'i' 'int'
|   |   |     `-BinaryOperator 0x55664619d9c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55664619d9b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55664619d970 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55664619d990 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55664619dab0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619da90 <col:60> 'int' 0
|   |   `-CallExpr 0x55664619dc58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55664619dc40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619dc20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619dc98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619db20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55664619dcb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619db58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619dcc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619db90 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55664619dce0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619dc08 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619dbf0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619dbb0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55664619e008 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55664619dff0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55664619dfd8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55664619dfa8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55664619df20 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55664619def0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55664619dea0 <col:60, col:69> 'char const[48]' lvalue ->c 0x556646190890
|             |   `-CXXMemberCallExpr 0x55664619de80 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55664619de50 <col:60> '<bound member function type>' ->xanno 0x5566461859d8
|             |       `-CXXThisExpr 0x55664619de40 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55664619df08 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55664619ded0 <col:73> 'int' lvalue ParmVar 0x556646188910 'i' 'int'
|-CXXMethodDecl 0x556646188c58 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x556646188ac8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556646188b40 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55664619e738 <col:41, line:528:5>
|   |-ParenExpr 0x55664619e4c0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55664619e490 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55664619e1b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619e180 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619e090 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619e078 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619e038 <col:23> 'int' lvalue ParmVar 0x556646188ac8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619e058 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619e160 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619e148 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619e0b0 <col:33> 'int' lvalue ParmVar 0x556646188ac8 'i' 'int'
|   |   |     `-BinaryOperator 0x55664619e128 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55664619e110 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55664619e0d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55664619e0f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55664619e210 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619e1f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55664619e3f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55664619e3d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619e3b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619e430 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619e280 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55664619e448 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619e2b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619e460 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619e2f0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55664619e478 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619e3a0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619e388 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619e348 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55664619e718 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55664619e6c8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55664619e698 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55664619e640 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55664619e600 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55664619e5b0 <col:47, col:56> 'char [48]' lvalue ->c 0x556646190890
|     |     |   `-CXXMemberCallExpr 0x55664619e590 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55664619e560 <col:47> '<bound member function type>' ->xanno 0x556646185b78
|     |     |       `-CXXThisExpr 0x55664619e550 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55664619e618 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55664619e5e0 <col:60> 'int' lvalue ParmVar 0x556646188ac8 'i' 'int'
|     `-ImplicitCastExpr 0x55664619e700 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55664619e6e0 <col:65> 'int16_t':'short' lvalue ParmVar 0x556646188b40 'x' 'int16_t':'short'
|-CXXMethodDecl 0x556646188e18 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x556646188d20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55664619ee08 <col:36, line:541:5>
|   |-ParenExpr 0x55664619eba8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55664619eb78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55664619e8d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619e8a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619e7b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619e798 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619e758 <col:23> 'int' lvalue ParmVar 0x556646188d20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619e778 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619e880 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619e868 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619e7d0 <col:33> 'int' lvalue ParmVar 0x556646188d20 'i' 'int'
|   |   |     `-BinaryOperator 0x55664619e848 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55664619e830 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55664619e7f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55664619e810 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55664619e930 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619e910 <col:60> 'int' 0
|   |   `-CallExpr 0x55664619ead8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55664619eac0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619eaa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619eb18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619e9a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55664619eb30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619e9d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619eb48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619ea10 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55664619eb60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619ea88 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619ea70 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619ea30 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55664619edf8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55664619ede0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55664619edc8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55664619ed98 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55664619ed40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55664619ed10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55664619ecc0 <col:61, col:70> 'char const[48]' lvalue ->c 0x556646190890
|             |   `-CXXMemberCallExpr 0x55664619eca0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55664619ec70 <col:61> '<bound member function type>' ->xanno 0x5566461859d8
|             |       `-CXXThisExpr 0x55664619ec60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55664619ed28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55664619ecf0 <col:74> 'int' lvalue ParmVar 0x556646188d20 'i' 'int'
|-CXXMethodDecl 0x556646188fe8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x556646188ed8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x556646188f50 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556646189098 <col:20>
| `-OptimizeNoneAttr 0x5566461890f0 <col:30>
|-CXXMethodDecl 0x556646189228 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x556646189130 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55664619f4d8 <col:35, line:562:5>
|   |-ParenExpr 0x55664619f278 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55664619f248 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55664619efa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619ef70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619ee80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619ee68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619ee28 <col:23> 'int' lvalue ParmVar 0x556646189130 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619ee48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619ef50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619ef38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619eea0 <col:33> 'int' lvalue ParmVar 0x556646189130 'i' 'int'
|   |   |     `-BinaryOperator 0x55664619ef18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55664619ef00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55664619eec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55664619eee0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55664619f000 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619efe0 <col:60> 'int' 0
|   |   `-CallExpr 0x55664619f1a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55664619f190 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619f170 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619f1e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619f070 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55664619f200 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619f0a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619f218 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619f0e0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55664619f230 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619f158 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619f140 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619f100 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55664619f4c8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55664619f4b0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55664619f498 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55664619f468 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55664619f410 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55664619f3e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55664619f390 <col:60, col:69> 'char const[48]' lvalue ->c 0x556646190890
|             |   `-CXXMemberCallExpr 0x55664619f370 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55664619f340 <col:60> '<bound member function type>' ->xanno 0x5566461859d8
|             |       `-CXXThisExpr 0x55664619f330 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55664619f3f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55664619f3c0 <col:73> 'int' lvalue ParmVar 0x556646189130 'i' 'int'
|-CXXMethodDecl 0x556646189438 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5566461892e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556646189360 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55664619fbb8 <col:41, line:577:5>
|   |-ParenExpr 0x55664619f948 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55664619f918 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55664619f670 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619f640 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619f550 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619f538 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619f4f8 <col:23> 'int' lvalue ParmVar 0x5566461892e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619f518 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619f620 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619f608 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619f570 <col:33> 'int' lvalue ParmVar 0x5566461892e8 'i' 'int'
|   |   |     `-BinaryOperator 0x55664619f5e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55664619f5d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55664619f590 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55664619f5b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55664619f6d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619f6b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55664619f878 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55664619f860 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619f840 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619f8b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619f740 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55664619f8d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619f778 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619f8e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619f7b0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55664619f900 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619f828 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619f810 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619f7d0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55664619fb98 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55664619fb48 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55664619fb18 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55664619fab8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55664619fa88 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55664619fa38 <col:47, col:56> 'char [48]' lvalue ->c 0x556646190890
|     |     |   `-CXXMemberCallExpr 0x55664619fa18 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55664619f9e8 <col:47> '<bound member function type>' ->xanno 0x556646185b78
|     |     |       `-CXXThisExpr 0x55664619f9d8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55664619faa0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55664619fa68 <col:60> 'int' lvalue ParmVar 0x5566461892e8 'i' 'int'
|     `-ImplicitCastExpr 0x55664619fb80 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55664619fb60 <col:65> 'int32_t':'int' lvalue ParmVar 0x556646189360 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5566461895f8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x556646189500 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5566461a02e8 <col:36, line:591:5>
|   |-ParenExpr 0x5566461a0028 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55664619fff8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55664619fd50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55664619fd20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55664619fc30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55664619fc18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55664619fbd8 <col:23> 'int' lvalue ParmVar 0x556646189500 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55664619fbf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55664619fd00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55664619fce8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55664619fc50 <col:33> 'int' lvalue ParmVar 0x556646189500 'i' 'int'
|   |   |     `-BinaryOperator 0x55664619fcc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55664619fcb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55664619fc70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55664619fc90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55664619fdb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55664619fd90 <col:60> 'int' 0
|   |   `-CallExpr 0x55664619ff58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55664619ff40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55664619ff20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55664619ff98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619fe20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55664619ffb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55664619fe58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55664619ffc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55664619fe90 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55664619ffe0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55664619ff08 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55664619fef0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55664619feb0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5566461a02d8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5566461a02c0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5566461a02a8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5566461a0278 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5566461a01f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5566461a01c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5566461a0170 <col:61, col:70> 'char const[48]' lvalue ->c 0x556646190890
|             |   `-CXXMemberCallExpr 0x5566461a0150 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5566461a0120 <col:61> '<bound member function type>' ->xanno 0x5566461859d8
|             |       `-CXXThisExpr 0x5566461a0110 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5566461a01d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5566461a01a0 <col:74> 'int' lvalue ParmVar 0x556646189500 'i' 'int'
|-CXXMethodDecl 0x556646189848 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5566461896b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556646189730 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5566461a09c8 <col:42, line:606:5>
|   |-ParenExpr 0x5566461a0758 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5566461a0728 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5566461a0480 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5566461a0450 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566461a0360 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5566461a0348 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5566461a0308 <col:23> 'int' lvalue ParmVar 0x5566461896b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5566461a0328 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5566461a0430 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5566461a0418 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566461a0380 <col:33> 'int' lvalue ParmVar 0x5566461896b8 'i' 'int'
|   |   |     `-BinaryOperator 0x5566461a03f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5566461a03e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5566461a03a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5566461a03c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5566461a04e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5566461a04c0 <col:60> 'int' 0
|   |   `-CallExpr 0x5566461a0688 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5566461a0670 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566461a0650 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5566461a06c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566461a0550 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5566461a06e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566461a0588 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5566461a06f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5566461a05c0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5566461a0710 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566461a0638 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566461a0620 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566461a05e0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5566461a09a8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5566461a0958 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5566461a0928 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5566461a08c8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5566461a0898 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5566461a0848 <col:48, col:57> 'char [48]' lvalue ->c 0x556646190890
|     |     |   `-CXXMemberCallExpr 0x5566461a0828 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5566461a07f8 <col:48> '<bound member function type>' ->xanno 0x556646185b78
|     |     |       `-CXXThisExpr 0x5566461a07e8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5566461a08b0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5566461a0878 <col:61> 'int' lvalue ParmVar 0x5566461896b8 'i' 'int'
|     `-ImplicitCastExpr 0x5566461a0990 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5566461a0970 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x556646189730 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5566461899e0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x556646189910 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5566461a1238 <col:33, line:620:5>
|   |-ParenExpr 0x5566461a0fb0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5566461a0f80 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5566461a0bd0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5566461a0ba0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566461a0a40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5566461a0a28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5566461a09e8 <col:23> 'int' lvalue ParmVar 0x556646189910 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5566461a0a08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5566461a0b80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5566461a0b68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566461a0a60 <col:33> 'int' lvalue ParmVar 0x556646189910 'i' 'int'
|   |   |     `-BinaryOperator 0x5566461a0b48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5566461a0b30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5566461a0a80 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5566461a0b08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5566461a0af0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5566461a0ab8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5566461a0c30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5566461a0c10 <col:79> 'int' 0
|   |   `-CallExpr 0x5566461a0ee0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5566461a0ec8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566461a0ea8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5566461a0f20 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566461a0d18 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5566461a0f38 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566461a0d60 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5566461a0f50 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5566461a0d98 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5566461a0f68 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566461a0e90 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566461a0e78 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566461a0e38 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5566461a1228 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5566461a1210 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5566461a11f8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5566461a11c8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5566461a1140 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5566461a1110 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5566461a10c0 <col:67, col:76> 'char const[48]' lvalue ->c 0x556646190890
|             |   `-CXXMemberCallExpr 0x5566461a10a0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5566461a1070 <col:67> '<bound member function type>' ->xanno 0x5566461859d8
|             |       `-CXXThisExpr 0x5566461a1060 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5566461a1128 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5566461a10f0 <col:80> 'int' lvalue ParmVar 0x556646189910 'i' 'int'
|-CXXMethodDecl 0x556646189bf8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x556646189aa0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556646189b20 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5566461a1a60 <col:45, line:635:5>
|   |-ParenExpr 0x5566461a17a8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5566461a1778 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5566461a1440 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5566461a1410 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5566461a12b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5566461a1298 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5566461a1258 <col:23> 'int' lvalue ParmVar 0x556646189aa0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5566461a1278 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5566461a13f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5566461a13d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5566461a12d0 <col:33> 'int' lvalue ParmVar 0x556646189aa0 'i' 'int'
|   |   |     `-BinaryOperator 0x5566461a13b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5566461a13a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5566461a12f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556646185dc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5566461a1378 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5566461a1360 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5566461a1328 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5566461a14a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5566461a1480 <col:79> 'int' 0
|   |   `-CallExpr 0x5566461a16d8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5566461a16c0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5566461a16a0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5566461a1718 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566461a1510 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5566461a1730 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5566461a1558 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5566461a1748 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5566461a1590 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5566461a1760 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5566461a1688 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5566461a1670 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5566461a1628 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5566461a1a40 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5566461a19a8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5566461a1978 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5566461a1918 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5566461a18e8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5566461a1898 <col:54, col:63> 'char [48]' lvalue ->c 0x556646190890
|     |     |   `-CXXMemberCallExpr 0x5566461a1878 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5566461a1848 <col:54> '<bound member function type>' ->xanno 0x556646185b78
|     |     |       `-CXXThisExpr 0x5566461a1838 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5566461a1900 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5566461a18c8 <col:67> 'int' lvalue ParmVar 0x556646189aa0 'i' 'int'
|     `-CXXConstCastExpr 0x5566461a1a10 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5566461a19f8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5566461a19c0 <col:91> 'const void *' lvalue ParmVar 0x556646189b20 'x' 'const void *'
|-CXXMethodDecl 0x556646189cc8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5566461a1ae8 <col:34, line:640:5>
|   `-ReturnStmt 0x5566461a1ad8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5566461a1ac0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5566461a1a90 <col:16> 'Packet *' lvalue ->_data_packet 0x556646191448
|         `-CXXThisExpr 0x5566461a1a80 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x556646189e08 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x556646189d78 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55664619aba8 <col:46> 'bool' true
|-CXXMethodDecl 0x556646189f88 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x556646189ec0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55664618a030 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55664618a7e0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55664618a130 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a850 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a110 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55664618a0f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55664617f290 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55664618a1c0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a868 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a1a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55664618a180 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55664617f320 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55664618a250 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a880 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a230 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55664618a210 <col:21> 'int' 0
| |-EnumConstantDecl 0x55664618a2e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a898 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a2c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55664618a2a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55664618a370 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a8b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a350 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55664618a330 <col:21> 'int' 16
| |-EnumConstantDecl 0x55664618a400 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a8c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a3e0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55664618a3c0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55664618a490 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a8e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a470 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55664618a450 <col:19> 'int' EnumConstant 0x55664618a2e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55664618a520 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a8f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a500 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55664618a4e0 <col:19> 'int' EnumConstant 0x55664618a400 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55664618a5f0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a910 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a5d0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55664618a5b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55664618a570 <col:23> 'int' EnumConstant 0x55664618a520 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55664618a590 <col:40> 'int' 2
| |-EnumConstantDecl 0x55664618a6c0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55664618a928 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55664618a6a0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55664618a680 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55664618a640 <col:23> 'int' EnumConstant 0x55664618a520 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55664618a660 <col:40> 'int' 4
| `-EnumConstantDecl 0x55664618a790 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55664618a940 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55664618a770 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55664618a750 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55664618a710 <col:23> 'int' EnumConstant 0x55664618a520 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55664618a730 <col:40> 'int' 8
|-CXXMethodDecl 0x55664618a980 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55664618aa20 <col:68> "" ""
|-CXXMethodDecl 0x55664618aab8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55664618ab58 <col:45> "" ""
|-CXXMethodDecl 0x55664618abf0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55664618ac90 <col:57> "" ""
|-CXXMethodDecl 0x55664618ad28 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55664618adc8 <col:45> "" ""
|-CXXMethodDecl 0x55664618ae60 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55664618af00 <col:57> "" ""
|-CXXMethodDecl 0x55664618af90 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55664618b030 <col:51> "" ""
|-CXXMethodDecl 0x55664618b0c0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55664618b160 <col:63> "" ""
|-CXXMethodDecl 0x55664618b1f0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55664618b290 <col:53> "" ""
|-CXXMethodDecl 0x55664618b320 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55664618b3c0 <col:65> "" ""
|-CXXMethodDecl 0x55664618b4d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55664618b448 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55664618b580 <col:61> "" ""
|-CXXMethodDecl 0x55664618b718 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55664618b608 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55664618b680 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55664618b7c8 <col:67> "" ""
|-CXXMethodDecl 0x55664618b8e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55664618b850 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55664618b988 <col:63> "" ""
|-CXXMethodDecl 0x55664618bb20 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55664618ba10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55664618ba88 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55664618bbd0 <col:69> "" ""
|-CXXMethodDecl 0x55664618bce8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55664618bc58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55664618bd90 <col:63> "" ""
|-CXXMethodDecl 0x55664618e468 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55664618e358 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55664618e3d0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55664618e518 <col:69> "" ""
|-CXXMethodDecl 0x55664618e630 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55664618e5a0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55664618e6d8 <col:62> "" ""
|-CXXMethodDecl 0x55664618e870 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55664618e760 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55664618e7d8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55664618e920 <col:68> "" ""
|-CXXMethodDecl 0x55664618ea38 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55664618e9a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55664618eae0 <col:63> "" ""
|-CXXMethodDecl 0x55664618ec78 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55664618eb68 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55664618ebe0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55664618ed28 <col:69> "" ""
|-CXXMethodDecl 0x55664618edb8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55664618ee58 <col:64> "" ""
|-CXXMethodDecl 0x55664618eee8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55664618ef88 <col:52> "" ""
|-CXXMethodDecl 0x55664618f018 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55664618f0b8 <col:67> "" ""
|-CXXMethodDecl 0x55664618f148 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55664618f1e8 <col:55> "" ""
|-CXXMethodDecl 0x55664618f300 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55664618f270 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55664618f3a8 <col:58> "" ""
|-CXXMethodDecl 0x55664618f540 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55664618f430 <col:33> col:36 'int'
| |-ParmVarDecl 0x55664618f4a8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55664618f5f0 <col:62> "" ""
|-CXXMethodDecl 0x55664618f708 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55664618f678 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55664618f7b0 <col:58> "" ""
|-CXXMethodDecl 0x55664618f948 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55664618f838 <col:33> col:36 'int'
| |-ParmVarDecl 0x55664618f8b0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55664618f9f8 <col:62> "" ""
|-CXXMethodDecl 0x55664618fb10 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55664618fa80 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55664618fbb8 <col:60> "" ""
|-CXXMethodDecl 0x55664618fd50 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55664618fc40 <col:34> col:37 'int'
| |-ParmVarDecl 0x55664618fcb8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55664618fe00 <col:64> "" ""
|-CXXMethodDecl 0x55664618ff18 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55664618fe88 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55664618ffc0 <col:58> "" ""
|-CXXMethodDecl 0x556646190158 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x556646190048 <col:33> col:36 'int'
| |-ParmVarDecl 0x5566461900c0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x556646190208 <col:62> "" ""
|-CXXMethodDecl 0x556646190320 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x556646190290 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5566461903c8 <col:59> "" ""
|-CXXMethodDecl 0x556646190560 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x556646190450 <col:33> col:36 'int'
| |-ParmVarDecl 0x5566461904c8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556646190610 <col:63> "" ""
|-AccessSpecDecl 0x556646190680 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5566461906a8 prev 0x5566461858b0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5566461907a0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x556646190890 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5566461909b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x556646190b38 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x556646190cb8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x556646190e38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5566461a1c68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5566461a24d8 <col:11>
| |-CXXDestructorDecl 0x5566461a1d40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5566461a1e78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5566461a1e78
| | `-ParmVarDecl 0x5566461a1f88 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5566461a2028 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5566461a2028
| | `-ParmVarDecl 0x5566461a2138 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5566461a4ef8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5566461a5008 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5566461a5288 <col:11>
| |   `-ReturnStmt 0x5566461a5278 <col:11>
| |     `-UnaryOperator 0x5566461a5260 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5566461a5250 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5566461a5078 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5566461a5078
|   `-ParmVarDecl 0x5566461a5188 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x556646190ea0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556646190fb8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x556646191058 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5566461910c0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x556646191128 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x556646191190 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5566461911f0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5566461912b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x556646191310 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x556646191370 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5566461a1b78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x556646191058 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5566461a24e8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5566461a2540 <col:12>
| |-CXXConstructorDecl 0x5566461a21a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5566461a21a8
| | `-ParmVarDecl 0x5566461a22b8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5566461a2358 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5566461a2358
| | `-ParmVarDecl 0x5566461a2468 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5566461a45e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5566461913e8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x556646191448 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5566461914b0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x556646191518 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x556646191580 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5566461915e8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x556646191648 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5566461916a8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x556646191710 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x556646191798 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5566461913e8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5566461a1b10 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x556646191648 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5566461a2550 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5566461a25b0 <col:21, line:755:5>
|-CXXConstructorDecl 0x556646191938 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x556646191878 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x556646191a30 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x556646191c18 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x556646191b20 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x556646191ee8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x556646191cd0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556646191d48 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556646191dc0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556646192108 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x556646191fb8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x556646192030 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55664619a6e8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5566461921c8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x556646192240 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5566461922b8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55664619a840 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55664619a7b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55664619a988 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55664619a8f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55664619aa80 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ether
         0 |   uint8_t [6] ether_dhost
         6 |   uint8_t [6] ether_shost
        12 |   uint16_t ether_type
           | [sizeof=14, dsize=14, align=1,
           |  nvsize=14, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5566462744d8 prev 0x55664617ea60 <../dummy_inc/clicknet/ether.h:17:1, line:21:1> line:17:8 referenced struct click_ether definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-PackedAttr 0x556646274898 <line:21:18>
|-CXXRecordDecl 0x5566462745d0 <line:17:1, col:8> col:8 implicit struct click_ether
|-FieldDecl 0x556646274738 <line:18:5, col:26> col:13 referenced ether_dhost 'uint8_t [6]'
|-FieldDecl 0x5566462747e8 <line:19:5, col:26> col:13 referenced ether_shost 'uint8_t [6]'
`-FieldDecl 0x556646274848 <line:20:5, col:14> col:14 ether_type 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  NonVirtualBaseLLVMType:%struct.click_ether = type { [6 x i8], [6 x i8], i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> >
         0 |   struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt * _element
         8 |   struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** _pprev
        16 |   HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type _bucket
        24 |   const HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashTable_const_iterator<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo> >
         0 |   class HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
         0 |     struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt * _element
         8 |     struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** _pprev
        16 |     HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type _bucket
        24 |     const HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashTable_iterator<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo> >
         0 |   class HashTable_const_iterator<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo> > (base)
         0 |     class HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > _rep
         0 |       struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt * _element
         8 |       struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** _pprev
        16 |       HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type _bucket
        24 |       const HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556646264c60 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>'
|-CXXRecordDecl 0x556646295718 prev 0x556646264c60 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x5566462957a8 <col:38, col:44> col:38 public
|-TypedefDecl 0x556646295970 <line:304:5, col:53> col:53 size_type 'typename HashContainer<elt, HashContainer_adapter<elt> >::size_type':'unsigned long'
| `-ElaboratedType 0x556646295920 'typename HashContainer<elt, HashContainer_adapter<elt> >::size_type' sugar
|   `-TypedefType 0x5566462647d0 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::size_type' sugar
|     |-Typedef 0x556646263f90 'size_type'
|     `-TypedefType 0x556645cfb930 'size_t' sugar
|       |-Typedef 0x556645cc6d10 'size_t'
|       `-BuiltinType 0x556645c56690 'unsigned long'
|-TypedefDecl 0x556646295b10 <line:305:5, col:61> col:61 bucket_count_type 'typename HashContainer<elt, HashContainer_adapter<elt> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x556646295ac0 'typename HashContainer<elt, HashContainer_adapter<elt> >::bucket_count_type' sugar
|   `-TypedefType 0x556646264970 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type' sugar
|     |-Typedef 0x556646263fe8 'bucket_count_type'
|     `-TypedefType 0x556645dabbe0 'uint32_t' sugar
|       |-Typedef 0x556645cbf5f8 'uint32_t'
|       `-TypedefType 0x556645c98640 '__uint32_t' sugar
|         |-Typedef 0x556645c98238 '__uint32_t'
|         `-BuiltinType 0x556645c56670 'unsigned int'
|-CXXConstructorDecl 0x556646295ba0 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x556646295d08 <line:312:5, line:314:5> line:312:8 get 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *() const'
|-CXXMethodDecl 0x556646295dd8 <line:317:5, line:319:5> line:317:8 operator-> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *() const'
|-CXXMethodDecl 0x556646295f38 <line:323:5, line:325:5> line:323:8 operator* 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt &() const'
|-CXXMethodDecl 0x556646295fe8 <line:328:5, line:330:5> line:328:17 live 'bool () const' inline
|-TypedefDecl 0x556646296178 <line:332:5, col:73> col:48 unspecified_bool_type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *(HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::*)() const'
| `-MemberPointerType 0x556646296110 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *(HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::*)() const'
|   |-RecordType 0x556646264d60 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|   | `-ClassTemplateSpecialization 0x556646264c60 'HashContainer_const_iterator'
|   `-ParenType 0x5566462960a0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *() const' sugar
|     `-FunctionProtoType 0x556646295cc0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *() const' const cdecl
|       `-PointerType 0x556646295c60 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
|         `-SubstTemplateTypeParmType 0x5566462957d0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt' sugar
|           |-TemplateTypeParmType 0x556646204ad0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x556646204a80 'T'
|           `-RecordType 0x55664625d2f0 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|             `-CXXRecord 0x55664625d260 'elt'
|-CXXConversionDecl 0x556646296290 <line:334:5, line:336:5> line:334:12 operator HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *(HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::*)() const 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5566462964e8 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *() const'
|-CXXMethodDecl 0x556646296608 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type () const'
|-CXXMethodDecl 0x5566462966b8 <line:349:5, line:361:5> line:349:10 operator++ 'void ()'
|-CXXMethodDecl 0x5566462967f8 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x556646296768 <col:21> col:24 'int'
|-AccessSpecDecl 0x5566462968b0 <line:368:3, col:10> col:3 private
|-FieldDecl 0x5566462968e8 <line:370:5, col:8> col:8 referenced _element 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
|-FieldDecl 0x556646296980 <line:371:5, col:9> col:9 referenced _pprev 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **'
|-FieldDecl 0x5566462969e0 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x556646296b28 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *'
|-CXXConstructorDecl 0x556646296d88 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *)' inline
| `-ParmVarDecl 0x556646296c78 <col:41, col:68> col:68 hc 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *'
|-CXXConstructorDecl 0x556646297218 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *, HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type, HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **, HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *)' inline
| |-ParmVarDecl 0x556646296f48 <col:41, col:68> col:68 hc 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *'
| |-ParmVarDecl 0x556646296fc0 <col:72, col:90> col:90 b 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x556646297040 <col:93, col:97> col:97 pprev 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **'
| `-ParmVarDecl 0x5566462970b8 <col:104, col:107> col:107 element 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
|-FriendDecl 0x5566462973f8 <line:392:5, col:36> col:12 'class HashContainer<elt, HashContainer_adapter<elt> >':'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-FriendDecl 0x556646297548 <line:393:5, col:45> col:12 'class HashContainer_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-CXXDestructorDecl 0x556646299010 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x556646299118 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &)' inline default trivial noexcept-unevaluated 0x556646299118
| `-ParmVarDecl 0x5566462991f8 <col:7> col:7 'const HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &'
`-CXXConstructorDecl 0x556646299298 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5566462993a8 <col:7> col:7 used 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&'
  |-CXXCtorInitializer Field 0x5566462968e8 '_element' 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
  | `-ImplicitCastExpr 0x556646299db0 <col:7> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *' <LValueToRValue>
  |   `-MemberExpr 0x556646299d68 <col:7> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *' xvalue ._element 0x5566462968e8
  |     `-CXXStaticCastExpr 0x556646299d38 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' xvalue static_cast<class HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x556646299d08 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' lvalue ParmVar 0x5566462993a8 '' 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&'
  |-CXXCtorInitializer Field 0x556646296980 '_pprev' 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **'
  | `-ImplicitCastExpr 0x556646299e98 <col:7> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **' <LValueToRValue>
  |   `-MemberExpr 0x556646299e50 <col:7> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **' xvalue ._pprev 0x556646296980
  |     `-CXXStaticCastExpr 0x556646299e20 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' xvalue static_cast<class HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x556646299df0 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' lvalue ParmVar 0x5566462993a8 '' 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&'
  |-CXXCtorInitializer Field 0x5566462969e0 '_bucket' 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type':'unsigned int'
  | `-ImplicitCastExpr 0x556646299f80 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type':'unsigned int' <LValueToRValue>
  |   `-MemberExpr 0x556646299f38 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x5566462969e0
  |     `-CXXStaticCastExpr 0x556646299f08 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' xvalue static_cast<class HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x556646299ed8 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' lvalue ParmVar 0x5566462993a8 '' 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&'
  |-CXXCtorInitializer Field 0x556646296b28 '_hc' 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *'
  | `-ImplicitCastExpr 0x55664629a068 <col:7> 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *' <LValueToRValue>
  |   `-MemberExpr 0x55664629a020 <col:7> 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *' xvalue ._hc 0x556646296b28
  |     `-CXXStaticCastExpr 0x556646299ff0 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' xvalue static_cast<class HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x556646299fc0 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' lvalue ParmVar 0x5566462993a8 '' 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&'
  `-CompoundStmt 0x55664629a0c8 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt"*, %"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt"**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt"*, %"struct.HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt"**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55664626a4e0 <../dummy_inc/click/hashtable.hh:449:1, line:522:1> line:450:7 class HashTable_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|-CXXRecordDecl 0x556646278df8 prev 0x55664626a4e0 <col:1, col:7> col:7 implicit class HashTable_const_iterator
|-AccessSpecDecl 0x556646278e88 <col:47, col:53> col:47 public
|-CXXConstructorDecl 0x556646278ee8 <line:453:5, line:454:5> line:453:5 HashTable_const_iterator 'void ()'
|-CXXMethodDecl 0x556646279138 <line:457:5, line:462:5> line:457:23 get 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> *() const'
|-CXXMethodDecl 0x556646279328 <line:466:5, line:468:5> line:466:23 operator-> 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> *() const'
|-CXXMethodDecl 0x556646279548 <line:472:5, line:474:5> line:472:23 operator* 'const Pair<const EtherAddress, EtherSwitch::AddrInfo> &() const'
|-CXXMethodDecl 0x556646279678 <line:479:5, line:481:5> line:479:14 key 'const EtherAddress &() const'
|-CXXMethodDecl 0x5566462797a8 <line:486:5, line:488:5> line:486:14 value 'const EtherSwitch::AddrInfo &() const'
|-CXXMethodDecl 0x556646279858 <line:491:5, line:493:5> line:491:10 live 'bool () const'
|-TypedefDecl 0x5566462799b8 <line:495:5, col:71> col:46 unspecified_bool_type 'bool (HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >::*)() const'
| `-MemberPointerType 0x556646279950 'bool (HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >::*)() const'
|   |-RecordType 0x55664626a5c0 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|   | `-ClassTemplateSpecialization 0x55664626a4e0 'HashTable_const_iterator'
|   `-ParenType 0x5566461d11e0 'bool () const' sugar
|     `-FunctionProtoType 0x556645cfe670 'bool () const' const cdecl
|       `-BuiltinType 0x556645c56550 'bool'
|-CXXConversionDecl 0x556646279ad0 <line:497:5, line:499:5> line:497:12 used operator bool (HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >::*)() const 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556646279c20 <line:502:5, line:504:5> line:502:10 operator++ 'void (int)'
| `-ParmVarDecl 0x556646279b90 <col:21> col:24 'int'
|-CXXMethodDecl 0x556646279cd8 <line:507:5, line:509:5> line:507:10 operator++ 'void ()'
|-AccessSpecDecl 0x556646279d88 <line:511:3, col:10> col:3 private
|-FieldDecl 0x5566462975a0 <line:513:5, col:63> col:63 referenced _rep 'typename HashTable<Pair<const EtherAddress, AddrInfo> >::rep_type::const_iterator':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-CXXConstructorDecl 0x556646297938 <line:515:5, line:517:5> line:515:12 HashTable_const_iterator 'void (const typename HashTable<Pair<const EtherAddress, AddrInfo> >::rep_type::const_iterator &)' inline
| `-ParmVarDecl 0x556646297820 <col:37, col:102> col:102 i 'const typename HashTable<Pair<const EtherAddress, AddrInfo> >::rep_type::const_iterator &'
|-FriendDecl 0x556646297b70 <line:519:5, col:39> col:12 'class HashTable<Pair<const EtherAddress, AddrInfo> >':'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>'
|-FriendDecl 0x556646297d20 <line:520:5, col:48> col:12 'class HashTable_iterator<Pair<const EtherAddress, AddrInfo> >':'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|-CXXDestructorDecl 0x556646298f30 <line:450:7> col:7 implicit ~HashTable_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x556646299418 <col:7> col:7 implicit constexpr HashTable_const_iterator 'void (const HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &)' inline default trivial noexcept-unevaluated 0x556646299418
| `-ParmVarDecl 0x556646299528 <col:7> col:7 'const HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &'
`-CXXConstructorDecl 0x5566462995c8 <col:7> col:7 implicit used constexpr HashTable_const_iterator 'void (HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5566462996d8 <col:7> col:7 used 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&'
  |-CXXCtorInitializer Field 0x5566462975a0 '_rep' 'typename HashTable<Pair<const EtherAddress, AddrInfo> >::rep_type::const_iterator':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
  | `-CXXConstructExpr 0x55664629a0d8 <col:7> 'typename HashTable<Pair<const EtherAddress, AddrInfo> >::rep_type::const_iterator':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' 'void (HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&) noexcept'
  |   `-MemberExpr 0x556646299c60 <col:7> 'typename HashTable<Pair<const EtherAddress, AddrInfo> >::rep_type::const_iterator':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' xvalue ._rep 0x5566462975a0
  |     `-CXXStaticCastExpr 0x556646299c30 <col:7> 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' xvalue static_cast<class HashTable_const_iterator<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo> > &&> <NoOp>
  |       `-DeclRefExpr 0x556646299c00 <col:7> 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' lvalue ParmVar 0x5566462996d8 '' 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&'
  `-CompoundStmt 0x55664629a138 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashTable_const_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashTable_const_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55664626a6b8 <../dummy_inc/click/hashtable.hh:526:1, line:566:1> line:527:7 class HashTable_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >':'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|-TemplateArgument type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|-CXXRecordDecl 0x556646297da8 prev 0x55664626a6b8 <col:1, col:7> col:7 implicit class HashTable_iterator
|-AccessSpecDecl 0x556646297e38 <col:88, col:94> col:88 public
|-TypedefDecl 0x556646297f90 <line:529:5, col:51> col:51 inherited 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >':'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
| `-TemplateSpecializationType 0x556646297f20 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' sugar HashTable_const_iterator
|   |-TemplateArgument type 'Pair<const EtherAddress, EtherSwitch::AddrInfo>':'Pair<const EtherAddress, EtherSwitch::AddrInfo>'
|   `-RecordType 0x55664626a5c0 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
|     `-ClassTemplateSpecialization 0x55664626a4e0 'HashTable_const_iterator'
|-CXXConstructorDecl 0x556646298020 <line:532:5, line:533:5> line:532:5 HashTable_iterator 'void ()'
|-CXXMethodDecl 0x556646298278 <line:536:5, line:538:5> line:536:17 get 'Pair<const EtherAddress, EtherSwitch::AddrInfo> *() const'
|-CXXMethodDecl 0x556646298468 <line:541:5, line:543:5> line:541:24 operator-> 'Pair<const EtherAddress, EtherSwitch::AddrInfo> *() const' inline
|-CXXMethodDecl 0x556646298688 <line:547:5, line:549:5> line:547:24 operator* 'Pair<const EtherAddress, EtherSwitch::AddrInfo> &() const' inline
|-CXXMethodDecl 0x5566462987e8 <line:554:5, line:556:5> line:554:8 used value 'EtherSwitch::AddrInfo &() const'
|-AccessSpecDecl 0x556646298898 <line:558:3, col:10> col:3 private
|-CXXConstructorDecl 0x556646298ba8 <line:560:5, line:562:5> line:560:12 HashTable_iterator 'void (const typename HashTable<Pair<const EtherAddress, AddrInfo> >::rep_type::const_iterator &)' inline
| `-ParmVarDecl 0x556646298ac0 <col:31, col:96> col:96 i 'const typename HashTable<Pair<const EtherAddress, AddrInfo> >::rep_type::const_iterator &'
|-FriendDecl 0x556646298de0 <line:564:5, col:39> col:12 'class HashTable<Pair<const EtherAddress, AddrInfo> >':'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>'
|-CXXDestructorDecl 0x556646298e50 <line:527:7> col:7 implicit referenced ~HashTable_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x556646299748 <col:7> col:7 implicit constexpr HashTable_iterator 'void (const HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &)' inline default trivial noexcept-unevaluated 0x556646299748
| `-ParmVarDecl 0x556646299858 <col:7> col:7 'const HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &'
`-CXXConstructorDecl 0x5566462998f8 <col:7> col:7 implicit used constexpr HashTable_iterator 'void (HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x556646299a08 <col:7> col:7 used 'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&'
  |-CXXCtorInitializer 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >':'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >'
  | `-CXXConstructExpr 0x55664629a148 <col:7> 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >':'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' 'void (HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&) noexcept'
  |   `-ImplicitCastExpr 0x556646299be0 <col:7> 'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >':'HashTable_const_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' xvalue <UncheckedDerivedToBase (HashTable_const_iterator)>
  |     `-CXXStaticCastExpr 0x556646299bb0 <col:7> 'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' xvalue static_cast<class HashTable_iterator<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo> > &&> <NoOp>
  |       `-DeclRefExpr 0x556646299b80 <col:7> 'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> >' lvalue ParmVar 0x556646299a08 '' 'HashTable_iterator<Pair<const EtherAddress, EtherSwitch::AddrInfo> > &&'
  `-CompoundStmt 0x55664629a240 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashTable_iterator = type { %class.HashTable_const_iterator }
  NonVirtualBaseLLVMType:%class.HashTable_iterator = type { %class.HashTable_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556645f8beb0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x556645f8bfc8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x556645f8c068 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x556645f8c0c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x556645f8c128 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x556645f8c1d8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556645f8c4e0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556645f8c5f8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x556645f8c6a0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x556645f8c708 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x556645f8c798 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x556645f92830 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556645f92c68 <col:12>
|-CXXConstructorDecl 0x556645f92938 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556645f92a48 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556645f8c6a0 'data' 'const char *'
| | `-ImplicitCastExpr 0x556645f951f0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x556645f951c0 <col:12> 'const char *const' lvalue .data 0x556645f8c6a0
| |     `-DeclRefExpr 0x556645f951a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645f92a48 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556645f8c708 'length' 'int'
| | `-ImplicitCastExpr 0x556645f95280 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x556645f95250 <col:12> 'const int' lvalue .length 0x556645f8c708
| |     `-DeclRefExpr 0x556645f95230 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645f92a48 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556645f8c798 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x556645f95310 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x556645f952e0 <col:12> 'String::memo_t *const' lvalue .memo 0x556645f8c798
| |     `-DeclRefExpr 0x556645f952c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645f92a48 '' 'const String::rep_t &'
| `-CompoundStmt 0x556645f95368 <col:12>
|-CXXConstructorDecl 0x556645f92ae8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556645f92ae8
| `-ParmVarDecl 0x556645f92bf8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x556645f98150 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556645fa3b68 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556645fa3c78 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x556645fa4190 <col:12>
|   |-BinaryOperator 0x556645fa3fa8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x556645fa3f60 <col:12> 'const char *' lvalue ->data 0x556645f8c6a0
|   | | `-CXXThisExpr 0x556645fa3f50 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556645fa3f90 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x556645fa3f20 <col:12> 'const char *const' lvalue .data 0x556645f8c6a0
|   |     `-DeclRefExpr 0x556645fa3f00 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645fa3c78 '' 'const String::rep_t &'
|   |-BinaryOperator 0x556645fa4070 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x556645fa4028 <col:12> 'int' lvalue ->length 0x556645f8c708
|   | | `-CXXThisExpr 0x556645fa4018 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556645fa4058 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x556645fa3fe8 <col:12> 'const int' lvalue .length 0x556645f8c708
|   |     `-DeclRefExpr 0x556645fa3fc8 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645fa3c78 '' 'const String::rep_t &'
|   |-BinaryOperator 0x556645fa4138 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x556645fa40f0 <col:12> 'String::memo_t *' lvalue ->memo 0x556645f8c798
|   | | `-CXXThisExpr 0x556645fa40e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556645fa4120 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x556645fa40b0 <col:12> 'String::memo_t *const' lvalue .memo 0x556645f8c798
|   |     `-DeclRefExpr 0x556645fa4090 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645fa3c78 '' 'const String::rep_t &'
|   `-ReturnStmt 0x556645fa4180 <col:12>
|     `-UnaryOperator 0x556645fa4168 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556645fa4158 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x556645fa3ce8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556645fa3ce8
  `-ParmVarDecl 0x556645fa3df8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556645f83420 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556645f83538 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x556645f835c8 <col:16, col:22> col:16 public
|-TypedefDecl 0x556645f83608 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x556645c57020 'const char *'
|   `-QualType 0x556645c56571 'const char' const
|     `-BuiltinType 0x556645c56570 'char'
|-TypedefDecl 0x556645f83690 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x556645f83660 'String::const_iterator' sugar
|   |-Typedef 0x556645f83608 'const_iterator'
|   `-PointerType 0x556645c57020 'const char *'
|     `-QualType 0x556645c56571 'const char' const
|       `-BuiltinType 0x556645c56570 'char'
|-TypedefDecl 0x556645f83800 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x556645f83770 'int (String::*)() const'
|   |-RecordType 0x556645f834b0 'String'
|   | `-CXXRecord 0x556645f83420 'String'
|   `-ParenType 0x556645f83710 'int () const' sugar
|     `-FunctionProtoType 0x556645f572a0 'int () const' const cdecl
|       `-BuiltinType 0x556645c565d0 'int'
|-TypedefDecl 0x556645f83868 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x556645dabe80 'int64_t' sugar
|   |-Typedef 0x556645cbf4c0 'int64_t'
|   `-TypedefType 0x556645c986d0 '__int64_t' sugar
|     |-Typedef 0x556645c982a8 '__int64_t'
|     `-BuiltinType 0x556645c565f0 'long'
|-TypedefDecl 0x556645f838d0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x556645dabda0 'uint64_t' sugar
|   |-Typedef 0x556645cbf660 'uint64_t'
|   `-TypedefType 0x556645c98760 '__uint64_t' sugar
|     |-Typedef 0x556645c98318 '__uint64_t'
|     `-BuiltinType 0x556645c56690 'unsigned long'
|-TypedefDecl 0x556645f83960 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x556645f83930 'String::intmax_t' sugar
|   |-Typedef 0x556645f83868 'intmax_t'
|   `-TypedefType 0x556645dabe80 'int64_t' sugar
|     |-Typedef 0x556645cbf4c0 'int64_t'
|     `-TypedefType 0x556645c986d0 '__int64_t' sugar
|       |-Typedef 0x556645c982a8 '__int64_t'
|       `-BuiltinType 0x556645c565f0 'long'
|-TypedefDecl 0x556645f839f0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x556645f839c0 'String::uintmax_t' sugar
|   |-Typedef 0x556645f838d0 'uintmax_t'
|   `-TypedefType 0x556645dabda0 'uint64_t' sugar
|     |-Typedef 0x556645cbf660 'uint64_t'
|     `-TypedefType 0x556645c98760 '__uint64_t' sugar
|       |-Typedef 0x556645c98318 '__uint64_t'
|       `-BuiltinType 0x556645c56690 'unsigned long'
|-CXXConstructorDecl 0x556645f83ab0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x556645f83c58 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x556645f83b98 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x556645f83e08 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x556645f83d48 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x556645f83f60 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x556645f83ed0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x556645f84178 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x556645f84028 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x556645f840a8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x556645f84398 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x556645f84248 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x556645f842c8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x556645f845b8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x556645f84468 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x556645f844e8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x556645f847d8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x556645f84688 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x556645f84708 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x556645f84968 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x556645f848a0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x556645f84ae8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x556645f84a28 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x556645f84c78 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x556645f84bb0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x556645f84dd0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x556645f84d40 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x556645f84f28 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x556645f84e98 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x556645f85080 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x556645f84ff0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x556645f85208 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x556645f85148 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x556645f85398 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x556645f852d0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x556645f85528 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x556645f85460 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x556645f856b8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x556645f855f0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x556645f857b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x556645f858d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x556645f85a58 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x556645f85990 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x556645f85ba8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x556645f85b18 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x556645f85c60 <col:63> "" ""
|-CXXMethodDecl 0x556645f85da8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x556645f85ce8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x556645f85fb8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x556645f85e68 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x556645f85ee8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x556645f861d8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x556645f86080 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x556645f86100 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x556645f864b8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x556645f86298 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x556645f86318 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x556645f92300 <col:55> 'int' 10
| `-ParmVarDecl 0x556645f86390 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556645f92320 <col:76> 'bool' true
|-CXXMethodDecl 0x556645f86798 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x556645f86580 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x556645f86600 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x556645f92330 <col:56> 'int' 10
| `-ParmVarDecl 0x556645f86678 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556645f92350 <col:77> 'bool' true
|-CXXMethodDecl 0x556645f868a0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x556645f86968 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x556645f86a30 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x556645f86ad0 <col:20>
| `-OptimizeNoneAttr 0x556645f86b28 <col:30>
|-CXXConversionDecl 0x556645f86c18 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556645f86ce8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x556645f86da8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x556645f86e98 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x556645f86f58 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x556645f870d8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x556645f87010 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x556645f87228 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x556645f87198 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x556645f87318 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x556645f873d8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x556645f87628 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x556645f87490 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x556645f87510 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x556645f87888 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x556645f876f0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x556645f87770 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x556645f87958 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x556645f87b68 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x556645f87a10 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x556645f87a90 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x556645f87d88 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x556645f87c30 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x556645f87cb0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x556645f87f18 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x556645f87e50 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x556645f88008 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x556645f88178 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x556645f880b8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556645f88388 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x556645f88238 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x556645f882b8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x556645f885a0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x556645f88448 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x556645f884c0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x556645f88730 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x556645f88660 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556645f88950 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x556645f887f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x556645f88870 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x556645f88aa0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x556645f88a10 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x556645f88c78 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x556645f88b60 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x556645f88be0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x556645f88dc8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x556645f88d38 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x556645f88fe0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x556645f88e80 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x556645f88f00 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x556645f92360 <col:39> 'int' 0
|-CXXMethodDecl 0x556645f89200 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x556645f890a0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x556645f89120 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x556645f92380 <col:48> 'int' 0
|-CXXMethodDecl 0x556645f893e0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x556645f892c0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x556645f89340 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x556645f923a0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x556645f894b0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x556645f89570 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x556645f89630 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x556645f896f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x556645f897b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x556645f89958 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x556645f89860 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x556645f89ad8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x556645f89a10 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x556645f89cb0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x556645f89b98 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x556645f89e28 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x556645f89d68 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x556645f89f70 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x556645f89ee0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556645f8a0c0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x556645f8a030 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x556645f8a298 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x556645f8a180 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x556645f8a200 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x556645f8a478 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x556645f8a360 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x556645f8a3e0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x556645f8a5c8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x556645f8a538 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x556645f8a7d8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x556645f8a688 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x556645f8a708 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x556645f8a938 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x556645f8a8a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x556645f8aa90 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x556645f8a9f8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x556645f8ab38 <col:57> "" ""
|-CXXMethodDecl 0x556645f8ac48 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x556645f8abb8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x556645f8ad98 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x556645f8ad08 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x556645f8af18 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x556645f8ae50 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x556645f8afe0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x556645f8b0a0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x556645f8b160 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x556645f8b200 <col:49> "" ""
|-CXXMethodDecl 0x556645f8b290 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x556645f8b350 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x556645f8b440 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x556645f8b508 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x556645f8b5c8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x556645f8b688 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x556645f8b780 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x556645f8b848 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x556645f8b910 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x556645f8bae8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x556645f8b9c8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x556645f8ba48 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x556645f8bd10 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x556645f8bbb0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x556645f8bc30 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x556645f8be20 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x556645f8be88 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x556645f8beb0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556645f8bfc8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x556645f8c068 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x556645f8c0c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x556645f8c128 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x556645f8c1d8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x556645f8c240 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x556645f8c478 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x556645f8c4c8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556645f8c458 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x556645f8c368 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x556645f8c310 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x556645f8c350 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x556645f8c330 <col:32> 'int' 8
|-CXXRecordDecl 0x556645f8c4e0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556645f8c5f8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x556645f8c6a0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x556645f8c708 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x556645f8c798 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x556645f92830 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556645f92c68 <col:12>
| |-CXXConstructorDecl 0x556645f92938 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556645f92a48 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556645f8c6a0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x556645f951f0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x556645f951c0 <col:12> 'const char *const' lvalue .data 0x556645f8c6a0
| | |     `-DeclRefExpr 0x556645f951a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645f92a48 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556645f8c708 'length' 'int'
| | | `-ImplicitCastExpr 0x556645f95280 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x556645f95250 <col:12> 'const int' lvalue .length 0x556645f8c708
| | |     `-DeclRefExpr 0x556645f95230 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645f92a48 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556645f8c798 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x556645f95310 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x556645f952e0 <col:12> 'String::memo_t *const' lvalue .memo 0x556645f8c798
| | |     `-DeclRefExpr 0x556645f952c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645f92a48 '' 'const String::rep_t &'
| | `-CompoundStmt 0x556645f95368 <col:12>
| |-CXXConstructorDecl 0x556645f92ae8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556645f92ae8
| | `-ParmVarDecl 0x556645f92bf8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x556645f98150 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x556645fa3b68 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556645fa3c78 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x556645fa4190 <col:12>
| |   |-BinaryOperator 0x556645fa3fa8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x556645fa3f60 <col:12> 'const char *' lvalue ->data 0x556645f8c6a0
| |   | | `-CXXThisExpr 0x556645fa3f50 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556645fa3f90 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x556645fa3f20 <col:12> 'const char *const' lvalue .data 0x556645f8c6a0
| |   |     `-DeclRefExpr 0x556645fa3f00 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645fa3c78 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x556645fa4070 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x556645fa4028 <col:12> 'int' lvalue ->length 0x556645f8c708
| |   | | `-CXXThisExpr 0x556645fa4018 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556645fa4058 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x556645fa3fe8 <col:12> 'const int' lvalue .length 0x556645f8c708
| |   |     `-DeclRefExpr 0x556645fa3fc8 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645fa3c78 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x556645fa4138 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x556645fa40f0 <col:12> 'String::memo_t *' lvalue ->memo 0x556645f8c798
| |   | | `-CXXThisExpr 0x556645fa40e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556645fa4120 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x556645fa40b0 <col:12> 'String::memo_t *const' lvalue .memo 0x556645f8c798
| |   |     `-DeclRefExpr 0x556645fa4090 <col:12> 'const String::rep_t' lvalue ParmVar 0x556645fa3c78 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x556645fa4180 <col:12>
| |     `-UnaryOperator 0x556645fa4168 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556645fa4158 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x556645fa3ce8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556645fa3ce8
|   `-ParmVarDecl 0x556645fa3df8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x556645f8c810 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x556645f8ca58 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x556645f8c878 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x556645f8c8f8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x556645f8c970 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x556645f927f0 <col:79, line:261:5>
|   |-BinaryOperator 0x556645f92468 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x556645f92400 <col:2, col:5> 'const char *' lvalue .data 0x556645f8c6a0
|   | | `-MemberExpr 0x556645f923d0 <col:2> 'String::rep_t' lvalue ->_r 0x556645f8c810
|   | |   `-CXXThisExpr 0x556645f923c0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x556645f92450 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x556645f92430 <col:12> 'const char *' lvalue ParmVar 0x556645f8c878 'data' 'const char *'
|   |-BinaryOperator 0x556645f92530 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x556645f924c8 <col:2, col:5> 'int' lvalue .length 0x556645f8c708
|   | | `-MemberExpr 0x556645f92498 <col:2> 'String::rep_t' lvalue ->_r 0x556645f8c810
|   | |   `-CXXThisExpr 0x556645f92488 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x556645f92518 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556645f924f8 <col:14> 'int' lvalue ParmVar 0x556645f8c8f8 'length' 'int'
|   `-IfStmt 0x556645f927d8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x556645f92650 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556645f92638 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x556645f92618 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x556645f925f8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x556645f92590 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x556645f8c798
|     |       | `-MemberExpr 0x556645f92560 <col:7> 'String::rep_t' lvalue ->_r 0x556645f8c810
|     |       |   `-CXXThisExpr 0x556645f92550 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x556645f925e0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x556645f925c0 <col:17> 'String::memo_t *' lvalue ParmVar 0x556645f8c970 'memo' 'String::memo_t *'
|     `-CallExpr 0x556645f927b0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x556645f92798 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556645f926a0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x556645f7b488 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x556645f92708 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556645f8c068
|         `-ImplicitCastExpr 0x556645f926f0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x556645f926d0 <col:27> 'String::memo_t *' lvalue ParmVar 0x556645f8c970 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x556645f8cd08 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x556645f8cb28 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x556645f8cba8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x556645f8cc20 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x556645f8c810 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x556645f92c78 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556645f92e08 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x556645f92d70 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x556645f92ce0 <col:2> '<bound member function type>' ->assign_memo 0x556645f8ca58
|     | `-ImplicitCastExpr 0x556645f92da8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x556645f92cd0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x556645f92dc0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x556645f92d10 <col:14> 'const char *' lvalue ParmVar 0x556645f8cb28 'data' 'const char *'
|     |-ImplicitCastExpr 0x556645f92dd8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556645f92d30 <col:20> 'int' lvalue ParmVar 0x556645f8cba8 'length' 'int'
|     `-ImplicitCastExpr 0x556645f92df0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x556645f92d50 <col:28> 'String::memo_t *' lvalue ParmVar 0x556645f8cc20 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x556645f8ce98 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x556645f8cdd8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x556645f93060 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x556645f92fe0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x556645f92e30 <col:2> '<bound member function type>' ->assign_memo 0x556645f8ca58
|     | `-CXXThisExpr 0x556645f92e20 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x556645f93018 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x556645f92eb0 <col:14, col:19> 'const char *' lvalue .data 0x556645f8c6a0
|     |   `-MemberExpr 0x556645f92e80 <col:14, col:16> 'String::rep_t' lvalue ._r 0x556645f8c810
|     |     `-DeclRefExpr 0x556645f92e60 <col:14> 'const String' lvalue ParmVar 0x556645f8cdd8 'x' 'const String &'
|     |-ImplicitCastExpr 0x556645f93030 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x556645f92f30 <col:25, col:30> 'int' lvalue .length 0x556645f8c708
|     |   `-MemberExpr 0x556645f92f00 <col:25, col:27> 'String::rep_t' lvalue ._r 0x556645f8c810
|     |     `-DeclRefExpr 0x556645f92ee0 <col:25> 'const String' lvalue ParmVar 0x556645f8cdd8 'x' 'const String &'
|     `-ImplicitCastExpr 0x556645f93048 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x556645f92fb0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x556645f8c798
|         `-MemberExpr 0x556645f92f80 <col:38, col:40> 'String::rep_t' lvalue ._r 0x556645f8c810
|           `-DeclRefExpr 0x556645f92f60 <col:38> 'const String' lvalue ParmVar 0x556645f8cdd8 'x' 'const String &'
|-CXXMethodDecl 0x556645f8cf60 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x556645f93a20 <col:31, line:278:5>
|   `-IfStmt 0x556645f93a08 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x556645f93100 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556645f930e8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x556645f930b8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x556645f8c798
|     |     `-MemberExpr 0x556645f93088 <col:6> 'String::rep_t' lvalue ->_r 0x556645f8c810
|     |       `-CXXThisExpr 0x556645f93078 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x556645f939e0 <col:15, line:277:2>
|       |-ParenExpr 0x556645f935b0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x556645f93580 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x556645f93210 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x556645f931f8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x556645f931e0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x556645f931a0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556645f8c068
|       |   |       `-ImplicitCastExpr 0x556645f93188 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x556645f93158 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x556645f8c798
|       |   |           `-MemberExpr 0x556645f93128 <col:27> 'String::rep_t' lvalue ->_r 0x556645f8c810
|       |   |             `-CXXThisExpr 0x556645f93118 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x556645f93270 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x556645f93250 <col:54> 'int' 0
|       |   `-CallExpr 0x556645f934e0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x556645f934c8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x556645f93448 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556645cf2690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x556645f93520 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x556645f93358 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x556645f93538 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x556645f93388 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x556645f93550 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x556645f933c0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x556645f93568 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x556645f93430 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x556645f93418 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x556645f933e0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x556645f93900 <line:274:6, line:275:22>
|       | |-CallExpr 0x556645f937c0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x556645f937a8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x556645f93720 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x556645f7c8d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x556645f936f0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556645f8c068
|       | |   `-ImplicitCastExpr 0x556645f936d8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x556645f936a8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x556645f8c798
|       | |       `-MemberExpr 0x556645f93678 <col:40> 'String::rep_t' lvalue ->_r 0x556645f8c810
|       | |         `-CXXThisExpr 0x556645f93668 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x556645f938c0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x556645f938a8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x556645f937e8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x556645f91740 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x556645f938e8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x556645f93848 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x556645f8c798
|       |       `-MemberExpr 0x556645f93818 <col:15> 'String::rep_t' lvalue ->_r 0x556645f8c810
|       |         `-CXXThisExpr 0x556645f93808 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x556645f939c0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x556645f93958 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x556645f8c798
|         | `-MemberExpr 0x556645f93928 <col:6> 'String::rep_t' lvalue ->_r 0x556645f8c810
|         |   `-CXXThisExpr 0x556645f93918 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x556645f939a8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x556645f93988 <col:16> 'int' 0
|-CXXMethodDecl 0x556645f8d1f8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x556645f8d018 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x556645f8d098 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x556645f8d110 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x556645f8d2d0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x556645f8d520 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x556645f8d388 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x556645f8d408 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x556645f8d480 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x556645f8d708 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x556645f8d5f0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x556645f8d670 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x556645f8d808 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x556645f93af8 <col:41, line:286:5>
|   `-ReturnStmt 0x556645f93ae8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x556645f93ab8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x556645f93a80 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x556645f93a68 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x556645f93a48 <col:46> 'int' 1
|-CXXMethodDecl 0x556645f8daa8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x556645f8d8c0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x556645f8d940 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x556645f8d9c0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x556645f91740 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x556645f8db70 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x556645f91810 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x556645f919e0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x556645f918c8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x556645f91948 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x556645f91aa0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x556645f91b68 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x556645f91c68 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x556645f91ce0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x556645f91d58 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x556645f91dc0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x556645f91ec0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x556645f91f10 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556645f91ea0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x556645f91e80 <col:22> 'int' 14
|-CXXMethodDecl 0x556645f92128 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x556645f91f40 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x556645f91fc0 <col:38> col:41 'int'
| `-ParmVarDecl 0x556645f92040 <col:43> col:46 'int'
|-FriendDecl 0x556645f92230 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x556645f922c0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> >
         0 |   class HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > (base)
         0 |     struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt * _element
         8 |     struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt ** _pprev
        16 |     HashContainer_const_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type _bucket
        24 |     const HashContainer<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x556646264e98 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>'
|-CXXRecordDecl 0x55664629c510 prev 0x556646264e98 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x55664629c5a0 <col:76, col:82> col:76 public
|-TypedefDecl 0x55664629c690 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
| `-TemplateSpecializationType 0x55664629c5f0 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt':'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt'
|   |-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>':'HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt>'
|   `-RecordType 0x556646264d60 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|     `-ClassTemplateSpecialization 0x556646264c60 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x55664629c720 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x55664629c7d8 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x55664629c9f8 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *() const'
|-AccessSpecDecl 0x55664629caa8 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x55664629ccd8 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *)' inline
| `-ParmVarDecl 0x55664629cbc8 <col:35, col:56> col:56 hc 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *'
|-CXXConstructorDecl 0x55664629d268 <line:429:5, line:431:5> line:429:12 used HashContainer_iterator 'void (HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *, typename inherited::bucket_count_type, HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **, HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *)' inline
| |-ParmVarDecl 0x55664629ce98 <col:35, col:56> col:56 used hc 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *'
| |-ParmVarDecl 0x55664629cfb0 <col:60, col:98> col:98 used b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55664629d090 <col:101, col:105> col:105 used pprev 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **'
| |-ParmVarDecl 0x55664629d108 <col:112, col:115> col:115 used element 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
| |-CXXCtorInitializer 'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::inherited':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
| | `-CXXConstructExpr 0x5566462baa70 <line:430:4, col:35> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' 'void (const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *, HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >::bucket_count_type, HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **, HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *)'
| |   |-ImplicitCastExpr 0x5566462baa10 <col:14> 'const HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *' <NoOp>
| |   | `-ImplicitCastExpr 0x5566462ba9f8 <col:14> 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x5566462ba930 <col:14> 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *' lvalue ParmVar 0x55664629ce98 'hc' 'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > *'
| |   |-ImplicitCastExpr 0x5566462baa28 <col:18> 'typename inherited::bucket_count_type':'unsigned int' <LValueToRValue>
| |   | `-DeclRefExpr 0x5566462ba950 <col:18> 'typename inherited::bucket_count_type':'unsigned int' lvalue ParmVar 0x55664629cfb0 'b' 'typename inherited::bucket_count_type':'unsigned int'
| |   |-ImplicitCastExpr 0x5566462baa40 <col:21> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **' <LValueToRValue>
| |   | `-DeclRefExpr 0x5566462ba970 <col:21> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **' lvalue ParmVar 0x55664629d090 'pprev' 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt **'
| |   `-ImplicitCastExpr 0x5566462baa58 <col:28> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *' <LValueToRValue>
| |     `-DeclRefExpr 0x5566462ba990 <col:28> 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *' lvalue ParmVar 0x55664629d108 'element' 'HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt *'
| `-CompoundStmt 0x556646211068 <col:37, line:431:5>
|-FriendDecl 0x55664629d448 <line:433:5, col:36> col:12 'class HashContainer<elt, HashContainer_adapter<elt> >':'HashContainer<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
|-CXXDestructorDecl 0x55664629d4a0 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5566462b6b58 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &)' inline default trivial noexcept-unevaluated 0x5566462b6b58
| `-ParmVarDecl 0x5566462b6c68 <col:7> col:7 'const HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &'
`-CXXConstructorDecl 0x5566462b6d08 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5566462b6e18 <col:7> col:7 used 'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&'
  |-CXXCtorInitializer 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >'
  | `-CXXConstructExpr 0x5566462b6f60 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' 'void (HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&) noexcept'
  |   `-ImplicitCastExpr 0x5566462b6f40 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
  |     `-CXXStaticCastExpr 0x5566462b6f10 <col:7> 'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' xvalue static_cast<class HashContainer_iterator<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class EtherAddress, struct EtherSwitch::AddrInfo>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x5566462b6ee0 <col:7> 'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> >' lvalue ParmVar 0x5566462b6e18 '' 'HashContainer_iterator<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt, HashContainer_adapter<HashTable<Pair<const EtherAddress, EtherSwitch::AddrInfo>, void>::elt> > &&'
  `-CompoundStmt 0x5566462b7028 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>
